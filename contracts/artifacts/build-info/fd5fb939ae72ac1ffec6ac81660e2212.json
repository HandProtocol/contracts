{
	"id": "fd5fb939ae72ac1ffec6ac81660e2212",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sweetspot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport { SafeERC20 } from '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\r\nimport \"./interface/IScorer.sol\"; // Import the IScorer interface\r\n\r\ncontract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address public constant NATIVE_TOKEN = address(0);\r\n    IScorer public scorer; // Scoring contract for eligibility\r\n\r\n    struct Round {\r\n        uint64 start; // Start timestamp of the round\r\n        uint64 end; // End timestamp of the round\r\n        string metadataURI; // IPFS URI for round metadata\r\n    }\r\n\r\n    Round public currentRound; // Current round details\r\n\r\n    // Tracks balances for each token (including Ether)\r\n    mapping(address => uint256) public totalBalances;\r\n    // Allowed amounts per user per token\r\n    mapping(address => mapping(address => uint256)) public allowedAmounts;\r\n\r\n    event Deposit(address indexed depositor, address indexed token, uint256 amount);\r\n    event Withdraw(address indexed withdrawer, address indexed token, uint256 amount);\r\n    event Claimed(address indexed claimant, address indexed token, uint256 amount);\r\n    event AllowedAmountUpdated(address indexed user, address indexed token, uint256 newAmount);\r\n    event RoundUpdated(uint256 start, uint256 end, string metadataURI);\r\n\r\n    error NotWithinRound(uint256 currentTime, uint256 start, uint256 end);\r\n\r\n\r\n    modifier onlyAdmin() {\r\n        require(scorer.isAdmin(msg.sender), \"Caller is not an admin\");\r\n        _;\r\n    }\r\n\r\n    /// @notice Initializes this contract with its initial state.\r\n    ///\r\n    /// @param _scorer The scoring contract address.\r\n    /// @param owner The owner address.\r\n    function initialize(address _scorer, address owner) external initializer {\r\n        __Ownable_init(owner); // Initialize OwnableUpgradeable\r\n         __ReentrancyGuard_init();\r\n        scorer = IScorer(_scorer);\r\n    }\r\n\r\n    /// @notice Deposits funds into this jar for a specific token or Ether.\r\n    ///\r\n    /// @param token The token address (address(0) for Ether).\r\n    /// @param amount The value to add (in wei for Ether).\r\n    function deposit(address token, uint256 amount) external payable nonReentrant  {\r\n        if (token == NATIVE_TOKEN) {\r\n            require(msg.value == amount, \"Incorrect Ether amount\");\r\n        } else {\r\n            require(amount > 0, \"Deposit amount must be greater than zero\");\r\n            IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\r\n        }\r\n\r\n        totalBalances[token] += amount;\r\n        emit Deposit(msg.sender, token, amount);\r\n    }\r\n\r\n    /// @notice Claims the full allowed amount for a user during the round.\r\n    function claim(address token) external nonReentrant {\r\n        \r\n        if (block.timestamp < currentRound.start || block.timestamp > currentRound.end) {\r\n            revert NotWithinRound(block.timestamp, currentRound.start, currentRound.end);\r\n        }\r\n\r\n        uint256 userAllowedAmount = allowedAmounts[msg.sender][token];\r\n        require(userAllowedAmount > 0, \"No claimable amount\");\r\n        require(totalBalances[token] >= userAllowedAmount, \"Insufficient funds in jar\");\r\n        require(scorer.score(msg.sender, \"Trust\") > 0, \"Insufficient Trust score\");\r\n\r\n        allowedAmounts[msg.sender][token] = 0;\r\n        totalBalances[token] -= userAllowedAmount;\r\n\r\n        if (token == NATIVE_TOKEN) {\r\n            (bool success, ) = msg.sender.call{value: userAllowedAmount}(\"\");\r\n            require(success, \"Ether transfer failed\");\r\n        } else {\r\n            IERC20(token).safeTransfer(msg.sender, userAllowedAmount);\r\n        }\r\n\r\n        emit Claimed(msg.sender, token, userAllowedAmount);\r\n    }\r\n\r\n    /// @notice Sets the allowed amount for a specific user and token.\r\n    ///\r\n    /// @param user The address of the user.\r\n    /// @param token The token address.\r\n    /// @param amount The allowed amount for the user.\r\n    function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {\r\n        require(user != address(0), \"Zero address user\");\r\n        allowedAmounts[user][token] = amount;\r\n        emit AllowedAmountUpdated(user, token, amount);\r\n    }\r\n\r\n    /// @notice Sets the round duration and metadata URI.\r\n    ///\r\n    /// @param start The start timestamp of the round.\r\n    /// @param end The end timestamp of the round.\r\n    /// @param metadataURI The IPFS URI for the round metadata.\r\n    function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {\r\n        require(start < end, \"Start time must be before end time\");\r\n        currentRound = Round(start, end, metadataURI);\r\n        emit RoundUpdated(start, end, metadataURI);\r\n    }\r\n\r\n    /// @notice Withdraws funds from the jar for a specific token or Ether.\r\n    ///\r\n    /// @param token The token address (address(0) for Ether).\r\n    /// @param amount The amount to withdraw.\r\n    function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {\r\n        require(amount > 0, \"Withdrawal amount must be greater than zero\");\r\n        require(totalBalances[token] >= amount, \"Insufficient funds\");\r\n\r\n        totalBalances[token] -= amount;\r\n\r\n        if (token == NATIVE_TOKEN) {\r\n            (bool success, ) = owner().call{value: amount}(\"\");\r\n            require(success, \"Ether transfer failed\");\r\n        } else {\r\n            IERC20(token).safeTransfer(owner(), amount);\r\n        }\r\n        emit Withdraw(owner(), token, amount);\r\n    }\r\n\r\n    /// @notice Allows Ether deposits directly via fallback function.\r\n    receive() external payable {\r\n        totalBalances[NATIVE_TOKEN] += msg.value;\r\n        emit Deposit(msg.sender, NATIVE_TOKEN, msg.value);\r\n    }\r\n\r\n    fallback() external payable {\r\n        // Typically revert to avoid accidental calls with data\r\n        revert(\"nCookieJar: use deposit()\");\r\n    }\r\n}\r\n"
			},
			"contracts/interface/IScorer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ninterface IScorer {\r\n    /**\r\n     * @dev Returns the score of a specific user for a given score type.\r\n     *      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).\r\n     *      The score is typically used to determine the user's eligibility for certain actions or claims.\r\n     *      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\r\n     *\r\n     * @param user The address of the user whose score is being queried.\r\n     * @param scoreType The type of score to query, represented as a `bytes32` hash.\r\n     * @return The score of the user as a uint256 value.\r\n     * @notice This function should be implemented in the contract that inherits the `IScorer` interface.\r\n     */\r\n    function score(address user, string memory scoreType) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Checks if the provided address is an admin.\r\n     * @param admin The address to check for admin status.\r\n     * @return True if the address is an admin, false otherwise.\r\n     * @notice This function should be implemented in the contract that inherits the `IScorer` interface.\r\n     */\r\n    function isAdmin(address admin) external view returns (bool);\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IScorer.sol": {
				"IScorer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "scoreType",
									"type": "string"
								}
							],
							"name": "score",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isAdmin(address)": {
								"details": "Checks if the provided address is an admin.",
								"params": {
									"admin": "The address to check for admin status."
								},
								"returns": {
									"_0": "True if the address is an admin, false otherwise."
								}
							},
							"score(address,string)": {
								"details": "Returns the score of a specific user for a given score type.      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.",
								"params": {
									"scoreType": "The type of score to query, represented as a `bytes32` hash.",
									"user": "The address of the user whose score is being queried."
								},
								"returns": {
									"_0": "The score of the user as a uint256 value."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isAdmin(address)": "24d7806c",
							"score(address,string)": "db4f1024"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"scoreType\",\"type\":\"string\"}],\"name\":\"score\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isAdmin(address)\":{\"details\":\"Checks if the provided address is an admin.\",\"params\":{\"admin\":\"The address to check for admin status.\"},\"returns\":{\"_0\":\"True if the address is an admin, false otherwise.\"}},\"score(address,string)\":{\"details\":\"Returns the score of a specific user for a given score type.      The score type is represented as a `bytes32` hash (e.g., keccak256(\\\"Trust\\\")).      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\",\"params\":{\"scoreType\":\"The type of score to query, represented as a `bytes32` hash.\",\"user\":\"The address of the user whose score is being queried.\"},\"returns\":{\"_0\":\"The score of the user as a uint256 value.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isAdmin(address)\":{\"notice\":\"This function should be implemented in the contract that inherits the `IScorer` interface.\"},\"score(address,string)\":{\"notice\":\"This function should be implemented in the contract that inherits the `IScorer` interface.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IScorer.sol\":\"IScorer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0x5bf83793e4290e7e68813647ee12b8abc4c538289be58958e32b7333b5b04e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f2ae1e6cfcef833b0424c313a99b39e98c418ba4fc037c081644ef42e598776\",\"dweb:/ipfs/QmSyyx1J5C2o3KCaWxDf3Gd9szsZGdzJCbe4u4SvdNXPjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"isAdmin(address)": {
								"notice": "This function should be implemented in the contract that inherits the `IScorer` interface."
							},
							"score(address,string)": {
								"notice": "This function should be implemented in the contract that inherits the `IScorer` interface."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/sweetspot.sol": {
				"sweetspot": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "currentTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								}
							],
							"name": "NotWithinRound",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "AllowedAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimant",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"name": "RoundUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "withdrawer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "NATIVE_TOKEN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowedAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentRound",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "start",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "end",
									"type": "uint64"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_scorer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scorer",
							"outputs": [
								{
									"internalType": "contract IScorer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setAllowedAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "start",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "end",
									"type": "uint64"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"name": "setRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "totalBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"deposit(address,uint256)": {
								"params": {
									"amount": "The value to add (in wei for Ether).",
									"token": "The token address (address(0) for Ether)."
								}
							},
							"initialize(address,address)": {
								"params": {
									"_scorer": "The scoring contract address.",
									"owner": "The owner address."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setAllowedAmount(address,address,uint256)": {
								"params": {
									"amount": "The allowed amount for the user.",
									"token": "The token address.",
									"user": "The address of the user."
								}
							},
							"setRound(uint64,uint64,string)": {
								"params": {
									"end": "The end timestamp of the round.",
									"metadataURI": "The IPFS URI for the round metadata.",
									"start": "The start timestamp of the round."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address,uint256)": {
								"params": {
									"amount": "The amount to withdraw.",
									"token": "The token address (address(0) for Ether)."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sweetspot.sol\":454:6176  contract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sweetspot.sol\":454:6176  contract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xaee9c872\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xaee9c872\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb807a3c4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9012c89\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9590e8a\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x485cc955\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x85c758f7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8a19c8bc\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x1e83409a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x31f7d964\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x47e7ef24\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/sweetspot.sol\":5941:5950  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":5910:5923  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":5910:5937  totalBalances[NATIVE_TOKEN] */\n      0x00\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      dup1\n        /* \"contracts/sweetspot.sol\":5910:5937  totalBalances[NATIVE_TOKEN] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":5910:5950  totalBalances[NATIVE_TOKEN] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":5966:6010  Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":5974:5984  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":5966:6010  Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62\n        /* \"contracts/sweetspot.sol\":6000:6009  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":5966:6010  Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":454:6176  contract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {... */\n      stop\n    tag_2:\n        /* \"contracts/sweetspot.sol\":6130:6165  revert(\"nCookieJar: use deposit()\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/sweetspot.sol\":2973:3990  function claim(address token) external nonReentrant {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/sweetspot.sol\":566:615  address public constant NATIVE_TOKEN = address(0) */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":2414:2888  function deposit(address token, uint256 amount) external payable nonReentrant  {... */\n    tag_5:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/sweetspot.sol\":1978:2196  function initialize(address _scorer, address owner) external initializer {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/sweetspot.sol\":622:643  IScorer public scorer */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":883:908  Round public currentRound */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":4732:5010  function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/sweetspot.sol\":1097:1166  mapping(address => mapping(address => uint256)) public allowedAmounts */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":999:1047  mapping(address => uint256) public totalBalances */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":4222:4483  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/sweetspot.sol\":5215:5793  function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/sweetspot.sol\":2973:3990  function claim(address token) external nonReentrant {... */\n    tag_34:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_96\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_95:\n        /* \"contracts/sweetspot.sol\":3068:3080  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3068:3086  currentRound.start */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3050:3086  block.timestamp < currentRound.start */\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3050:3065  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":3050:3086  block.timestamp < currentRound.start */\n      lt\n        /* \"contracts/sweetspot.sol\":3050:3124  block.timestamp < currentRound.start || block.timestamp > currentRound.end */\n      dup1\n      tag_98\n      jumpi\n      pop\n        /* \"contracts/sweetspot.sol\":3108:3120  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3108:3124  currentRound.end */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3090:3124  block.timestamp > currentRound.end */\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3090:3105  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":3090:3124  block.timestamp > currentRound.end */\n      gt\n        /* \"contracts/sweetspot.sol\":3050:3124  block.timestamp < currentRound.start || block.timestamp > currentRound.end */\n    tag_98:\n        /* \"contracts/sweetspot.sol\":3046:3229  if (block.timestamp < currentRound.start || block.timestamp > currentRound.end) {... */\n      iszero\n      tag_99\n      jumpi\n        /* \"contracts/sweetspot.sol\":3163:3178  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":3180:3192  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3180:3198  currentRound.start */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3200:3212  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3200:3216  currentRound.end */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3148:3217  NotWithinRound(block.timestamp, currentRound.start, currentRound.end) */\n      mload(0x40)\n      0xfa7410d400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/sweetspot.sol\":3046:3229  if (block.timestamp < currentRound.start || block.timestamp > currentRound.end) {... */\n    tag_99:\n        /* \"contracts/sweetspot.sol\":3241:3266  uint256 userAllowedAmount */\n      0x00\n        /* \"contracts/sweetspot.sol\":3269:3283  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":3269:3295  allowedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3284:3294  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3269:3295  allowedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3269:3302  allowedAmounts[msg.sender][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3296:3301  token */\n      dup4\n        /* \"contracts/sweetspot.sol\":3269:3302  allowedAmounts[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":3241:3302  uint256 userAllowedAmount = allowedAmounts[msg.sender][token] */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":3341:3342  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3321:3338  userAllowedAmount */\n      dup2\n        /* \"contracts/sweetspot.sol\":3321:3342  userAllowedAmount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":3313:3366  require(userAllowedAmount > 0, \"No claimable amount\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"contracts/sweetspot.sol\":3409:3426  userAllowedAmount */\n      dup1\n        /* \"contracts/sweetspot.sol\":3385:3398  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":3385:3405  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3399:3404  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3385:3405  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":3385:3426  totalBalances[token] >= userAllowedAmount */\n      lt\n      iszero\n        /* \"contracts/sweetspot.sol\":3377:3456  require(totalBalances[token] >= userAllowedAmount, \"Insufficient funds in jar\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/sweetspot.sol\":3511:3512  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3475:3481  scorer */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3475:3487  scorer.score */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdb4f1024\n        /* \"contracts/sweetspot.sol\":3488:3498  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3475:3508  scorer.score(msg.sender, \"Trust\") */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"contracts/sweetspot.sol\":3475:3512  scorer.score(msg.sender, \"Trust\") > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":3467:3541  require(scorer.score(msg.sender, \"Trust\") > 0, \"Insufficient Trust score\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/sweetspot.sol\":3590:3591  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3554:3568  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":3554:3580  allowedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3569:3579  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3554:3580  allowedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3554:3587  allowedAmounts[msg.sender][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3581:3586  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3554:3587  allowedAmounts[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3554:3591  allowedAmounts[msg.sender][token] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":3626:3643  userAllowedAmount */\n      dup1\n        /* \"contracts/sweetspot.sol\":3602:3615  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":3602:3622  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3616:3621  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3602:3622  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":3602:3643  totalBalances[token] -= userAllowedAmount */\n      dup3\n      dup3\n      sload\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3660:3681  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3660:3665  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":3660:3681  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":3656:3920  if (token == NATIVE_TOKEN) {... */\n      tag_119\n      jumpi\n        /* \"contracts/sweetspot.sol\":3699:3711  bool success */\n      0x00\n        /* \"contracts/sweetspot.sol\":3717:3727  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3717:3732  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3740:3757  userAllowedAmount */\n      dup3\n        /* \"contracts/sweetspot.sol\":3717:3762  msg.sender.call{value: userAllowedAmount}(\"\") */\n      mload(0x40)\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_124\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_123)\n    tag_124:\n      0x60\n      swap2\n      pop\n    tag_123:\n      pop\n        /* \"contracts/sweetspot.sol\":3698:3762  (bool success, ) = msg.sender.call{value: userAllowedAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":3785:3792  success */\n      dup1\n        /* \"contracts/sweetspot.sol\":3777:3818  require(success, \"Ether transfer failed\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/sweetspot.sol\":3683:3830  {... */\n      pop\n        /* \"contracts/sweetspot.sol\":3656:3920  if (token == NATIVE_TOKEN) {... */\n      jump(tag_128)\n    tag_119:\n        /* \"contracts/sweetspot.sol\":3851:3908  IERC20(token).safeTransfer(msg.sender, userAllowedAmount) */\n      tag_129\n        /* \"contracts/sweetspot.sol\":3878:3888  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3890:3907  userAllowedAmount */\n      dup3\n        /* \"contracts/sweetspot.sol\":3858:3863  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3851:3877  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_130\n      swap1\n        /* \"contracts/sweetspot.sol\":3851:3908  IERC20(token).safeTransfer(msg.sender, userAllowedAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_129:\n        /* \"contracts/sweetspot.sol\":3656:3920  if (token == NATIVE_TOKEN) {... */\n    tag_128:\n        /* \"contracts/sweetspot.sol\":3957:3962  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":3937:3982  Claimed(msg.sender, token, userAllowedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3945:3955  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3937:3982  Claimed(msg.sender, token, userAllowedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683\n        /* \"contracts/sweetspot.sol\":3964:3981  userAllowedAmount */\n      dup4\n        /* \"contracts/sweetspot.sol\":3937:3982  Claimed(msg.sender, token, userAllowedAmount) */\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":3025:3990  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/sweetspot.sol\":2973:3990  function claim(address token) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":566:615  address public constant NATIVE_TOKEN = address(0) */\n    tag_37:\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":566:615  address public constant NATIVE_TOKEN = address(0) */\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":2414:2888  function deposit(address token, uint256 amount) external payable nonReentrant  {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_96\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":2508:2529  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":2508:2513  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":2508:2529  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":2504:2788  if (token == NATIVE_TOKEN) {... */\n      tag_137\n      jumpi\n        /* \"contracts/sweetspot.sol\":2567:2573  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":2554:2563  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":2554:2573  msg.value == amount */\n      eq\n        /* \"contracts/sweetspot.sol\":2546:2600  require(msg.value == amount, \"Incorrect Ether amount\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/sweetspot.sol\":2504:2788  if (token == NATIVE_TOKEN) {... */\n      jump(tag_141)\n    tag_137:\n        /* \"contracts/sweetspot.sol\":2650:2651  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":2641:2647  amount */\n      dup2\n        /* \"contracts/sweetspot.sol\":2641:2651  amount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":2633:2696  require(amount > 0, \"Deposit amount must be greater than zero\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/sweetspot.sol\":2711:2776  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_145\n        /* \"contracts/sweetspot.sol\":2742:2752  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":2762:2766  this */\n      address\n        /* \"contracts/sweetspot.sol\":2769:2775  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":2718:2723  token */\n      dup6\n        /* \"contracts/sweetspot.sol\":2711:2741  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_146\n      swap1\n        /* \"contracts/sweetspot.sol\":2711:2776  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_145:\n        /* \"contracts/sweetspot.sol\":2504:2788  if (token == NATIVE_TOKEN) {... */\n    tag_141:\n        /* \"contracts/sweetspot.sol\":2824:2830  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":2800:2813  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":2800:2820  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":2814:2819  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":2800:2820  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":2800:2830  totalBalances[token] += amount */\n      dup3\n      dup3\n      sload\n      tag_147\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_147:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":2866:2871  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":2846:2880  Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":2854:2864  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":2846:2880  Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62\n        /* \"contracts/sweetspot.sol\":2873:2879  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":2846:2880  Deposit(msg.sender, token, amount) */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/sweetspot.sol\":2414:2888  function deposit(address token, uint256 amount) external payable nonReentrant  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":1978:2196  function initialize(address _scorer, address owner) external initializer {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_151\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_152\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_153\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_154\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_157:\n        /* \"contracts/sweetspot.sol\":2062:2083  __Ownable_init(owner) */\n      tag_159\n        /* \"contracts/sweetspot.sol\":2077:2082  owner */\n      dup7\n        /* \"contracts/sweetspot.sol\":2062:2076  __Ownable_init */\n      tag_160\n        /* \"contracts/sweetspot.sol\":2062:2083  __Ownable_init(owner) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/sweetspot.sol\":2128:2152  __ReentrancyGuard_init() */\n      tag_161\n        /* \"contracts/sweetspot.sol\":2128:2150  __ReentrancyGuard_init */\n      tag_162\n        /* \"contracts/sweetspot.sol\":2128:2152  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_161:\n        /* \"contracts/sweetspot.sol\":2180:2187  _scorer */\n      dup7\n        /* \"contracts/sweetspot.sol\":2163:2169  scorer */\n      0x32\n      0x00\n        /* \"contracts/sweetspot.sol\":2163:2188  scorer = IScorer(_scorer) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/sweetspot.sol\":1978:2196  function initialize(address _scorer, address owner) external initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_170\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_171\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":622:643  IScorer public scorer */\n    tag_54:\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":883:908  Round public currentRound */\n    tag_59:\n      0x33\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_173\n      jump\t// in\n    tag_174:\n      dup1\n      iszero\n      tag_175\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_176\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_175)\n    tag_176:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_177:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_177\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_180\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":4732:5010  function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {... */\n    tag_70:\n        /* \"contracts/sweetspot.sol\":1726:1732  scorer */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":1726:1740  scorer.isAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24d7806c\n        /* \"contracts/sweetspot.sol\":1741:1751  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":1726:1752  scorer.isAdmin(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_182:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"contracts/sweetspot.sol\":1718:1779  require(scorer.isAdmin(msg.sender), \"Caller is not an admin\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/sweetspot.sol\":4851:4854  end */\n      dup2\n        /* \"contracts/sweetspot.sol\":4843:4854  start < end */\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":4843:4848  start */\n      dup4\n        /* \"contracts/sweetspot.sol\":4843:4854  start < end */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"contracts/sweetspot.sol\":4835:4893  require(start < end, \"Start time must be before end time\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/sweetspot.sol\":4919:4949  Round(start, end, metadataURI) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/sweetspot.sol\":4925:4930  start */\n      dup5\n        /* \"contracts/sweetspot.sol\":4919:4949  Round(start, end, metadataURI) */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sweetspot.sol\":4932:4935  end */\n      dup4\n        /* \"contracts/sweetspot.sol\":4919:4949  Round(start, end, metadataURI) */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sweetspot.sol\":4937:4948  metadataURI */\n      dup3\n        /* \"contracts/sweetspot.sol\":4919:4949  Round(start, end, metadataURI) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/sweetspot.sol\":4904:4916  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":4904:4949  currentRound = Round(start, end, metadataURI) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x08)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/sweetspot.sol\":4965:5002  RoundUpdated(start, end, metadataURI) */\n      0x09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13\n        /* \"contracts/sweetspot.sol\":4978:4983  start */\n      dup4\n        /* \"contracts/sweetspot.sol\":4985:4988  end */\n      dup4\n        /* \"contracts/sweetspot.sol\":4990:5001  metadataURI */\n      dup4\n        /* \"contracts/sweetspot.sol\":4965:5002  RoundUpdated(start, end, metadataURI) */\n      mload(0x40)\n      tag_196\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sweetspot.sol\":4732:5010  function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":1097:1166  mapping(address => mapping(address => uint256)) public allowedAmounts */\n    tag_74:\n      mstore(0x20, 0x36)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":999:1047  mapping(address => uint256) public totalBalances */\n    tag_79:\n      mstore(0x20, 0x35)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":4222:4483  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n    tag_85:\n        /* \"contracts/sweetspot.sol\":1726:1732  scorer */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":1726:1740  scorer.isAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24d7806c\n        /* \"contracts/sweetspot.sol\":1741:1751  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":1726:1752  scorer.isAdmin(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_199:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_202:\n        /* \"contracts/sweetspot.sol\":1718:1779  require(scorer.isAdmin(msg.sender), \"Caller is not an admin\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_189\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/sweetspot.sol\":4347:4348  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":4331:4349  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":4331:4335  user */\n      dup4\n        /* \"contracts/sweetspot.sol\":4331:4349  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":4323:4371  require(user != address(0), \"Zero address user\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/sweetspot.sol\":4412:4418  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":4382:4396  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":4382:4402  allowedAmounts[user] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4397:4401  user */\n      dup6\n        /* \"contracts/sweetspot.sol\":4382:4402  allowedAmounts[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4382:4409  allowedAmounts[user][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4403:4408  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":4382:4409  allowedAmounts[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4382:4418  allowedAmounts[user][token] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":4461:4466  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":4434:4475  AllowedAmountUpdated(user, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":4455:4459  user */\n      dup4\n        /* \"contracts/sweetspot.sol\":4434:4475  AllowedAmountUpdated(user, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2\n        /* \"contracts/sweetspot.sol\":4468:4474  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":4434:4475  AllowedAmountUpdated(user, token, amount) */\n      mload(0x40)\n      tag_209\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":4222:4483  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_171\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":5215:5793  function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {... */\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_96\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/sweetspot.sol\":5325:5326  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":5316:5322  amount */\n      dup2\n        /* \"contracts/sweetspot.sol\":5316:5326  amount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":5308:5374  require(amount > 0, \"Withdrawal amount must be greater than zero\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"contracts/sweetspot.sol\":5417:5423  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":5393:5406  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":5393:5413  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":5407:5412  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":5393:5413  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":5393:5423  totalBalances[token] >= amount */\n      lt\n      iszero\n        /* \"contracts/sweetspot.sol\":5385:5446  require(totalBalances[token] >= amount, \"Insufficient funds\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/sweetspot.sol\":5483:5489  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":5459:5472  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":5459:5479  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":5473:5478  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":5459:5479  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":5459:5489  totalBalances[token] -= amount */\n      dup3\n      dup3\n      sload\n      tag_227\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_227:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":5506:5527  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":5506:5511  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":5506:5527  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":5502:5738  if (token == NATIVE_TOKEN) {... */\n      tag_228\n      jumpi\n        /* \"contracts/sweetspot.sol\":5545:5557  bool success */\n      0x00\n        /* \"contracts/sweetspot.sol\":5563:5570  owner() */\n      tag_229\n        /* \"contracts/sweetspot.sol\":5563:5568  owner */\n      tag_64\n        /* \"contracts/sweetspot.sol\":5563:5570  owner() */\n      jump\t// in\n    tag_229:\n        /* \"contracts/sweetspot.sol\":5563:5575  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":5583:5589  amount */\n      dup3\n        /* \"contracts/sweetspot.sol\":5563:5594  owner().call{value: amount}(\"\") */\n      mload(0x40)\n      tag_230\n      swap1\n      tag_121\n      jump\t// in\n    tag_230:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_233\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_232)\n    tag_233:\n      0x60\n      swap2\n      pop\n    tag_232:\n      pop\n        /* \"contracts/sweetspot.sol\":5544:5594  (bool success, ) = owner().call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":5617:5624  success */\n      dup1\n        /* \"contracts/sweetspot.sol\":5609:5650  require(success, \"Ether transfer failed\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap1\n      tag_127\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"contracts/sweetspot.sol\":5529:5662  {... */\n      pop\n        /* \"contracts/sweetspot.sol\":5502:5738  if (token == NATIVE_TOKEN) {... */\n      jump(tag_236)\n    tag_228:\n        /* \"contracts/sweetspot.sol\":5683:5726  IERC20(token).safeTransfer(owner(), amount) */\n      tag_237\n        /* \"contracts/sweetspot.sol\":5710:5717  owner() */\n      tag_238\n        /* \"contracts/sweetspot.sol\":5710:5715  owner */\n      tag_64\n        /* \"contracts/sweetspot.sol\":5710:5717  owner() */\n      jump\t// in\n    tag_238:\n        /* \"contracts/sweetspot.sol\":5719:5725  amount */\n      dup3\n        /* \"contracts/sweetspot.sol\":5690:5695  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":5683:5709  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_130\n      swap1\n        /* \"contracts/sweetspot.sol\":5683:5726  IERC20(token).safeTransfer(owner(), amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"contracts/sweetspot.sol\":5502:5738  if (token == NATIVE_TOKEN) {... */\n    tag_236:\n        /* \"contracts/sweetspot.sol\":5771:5776  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":5753:5785  Withdraw(owner(), token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":5762:5769  owner() */\n      tag_239\n        /* \"contracts/sweetspot.sol\":5762:5767  owner */\n      tag_64\n        /* \"contracts/sweetspot.sol\":5762:5769  owner() */\n      jump\t// in\n    tag_239:\n        /* \"contracts/sweetspot.sol\":5753:5785  Withdraw(owner(), token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb\n        /* \"contracts/sweetspot.sol\":5778:5784  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":5753:5785  Withdraw(owner(), token, amount) */\n      mload(0x40)\n      tag_240\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/sweetspot.sol\":5215:5793  function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2740  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2752  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2725:2788  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2870  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2881  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_248\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n    tag_133:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3081  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3096  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1817  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1833:1837  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1841  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1843:1848  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_254\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_261\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1991  __ReentrancyGuard_init_unchained */\n      tag_267\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_270\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_271\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_270\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_180\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_281)\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_286\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_262:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_293\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_171\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_295\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2093  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2108  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_299\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_152\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_300:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_301:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x11\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:467   */\n    tag_23:\n        /* \"#utility.yul\":316:319   */\n      0x00\n        /* \"#utility.yul\":335:355   */\n      tag_395\n        /* \"#utility.yul\":353:354   */\n      dup3\n        /* \"#utility.yul\":335:355   */\n      tag_300\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":330:355   */\n      swap2\n      pop\n        /* \"#utility.yul\":369:389   */\n      tag_396\n        /* \"#utility.yul\":387:388   */\n      dup4\n        /* \"#utility.yul\":369:389   */\n      tag_300\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":364:389   */\n      swap3\n      pop\n        /* \"#utility.yul\":412:413   */\n      dup3\n        /* \"#utility.yul\":409:410   */\n      dup3\n        /* \"#utility.yul\":405:414   */\n      add\n        /* \"#utility.yul\":398:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:436   */\n      dup1\n        /* \"#utility.yul\":430:431   */\n      dup3\n        /* \"#utility.yul\":427:437   */\n      gt\n        /* \"#utility.yul\":424:460   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":440:458   */\n      tag_398\n      tag_301\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":424:460   */\n    tag_397:\n        /* \"#utility.yul\":276:467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":473:591   */\n    tag_302:\n        /* \"#utility.yul\":560:584   */\n      tag_400\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":560:584   */\n      tag_300\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":555:558   */\n      dup3\n        /* \"#utility.yul\":548:585   */\n      mstore\n        /* \"#utility.yul\":473:591   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":597:819   */\n    tag_25:\n        /* \"#utility.yul\":690:694   */\n      0x00\n        /* \"#utility.yul\":728:730   */\n      0x20\n        /* \"#utility.yul\":717:726   */\n      dup3\n        /* \"#utility.yul\":713:731   */\n      add\n        /* \"#utility.yul\":705:731   */\n      swap1\n      pop\n        /* \"#utility.yul\":741:812   */\n      tag_402\n        /* \"#utility.yul\":809:810   */\n      0x00\n        /* \"#utility.yul\":798:807   */\n      dup4\n        /* \"#utility.yul\":794:811   */\n      add\n        /* \"#utility.yul\":785:791   */\n      dup5\n        /* \"#utility.yul\":741:812   */\n      tag_302\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":597:819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":825:994   */\n    tag_303:\n        /* \"#utility.yul\":909:920   */\n      0x00\n        /* \"#utility.yul\":943:949   */\n      dup3\n        /* \"#utility.yul\":938:941   */\n      dup3\n        /* \"#utility.yul\":931:950   */\n      mstore\n        /* \"#utility.yul\":983:987   */\n      0x20\n        /* \"#utility.yul\":978:981   */\n      dup3\n        /* \"#utility.yul\":974:988   */\n      add\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":825:994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1000:1175   */\n    tag_304:\n        /* \"#utility.yul\":1140:1167   */\n      0x6e436f6f6b69654a61723a20757365206465706f736974282900000000000000\n        /* \"#utility.yul\":1136:1137   */\n      0x00\n        /* \"#utility.yul\":1128:1134   */\n      dup3\n        /* \"#utility.yul\":1124:1138   */\n      add\n        /* \"#utility.yul\":1117:1168   */\n      mstore\n        /* \"#utility.yul\":1000:1175   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1181:1547   */\n    tag_305:\n        /* \"#utility.yul\":1323:1326   */\n      0x00\n        /* \"#utility.yul\":1344:1411   */\n      tag_406\n        /* \"#utility.yul\":1408:1410   */\n      0x19\n        /* \"#utility.yul\":1403:1406   */\n      dup4\n        /* \"#utility.yul\":1344:1411   */\n      tag_303\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":1337:1411   */\n      swap2\n      pop\n        /* \"#utility.yul\":1420:1513   */\n      tag_407\n        /* \"#utility.yul\":1509:1512   */\n      dup3\n        /* \"#utility.yul\":1420:1513   */\n      tag_304\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":1538:1540   */\n      0x20\n        /* \"#utility.yul\":1533:1536   */\n      dup3\n        /* \"#utility.yul\":1529:1541   */\n      add\n        /* \"#utility.yul\":1522:1541   */\n      swap1\n      pop\n        /* \"#utility.yul\":1181:1547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1553:1972   */\n    tag_29:\n        /* \"#utility.yul\":1719:1723   */\n      0x00\n        /* \"#utility.yul\":1757:1759   */\n      0x20\n        /* \"#utility.yul\":1746:1755   */\n      dup3\n        /* \"#utility.yul\":1742:1760   */\n      add\n        /* \"#utility.yul\":1734:1760   */\n      swap1\n      pop\n        /* \"#utility.yul\":1806:1815   */\n      dup2\n        /* \"#utility.yul\":1800:1804   */\n      dup2\n        /* \"#utility.yul\":1796:1816   */\n      sub\n        /* \"#utility.yul\":1792:1793   */\n      0x00\n        /* \"#utility.yul\":1781:1790   */\n      dup4\n        /* \"#utility.yul\":1777:1794   */\n      add\n        /* \"#utility.yul\":1770:1817   */\n      mstore\n        /* \"#utility.yul\":1834:1965   */\n      tag_409\n        /* \"#utility.yul\":1960:1964   */\n      dup2\n        /* \"#utility.yul\":1834:1965   */\n      tag_305\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":1826:1965   */\n      swap1\n      pop\n        /* \"#utility.yul\":1553:1972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1978:2053   */\n    tag_306:\n        /* \"#utility.yul\":2011:2017   */\n      0x00\n        /* \"#utility.yul\":2044:2046   */\n      0x40\n        /* \"#utility.yul\":2038:2047   */\n      mload\n        /* \"#utility.yul\":2028:2047   */\n      swap1\n      pop\n        /* \"#utility.yul\":1978:2053   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2059:2176   */\n    tag_307:\n        /* \"#utility.yul\":2168:2169   */\n      0x00\n        /* \"#utility.yul\":2165:2166   */\n      dup1\n        /* \"#utility.yul\":2158:2170   */\n      revert\n        /* \"#utility.yul\":2182:2299   */\n    tag_308:\n        /* \"#utility.yul\":2291:2292   */\n      0x00\n        /* \"#utility.yul\":2288:2289   */\n      dup1\n        /* \"#utility.yul\":2281:2293   */\n      revert\n        /* \"#utility.yul\":2305:2431   */\n    tag_309:\n        /* \"#utility.yul\":2342:2349   */\n      0x00\n        /* \"#utility.yul\":2382:2424   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2375:2380   */\n      dup3\n        /* \"#utility.yul\":2371:2425   */\n      and\n        /* \"#utility.yul\":2360:2425   */\n      swap1\n      pop\n        /* \"#utility.yul\":2305:2431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2437:2533   */\n    tag_310:\n        /* \"#utility.yul\":2474:2481   */\n      0x00\n        /* \"#utility.yul\":2503:2527   */\n      tag_415\n        /* \"#utility.yul\":2521:2526   */\n      dup3\n        /* \"#utility.yul\":2503:2527   */\n      tag_309\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2492:2527   */\n      swap1\n      pop\n        /* \"#utility.yul\":2437:2533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:2661   */\n    tag_311:\n        /* \"#utility.yul\":2612:2636   */\n      tag_417\n        /* \"#utility.yul\":2630:2635   */\n      dup2\n        /* \"#utility.yul\":2612:2636   */\n      tag_310\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2605:2610   */\n      dup2\n        /* \"#utility.yul\":2602:2637   */\n      eq\n        /* \"#utility.yul\":2592:2655   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":2651:2652   */\n      0x00\n        /* \"#utility.yul\":2648:2649   */\n      dup1\n        /* \"#utility.yul\":2641:2653   */\n      revert\n        /* \"#utility.yul\":2592:2655   */\n    tag_418:\n        /* \"#utility.yul\":2539:2661   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2667:2806   */\n    tag_312:\n        /* \"#utility.yul\":2713:2718   */\n      0x00\n        /* \"#utility.yul\":2751:2757   */\n      dup2\n        /* \"#utility.yul\":2738:2758   */\n      calldataload\n        /* \"#utility.yul\":2729:2758   */\n      swap1\n      pop\n        /* \"#utility.yul\":2767:2800   */\n      tag_420\n        /* \"#utility.yul\":2794:2799   */\n      dup2\n        /* \"#utility.yul\":2767:2800   */\n      tag_311\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2667:2806   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2812:3141   */\n    tag_33:\n        /* \"#utility.yul\":2871:2877   */\n      0x00\n        /* \"#utility.yul\":2920:2922   */\n      0x20\n        /* \"#utility.yul\":2908:2917   */\n      dup3\n        /* \"#utility.yul\":2899:2906   */\n      dup5\n        /* \"#utility.yul\":2895:2918   */\n      sub\n        /* \"#utility.yul\":2891:2923   */\n      slt\n        /* \"#utility.yul\":2888:3007   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":2926:3005   */\n      tag_423\n      tag_307\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2888:3007   */\n    tag_422:\n        /* \"#utility.yul\":3046:3047   */\n      0x00\n        /* \"#utility.yul\":3071:3124   */\n      tag_424\n        /* \"#utility.yul\":3116:3123   */\n      dup5\n        /* \"#utility.yul\":3107:3113   */\n      dup3\n        /* \"#utility.yul\":3096:3105   */\n      dup6\n        /* \"#utility.yul\":3092:3114   */\n      add\n        /* \"#utility.yul\":3071:3124   */\n      tag_312\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3061:3124   */\n      swap2\n      pop\n        /* \"#utility.yul\":3017:3134   */\n      pop\n        /* \"#utility.yul\":2812:3141   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3147:3265   */\n    tag_313:\n        /* \"#utility.yul\":3234:3258   */\n      tag_426\n        /* \"#utility.yul\":3252:3257   */\n      dup2\n        /* \"#utility.yul\":3234:3258   */\n      tag_310\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3229:3232   */\n      dup3\n        /* \"#utility.yul\":3222:3259   */\n      mstore\n        /* \"#utility.yul\":3147:3265   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3271:3493   */\n    tag_39:\n        /* \"#utility.yul\":3364:3368   */\n      0x00\n        /* \"#utility.yul\":3402:3404   */\n      0x20\n        /* \"#utility.yul\":3391:3400   */\n      dup3\n        /* \"#utility.yul\":3387:3405   */\n      add\n        /* \"#utility.yul\":3379:3405   */\n      swap1\n      pop\n        /* \"#utility.yul\":3415:3486   */\n      tag_428\n        /* \"#utility.yul\":3483:3484   */\n      0x00\n        /* \"#utility.yul\":3472:3481   */\n      dup4\n        /* \"#utility.yul\":3468:3485   */\n      add\n        /* \"#utility.yul\":3459:3465   */\n      dup5\n        /* \"#utility.yul\":3415:3486   */\n      tag_313\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3271:3493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3499:3621   */\n    tag_314:\n        /* \"#utility.yul\":3572:3596   */\n      tag_430\n        /* \"#utility.yul\":3590:3595   */\n      dup2\n        /* \"#utility.yul\":3572:3596   */\n      tag_300\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3565:3570   */\n      dup2\n        /* \"#utility.yul\":3562:3597   */\n      eq\n        /* \"#utility.yul\":3552:3615   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":3611:3612   */\n      0x00\n        /* \"#utility.yul\":3608:3609   */\n      dup1\n        /* \"#utility.yul\":3601:3613   */\n      revert\n        /* \"#utility.yul\":3552:3615   */\n    tag_431:\n        /* \"#utility.yul\":3499:3621   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3627:3766   */\n    tag_315:\n        /* \"#utility.yul\":3673:3678   */\n      0x00\n        /* \"#utility.yul\":3711:3717   */\n      dup2\n        /* \"#utility.yul\":3698:3718   */\n      calldataload\n        /* \"#utility.yul\":3689:3718   */\n      swap1\n      pop\n        /* \"#utility.yul\":3727:3760   */\n      tag_433\n        /* \"#utility.yul\":3754:3759   */\n      dup2\n        /* \"#utility.yul\":3727:3760   */\n      tag_314\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":3627:3766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3772:4246   */\n    tag_42:\n        /* \"#utility.yul\":3840:3846   */\n      0x00\n        /* \"#utility.yul\":3848:3854   */\n      dup1\n        /* \"#utility.yul\":3897:3899   */\n      0x40\n        /* \"#utility.yul\":3885:3894   */\n      dup4\n        /* \"#utility.yul\":3876:3883   */\n      dup6\n        /* \"#utility.yul\":3872:3895   */\n      sub\n        /* \"#utility.yul\":3868:3900   */\n      slt\n        /* \"#utility.yul\":3865:3984   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":3903:3982   */\n      tag_436\n      tag_307\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3865:3984   */\n    tag_435:\n        /* \"#utility.yul\":4023:4024   */\n      0x00\n        /* \"#utility.yul\":4048:4101   */\n      tag_437\n        /* \"#utility.yul\":4093:4100   */\n      dup6\n        /* \"#utility.yul\":4084:4090   */\n      dup3\n        /* \"#utility.yul\":4073:4082   */\n      dup7\n        /* \"#utility.yul\":4069:4091   */\n      add\n        /* \"#utility.yul\":4048:4101   */\n      tag_312\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4038:4101   */\n      swap3\n      pop\n        /* \"#utility.yul\":3994:4111   */\n      pop\n        /* \"#utility.yul\":4150:4152   */\n      0x20\n        /* \"#utility.yul\":4176:4229   */\n      tag_438\n        /* \"#utility.yul\":4221:4228   */\n      dup6\n        /* \"#utility.yul\":4212:4218   */\n      dup3\n        /* \"#utility.yul\":4201:4210   */\n      dup7\n        /* \"#utility.yul\":4197:4219   */\n      add\n        /* \"#utility.yul\":4176:4229   */\n      tag_315\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4166:4229   */\n      swap2\n      pop\n        /* \"#utility.yul\":4121:4239   */\n      pop\n        /* \"#utility.yul\":3772:4246   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4252:4726   */\n    tag_47:\n        /* \"#utility.yul\":4320:4326   */\n      0x00\n        /* \"#utility.yul\":4328:4334   */\n      dup1\n        /* \"#utility.yul\":4377:4379   */\n      0x40\n        /* \"#utility.yul\":4365:4374   */\n      dup4\n        /* \"#utility.yul\":4356:4363   */\n      dup6\n        /* \"#utility.yul\":4352:4375   */\n      sub\n        /* \"#utility.yul\":4348:4380   */\n      slt\n        /* \"#utility.yul\":4345:4464   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":4383:4462   */\n      tag_441\n      tag_307\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4345:4464   */\n    tag_440:\n        /* \"#utility.yul\":4503:4504   */\n      0x00\n        /* \"#utility.yul\":4528:4581   */\n      tag_442\n        /* \"#utility.yul\":4573:4580   */\n      dup6\n        /* \"#utility.yul\":4564:4570   */\n      dup3\n        /* \"#utility.yul\":4553:4562   */\n      dup7\n        /* \"#utility.yul\":4549:4571   */\n      add\n        /* \"#utility.yul\":4528:4581   */\n      tag_312\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4518:4581   */\n      swap3\n      pop\n        /* \"#utility.yul\":4474:4591   */\n      pop\n        /* \"#utility.yul\":4630:4632   */\n      0x20\n        /* \"#utility.yul\":4656:4709   */\n      tag_443\n        /* \"#utility.yul\":4701:4708   */\n      dup6\n        /* \"#utility.yul\":4692:4698   */\n      dup3\n        /* \"#utility.yul\":4681:4690   */\n      dup7\n        /* \"#utility.yul\":4677:4699   */\n      add\n        /* \"#utility.yul\":4656:4709   */\n      tag_312\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4646:4709   */\n      swap2\n      pop\n        /* \"#utility.yul\":4601:4719   */\n      pop\n        /* \"#utility.yul\":4252:4726   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4732:4792   */\n    tag_316:\n        /* \"#utility.yul\":4760:4763   */\n      0x00\n        /* \"#utility.yul\":4781:4786   */\n      dup2\n        /* \"#utility.yul\":4774:4786   */\n      swap1\n      pop\n        /* \"#utility.yul\":4732:4792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4798:4940   */\n    tag_317:\n        /* \"#utility.yul\":4848:4857   */\n      0x00\n        /* \"#utility.yul\":4881:4934   */\n      tag_446\n        /* \"#utility.yul\":4899:4933   */\n      tag_447\n        /* \"#utility.yul\":4908:4932   */\n      tag_448\n        /* \"#utility.yul\":4926:4931   */\n      dup5\n        /* \"#utility.yul\":4908:4932   */\n      tag_309\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4899:4933   */\n      tag_316\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4881:4934   */\n      tag_309\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":4868:4934   */\n      swap1\n      pop\n        /* \"#utility.yul\":4798:4940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4946:5072   */\n    tag_318:\n        /* \"#utility.yul\":4996:5005   */\n      0x00\n        /* \"#utility.yul\":5029:5066   */\n      tag_450\n        /* \"#utility.yul\":5060:5065   */\n      dup3\n        /* \"#utility.yul\":5029:5066   */\n      tag_317\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5016:5066   */\n      swap1\n      pop\n        /* \"#utility.yul\":4946:5072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5078:5220   */\n    tag_319:\n        /* \"#utility.yul\":5144:5153   */\n      0x00\n        /* \"#utility.yul\":5177:5214   */\n      tag_452\n        /* \"#utility.yul\":5208:5213   */\n      dup3\n        /* \"#utility.yul\":5177:5214   */\n      tag_318\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":5164:5214   */\n      swap1\n      pop\n        /* \"#utility.yul\":5078:5220   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5226:5389   */\n    tag_320:\n        /* \"#utility.yul\":5329:5382   */\n      tag_454\n        /* \"#utility.yul\":5376:5381   */\n      dup2\n        /* \"#utility.yul\":5329:5382   */\n      tag_319\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":5324:5327   */\n      dup3\n        /* \"#utility.yul\":5317:5383   */\n      mstore\n        /* \"#utility.yul\":5226:5389   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5395:5649   */\n    tag_56:\n        /* \"#utility.yul\":5504:5508   */\n      0x00\n        /* \"#utility.yul\":5542:5544   */\n      0x20\n        /* \"#utility.yul\":5531:5540   */\n      dup3\n        /* \"#utility.yul\":5527:5545   */\n      add\n        /* \"#utility.yul\":5519:5545   */\n      swap1\n      pop\n        /* \"#utility.yul\":5555:5642   */\n      tag_456\n        /* \"#utility.yul\":5639:5640   */\n      0x00\n        /* \"#utility.yul\":5628:5637   */\n      dup4\n        /* \"#utility.yul\":5624:5641   */\n      add\n        /* \"#utility.yul\":5615:5621   */\n      dup5\n        /* \"#utility.yul\":5555:5642   */\n      tag_320\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":5395:5649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5655:5756   */\n    tag_321:\n        /* \"#utility.yul\":5691:5698   */\n      0x00\n        /* \"#utility.yul\":5731:5749   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5724:5729   */\n      dup3\n        /* \"#utility.yul\":5720:5750   */\n      and\n        /* \"#utility.yul\":5709:5750   */\n      swap1\n      pop\n        /* \"#utility.yul\":5655:5756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5762:5877   */\n    tag_322:\n        /* \"#utility.yul\":5847:5870   */\n      tag_459\n        /* \"#utility.yul\":5864:5869   */\n      dup2\n        /* \"#utility.yul\":5847:5870   */\n      tag_321\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5842:5845   */\n      dup3\n        /* \"#utility.yul\":5835:5871   */\n      mstore\n        /* \"#utility.yul\":5762:5877   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5883:5982   */\n    tag_323:\n        /* \"#utility.yul\":5935:5941   */\n      0x00\n        /* \"#utility.yul\":5969:5974   */\n      dup2\n        /* \"#utility.yul\":5963:5975   */\n      mload\n        /* \"#utility.yul\":5953:5975   */\n      swap1\n      pop\n        /* \"#utility.yul\":5883:5982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5988:6127   */\n    tag_324:\n        /* \"#utility.yul\":6077:6083   */\n      dup3\n        /* \"#utility.yul\":6072:6075   */\n      dup2\n        /* \"#utility.yul\":6067:6070   */\n      dup4\n        /* \"#utility.yul\":6061:6084   */\n      mcopy\n        /* \"#utility.yul\":6118:6119   */\n      0x00\n        /* \"#utility.yul\":6109:6115   */\n      dup4\n        /* \"#utility.yul\":6104:6107   */\n      dup4\n        /* \"#utility.yul\":6100:6116   */\n      add\n        /* \"#utility.yul\":6093:6120   */\n      mstore\n        /* \"#utility.yul\":5988:6127   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6133:6235   */\n    tag_325:\n        /* \"#utility.yul\":6174:6180   */\n      0x00\n        /* \"#utility.yul\":6225:6227   */\n      0x1f\n        /* \"#utility.yul\":6221:6228   */\n      not\n        /* \"#utility.yul\":6216:6218   */\n      0x1f\n        /* \"#utility.yul\":6209:6214   */\n      dup4\n        /* \"#utility.yul\":6205:6219   */\n      add\n        /* \"#utility.yul\":6201:6229   */\n      and\n        /* \"#utility.yul\":6191:6229   */\n      swap1\n      pop\n        /* \"#utility.yul\":6133:6235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6241:6618   */\n    tag_326:\n        /* \"#utility.yul\":6329:6332   */\n      0x00\n        /* \"#utility.yul\":6357:6396   */\n      tag_464\n        /* \"#utility.yul\":6390:6395   */\n      dup3\n        /* \"#utility.yul\":6357:6396   */\n      tag_323\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6412:6483   */\n      tag_465\n        /* \"#utility.yul\":6476:6482   */\n      dup2\n        /* \"#utility.yul\":6471:6474   */\n      dup6\n        /* \"#utility.yul\":6412:6483   */\n      tag_303\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6405:6483   */\n      swap4\n      pop\n        /* \"#utility.yul\":6492:6557   */\n      tag_466\n        /* \"#utility.yul\":6550:6556   */\n      dup2\n        /* \"#utility.yul\":6545:6548   */\n      dup6\n        /* \"#utility.yul\":6538:6542   */\n      0x20\n        /* \"#utility.yul\":6531:6536   */\n      dup7\n        /* \"#utility.yul\":6527:6543   */\n      add\n        /* \"#utility.yul\":6492:6557   */\n      tag_324\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":6582:6611   */\n      tag_467\n        /* \"#utility.yul\":6604:6610   */\n      dup2\n        /* \"#utility.yul\":6582:6611   */\n      tag_325\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":6577:6580   */\n      dup5\n        /* \"#utility.yul\":6573:6612   */\n      add\n        /* \"#utility.yul\":6566:6612   */\n      swap2\n      pop\n        /* \"#utility.yul\":6333:6618   */\n      pop\n        /* \"#utility.yul\":6241:6618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6624:7149   */\n    tag_61:\n        /* \"#utility.yul\":6789:6793   */\n      0x00\n        /* \"#utility.yul\":6827:6829   */\n      0x60\n        /* \"#utility.yul\":6816:6825   */\n      dup3\n        /* \"#utility.yul\":6812:6830   */\n      add\n        /* \"#utility.yul\":6804:6830   */\n      swap1\n      pop\n        /* \"#utility.yul\":6840:6909   */\n      tag_469\n        /* \"#utility.yul\":6906:6907   */\n      0x00\n        /* \"#utility.yul\":6895:6904   */\n      dup4\n        /* \"#utility.yul\":6891:6908   */\n      add\n        /* \"#utility.yul\":6882:6888   */\n      dup7\n        /* \"#utility.yul\":6840:6909   */\n      tag_322\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6919:6989   */\n      tag_470\n        /* \"#utility.yul\":6985:6987   */\n      0x20\n        /* \"#utility.yul\":6974:6983   */\n      dup4\n        /* \"#utility.yul\":6970:6988   */\n      add\n        /* \"#utility.yul\":6961:6967   */\n      dup6\n        /* \"#utility.yul\":6919:6989   */\n      tag_322\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":7036:7045   */\n      dup2\n        /* \"#utility.yul\":7030:7034   */\n      dup2\n        /* \"#utility.yul\":7026:7046   */\n      sub\n        /* \"#utility.yul\":7021:7023   */\n      0x40\n        /* \"#utility.yul\":7010:7019   */\n      dup4\n        /* \"#utility.yul\":7006:7024   */\n      add\n        /* \"#utility.yul\":6999:7047   */\n      mstore\n        /* \"#utility.yul\":7064:7142   */\n      tag_471\n        /* \"#utility.yul\":7137:7141   */\n      dup2\n        /* \"#utility.yul\":7128:7134   */\n      dup5\n        /* \"#utility.yul\":7064:7142   */\n      tag_326\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":7056:7142   */\n      swap1\n      pop\n        /* \"#utility.yul\":6624:7149   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7155:7275   */\n    tag_327:\n        /* \"#utility.yul\":7227:7250   */\n      tag_473\n        /* \"#utility.yul\":7244:7249   */\n      dup2\n        /* \"#utility.yul\":7227:7250   */\n      tag_321\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7220:7225   */\n      dup2\n        /* \"#utility.yul\":7217:7251   */\n      eq\n        /* \"#utility.yul\":7207:7269   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":7265:7266   */\n      0x00\n        /* \"#utility.yul\":7262:7263   */\n      dup1\n        /* \"#utility.yul\":7255:7267   */\n      revert\n        /* \"#utility.yul\":7207:7269   */\n    tag_474:\n        /* \"#utility.yul\":7155:7275   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7281:7418   */\n    tag_328:\n        /* \"#utility.yul\":7326:7331   */\n      0x00\n        /* \"#utility.yul\":7364:7370   */\n      dup2\n        /* \"#utility.yul\":7351:7371   */\n      calldataload\n        /* \"#utility.yul\":7342:7371   */\n      swap1\n      pop\n        /* \"#utility.yul\":7380:7412   */\n      tag_476\n        /* \"#utility.yul\":7406:7411   */\n      dup2\n        /* \"#utility.yul\":7380:7412   */\n      tag_327\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":7281:7418   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7424:7541   */\n    tag_329:\n        /* \"#utility.yul\":7533:7534   */\n      0x00\n        /* \"#utility.yul\":7530:7531   */\n      dup1\n        /* \"#utility.yul\":7523:7535   */\n      revert\n        /* \"#utility.yul\":7547:7664   */\n    tag_330:\n        /* \"#utility.yul\":7656:7657   */\n      0x00\n        /* \"#utility.yul\":7653:7654   */\n      dup1\n        /* \"#utility.yul\":7646:7658   */\n      revert\n        /* \"#utility.yul\":7670:7850   */\n    tag_331:\n        /* \"#utility.yul\":7718:7795   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7715:7716   */\n      0x00\n        /* \"#utility.yul\":7708:7796   */\n      mstore\n        /* \"#utility.yul\":7815:7819   */\n      0x41\n        /* \"#utility.yul\":7812:7813   */\n      0x04\n        /* \"#utility.yul\":7805:7820   */\n      mstore\n        /* \"#utility.yul\":7839:7843   */\n      0x24\n        /* \"#utility.yul\":7836:7837   */\n      0x00\n        /* \"#utility.yul\":7829:7844   */\n      revert\n        /* \"#utility.yul\":7856:8137   */\n    tag_332:\n        /* \"#utility.yul\":7939:7966   */\n      tag_481\n        /* \"#utility.yul\":7961:7965   */\n      dup3\n        /* \"#utility.yul\":7939:7966   */\n      tag_325\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7931:7937   */\n      dup2\n        /* \"#utility.yul\":7927:7967   */\n      add\n        /* \"#utility.yul\":8069:8075   */\n      dup2\n        /* \"#utility.yul\":8057:8067   */\n      dup2\n        /* \"#utility.yul\":8054:8076   */\n      lt\n        /* \"#utility.yul\":8033:8051   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8021:8031   */\n      dup3\n        /* \"#utility.yul\":8018:8052   */\n      gt\n        /* \"#utility.yul\":8015:8077   */\n      or\n        /* \"#utility.yul\":8012:8100   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":8080:8098   */\n      tag_483\n      tag_331\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8012:8100   */\n    tag_482:\n        /* \"#utility.yul\":8120:8130   */\n      dup1\n        /* \"#utility.yul\":8116:8118   */\n      0x40\n        /* \"#utility.yul\":8109:8131   */\n      mstore\n        /* \"#utility.yul\":7899:8137   */\n      pop\n        /* \"#utility.yul\":7856:8137   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8143:8272   */\n    tag_333:\n        /* \"#utility.yul\":8177:8183   */\n      0x00\n        /* \"#utility.yul\":8204:8224   */\n      tag_485\n      tag_306\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":8194:8224   */\n      swap1\n      pop\n        /* \"#utility.yul\":8233:8266   */\n      tag_486\n        /* \"#utility.yul\":8261:8265   */\n      dup3\n        /* \"#utility.yul\":8253:8259   */\n      dup3\n        /* \"#utility.yul\":8233:8266   */\n      tag_332\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8143:8272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8278:8586   */\n    tag_334:\n        /* \"#utility.yul\":8340:8344   */\n      0x00\n        /* \"#utility.yul\":8430:8448   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8422:8428   */\n      dup3\n        /* \"#utility.yul\":8419:8449   */\n      gt\n        /* \"#utility.yul\":8416:8472   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":8452:8470   */\n      tag_489\n      tag_331\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":8416:8472   */\n    tag_488:\n        /* \"#utility.yul\":8490:8519   */\n      tag_490\n        /* \"#utility.yul\":8512:8518   */\n      dup3\n        /* \"#utility.yul\":8490:8519   */\n      tag_325\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8482:8519   */\n      swap1\n      pop\n        /* \"#utility.yul\":8574:8578   */\n      0x20\n        /* \"#utility.yul\":8568:8572   */\n      dup2\n        /* \"#utility.yul\":8564:8579   */\n      add\n        /* \"#utility.yul\":8556:8579   */\n      swap1\n      pop\n        /* \"#utility.yul\":8278:8586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8592:8740   */\n    tag_335:\n        /* \"#utility.yul\":8690:8696   */\n      dup3\n        /* \"#utility.yul\":8685:8688   */\n      dup2\n        /* \"#utility.yul\":8680:8683   */\n      dup4\n        /* \"#utility.yul\":8667:8697   */\n      calldatacopy\n        /* \"#utility.yul\":8731:8732   */\n      0x00\n        /* \"#utility.yul\":8722:8728   */\n      dup4\n        /* \"#utility.yul\":8717:8720   */\n      dup4\n        /* \"#utility.yul\":8713:8729   */\n      add\n        /* \"#utility.yul\":8706:8733   */\n      mstore\n        /* \"#utility.yul\":8592:8740   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8746:9171   */\n    tag_336:\n        /* \"#utility.yul\":8824:8829   */\n      0x00\n        /* \"#utility.yul\":8849:8915   */\n      tag_493\n        /* \"#utility.yul\":8865:8914   */\n      tag_494\n        /* \"#utility.yul\":8907:8913   */\n      dup5\n        /* \"#utility.yul\":8865:8914   */\n      tag_334\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":8849:8915   */\n      tag_333\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":8840:8915   */\n      swap1\n      pop\n        /* \"#utility.yul\":8938:8944   */\n      dup3\n        /* \"#utility.yul\":8931:8936   */\n      dup2\n        /* \"#utility.yul\":8924:8945   */\n      mstore\n        /* \"#utility.yul\":8976:8980   */\n      0x20\n        /* \"#utility.yul\":8969:8974   */\n      dup2\n        /* \"#utility.yul\":8965:8981   */\n      add\n        /* \"#utility.yul\":9014:9017   */\n      dup5\n        /* \"#utility.yul\":9005:9011   */\n      dup5\n        /* \"#utility.yul\":9000:9003   */\n      dup5\n        /* \"#utility.yul\":8996:9012   */\n      add\n        /* \"#utility.yul\":8993:9018   */\n      gt\n        /* \"#utility.yul\":8990:9102   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":9021:9100   */\n      tag_496\n      tag_330\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8990:9102   */\n    tag_495:\n        /* \"#utility.yul\":9111:9165   */\n      tag_497\n        /* \"#utility.yul\":9158:9164   */\n      dup5\n        /* \"#utility.yul\":9153:9156   */\n      dup3\n        /* \"#utility.yul\":9148:9151   */\n      dup6\n        /* \"#utility.yul\":9111:9165   */\n      tag_335\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8830:9171   */\n      pop\n        /* \"#utility.yul\":8746:9171   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9191:9531   */\n    tag_337:\n        /* \"#utility.yul\":9247:9252   */\n      0x00\n        /* \"#utility.yul\":9296:9299   */\n      dup3\n        /* \"#utility.yul\":9289:9293   */\n      0x1f\n        /* \"#utility.yul\":9281:9287   */\n      dup4\n        /* \"#utility.yul\":9277:9294   */\n      add\n        /* \"#utility.yul\":9273:9300   */\n      slt\n        /* \"#utility.yul\":9263:9385   */\n      tag_499\n      jumpi\n        /* \"#utility.yul\":9304:9383   */\n      tag_500\n      tag_329\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":9263:9385   */\n    tag_499:\n        /* \"#utility.yul\":9421:9427   */\n      dup2\n        /* \"#utility.yul\":9408:9428   */\n      calldataload\n        /* \"#utility.yul\":9446:9525   */\n      tag_501\n        /* \"#utility.yul\":9521:9524   */\n      dup5\n        /* \"#utility.yul\":9513:9519   */\n      dup3\n        /* \"#utility.yul\":9506:9510   */\n      0x20\n        /* \"#utility.yul\":9498:9504   */\n      dup7\n        /* \"#utility.yul\":9494:9511   */\n      add\n        /* \"#utility.yul\":9446:9525   */\n      tag_336\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9437:9525   */\n      swap2\n      pop\n        /* \"#utility.yul\":9253:9531   */\n      pop\n        /* \"#utility.yul\":9191:9531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9537:10332   */\n    tag_69:\n        /* \"#utility.yul\":9622:9628   */\n      0x00\n        /* \"#utility.yul\":9630:9636   */\n      dup1\n        /* \"#utility.yul\":9638:9644   */\n      0x00\n        /* \"#utility.yul\":9687:9689   */\n      0x60\n        /* \"#utility.yul\":9675:9684   */\n      dup5\n        /* \"#utility.yul\":9666:9673   */\n      dup7\n        /* \"#utility.yul\":9662:9685   */\n      sub\n        /* \"#utility.yul\":9658:9690   */\n      slt\n        /* \"#utility.yul\":9655:9774   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":9693:9772   */\n      tag_504\n      tag_307\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":9655:9774   */\n    tag_503:\n        /* \"#utility.yul\":9813:9814   */\n      0x00\n        /* \"#utility.yul\":9838:9890   */\n      tag_505\n        /* \"#utility.yul\":9882:9889   */\n      dup7\n        /* \"#utility.yul\":9873:9879   */\n      dup3\n        /* \"#utility.yul\":9862:9871   */\n      dup8\n        /* \"#utility.yul\":9858:9880   */\n      add\n        /* \"#utility.yul\":9838:9890   */\n      tag_328\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":9828:9890   */\n      swap4\n      pop\n        /* \"#utility.yul\":9784:9900   */\n      pop\n        /* \"#utility.yul\":9939:9941   */\n      0x20\n        /* \"#utility.yul\":9965:10017   */\n      tag_506\n        /* \"#utility.yul\":10009:10016   */\n      dup7\n        /* \"#utility.yul\":10000:10006   */\n      dup3\n        /* \"#utility.yul\":9989:9998   */\n      dup8\n        /* \"#utility.yul\":9985:10007   */\n      add\n        /* \"#utility.yul\":9965:10017   */\n      tag_328\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":9955:10017   */\n      swap3\n      pop\n        /* \"#utility.yul\":9910:10027   */\n      pop\n        /* \"#utility.yul\":10094:10096   */\n      0x40\n        /* \"#utility.yul\":10083:10092   */\n      dup5\n        /* \"#utility.yul\":10079:10097   */\n      add\n        /* \"#utility.yul\":10066:10098   */\n      calldataload\n        /* \"#utility.yul\":10125:10143   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10117:10123   */\n      dup2\n        /* \"#utility.yul\":10114:10144   */\n      gt\n        /* \"#utility.yul\":10111:10228   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":10147:10226   */\n      tag_508\n      tag_308\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":10111:10228   */\n    tag_507:\n        /* \"#utility.yul\":10252:10315   */\n      tag_509\n        /* \"#utility.yul\":10307:10314   */\n      dup7\n        /* \"#utility.yul\":10298:10304   */\n      dup3\n        /* \"#utility.yul\":10287:10296   */\n      dup8\n        /* \"#utility.yul\":10283:10305   */\n      add\n        /* \"#utility.yul\":10252:10315   */\n      tag_337\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":10242:10315   */\n      swap2\n      pop\n        /* \"#utility.yul\":10037:10325   */\n      pop\n        /* \"#utility.yul\":9537:10332   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10338:10957   */\n    tag_84:\n        /* \"#utility.yul\":10415:10421   */\n      0x00\n        /* \"#utility.yul\":10423:10429   */\n      dup1\n        /* \"#utility.yul\":10431:10437   */\n      0x00\n        /* \"#utility.yul\":10480:10482   */\n      0x60\n        /* \"#utility.yul\":10468:10477   */\n      dup5\n        /* \"#utility.yul\":10459:10466   */\n      dup7\n        /* \"#utility.yul\":10455:10478   */\n      sub\n        /* \"#utility.yul\":10451:10483   */\n      slt\n        /* \"#utility.yul\":10448:10567   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":10486:10565   */\n      tag_512\n      tag_307\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10448:10567   */\n    tag_511:\n        /* \"#utility.yul\":10606:10607   */\n      0x00\n        /* \"#utility.yul\":10631:10684   */\n      tag_513\n        /* \"#utility.yul\":10676:10683   */\n      dup7\n        /* \"#utility.yul\":10667:10673   */\n      dup3\n        /* \"#utility.yul\":10656:10665   */\n      dup8\n        /* \"#utility.yul\":10652:10674   */\n      add\n        /* \"#utility.yul\":10631:10684   */\n      tag_312\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10621:10684   */\n      swap4\n      pop\n        /* \"#utility.yul\":10577:10694   */\n      pop\n        /* \"#utility.yul\":10733:10735   */\n      0x20\n        /* \"#utility.yul\":10759:10812   */\n      tag_514\n        /* \"#utility.yul\":10804:10811   */\n      dup7\n        /* \"#utility.yul\":10795:10801   */\n      dup3\n        /* \"#utility.yul\":10784:10793   */\n      dup8\n        /* \"#utility.yul\":10780:10802   */\n      add\n        /* \"#utility.yul\":10759:10812   */\n      tag_312\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":10749:10812   */\n      swap3\n      pop\n        /* \"#utility.yul\":10704:10822   */\n      pop\n        /* \"#utility.yul\":10861:10863   */\n      0x40\n        /* \"#utility.yul\":10887:10940   */\n      tag_515\n        /* \"#utility.yul\":10932:10939   */\n      dup7\n        /* \"#utility.yul\":10923:10929   */\n      dup3\n        /* \"#utility.yul\":10912:10921   */\n      dup8\n        /* \"#utility.yul\":10908:10930   */\n      add\n        /* \"#utility.yul\":10887:10940   */\n      tag_315\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10877:10940   */\n      swap2\n      pop\n        /* \"#utility.yul\":10832:10950   */\n      pop\n        /* \"#utility.yul\":10338:10957   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10963:11103   */\n    tag_338:\n        /* \"#utility.yul\":11012:11021   */\n      0x00\n        /* \"#utility.yul\":11045:11097   */\n      tag_517\n        /* \"#utility.yul\":11063:11096   */\n      tag_518\n        /* \"#utility.yul\":11072:11095   */\n      tag_519\n        /* \"#utility.yul\":11089:11094   */\n      dup5\n        /* \"#utility.yul\":11072:11095   */\n      tag_321\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":11063:11096   */\n      tag_316\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11045:11097   */\n      tag_300\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":11032:11097   */\n      swap1\n      pop\n        /* \"#utility.yul\":10963:11103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11109:11238   */\n    tag_339:\n        /* \"#utility.yul\":11195:11231   */\n      tag_521\n        /* \"#utility.yul\":11225:11230   */\n      dup2\n        /* \"#utility.yul\":11195:11231   */\n      tag_338\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11190:11193   */\n      dup3\n        /* \"#utility.yul\":11183:11232   */\n      mstore\n        /* \"#utility.yul\":11109:11238   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11244:11682   */\n    tag_101:\n        /* \"#utility.yul\":11391:11395   */\n      0x00\n        /* \"#utility.yul\":11429:11431   */\n      0x60\n        /* \"#utility.yul\":11418:11427   */\n      dup3\n        /* \"#utility.yul\":11414:11432   */\n      add\n        /* \"#utility.yul\":11406:11432   */\n      swap1\n      pop\n        /* \"#utility.yul\":11442:11513   */\n      tag_523\n        /* \"#utility.yul\":11510:11511   */\n      0x00\n        /* \"#utility.yul\":11499:11508   */\n      dup4\n        /* \"#utility.yul\":11495:11512   */\n      add\n        /* \"#utility.yul\":11486:11492   */\n      dup7\n        /* \"#utility.yul\":11442:11513   */\n      tag_302\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":11523:11594   */\n      tag_524\n        /* \"#utility.yul\":11590:11592   */\n      0x20\n        /* \"#utility.yul\":11579:11588   */\n      dup4\n        /* \"#utility.yul\":11575:11593   */\n      add\n        /* \"#utility.yul\":11566:11572   */\n      dup6\n        /* \"#utility.yul\":11523:11594   */\n      tag_339\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":11604:11675   */\n      tag_525\n        /* \"#utility.yul\":11671:11673   */\n      0x40\n        /* \"#utility.yul\":11660:11669   */\n      dup4\n        /* \"#utility.yul\":11656:11674   */\n      add\n        /* \"#utility.yul\":11647:11653   */\n      dup5\n        /* \"#utility.yul\":11604:11675   */\n      tag_339\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":11244:11682   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11688:11857   */\n    tag_340:\n        /* \"#utility.yul\":11828:11849   */\n      0x4e6f20636c61696d61626c6520616d6f756e7400000000000000000000000000\n        /* \"#utility.yul\":11824:11825   */\n      0x00\n        /* \"#utility.yul\":11816:11822   */\n      dup3\n        /* \"#utility.yul\":11812:11826   */\n      add\n        /* \"#utility.yul\":11805:11850   */\n      mstore\n        /* \"#utility.yul\":11688:11857   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11863:12229   */\n    tag_341:\n        /* \"#utility.yul\":12005:12008   */\n      0x00\n        /* \"#utility.yul\":12026:12093   */\n      tag_528\n        /* \"#utility.yul\":12090:12092   */\n      0x13\n        /* \"#utility.yul\":12085:12088   */\n      dup4\n        /* \"#utility.yul\":12026:12093   */\n      tag_303\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":12019:12093   */\n      swap2\n      pop\n        /* \"#utility.yul\":12102:12195   */\n      tag_529\n        /* \"#utility.yul\":12191:12194   */\n      dup3\n        /* \"#utility.yul\":12102:12195   */\n      tag_340\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":12220:12222   */\n      0x20\n        /* \"#utility.yul\":12215:12218   */\n      dup3\n        /* \"#utility.yul\":12211:12223   */\n      add\n        /* \"#utility.yul\":12204:12223   */\n      swap1\n      pop\n        /* \"#utility.yul\":11863:12229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12235:12654   */\n    tag_104:\n        /* \"#utility.yul\":12401:12405   */\n      0x00\n        /* \"#utility.yul\":12439:12441   */\n      0x20\n        /* \"#utility.yul\":12428:12437   */\n      dup3\n        /* \"#utility.yul\":12424:12442   */\n      add\n        /* \"#utility.yul\":12416:12442   */\n      swap1\n      pop\n        /* \"#utility.yul\":12488:12497   */\n      dup2\n        /* \"#utility.yul\":12482:12486   */\n      dup2\n        /* \"#utility.yul\":12478:12498   */\n      sub\n        /* \"#utility.yul\":12474:12475   */\n      0x00\n        /* \"#utility.yul\":12463:12472   */\n      dup4\n        /* \"#utility.yul\":12459:12476   */\n      add\n        /* \"#utility.yul\":12452:12499   */\n      mstore\n        /* \"#utility.yul\":12516:12647   */\n      tag_531\n        /* \"#utility.yul\":12642:12646   */\n      dup2\n        /* \"#utility.yul\":12516:12647   */\n      tag_341\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":12508:12647   */\n      swap1\n      pop\n        /* \"#utility.yul\":12235:12654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12660:12835   */\n    tag_342:\n        /* \"#utility.yul\":12800:12827   */\n      0x496e73756666696369656e742066756e647320696e206a617200000000000000\n        /* \"#utility.yul\":12796:12797   */\n      0x00\n        /* \"#utility.yul\":12788:12794   */\n      dup3\n        /* \"#utility.yul\":12784:12798   */\n      add\n        /* \"#utility.yul\":12777:12828   */\n      mstore\n        /* \"#utility.yul\":12660:12835   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12841:13207   */\n    tag_343:\n        /* \"#utility.yul\":12983:12986   */\n      0x00\n        /* \"#utility.yul\":13004:13071   */\n      tag_534\n        /* \"#utility.yul\":13068:13070   */\n      0x19\n        /* \"#utility.yul\":13063:13066   */\n      dup4\n        /* \"#utility.yul\":13004:13071   */\n      tag_303\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":12997:13071   */\n      swap2\n      pop\n        /* \"#utility.yul\":13080:13173   */\n      tag_535\n        /* \"#utility.yul\":13169:13172   */\n      dup3\n        /* \"#utility.yul\":13080:13173   */\n      tag_342\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":13198:13200   */\n      0x20\n        /* \"#utility.yul\":13193:13196   */\n      dup3\n        /* \"#utility.yul\":13189:13201   */\n      add\n        /* \"#utility.yul\":13182:13201   */\n      swap1\n      pop\n        /* \"#utility.yul\":12841:13207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13213:13632   */\n    tag_107:\n        /* \"#utility.yul\":13379:13383   */\n      0x00\n        /* \"#utility.yul\":13417:13419   */\n      0x20\n        /* \"#utility.yul\":13406:13415   */\n      dup3\n        /* \"#utility.yul\":13402:13420   */\n      add\n        /* \"#utility.yul\":13394:13420   */\n      swap1\n      pop\n        /* \"#utility.yul\":13466:13475   */\n      dup2\n        /* \"#utility.yul\":13460:13464   */\n      dup2\n        /* \"#utility.yul\":13456:13476   */\n      sub\n        /* \"#utility.yul\":13452:13453   */\n      0x00\n        /* \"#utility.yul\":13441:13450   */\n      dup4\n        /* \"#utility.yul\":13437:13454   */\n      add\n        /* \"#utility.yul\":13430:13477   */\n      mstore\n        /* \"#utility.yul\":13494:13625   */\n      tag_537\n        /* \"#utility.yul\":13620:13624   */\n      dup2\n        /* \"#utility.yul\":13494:13625   */\n      tag_343\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":13486:13625   */\n      swap1\n      pop\n        /* \"#utility.yul\":13213:13632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13638:13793   */\n    tag_344:\n        /* \"#utility.yul\":13778:13785   */\n      0x5472757374000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13774:13775   */\n      0x00\n        /* \"#utility.yul\":13766:13772   */\n      dup3\n        /* \"#utility.yul\":13762:13776   */\n      add\n        /* \"#utility.yul\":13755:13786   */\n      mstore\n        /* \"#utility.yul\":13638:13793   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13799:14164   */\n    tag_345:\n        /* \"#utility.yul\":13941:13944   */\n      0x00\n        /* \"#utility.yul\":13962:14028   */\n      tag_540\n        /* \"#utility.yul\":14026:14027   */\n      0x05\n        /* \"#utility.yul\":14021:14024   */\n      dup4\n        /* \"#utility.yul\":13962:14028   */\n      tag_303\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":13955:14028   */\n      swap2\n      pop\n        /* \"#utility.yul\":14037:14130   */\n      tag_541\n        /* \"#utility.yul\":14126:14129   */\n      dup3\n        /* \"#utility.yul\":14037:14130   */\n      tag_344\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":14155:14157   */\n      0x20\n        /* \"#utility.yul\":14150:14153   */\n      dup3\n        /* \"#utility.yul\":14146:14158   */\n      add\n        /* \"#utility.yul\":14139:14158   */\n      swap1\n      pop\n        /* \"#utility.yul\":13799:14164   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14170:14699   */\n    tag_109:\n        /* \"#utility.yul\":14364:14368   */\n      0x00\n        /* \"#utility.yul\":14402:14404   */\n      0x40\n        /* \"#utility.yul\":14391:14400   */\n      dup3\n        /* \"#utility.yul\":14387:14405   */\n      add\n        /* \"#utility.yul\":14379:14405   */\n      swap1\n      pop\n        /* \"#utility.yul\":14415:14486   */\n      tag_543\n        /* \"#utility.yul\":14483:14484   */\n      0x00\n        /* \"#utility.yul\":14472:14481   */\n      dup4\n        /* \"#utility.yul\":14468:14485   */\n      add\n        /* \"#utility.yul\":14459:14465   */\n      dup5\n        /* \"#utility.yul\":14415:14486   */\n      tag_313\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":14533:14542   */\n      dup2\n        /* \"#utility.yul\":14527:14531   */\n      dup2\n        /* \"#utility.yul\":14523:14543   */\n      sub\n        /* \"#utility.yul\":14518:14520   */\n      0x20\n        /* \"#utility.yul\":14507:14516   */\n      dup4\n        /* \"#utility.yul\":14503:14521   */\n      add\n        /* \"#utility.yul\":14496:14544   */\n      mstore\n        /* \"#utility.yul\":14561:14692   */\n      tag_544\n        /* \"#utility.yul\":14687:14691   */\n      dup2\n        /* \"#utility.yul\":14561:14692   */\n      tag_345\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":14553:14692   */\n      swap1\n      pop\n        /* \"#utility.yul\":14170:14699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14705:14848   */\n    tag_346:\n        /* \"#utility.yul\":14762:14767   */\n      0x00\n        /* \"#utility.yul\":14793:14799   */\n      dup2\n        /* \"#utility.yul\":14787:14800   */\n      mload\n        /* \"#utility.yul\":14778:14800   */\n      swap1\n      pop\n        /* \"#utility.yul\":14809:14842   */\n      tag_546\n        /* \"#utility.yul\":14836:14841   */\n      dup2\n        /* \"#utility.yul\":14809:14842   */\n      tag_314\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":14705:14848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14854:15205   */\n    tag_113:\n        /* \"#utility.yul\":14924:14930   */\n      0x00\n        /* \"#utility.yul\":14973:14975   */\n      0x20\n        /* \"#utility.yul\":14961:14970   */\n      dup3\n        /* \"#utility.yul\":14952:14959   */\n      dup5\n        /* \"#utility.yul\":14948:14971   */\n      sub\n        /* \"#utility.yul\":14944:14976   */\n      slt\n        /* \"#utility.yul\":14941:15060   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":14979:15058   */\n      tag_549\n      tag_307\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":14941:15060   */\n    tag_548:\n        /* \"#utility.yul\":15099:15100   */\n      0x00\n        /* \"#utility.yul\":15124:15188   */\n      tag_550\n        /* \"#utility.yul\":15180:15187   */\n      dup5\n        /* \"#utility.yul\":15171:15177   */\n      dup3\n        /* \"#utility.yul\":15160:15169   */\n      dup6\n        /* \"#utility.yul\":15156:15178   */\n      add\n        /* \"#utility.yul\":15124:15188   */\n      tag_346\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":15114:15188   */\n      swap2\n      pop\n        /* \"#utility.yul\":15070:15198   */\n      pop\n        /* \"#utility.yul\":14854:15205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15211:15385   */\n    tag_347:\n        /* \"#utility.yul\":15351:15377   */\n      0x496e73756666696369656e742054727573742073636f72650000000000000000\n        /* \"#utility.yul\":15347:15348   */\n      0x00\n        /* \"#utility.yul\":15339:15345   */\n      dup3\n        /* \"#utility.yul\":15335:15349   */\n      add\n        /* \"#utility.yul\":15328:15378   */\n      mstore\n        /* \"#utility.yul\":15211:15385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15391:15757   */\n    tag_348:\n        /* \"#utility.yul\":15533:15536   */\n      0x00\n        /* \"#utility.yul\":15554:15621   */\n      tag_553\n        /* \"#utility.yul\":15618:15620   */\n      0x18\n        /* \"#utility.yul\":15613:15616   */\n      dup4\n        /* \"#utility.yul\":15554:15621   */\n      tag_303\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":15547:15621   */\n      swap2\n      pop\n        /* \"#utility.yul\":15630:15723   */\n      tag_554\n        /* \"#utility.yul\":15719:15722   */\n      dup3\n        /* \"#utility.yul\":15630:15723   */\n      tag_347\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":15748:15750   */\n      0x20\n        /* \"#utility.yul\":15743:15746   */\n      dup3\n        /* \"#utility.yul\":15739:15751   */\n      add\n        /* \"#utility.yul\":15732:15751   */\n      swap1\n      pop\n        /* \"#utility.yul\":15391:15757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15763:16182   */\n    tag_116:\n        /* \"#utility.yul\":15929:15933   */\n      0x00\n        /* \"#utility.yul\":15967:15969   */\n      0x20\n        /* \"#utility.yul\":15956:15965   */\n      dup3\n        /* \"#utility.yul\":15952:15970   */\n      add\n        /* \"#utility.yul\":15944:15970   */\n      swap1\n      pop\n        /* \"#utility.yul\":16016:16025   */\n      dup2\n        /* \"#utility.yul\":16010:16014   */\n      dup2\n        /* \"#utility.yul\":16006:16026   */\n      sub\n        /* \"#utility.yul\":16002:16003   */\n      0x00\n        /* \"#utility.yul\":15991:16000   */\n      dup4\n        /* \"#utility.yul\":15987:16004   */\n      add\n        /* \"#utility.yul\":15980:16027   */\n      mstore\n        /* \"#utility.yul\":16044:16175   */\n      tag_556\n        /* \"#utility.yul\":16170:16174   */\n      dup2\n        /* \"#utility.yul\":16044:16175   */\n      tag_348\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":16036:16175   */\n      swap1\n      pop\n        /* \"#utility.yul\":15763:16182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16188:16382   */\n    tag_118:\n        /* \"#utility.yul\":16228:16232   */\n      0x00\n        /* \"#utility.yul\":16248:16268   */\n      tag_558\n        /* \"#utility.yul\":16266:16267   */\n      dup3\n        /* \"#utility.yul\":16248:16268   */\n      tag_300\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":16243:16268   */\n      swap2\n      pop\n        /* \"#utility.yul\":16282:16302   */\n      tag_559\n        /* \"#utility.yul\":16300:16301   */\n      dup4\n        /* \"#utility.yul\":16282:16302   */\n      tag_300\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":16277:16302   */\n      swap3\n      pop\n        /* \"#utility.yul\":16326:16327   */\n      dup3\n        /* \"#utility.yul\":16323:16324   */\n      dup3\n        /* \"#utility.yul\":16319:16328   */\n      sub\n        /* \"#utility.yul\":16311:16328   */\n      swap1\n      pop\n        /* \"#utility.yul\":16350:16351   */\n      dup2\n        /* \"#utility.yul\":16344:16348   */\n      dup2\n        /* \"#utility.yul\":16341:16352   */\n      gt\n        /* \"#utility.yul\":16338:16375   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":16355:16373   */\n      tag_561\n      tag_301\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":16338:16375   */\n    tag_560:\n        /* \"#utility.yul\":16188:16382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16388:16535   */\n    tag_349:\n        /* \"#utility.yul\":16489:16500   */\n      0x00\n        /* \"#utility.yul\":16526:16529   */\n      dup2\n        /* \"#utility.yul\":16511:16529   */\n      swap1\n      pop\n        /* \"#utility.yul\":16388:16535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16541:16655   */\n    tag_350:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16661:17059   */\n    tag_351:\n        /* \"#utility.yul\":16820:16823   */\n      0x00\n        /* \"#utility.yul\":16841:16924   */\n      tag_565\n        /* \"#utility.yul\":16922:16923   */\n      0x00\n        /* \"#utility.yul\":16917:16920   */\n      dup4\n        /* \"#utility.yul\":16841:16924   */\n      tag_349\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":16834:16924   */\n      swap2\n      pop\n        /* \"#utility.yul\":16933:17026   */\n      tag_566\n        /* \"#utility.yul\":17022:17025   */\n      dup3\n        /* \"#utility.yul\":16933:17026   */\n      tag_350\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":17051:17052   */\n      0x00\n        /* \"#utility.yul\":17046:17049   */\n      dup3\n        /* \"#utility.yul\":17042:17053   */\n      add\n        /* \"#utility.yul\":17035:17053   */\n      swap1\n      pop\n        /* \"#utility.yul\":16661:17059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17065:17444   */\n    tag_121:\n        /* \"#utility.yul\":17249:17252   */\n      0x00\n        /* \"#utility.yul\":17271:17418   */\n      tag_568\n        /* \"#utility.yul\":17414:17417   */\n      dup3\n        /* \"#utility.yul\":17271:17418   */\n      tag_351\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":17264:17418   */\n      swap2\n      pop\n        /* \"#utility.yul\":17435:17438   */\n      dup2\n        /* \"#utility.yul\":17428:17438   */\n      swap1\n      pop\n        /* \"#utility.yul\":17065:17444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17450:17621   */\n    tag_352:\n        /* \"#utility.yul\":17590:17613   */\n      0x4574686572207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":17586:17587   */\n      0x00\n        /* \"#utility.yul\":17578:17584   */\n      dup3\n        /* \"#utility.yul\":17574:17588   */\n      add\n        /* \"#utility.yul\":17567:17614   */\n      mstore\n        /* \"#utility.yul\":17450:17621   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17627:17993   */\n    tag_353:\n        /* \"#utility.yul\":17769:17772   */\n      0x00\n        /* \"#utility.yul\":17790:17857   */\n      tag_571\n        /* \"#utility.yul\":17854:17856   */\n      0x15\n        /* \"#utility.yul\":17849:17852   */\n      dup4\n        /* \"#utility.yul\":17790:17857   */\n      tag_303\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":17783:17857   */\n      swap2\n      pop\n        /* \"#utility.yul\":17866:17959   */\n      tag_572\n        /* \"#utility.yul\":17955:17958   */\n      dup3\n        /* \"#utility.yul\":17866:17959   */\n      tag_352\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":17984:17986   */\n      0x20\n        /* \"#utility.yul\":17979:17982   */\n      dup3\n        /* \"#utility.yul\":17975:17987   */\n      add\n        /* \"#utility.yul\":17968:17987   */\n      swap1\n      pop\n        /* \"#utility.yul\":17627:17993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17999:18418   */\n    tag_127:\n        /* \"#utility.yul\":18165:18169   */\n      0x00\n        /* \"#utility.yul\":18203:18205   */\n      0x20\n        /* \"#utility.yul\":18192:18201   */\n      dup3\n        /* \"#utility.yul\":18188:18206   */\n      add\n        /* \"#utility.yul\":18180:18206   */\n      swap1\n      pop\n        /* \"#utility.yul\":18252:18261   */\n      dup2\n        /* \"#utility.yul\":18246:18250   */\n      dup2\n        /* \"#utility.yul\":18242:18262   */\n      sub\n        /* \"#utility.yul\":18238:18239   */\n      0x00\n        /* \"#utility.yul\":18227:18236   */\n      dup4\n        /* \"#utility.yul\":18223:18240   */\n      add\n        /* \"#utility.yul\":18216:18263   */\n      mstore\n        /* \"#utility.yul\":18280:18411   */\n      tag_574\n        /* \"#utility.yul\":18406:18410   */\n      dup2\n        /* \"#utility.yul\":18280:18411   */\n      tag_353\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":18272:18411   */\n      swap1\n      pop\n        /* \"#utility.yul\":17999:18418   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18424:18596   */\n    tag_354:\n        /* \"#utility.yul\":18564:18588   */\n      0x496e636f727265637420457468657220616d6f756e7400000000000000000000\n        /* \"#utility.yul\":18560:18561   */\n      0x00\n        /* \"#utility.yul\":18552:18558   */\n      dup3\n        /* \"#utility.yul\":18548:18562   */\n      add\n        /* \"#utility.yul\":18541:18589   */\n      mstore\n        /* \"#utility.yul\":18424:18596   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18602:18968   */\n    tag_355:\n        /* \"#utility.yul\":18744:18747   */\n      0x00\n        /* \"#utility.yul\":18765:18832   */\n      tag_577\n        /* \"#utility.yul\":18829:18831   */\n      0x16\n        /* \"#utility.yul\":18824:18827   */\n      dup4\n        /* \"#utility.yul\":18765:18832   */\n      tag_303\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":18758:18832   */\n      swap2\n      pop\n        /* \"#utility.yul\":18841:18934   */\n      tag_578\n        /* \"#utility.yul\":18930:18933   */\n      dup3\n        /* \"#utility.yul\":18841:18934   */\n      tag_354\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":18959:18961   */\n      0x20\n        /* \"#utility.yul\":18954:18957   */\n      dup3\n        /* \"#utility.yul\":18950:18962   */\n      add\n        /* \"#utility.yul\":18943:18962   */\n      swap1\n      pop\n        /* \"#utility.yul\":18602:18968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18974:19393   */\n    tag_140:\n        /* \"#utility.yul\":19140:19144   */\n      0x00\n        /* \"#utility.yul\":19178:19180   */\n      0x20\n        /* \"#utility.yul\":19167:19176   */\n      dup3\n        /* \"#utility.yul\":19163:19181   */\n      add\n        /* \"#utility.yul\":19155:19181   */\n      swap1\n      pop\n        /* \"#utility.yul\":19227:19236   */\n      dup2\n        /* \"#utility.yul\":19221:19225   */\n      dup2\n        /* \"#utility.yul\":19217:19237   */\n      sub\n        /* \"#utility.yul\":19213:19214   */\n      0x00\n        /* \"#utility.yul\":19202:19211   */\n      dup4\n        /* \"#utility.yul\":19198:19215   */\n      add\n        /* \"#utility.yul\":19191:19238   */\n      mstore\n        /* \"#utility.yul\":19255:19386   */\n      tag_580\n        /* \"#utility.yul\":19381:19385   */\n      dup2\n        /* \"#utility.yul\":19255:19386   */\n      tag_355\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":19247:19386   */\n      swap1\n      pop\n        /* \"#utility.yul\":18974:19393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19399:19626   */\n    tag_356:\n        /* \"#utility.yul\":19539:19573   */\n      0x4465706f73697420616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":19535:19536   */\n      0x00\n        /* \"#utility.yul\":19527:19533   */\n      dup3\n        /* \"#utility.yul\":19523:19537   */\n      add\n        /* \"#utility.yul\":19516:19574   */\n      mstore\n        /* \"#utility.yul\":19608:19618   */\n      0x68616e207a65726f000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19603:19605   */\n      0x20\n        /* \"#utility.yul\":19595:19601   */\n      dup3\n        /* \"#utility.yul\":19591:19606   */\n      add\n        /* \"#utility.yul\":19584:19619   */\n      mstore\n        /* \"#utility.yul\":19399:19626   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19632:19998   */\n    tag_357:\n        /* \"#utility.yul\":19774:19777   */\n      0x00\n        /* \"#utility.yul\":19795:19862   */\n      tag_583\n        /* \"#utility.yul\":19859:19861   */\n      0x28\n        /* \"#utility.yul\":19854:19857   */\n      dup4\n        /* \"#utility.yul\":19795:19862   */\n      tag_303\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":19788:19862   */\n      swap2\n      pop\n        /* \"#utility.yul\":19871:19964   */\n      tag_584\n        /* \"#utility.yul\":19960:19963   */\n      dup3\n        /* \"#utility.yul\":19871:19964   */\n      tag_356\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":19989:19991   */\n      0x40\n        /* \"#utility.yul\":19984:19987   */\n      dup3\n        /* \"#utility.yul\":19980:19992   */\n      add\n        /* \"#utility.yul\":19973:19992   */\n      swap1\n      pop\n        /* \"#utility.yul\":19632:19998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20004:20423   */\n    tag_144:\n        /* \"#utility.yul\":20170:20174   */\n      0x00\n        /* \"#utility.yul\":20208:20210   */\n      0x20\n        /* \"#utility.yul\":20197:20206   */\n      dup3\n        /* \"#utility.yul\":20193:20211   */\n      add\n        /* \"#utility.yul\":20185:20211   */\n      swap1\n      pop\n        /* \"#utility.yul\":20257:20266   */\n      dup2\n        /* \"#utility.yul\":20251:20255   */\n      dup2\n        /* \"#utility.yul\":20247:20267   */\n      sub\n        /* \"#utility.yul\":20243:20244   */\n      0x00\n        /* \"#utility.yul\":20232:20241   */\n      dup4\n        /* \"#utility.yul\":20228:20245   */\n      add\n        /* \"#utility.yul\":20221:20268   */\n      mstore\n        /* \"#utility.yul\":20285:20416   */\n      tag_586\n        /* \"#utility.yul\":20411:20415   */\n      dup2\n        /* \"#utility.yul\":20285:20416   */\n      tag_357\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":20277:20416   */\n      swap1\n      pop\n        /* \"#utility.yul\":20004:20423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20429:20514   */\n    tag_358:\n        /* \"#utility.yul\":20474:20481   */\n      0x00\n        /* \"#utility.yul\":20503:20508   */\n      dup2\n        /* \"#utility.yul\":20492:20508   */\n      swap1\n      pop\n        /* \"#utility.yul\":20429:20514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20520:20676   */\n    tag_359:\n        /* \"#utility.yul\":20577:20586   */\n      0x00\n        /* \"#utility.yul\":20610:20670   */\n      tag_589\n        /* \"#utility.yul\":20627:20669   */\n      tag_590\n        /* \"#utility.yul\":20636:20668   */\n      tag_591\n        /* \"#utility.yul\":20662:20667   */\n      dup5\n        /* \"#utility.yul\":20636:20668   */\n      tag_358\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":20627:20669   */\n      tag_316\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":20610:20670   */\n      tag_321\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":20597:20670   */\n      swap1\n      pop\n        /* \"#utility.yul\":20520:20676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20682:20827   */\n    tag_360:\n        /* \"#utility.yul\":20776:20820   */\n      tag_593\n        /* \"#utility.yul\":20814:20819   */\n      dup2\n        /* \"#utility.yul\":20776:20820   */\n      tag_359\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":20771:20774   */\n      dup3\n        /* \"#utility.yul\":20764:20821   */\n      mstore\n        /* \"#utility.yul\":20682:20827   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20833:21069   */\n    tag_165:\n        /* \"#utility.yul\":20933:20937   */\n      0x00\n        /* \"#utility.yul\":20971:20973   */\n      0x20\n        /* \"#utility.yul\":20960:20969   */\n      dup3\n        /* \"#utility.yul\":20956:20974   */\n      add\n        /* \"#utility.yul\":20948:20974   */\n      swap1\n      pop\n        /* \"#utility.yul\":20984:21062   */\n      tag_595\n        /* \"#utility.yul\":21059:21060   */\n      0x00\n        /* \"#utility.yul\":21048:21057   */\n      dup4\n        /* \"#utility.yul\":21044:21061   */\n      add\n        /* \"#utility.yul\":21035:21041   */\n      dup5\n        /* \"#utility.yul\":20984:21062   */\n      tag_360\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":20833:21069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21075:21255   */\n    tag_361:\n        /* \"#utility.yul\":21123:21200   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21120:21121   */\n      0x00\n        /* \"#utility.yul\":21113:21201   */\n      mstore\n        /* \"#utility.yul\":21220:21224   */\n      0x22\n        /* \"#utility.yul\":21217:21218   */\n      0x04\n        /* \"#utility.yul\":21210:21225   */\n      mstore\n        /* \"#utility.yul\":21244:21248   */\n      0x24\n        /* \"#utility.yul\":21241:21242   */\n      0x00\n        /* \"#utility.yul\":21234:21249   */\n      revert\n        /* \"#utility.yul\":21261:21581   */\n    tag_173:\n        /* \"#utility.yul\":21305:21311   */\n      0x00\n        /* \"#utility.yul\":21342:21343   */\n      0x02\n        /* \"#utility.yul\":21336:21340   */\n      dup3\n        /* \"#utility.yul\":21332:21344   */\n      div\n        /* \"#utility.yul\":21322:21344   */\n      swap1\n      pop\n        /* \"#utility.yul\":21389:21390   */\n      0x01\n        /* \"#utility.yul\":21383:21387   */\n      dup3\n        /* \"#utility.yul\":21379:21391   */\n      and\n        /* \"#utility.yul\":21410:21428   */\n      dup1\n        /* \"#utility.yul\":21400:21481   */\n      tag_598\n      jumpi\n        /* \"#utility.yul\":21466:21470   */\n      0x7f\n        /* \"#utility.yul\":21458:21464   */\n      dup3\n        /* \"#utility.yul\":21454:21471   */\n      and\n        /* \"#utility.yul\":21444:21471   */\n      swap2\n      pop\n        /* \"#utility.yul\":21400:21481   */\n    tag_598:\n        /* \"#utility.yul\":21528:21530   */\n      0x20\n        /* \"#utility.yul\":21520:21526   */\n      dup3\n        /* \"#utility.yul\":21517:21531   */\n      lt\n        /* \"#utility.yul\":21497:21515   */\n      dup2\n        /* \"#utility.yul\":21494:21532   */\n      sub\n        /* \"#utility.yul\":21491:21575   */\n      tag_599\n      jumpi\n        /* \"#utility.yul\":21547:21565   */\n      tag_600\n      tag_361\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":21491:21575   */\n    tag_599:\n        /* \"#utility.yul\":21312:21581   */\n      pop\n        /* \"#utility.yul\":21261:21581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21587:21677   */\n    tag_362:\n        /* \"#utility.yul\":21621:21628   */\n      0x00\n        /* \"#utility.yul\":21664:21669   */\n      dup2\n        /* \"#utility.yul\":21657:21670   */\n      iszero\n        /* \"#utility.yul\":21650:21671   */\n      iszero\n        /* \"#utility.yul\":21639:21671   */\n      swap1\n      pop\n        /* \"#utility.yul\":21587:21677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21683:21799   */\n    tag_363:\n        /* \"#utility.yul\":21753:21774   */\n      tag_603\n        /* \"#utility.yul\":21768:21773   */\n      dup2\n        /* \"#utility.yul\":21753:21774   */\n      tag_362\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":21746:21751   */\n      dup2\n        /* \"#utility.yul\":21743:21775   */\n      eq\n        /* \"#utility.yul\":21733:21793   */\n      tag_604\n      jumpi\n        /* \"#utility.yul\":21789:21790   */\n      0x00\n        /* \"#utility.yul\":21786:21787   */\n      dup1\n        /* \"#utility.yul\":21779:21791   */\n      revert\n        /* \"#utility.yul\":21733:21793   */\n    tag_604:\n        /* \"#utility.yul\":21683:21799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21805:21942   */\n    tag_364:\n        /* \"#utility.yul\":21859:21864   */\n      0x00\n        /* \"#utility.yul\":21890:21896   */\n      dup2\n        /* \"#utility.yul\":21884:21897   */\n      mload\n        /* \"#utility.yul\":21875:21897   */\n      swap1\n      pop\n        /* \"#utility.yul\":21906:21936   */\n      tag_606\n        /* \"#utility.yul\":21930:21935   */\n      dup2\n        /* \"#utility.yul\":21906:21936   */\n      tag_363\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":21805:21942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21948:22293   */\n    tag_186:\n        /* \"#utility.yul\":22015:22021   */\n      0x00\n        /* \"#utility.yul\":22064:22066   */\n      0x20\n        /* \"#utility.yul\":22052:22061   */\n      dup3\n        /* \"#utility.yul\":22043:22050   */\n      dup5\n        /* \"#utility.yul\":22039:22062   */\n      sub\n        /* \"#utility.yul\":22035:22067   */\n      slt\n        /* \"#utility.yul\":22032:22151   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":22070:22149   */\n      tag_609\n      tag_307\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":22032:22151   */\n    tag_608:\n        /* \"#utility.yul\":22190:22191   */\n      0x00\n        /* \"#utility.yul\":22215:22276   */\n      tag_610\n        /* \"#utility.yul\":22268:22275   */\n      dup5\n        /* \"#utility.yul\":22259:22265   */\n      dup3\n        /* \"#utility.yul\":22248:22257   */\n      dup6\n        /* \"#utility.yul\":22244:22266   */\n      add\n        /* \"#utility.yul\":22215:22276   */\n      tag_364\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":22205:22276   */\n      swap2\n      pop\n        /* \"#utility.yul\":22161:22286   */\n      pop\n        /* \"#utility.yul\":21948:22293   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22299:22471   */\n    tag_365:\n        /* \"#utility.yul\":22439:22463   */\n      0x43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000\n        /* \"#utility.yul\":22435:22436   */\n      0x00\n        /* \"#utility.yul\":22427:22433   */\n      dup3\n        /* \"#utility.yul\":22423:22437   */\n      add\n        /* \"#utility.yul\":22416:22464   */\n      mstore\n        /* \"#utility.yul\":22299:22471   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22477:22843   */\n    tag_366:\n        /* \"#utility.yul\":22619:22622   */\n      0x00\n        /* \"#utility.yul\":22640:22707   */\n      tag_613\n        /* \"#utility.yul\":22704:22706   */\n      0x16\n        /* \"#utility.yul\":22699:22702   */\n      dup4\n        /* \"#utility.yul\":22640:22707   */\n      tag_303\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":22633:22707   */\n      swap2\n      pop\n        /* \"#utility.yul\":22716:22809   */\n      tag_614\n        /* \"#utility.yul\":22805:22808   */\n      dup3\n        /* \"#utility.yul\":22716:22809   */\n      tag_365\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":22834:22836   */\n      0x20\n        /* \"#utility.yul\":22829:22832   */\n      dup3\n        /* \"#utility.yul\":22825:22837   */\n      add\n        /* \"#utility.yul\":22818:22837   */\n      swap1\n      pop\n        /* \"#utility.yul\":22477:22843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22849:23268   */\n    tag_189:\n        /* \"#utility.yul\":23015:23019   */\n      0x00\n        /* \"#utility.yul\":23053:23055   */\n      0x20\n        /* \"#utility.yul\":23042:23051   */\n      dup3\n        /* \"#utility.yul\":23038:23056   */\n      add\n        /* \"#utility.yul\":23030:23056   */\n      swap1\n      pop\n        /* \"#utility.yul\":23102:23111   */\n      dup2\n        /* \"#utility.yul\":23096:23100   */\n      dup2\n        /* \"#utility.yul\":23092:23112   */\n      sub\n        /* \"#utility.yul\":23088:23089   */\n      0x00\n        /* \"#utility.yul\":23077:23086   */\n      dup4\n        /* \"#utility.yul\":23073:23090   */\n      add\n        /* \"#utility.yul\":23066:23113   */\n      mstore\n        /* \"#utility.yul\":23130:23261   */\n      tag_616\n        /* \"#utility.yul\":23256:23260   */\n      dup2\n        /* \"#utility.yul\":23130:23261   */\n      tag_366\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":23122:23261   */\n      swap1\n      pop\n        /* \"#utility.yul\":22849:23268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23274:23495   */\n    tag_367:\n        /* \"#utility.yul\":23414:23448   */\n      0x53746172742074696d65206d757374206265206265666f726520656e64207469\n        /* \"#utility.yul\":23410:23411   */\n      0x00\n        /* \"#utility.yul\":23402:23408   */\n      dup3\n        /* \"#utility.yul\":23398:23412   */\n      add\n        /* \"#utility.yul\":23391:23449   */\n      mstore\n        /* \"#utility.yul\":23483:23487   */\n      0x6d65000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23478:23480   */\n      0x20\n        /* \"#utility.yul\":23470:23476   */\n      dup3\n        /* \"#utility.yul\":23466:23481   */\n      add\n        /* \"#utility.yul\":23459:23488   */\n      mstore\n        /* \"#utility.yul\":23274:23495   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23501:23867   */\n    tag_368:\n        /* \"#utility.yul\":23643:23646   */\n      0x00\n        /* \"#utility.yul\":23664:23731   */\n      tag_619\n        /* \"#utility.yul\":23728:23730   */\n      0x22\n        /* \"#utility.yul\":23723:23726   */\n      dup4\n        /* \"#utility.yul\":23664:23731   */\n      tag_303\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":23657:23731   */\n      swap2\n      pop\n        /* \"#utility.yul\":23740:23833   */\n      tag_620\n        /* \"#utility.yul\":23829:23832   */\n      dup3\n        /* \"#utility.yul\":23740:23833   */\n      tag_367\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":23858:23860   */\n      0x40\n        /* \"#utility.yul\":23853:23856   */\n      dup3\n        /* \"#utility.yul\":23849:23861   */\n      add\n        /* \"#utility.yul\":23842:23861   */\n      swap1\n      pop\n        /* \"#utility.yul\":23501:23867   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23873:24292   */\n    tag_193:\n        /* \"#utility.yul\":24039:24043   */\n      0x00\n        /* \"#utility.yul\":24077:24079   */\n      0x20\n        /* \"#utility.yul\":24066:24075   */\n      dup3\n        /* \"#utility.yul\":24062:24080   */\n      add\n        /* \"#utility.yul\":24054:24080   */\n      swap1\n      pop\n        /* \"#utility.yul\":24126:24135   */\n      dup2\n        /* \"#utility.yul\":24120:24124   */\n      dup2\n        /* \"#utility.yul\":24116:24136   */\n      sub\n        /* \"#utility.yul\":24112:24113   */\n      0x00\n        /* \"#utility.yul\":24101:24110   */\n      dup4\n        /* \"#utility.yul\":24097:24114   */\n      add\n        /* \"#utility.yul\":24090:24137   */\n      mstore\n        /* \"#utility.yul\":24154:24285   */\n      tag_622\n        /* \"#utility.yul\":24280:24284   */\n      dup2\n        /* \"#utility.yul\":24154:24285   */\n      tag_368\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":24146:24285   */\n      swap1\n      pop\n        /* \"#utility.yul\":23873:24292   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24298:24439   */\n    tag_369:\n        /* \"#utility.yul\":24347:24351   */\n      0x00\n        /* \"#utility.yul\":24370:24373   */\n      dup2\n        /* \"#utility.yul\":24362:24373   */\n      swap1\n      pop\n        /* \"#utility.yul\":24393:24396   */\n      dup2\n        /* \"#utility.yul\":24390:24391   */\n      0x00\n        /* \"#utility.yul\":24383:24397   */\n      mstore\n        /* \"#utility.yul\":24427:24431   */\n      0x20\n        /* \"#utility.yul\":24424:24425   */\n      0x00\n        /* \"#utility.yul\":24414:24432   */\n      keccak256\n        /* \"#utility.yul\":24406:24432   */\n      swap1\n      pop\n        /* \"#utility.yul\":24298:24439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24445:24538   */\n    tag_370:\n        /* \"#utility.yul\":24482:24488   */\n      0x00\n        /* \"#utility.yul\":24529:24531   */\n      0x20\n        /* \"#utility.yul\":24524:24526   */\n      0x1f\n        /* \"#utility.yul\":24517:24522   */\n      dup4\n        /* \"#utility.yul\":24513:24527   */\n      add\n        /* \"#utility.yul\":24509:24532   */\n      div\n        /* \"#utility.yul\":24499:24532   */\n      swap1\n      pop\n        /* \"#utility.yul\":24445:24538   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24544:24651   */\n    tag_371:\n        /* \"#utility.yul\":24588:24596   */\n      0x00\n        /* \"#utility.yul\":24638:24643   */\n      dup3\n        /* \"#utility.yul\":24632:24636   */\n      dup3\n        /* \"#utility.yul\":24628:24644   */\n      shl\n        /* \"#utility.yul\":24607:24644   */\n      swap1\n      pop\n        /* \"#utility.yul\":24544:24651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24657:25050   */\n    tag_372:\n        /* \"#utility.yul\":24726:24732   */\n      0x00\n        /* \"#utility.yul\":24776:24777   */\n      0x08\n        /* \"#utility.yul\":24764:24774   */\n      dup4\n        /* \"#utility.yul\":24760:24778   */\n      mul\n        /* \"#utility.yul\":24799:24896   */\n      tag_627\n        /* \"#utility.yul\":24829:24895   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24818:24827   */\n      dup3\n        /* \"#utility.yul\":24799:24896   */\n      tag_371\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":24917:24956   */\n      tag_628\n        /* \"#utility.yul\":24947:24955   */\n      dup7\n        /* \"#utility.yul\":24936:24945   */\n      dup4\n        /* \"#utility.yul\":24917:24956   */\n      tag_371\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":24905:24956   */\n      swap6\n      pop\n        /* \"#utility.yul\":24989:24993   */\n      dup1\n        /* \"#utility.yul\":24985:24994   */\n      not\n        /* \"#utility.yul\":24978:24983   */\n      dup5\n        /* \"#utility.yul\":24974:24995   */\n      and\n        /* \"#utility.yul\":24965:24995   */\n      swap4\n      pop\n        /* \"#utility.yul\":25038:25042   */\n      dup1\n        /* \"#utility.yul\":25028:25036   */\n      dup7\n        /* \"#utility.yul\":25024:25043   */\n      and\n        /* \"#utility.yul\":25017:25022   */\n      dup5\n        /* \"#utility.yul\":25014:25044   */\n      or\n        /* \"#utility.yul\":25004:25044   */\n      swap3\n      pop\n        /* \"#utility.yul\":24733:25050   */\n      pop\n      pop\n        /* \"#utility.yul\":24657:25050   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25056:25198   */\n    tag_373:\n        /* \"#utility.yul\":25106:25115   */\n      0x00\n        /* \"#utility.yul\":25139:25192   */\n      tag_630\n        /* \"#utility.yul\":25157:25191   */\n      tag_631\n        /* \"#utility.yul\":25166:25190   */\n      tag_632\n        /* \"#utility.yul\":25184:25189   */\n      dup5\n        /* \"#utility.yul\":25166:25190   */\n      tag_300\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":25157:25191   */\n      tag_316\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":25139:25192   */\n      tag_300\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":25126:25192   */\n      swap1\n      pop\n        /* \"#utility.yul\":25056:25198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25204:25279   */\n    tag_374:\n        /* \"#utility.yul\":25247:25250   */\n      0x00\n        /* \"#utility.yul\":25268:25273   */\n      dup2\n        /* \"#utility.yul\":25261:25273   */\n      swap1\n      pop\n        /* \"#utility.yul\":25204:25279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25285:25554   */\n    tag_375:\n        /* \"#utility.yul\":25395:25434   */\n      tag_635\n        /* \"#utility.yul\":25426:25433   */\n      dup4\n        /* \"#utility.yul\":25395:25434   */\n      tag_373\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":25456:25547   */\n      tag_636\n        /* \"#utility.yul\":25505:25546   */\n      tag_637\n        /* \"#utility.yul\":25529:25545   */\n      dup3\n        /* \"#utility.yul\":25505:25546   */\n      tag_374\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":25497:25503   */\n      dup5\n        /* \"#utility.yul\":25490:25494   */\n      dup5\n        /* \"#utility.yul\":25484:25495   */\n      sload\n        /* \"#utility.yul\":25456:25547   */\n      tag_372\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":25450:25454   */\n      dup3\n        /* \"#utility.yul\":25443:25548   */\n      sstore\n        /* \"#utility.yul\":25361:25554   */\n      pop\n        /* \"#utility.yul\":25285:25554   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25560:25633   */\n    tag_376:\n        /* \"#utility.yul\":25605:25608   */\n      0x00\n        /* \"#utility.yul\":25560:25633   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":25639:25828   */\n    tag_377:\n        /* \"#utility.yul\":25716:25748   */\n      tag_640\n      tag_376\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":25757:25822   */\n      tag_641\n        /* \"#utility.yul\":25815:25821   */\n      dup2\n        /* \"#utility.yul\":25807:25813   */\n      dup5\n        /* \"#utility.yul\":25801:25805   */\n      dup5\n        /* \"#utility.yul\":25757:25822   */\n      tag_375\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":25692:25828   */\n      pop\n        /* \"#utility.yul\":25639:25828   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25834:26020   */\n    tag_378:\n        /* \"#utility.yul\":25894:26014   */\n    tag_643:\n        /* \"#utility.yul\":25911:25914   */\n      dup2\n        /* \"#utility.yul\":25904:25909   */\n      dup2\n        /* \"#utility.yul\":25901:25915   */\n      lt\n        /* \"#utility.yul\":25894:26014   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":25965:26004   */\n      tag_646\n        /* \"#utility.yul\":26002:26003   */\n      0x00\n        /* \"#utility.yul\":25995:26000   */\n      dup3\n        /* \"#utility.yul\":25965:26004   */\n      tag_377\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":25938:25939   */\n      0x01\n        /* \"#utility.yul\":25931:25936   */\n      dup2\n        /* \"#utility.yul\":25927:25940   */\n      add\n        /* \"#utility.yul\":25918:25940   */\n      swap1\n      pop\n        /* \"#utility.yul\":25894:26014   */\n      jump(tag_643)\n    tag_645:\n        /* \"#utility.yul\":25834:26020   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26026:26569   */\n    tag_379:\n        /* \"#utility.yul\":26127:26129   */\n      0x1f\n        /* \"#utility.yul\":26122:26125   */\n      dup3\n        /* \"#utility.yul\":26119:26130   */\n      gt\n        /* \"#utility.yul\":26116:26562   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":26161:26199   */\n      tag_649\n        /* \"#utility.yul\":26193:26198   */\n      dup2\n        /* \"#utility.yul\":26161:26199   */\n      tag_369\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":26245:26274   */\n      tag_650\n        /* \"#utility.yul\":26263:26273   */\n      dup5\n        /* \"#utility.yul\":26245:26274   */\n      tag_370\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":26235:26243   */\n      dup2\n        /* \"#utility.yul\":26231:26275   */\n      add\n        /* \"#utility.yul\":26428:26430   */\n      0x20\n        /* \"#utility.yul\":26416:26426   */\n      dup6\n        /* \"#utility.yul\":26413:26431   */\n      lt\n        /* \"#utility.yul\":26410:26459   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":26449:26457   */\n      dup2\n        /* \"#utility.yul\":26434:26457   */\n      swap1\n      pop\n        /* \"#utility.yul\":26410:26459   */\n    tag_651:\n        /* \"#utility.yul\":26472:26552   */\n      tag_652\n        /* \"#utility.yul\":26528:26550   */\n      tag_653\n        /* \"#utility.yul\":26546:26549   */\n      dup6\n        /* \"#utility.yul\":26528:26550   */\n      tag_370\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":26518:26526   */\n      dup4\n        /* \"#utility.yul\":26514:26551   */\n      add\n        /* \"#utility.yul\":26501:26512   */\n      dup3\n        /* \"#utility.yul\":26472:26552   */\n      tag_378\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":26131:26562   */\n      pop\n      pop\n        /* \"#utility.yul\":26116:26562   */\n    tag_648:\n        /* \"#utility.yul\":26026:26569   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26575:26692   */\n    tag_380:\n        /* \"#utility.yul\":26629:26637   */\n      0x00\n        /* \"#utility.yul\":26679:26684   */\n      dup3\n        /* \"#utility.yul\":26673:26677   */\n      dup3\n        /* \"#utility.yul\":26669:26685   */\n      shr\n        /* \"#utility.yul\":26648:26685   */\n      swap1\n      pop\n        /* \"#utility.yul\":26575:26692   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26698:26867   */\n    tag_381:\n        /* \"#utility.yul\":26742:26748   */\n      0x00\n        /* \"#utility.yul\":26775:26826   */\n      tag_656\n        /* \"#utility.yul\":26823:26824   */\n      0x00\n        /* \"#utility.yul\":26819:26825   */\n      not\n        /* \"#utility.yul\":26811:26816   */\n      dup5\n        /* \"#utility.yul\":26808:26809   */\n      0x08\n        /* \"#utility.yul\":26804:26817   */\n      mul\n        /* \"#utility.yul\":26775:26826   */\n      tag_380\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":26771:26827   */\n      not\n        /* \"#utility.yul\":26856:26860   */\n      dup1\n        /* \"#utility.yul\":26850:26854   */\n      dup4\n        /* \"#utility.yul\":26846:26861   */\n      and\n        /* \"#utility.yul\":26836:26861   */\n      swap2\n      pop\n        /* \"#utility.yul\":26749:26867   */\n      pop\n        /* \"#utility.yul\":26698:26867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26872:27167   */\n    tag_382:\n        /* \"#utility.yul\":26948:26952   */\n      0x00\n        /* \"#utility.yul\":27094:27123   */\n      tag_658\n        /* \"#utility.yul\":27119:27122   */\n      dup4\n        /* \"#utility.yul\":27113:27117   */\n      dup4\n        /* \"#utility.yul\":27094:27123   */\n      tag_381\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":27086:27123   */\n      swap2\n      pop\n        /* \"#utility.yul\":27156:27159   */\n      dup3\n        /* \"#utility.yul\":27153:27154   */\n      0x02\n        /* \"#utility.yul\":27149:27160   */\n      mul\n        /* \"#utility.yul\":27143:27147   */\n      dup3\n        /* \"#utility.yul\":27140:27161   */\n      or\n        /* \"#utility.yul\":27132:27161   */\n      swap1\n      pop\n        /* \"#utility.yul\":26872:27167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27172:28567   */\n    tag_195:\n        /* \"#utility.yul\":27289:27326   */\n      tag_660\n        /* \"#utility.yul\":27322:27325   */\n      dup3\n        /* \"#utility.yul\":27289:27326   */\n      tag_323\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":27391:27409   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":27383:27389   */\n      dup2\n        /* \"#utility.yul\":27380:27410   */\n      gt\n        /* \"#utility.yul\":27377:27433   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":27413:27431   */\n      tag_662\n      tag_331\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":27377:27433   */\n    tag_661:\n        /* \"#utility.yul\":27457:27495   */\n      tag_663\n        /* \"#utility.yul\":27489:27493   */\n      dup3\n        /* \"#utility.yul\":27483:27494   */\n      sload\n        /* \"#utility.yul\":27457:27495   */\n      tag_173\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":27542:27609   */\n      tag_664\n        /* \"#utility.yul\":27602:27608   */\n      dup3\n        /* \"#utility.yul\":27594:27600   */\n      dup3\n        /* \"#utility.yul\":27588:27592   */\n      dup6\n        /* \"#utility.yul\":27542:27609   */\n      tag_379\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":27636:27637   */\n      0x00\n        /* \"#utility.yul\":27660:27664   */\n      0x20\n        /* \"#utility.yul\":27647:27664   */\n      swap1\n      pop\n        /* \"#utility.yul\":27692:27694   */\n      0x1f\n        /* \"#utility.yul\":27684:27690   */\n      dup4\n        /* \"#utility.yul\":27681:27695   */\n      gt\n        /* \"#utility.yul\":27709:27710   */\n      0x01\n        /* \"#utility.yul\":27704:28322   */\n      dup2\n      eq\n      tag_666\n      jumpi\n        /* \"#utility.yul\":28366:28367   */\n      0x00\n        /* \"#utility.yul\":28383:28389   */\n      dup5\n        /* \"#utility.yul\":28380:28457   */\n      iszero\n      tag_667\n      jumpi\n        /* \"#utility.yul\":28432:28441   */\n      dup3\n        /* \"#utility.yul\":28427:28430   */\n      dup8\n        /* \"#utility.yul\":28423:28442   */\n      add\n        /* \"#utility.yul\":28417:28443   */\n      mload\n        /* \"#utility.yul\":28408:28443   */\n      swap1\n      pop\n        /* \"#utility.yul\":28380:28457   */\n    tag_667:\n        /* \"#utility.yul\":28483:28550   */\n      tag_668\n        /* \"#utility.yul\":28543:28549   */\n      dup6\n        /* \"#utility.yul\":28536:28541   */\n      dup3\n        /* \"#utility.yul\":28483:28550   */\n      tag_382\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":28477:28481   */\n      dup7\n        /* \"#utility.yul\":28470:28551   */\n      sstore\n        /* \"#utility.yul\":28339:28561   */\n      pop\n        /* \"#utility.yul\":27674:28561   */\n      jump(tag_665)\n        /* \"#utility.yul\":27704:28322   */\n    tag_666:\n        /* \"#utility.yul\":27756:27760   */\n      0x1f\n        /* \"#utility.yul\":27752:27761   */\n      not\n        /* \"#utility.yul\":27744:27750   */\n      dup5\n        /* \"#utility.yul\":27740:27762   */\n      and\n        /* \"#utility.yul\":27790:27827   */\n      tag_669\n        /* \"#utility.yul\":27822:27826   */\n      dup7\n        /* \"#utility.yul\":27790:27827   */\n      tag_369\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":27849:27850   */\n      0x00\n        /* \"#utility.yul\":27863:28071   */\n    tag_670:\n        /* \"#utility.yul\":27877:27884   */\n      dup3\n        /* \"#utility.yul\":27874:27875   */\n      dup2\n        /* \"#utility.yul\":27871:27885   */\n      lt\n        /* \"#utility.yul\":27863:28071   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":27956:27965   */\n      dup5\n        /* \"#utility.yul\":27951:27954   */\n      dup10\n        /* \"#utility.yul\":27947:27966   */\n      add\n        /* \"#utility.yul\":27941:27967   */\n      mload\n        /* \"#utility.yul\":27933:27939   */\n      dup3\n        /* \"#utility.yul\":27926:27968   */\n      sstore\n        /* \"#utility.yul\":28007:28008   */\n      0x01\n        /* \"#utility.yul\":27999:28005   */\n      dup3\n        /* \"#utility.yul\":27995:28009   */\n      add\n        /* \"#utility.yul\":27985:28009   */\n      swap2\n      pop\n        /* \"#utility.yul\":28054:28056   */\n      0x20\n        /* \"#utility.yul\":28043:28052   */\n      dup6\n        /* \"#utility.yul\":28039:28057   */\n      add\n        /* \"#utility.yul\":28026:28057   */\n      swap5\n      pop\n        /* \"#utility.yul\":27900:27904   */\n      0x20\n        /* \"#utility.yul\":27897:27898   */\n      dup2\n        /* \"#utility.yul\":27893:27905   */\n      add\n        /* \"#utility.yul\":27888:27905   */\n      swap1\n      pop\n        /* \"#utility.yul\":27863:28071   */\n      jump(tag_670)\n    tag_672:\n        /* \"#utility.yul\":28099:28105   */\n      dup7\n        /* \"#utility.yul\":28090:28097   */\n      dup4\n        /* \"#utility.yul\":28087:28106   */\n      lt\n        /* \"#utility.yul\":28084:28263   */\n      iszero\n      tag_673\n      jumpi\n        /* \"#utility.yul\":28157:28166   */\n      dup5\n        /* \"#utility.yul\":28152:28155   */\n      dup10\n        /* \"#utility.yul\":28148:28167   */\n      add\n        /* \"#utility.yul\":28142:28168   */\n      mload\n        /* \"#utility.yul\":28200:28248   */\n      tag_674\n        /* \"#utility.yul\":28242:28246   */\n      0x1f\n        /* \"#utility.yul\":28234:28240   */\n      dup10\n        /* \"#utility.yul\":28230:28247   */\n      and\n        /* \"#utility.yul\":28219:28228   */\n      dup3\n        /* \"#utility.yul\":28200:28248   */\n      tag_381\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":28192:28198   */\n      dup4\n        /* \"#utility.yul\":28185:28249   */\n      sstore\n        /* \"#utility.yul\":28107:28263   */\n      pop\n        /* \"#utility.yul\":28084:28263   */\n    tag_673:\n        /* \"#utility.yul\":28309:28310   */\n      0x01\n        /* \"#utility.yul\":28305:28306   */\n      0x02\n        /* \"#utility.yul\":28297:28303   */\n      dup9\n        /* \"#utility.yul\":28293:28307   */\n      mul\n        /* \"#utility.yul\":28289:28311   */\n      add\n        /* \"#utility.yul\":28283:28287   */\n      dup9\n        /* \"#utility.yul\":28276:28312   */\n      sstore\n        /* \"#utility.yul\":27711:28322   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":27674:28561   */\n    tag_665:\n      pop\n        /* \"#utility.yul\":27264:28567   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":27172:28567   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28573:29102   */\n    tag_197:\n        /* \"#utility.yul\":28740:28744   */\n      0x00\n        /* \"#utility.yul\":28778:28780   */\n      0x60\n        /* \"#utility.yul\":28767:28776   */\n      dup3\n        /* \"#utility.yul\":28763:28781   */\n      add\n        /* \"#utility.yul\":28755:28781   */\n      swap1\n      pop\n        /* \"#utility.yul\":28791:28861   */\n      tag_676\n        /* \"#utility.yul\":28858:28859   */\n      0x00\n        /* \"#utility.yul\":28847:28856   */\n      dup4\n        /* \"#utility.yul\":28843:28860   */\n      add\n        /* \"#utility.yul\":28834:28840   */\n      dup7\n        /* \"#utility.yul\":28791:28861   */\n      tag_339\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":28871:28942   */\n      tag_677\n        /* \"#utility.yul\":28938:28940   */\n      0x20\n        /* \"#utility.yul\":28927:28936   */\n      dup4\n        /* \"#utility.yul\":28923:28941   */\n      add\n        /* \"#utility.yul\":28914:28920   */\n      dup6\n        /* \"#utility.yul\":28871:28942   */\n      tag_339\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":28989:28998   */\n      dup2\n        /* \"#utility.yul\":28983:28987   */\n      dup2\n        /* \"#utility.yul\":28979:28999   */\n      sub\n        /* \"#utility.yul\":28974:28976   */\n      0x40\n        /* \"#utility.yul\":28963:28972   */\n      dup4\n        /* \"#utility.yul\":28959:28977   */\n      add\n        /* \"#utility.yul\":28952:29000   */\n      mstore\n        /* \"#utility.yul\":29017:29095   */\n      tag_678\n        /* \"#utility.yul\":29090:29094   */\n      dup2\n        /* \"#utility.yul\":29081:29087   */\n      dup5\n        /* \"#utility.yul\":29017:29095   */\n      tag_326\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":29009:29095   */\n      swap1\n      pop\n        /* \"#utility.yul\":28573:29102   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29108:29275   */\n    tag_383:\n        /* \"#utility.yul\":29248:29267   */\n      0x5a65726f20616464726573732075736572000000000000000000000000000000\n        /* \"#utility.yul\":29244:29245   */\n      0x00\n        /* \"#utility.yul\":29236:29242   */\n      dup3\n        /* \"#utility.yul\":29232:29246   */\n      add\n        /* \"#utility.yul\":29225:29268   */\n      mstore\n        /* \"#utility.yul\":29108:29275   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29281:29647   */\n    tag_384:\n        /* \"#utility.yul\":29423:29426   */\n      0x00\n        /* \"#utility.yul\":29444:29511   */\n      tag_681\n        /* \"#utility.yul\":29508:29510   */\n      0x11\n        /* \"#utility.yul\":29503:29506   */\n      dup4\n        /* \"#utility.yul\":29444:29511   */\n      tag_303\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":29437:29511   */\n      swap2\n      pop\n        /* \"#utility.yul\":29520:29613   */\n      tag_682\n        /* \"#utility.yul\":29609:29612   */\n      dup3\n        /* \"#utility.yul\":29520:29613   */\n      tag_383\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":29638:29640   */\n      0x20\n        /* \"#utility.yul\":29633:29636   */\n      dup3\n        /* \"#utility.yul\":29629:29641   */\n      add\n        /* \"#utility.yul\":29622:29641   */\n      swap1\n      pop\n        /* \"#utility.yul\":29281:29647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29653:30072   */\n    tag_208:\n        /* \"#utility.yul\":29819:29823   */\n      0x00\n        /* \"#utility.yul\":29857:29859   */\n      0x20\n        /* \"#utility.yul\":29846:29855   */\n      dup3\n        /* \"#utility.yul\":29842:29860   */\n      add\n        /* \"#utility.yul\":29834:29860   */\n      swap1\n      pop\n        /* \"#utility.yul\":29906:29915   */\n      dup2\n        /* \"#utility.yul\":29900:29904   */\n      dup2\n        /* \"#utility.yul\":29896:29916   */\n      sub\n        /* \"#utility.yul\":29892:29893   */\n      0x00\n        /* \"#utility.yul\":29881:29890   */\n      dup4\n        /* \"#utility.yul\":29877:29894   */\n      add\n        /* \"#utility.yul\":29870:29917   */\n      mstore\n        /* \"#utility.yul\":29934:30065   */\n      tag_684\n        /* \"#utility.yul\":30060:30064   */\n      dup2\n        /* \"#utility.yul\":29934:30065   */\n      tag_384\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":29926:30065   */\n      swap1\n      pop\n        /* \"#utility.yul\":29653:30072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30078:30308   */\n    tag_385:\n        /* \"#utility.yul\":30218:30252   */\n      0x5769746864726177616c20616d6f756e74206d75737420626520677265617465\n        /* \"#utility.yul\":30214:30215   */\n      0x00\n        /* \"#utility.yul\":30206:30212   */\n      dup3\n        /* \"#utility.yul\":30202:30216   */\n      add\n        /* \"#utility.yul\":30195:30253   */\n      mstore\n        /* \"#utility.yul\":30287:30300   */\n      0x72207468616e207a65726f000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30282:30284   */\n      0x20\n        /* \"#utility.yul\":30274:30280   */\n      dup3\n        /* \"#utility.yul\":30270:30285   */\n      add\n        /* \"#utility.yul\":30263:30301   */\n      mstore\n        /* \"#utility.yul\":30078:30308   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30314:30680   */\n    tag_386:\n        /* \"#utility.yul\":30456:30459   */\n      0x00\n        /* \"#utility.yul\":30477:30544   */\n      tag_687\n        /* \"#utility.yul\":30541:30543   */\n      0x2b\n        /* \"#utility.yul\":30536:30539   */\n      dup4\n        /* \"#utility.yul\":30477:30544   */\n      tag_303\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":30470:30544   */\n      swap2\n      pop\n        /* \"#utility.yul\":30553:30646   */\n      tag_688\n        /* \"#utility.yul\":30642:30645   */\n      dup3\n        /* \"#utility.yul\":30553:30646   */\n      tag_385\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":30671:30673   */\n      0x40\n        /* \"#utility.yul\":30666:30669   */\n      dup3\n        /* \"#utility.yul\":30662:30674   */\n      add\n        /* \"#utility.yul\":30655:30674   */\n      swap1\n      pop\n        /* \"#utility.yul\":30314:30680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30686:31105   */\n    tag_223:\n        /* \"#utility.yul\":30852:30856   */\n      0x00\n        /* \"#utility.yul\":30890:30892   */\n      0x20\n        /* \"#utility.yul\":30879:30888   */\n      dup3\n        /* \"#utility.yul\":30875:30893   */\n      add\n        /* \"#utility.yul\":30867:30893   */\n      swap1\n      pop\n        /* \"#utility.yul\":30939:30948   */\n      dup2\n        /* \"#utility.yul\":30933:30937   */\n      dup2\n        /* \"#utility.yul\":30929:30949   */\n      sub\n        /* \"#utility.yul\":30925:30926   */\n      0x00\n        /* \"#utility.yul\":30914:30923   */\n      dup4\n        /* \"#utility.yul\":30910:30927   */\n      add\n        /* \"#utility.yul\":30903:30950   */\n      mstore\n        /* \"#utility.yul\":30967:31098   */\n      tag_690\n        /* \"#utility.yul\":31093:31097   */\n      dup2\n        /* \"#utility.yul\":30967:31098   */\n      tag_386\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":30959:31098   */\n      swap1\n      pop\n        /* \"#utility.yul\":30686:31105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31111:31279   */\n    tag_387:\n        /* \"#utility.yul\":31251:31271   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":31247:31248   */\n      0x00\n        /* \"#utility.yul\":31239:31245   */\n      dup3\n        /* \"#utility.yul\":31235:31249   */\n      add\n        /* \"#utility.yul\":31228:31272   */\n      mstore\n        /* \"#utility.yul\":31111:31279   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31285:31651   */\n    tag_388:\n        /* \"#utility.yul\":31427:31430   */\n      0x00\n        /* \"#utility.yul\":31448:31515   */\n      tag_693\n        /* \"#utility.yul\":31512:31514   */\n      0x12\n        /* \"#utility.yul\":31507:31510   */\n      dup4\n        /* \"#utility.yul\":31448:31515   */\n      tag_303\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":31441:31515   */\n      swap2\n      pop\n        /* \"#utility.yul\":31524:31617   */\n      tag_694\n        /* \"#utility.yul\":31613:31616   */\n      dup3\n        /* \"#utility.yul\":31524:31617   */\n      tag_387\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":31642:31644   */\n      0x20\n        /* \"#utility.yul\":31637:31640   */\n      dup3\n        /* \"#utility.yul\":31633:31645   */\n      add\n        /* \"#utility.yul\":31626:31645   */\n      swap1\n      pop\n        /* \"#utility.yul\":31285:31651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31657:32076   */\n    tag_226:\n        /* \"#utility.yul\":31823:31827   */\n      0x00\n        /* \"#utility.yul\":31861:31863   */\n      0x20\n        /* \"#utility.yul\":31850:31859   */\n      dup3\n        /* \"#utility.yul\":31846:31864   */\n      add\n        /* \"#utility.yul\":31838:31864   */\n      swap1\n      pop\n        /* \"#utility.yul\":31910:31919   */\n      dup2\n        /* \"#utility.yul\":31904:31908   */\n      dup2\n        /* \"#utility.yul\":31900:31920   */\n      sub\n        /* \"#utility.yul\":31896:31897   */\n      0x00\n        /* \"#utility.yul\":31885:31894   */\n      dup4\n        /* \"#utility.yul\":31881:31898   */\n      add\n        /* \"#utility.yul\":31874:31921   */\n      mstore\n        /* \"#utility.yul\":31938:32069   */\n      tag_696\n        /* \"#utility.yul\":32064:32068   */\n      dup2\n        /* \"#utility.yul\":31938:32069   */\n      tag_388\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":31930:32069   */\n      swap1\n      pop\n        /* \"#utility.yul\":31657:32076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32082:32263   */\n    tag_389:\n        /* \"#utility.yul\":32222:32255   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":32218:32219   */\n      0x00\n        /* \"#utility.yul\":32210:32216   */\n      dup3\n        /* \"#utility.yul\":32206:32220   */\n      add\n        /* \"#utility.yul\":32199:32256   */\n      mstore\n        /* \"#utility.yul\":32082:32263   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32269:32635   */\n    tag_390:\n        /* \"#utility.yul\":32411:32414   */\n      0x00\n        /* \"#utility.yul\":32432:32499   */\n      tag_699\n        /* \"#utility.yul\":32496:32498   */\n      0x1f\n        /* \"#utility.yul\":32491:32494   */\n      dup4\n        /* \"#utility.yul\":32432:32499   */\n      tag_303\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":32425:32499   */\n      swap2\n      pop\n        /* \"#utility.yul\":32508:32601   */\n      tag_700\n        /* \"#utility.yul\":32597:32600   */\n      dup3\n        /* \"#utility.yul\":32508:32601   */\n      tag_389\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":32626:32628   */\n      0x20\n        /* \"#utility.yul\":32621:32624   */\n      dup3\n        /* \"#utility.yul\":32617:32629   */\n      add\n        /* \"#utility.yul\":32610:32629   */\n      swap1\n      pop\n        /* \"#utility.yul\":32269:32635   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32641:33060   */\n    tag_245:\n        /* \"#utility.yul\":32807:32811   */\n      0x00\n        /* \"#utility.yul\":32845:32847   */\n      0x20\n        /* \"#utility.yul\":32834:32843   */\n      dup3\n        /* \"#utility.yul\":32830:32848   */\n      add\n        /* \"#utility.yul\":32822:32848   */\n      swap1\n      pop\n        /* \"#utility.yul\":32894:32903   */\n      dup2\n        /* \"#utility.yul\":32888:32892   */\n      dup2\n        /* \"#utility.yul\":32884:32904   */\n      sub\n        /* \"#utility.yul\":32880:32881   */\n      0x00\n        /* \"#utility.yul\":32869:32878   */\n      dup4\n        /* \"#utility.yul\":32865:32882   */\n      add\n        /* \"#utility.yul\":32858:32905   */\n      mstore\n        /* \"#utility.yul\":32922:33053   */\n      tag_702\n        /* \"#utility.yul\":33048:33052   */\n      dup2\n        /* \"#utility.yul\":32922:33053   */\n      tag_390\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":32914:33053   */\n      swap1\n      pop\n        /* \"#utility.yul\":32641:33060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33066:33398   */\n    tag_249:\n        /* \"#utility.yul\":33187:33191   */\n      0x00\n        /* \"#utility.yul\":33225:33227   */\n      0x40\n        /* \"#utility.yul\":33214:33223   */\n      dup3\n        /* \"#utility.yul\":33210:33228   */\n      add\n        /* \"#utility.yul\":33202:33228   */\n      swap1\n      pop\n        /* \"#utility.yul\":33238:33309   */\n      tag_704\n        /* \"#utility.yul\":33306:33307   */\n      0x00\n        /* \"#utility.yul\":33295:33304   */\n      dup4\n        /* \"#utility.yul\":33291:33308   */\n      add\n        /* \"#utility.yul\":33282:33288   */\n      dup6\n        /* \"#utility.yul\":33238:33309   */\n      tag_313\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":33319:33391   */\n      tag_705\n        /* \"#utility.yul\":33387:33389   */\n      0x20\n        /* \"#utility.yul\":33376:33385   */\n      dup4\n        /* \"#utility.yul\":33372:33390   */\n      add\n        /* \"#utility.yul\":33363:33369   */\n      dup5\n        /* \"#utility.yul\":33319:33391   */\n      tag_302\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":33066:33398   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33404:33846   */\n    tag_255:\n        /* \"#utility.yul\":33553:33557   */\n      0x00\n        /* \"#utility.yul\":33591:33593   */\n      0x60\n        /* \"#utility.yul\":33580:33589   */\n      dup3\n        /* \"#utility.yul\":33576:33594   */\n      add\n        /* \"#utility.yul\":33568:33594   */\n      swap1\n      pop\n        /* \"#utility.yul\":33604:33675   */\n      tag_707\n        /* \"#utility.yul\":33672:33673   */\n      0x00\n        /* \"#utility.yul\":33661:33670   */\n      dup4\n        /* \"#utility.yul\":33657:33674   */\n      add\n        /* \"#utility.yul\":33648:33654   */\n      dup7\n        /* \"#utility.yul\":33604:33675   */\n      tag_313\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":33685:33757   */\n      tag_708\n        /* \"#utility.yul\":33753:33755   */\n      0x20\n        /* \"#utility.yul\":33742:33751   */\n      dup4\n        /* \"#utility.yul\":33738:33756   */\n      add\n        /* \"#utility.yul\":33729:33735   */\n      dup6\n        /* \"#utility.yul\":33685:33757   */\n      tag_313\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":33767:33839   */\n      tag_709\n        /* \"#utility.yul\":33835:33837   */\n      0x40\n        /* \"#utility.yul\":33824:33833   */\n      dup4\n        /* \"#utility.yul\":33820:33838   */\n      add\n        /* \"#utility.yul\":33811:33817   */\n      dup5\n        /* \"#utility.yul\":33767:33839   */\n      tag_302\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":33404:33846   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205d9af27273360c69383a4b916da5f67842ac34296b3a823290499473bdb2881f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3E DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xAEE9C872 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xAEE9C872 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xB807A3C4 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x3F6 JUMPI PUSH2 0x19F JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xA9012C89 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xA9590E8A EQ PUSH2 0x32E JUMPI PUSH2 0x19F JUMP JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0x2B0 JUMPI PUSH2 0x19F JUMP JUMPDEST DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x22C JUMPI PUSH2 0x19F JUMP JUMPDEST CALLDATASIZE PUSH2 0x19F JUMPI CALLVALUE PUSH1 0x35 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0xCD5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST PUSH2 0x104C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x1279 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0x12FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x426 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x33 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x476 JUMPI POP PUSH1 0x33 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x4EB JUMPI TIMESTAMP PUSH1 0x33 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xFA7410D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x36 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x5A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A0 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x620 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB4F1024 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x684 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST GT PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x36 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B4 JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x82B SWAP1 PUSH2 0x22D0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x865 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x86A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A5 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x8DF CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1602 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP4 PUSH1 0x40 MLOAD PUSH2 0x93D SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x94E PUSH2 0x1681 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x95D PUSH2 0x15B5 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D7 JUMPI DUP1 CALLVALUE EQ PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP1 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA47 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA10 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA46 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x168A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA93 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAF7 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB07 PUSH2 0x1681 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB14 PUSH2 0x170C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB5C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB8F JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB9D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC21 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xC2A DUP7 PUSH2 0x1733 JUMP JUMPDEST PUSH2 0xC32 PUSH2 0x1747 JUMP JUMPDEST DUP7 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xCCC JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xCC3 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCDD PUSH2 0x1759 JUMP JUMPDEST PUSH2 0xCE6 PUSH0 PUSH2 0x17E0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x33 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD4F SWAP1 PUSH2 0x24C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD7B SWAP1 PUSH2 0x24C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDC6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD9D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDC6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDA9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDDA PUSH2 0x18B1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5F SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE7A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE9E SWAP2 SWAP1 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0xEDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED4 SWAP1 PUSH2 0x259B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2A SWAP1 PUSH2 0x2629 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x33 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xFD3 SWAP2 SWAP1 PUSH2 0x27DB JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x100A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10E5 SWAP2 SWAP1 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0x1124 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111B SWAP1 PUSH2 0x259B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1189 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x36 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x126C SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1281 PUSH2 0x1759 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12F1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E8 SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12FA DUP2 PUSH2 0x17E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1305 PUSH2 0x1759 JUMP JUMPDEST PUSH2 0x130D PUSH2 0x15B5 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x134F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1346 SWAP1 PUSH2 0x29BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x13CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C6 SWAP1 PUSH2 0x2A26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x141B SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x150A JUMPI PUSH0 PUSH2 0x145E PUSH2 0xDD0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1481 SWAP1 PUSH2 0x22D0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x14BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1504 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FB SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x153D JUMP JUMPDEST PUSH2 0x153C PUSH2 0x1515 PUSH2 0xDD0 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1602 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x155C PUSH2 0xDD0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x15A1 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x15B1 PUSH2 0x1681 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x15F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F0 SWAP1 PUSH2 0x2A8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x167C DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1635 SWAP3 SWAP2 SWAP1 PUSH2 0x2AAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1706 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16BF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18D8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x173B PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1744 DUP2 PUSH2 0x19B3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x174F PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1757 PUSH2 0x1A37 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1761 PUSH2 0x1A48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x177F PUSH2 0xDD0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17DE JUMPI PUSH2 0x17A2 PUSH2 0x1A48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D5 SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x17E9 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x18F7 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1910 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x192B JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x196D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1964 SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x197B PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0x19B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x19BB PUSH2 0x1973 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A2B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A22 SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A34 DUP2 PUSH2 0x17E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A3F PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1A58 PUSH2 0x170C JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AAD DUP3 PUSH2 0x1A6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB8 DUP4 PUSH2 0x1A6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AD0 JUMPI PUSH2 0x1ACF PUSH2 0x1A76 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ADF DUP2 PUSH2 0x1A6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E436F6F6B69654A61723A20757365206465706F736974282900000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B42 PUSH1 0x19 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4D DUP3 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B6F DUP2 PUSH2 0x1B36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BB0 DUP3 PUSH2 0x1B87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC0 DUP2 PUSH2 0x1BA6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BCA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BDB DUP2 PUSH2 0x1BB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF6 JUMPI PUSH2 0x1BF5 PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C03 DUP5 DUP3 DUP6 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C15 DUP2 PUSH2 0x1BA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C2E PUSH0 DUP4 ADD DUP5 PUSH2 0x1C0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C3D DUP2 PUSH2 0x1A6D JUMP JUMPDEST DUP2 EQ PUSH2 0x1C47 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C58 DUP2 PUSH2 0x1C34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1C73 PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C81 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C92 DUP6 DUP3 DUP7 ADD PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB2 JUMPI PUSH2 0x1CB1 PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CBF DUP6 DUP3 DUP7 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CD0 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CFD PUSH2 0x1CF8 PUSH2 0x1CF3 DUP5 PUSH2 0x1B87 JUMP JUMPDEST PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1B87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0E DUP3 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D1F DUP3 PUSH2 0x1D04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D2F DUP2 PUSH2 0x1D15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D48 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6A DUP2 PUSH2 0x1D4E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA2 DUP3 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x1DAC DUP2 DUP6 PUSH2 0x1AFE JUMP JUMPDEST SWAP4 POP PUSH2 0x1DBC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D7A JUMP JUMPDEST PUSH2 0x1DC5 DUP2 PUSH2 0x1D88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DE3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D61 JUMP JUMPDEST PUSH2 0x1DF0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D61 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E02 DUP2 DUP5 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1E15 DUP2 PUSH2 0x1D4E JUMP JUMPDEST DUP2 EQ PUSH2 0x1E1F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E30 DUP2 PUSH2 0x1E0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E74 DUP3 PUSH2 0x1D88 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E93 JUMPI PUSH2 0x1E92 PUSH2 0x1E3E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA5 PUSH2 0x1B76 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EB1 DUP3 DUP3 PUSH2 0x1E6B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ED0 JUMPI PUSH2 0x1ECF PUSH2 0x1E3E JUMP JUMPDEST JUMPDEST PUSH2 0x1ED9 DUP3 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F06 PUSH2 0x1F01 DUP5 PUSH2 0x1EB6 JUMP JUMPDEST PUSH2 0x1E9C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F22 JUMPI PUSH2 0x1F21 PUSH2 0x1E3A JUMP JUMPDEST JUMPDEST PUSH2 0x1F2D DUP5 DUP3 DUP6 PUSH2 0x1EE6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F49 JUMPI PUSH2 0x1F48 PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F59 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F79 JUMPI PUSH2 0x1F78 PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F86 DUP7 DUP3 DUP8 ADD PUSH2 0x1E22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F97 DUP7 DUP3 DUP8 ADD PUSH2 0x1E22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x1B83 JUMP JUMPDEST JUMPDEST PUSH2 0x1FC4 DUP7 DUP3 DUP8 ADD PUSH2 0x1F35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FE5 JUMPI PUSH2 0x1FE4 PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FF2 DUP7 DUP3 DUP8 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2003 DUP7 DUP3 DUP8 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2014 DUP7 DUP3 DUP8 ADD PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH2 0x2038 PUSH2 0x2033 PUSH2 0x202E DUP5 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1A6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2048 DUP2 PUSH2 0x201E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2061 PUSH0 DUP4 ADD DUP7 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x206E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x207B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x203F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20B7 PUSH1 0x13 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x20C2 DUP3 PUSH2 0x2083 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20E4 DUP2 PUSH2 0x20AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x211F PUSH1 0x19 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x212A DUP3 PUSH2 0x20EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x214C DUP2 PUSH2 0x2113 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472757374000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2187 PUSH1 0x5 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2192 DUP3 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C0C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x21C1 DUP2 PUSH2 0x217B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21D7 DUP2 PUSH2 0x1C34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F2 JUMPI PUSH2 0x21F1 PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21FF DUP5 DUP3 DUP6 ADD PUSH2 0x21C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742054727573742073636F72650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x223C PUSH1 0x18 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2247 DUP3 PUSH2 0x2208 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2269 DUP2 PUSH2 0x2230 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x227A DUP3 PUSH2 0x1A6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2285 DUP4 PUSH2 0x1A6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x229D JUMPI PUSH2 0x229C PUSH2 0x1A76 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x22BB PUSH0 DUP4 PUSH2 0x22A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C6 DUP3 PUSH2 0x22AD JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22DA DUP3 PUSH2 0x22B0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2318 PUSH1 0x15 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2323 DUP3 PUSH2 0x22E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2345 DUP2 PUSH2 0x230C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420457468657220616D6F756E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2380 PUSH1 0x16 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x238B DUP3 PUSH2 0x234C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23AD DUP2 PUSH2 0x2374 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x240E PUSH1 0x28 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2419 DUP3 PUSH2 0x23B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x243B DUP2 PUSH2 0x2402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2465 PUSH2 0x2460 PUSH2 0x245B DUP5 PUSH2 0x2442 JUMP JUMPDEST PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1D4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2475 DUP2 PUSH2 0x244B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248E PUSH0 DUP4 ADD DUP5 PUSH2 0x246C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24D8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24EB JUMPI PUSH2 0x24EA PUSH2 0x2494 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2505 DUP2 PUSH2 0x24F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x250F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2520 DUP2 PUSH2 0x24FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x253B JUMPI PUSH2 0x253A PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2548 DUP5 DUP3 DUP6 ADD PUSH2 0x2512 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2585 PUSH1 0x16 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2590 DUP3 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25B2 DUP2 PUSH2 0x2579 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2613 PUSH1 0x22 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x261E DUP3 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2640 DUP2 PUSH2 0x2607 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x26A3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2668 JUMP JUMPDEST PUSH2 0x26AD DUP7 DUP4 PUSH2 0x2668 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26DF PUSH2 0x26DA PUSH2 0x26D5 DUP5 PUSH2 0x1A6D JUMP JUMPDEST PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1A6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F8 DUP4 PUSH2 0x26C5 JUMP JUMPDEST PUSH2 0x270C PUSH2 0x2704 DUP3 PUSH2 0x26E6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2674 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2720 PUSH2 0x2714 JUMP JUMPDEST PUSH2 0x272B DUP2 DUP5 DUP5 PUSH2 0x26EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x274E JUMPI PUSH2 0x2743 PUSH0 DUP3 PUSH2 0x2718 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2731 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2793 JUMPI PUSH2 0x2764 DUP2 PUSH2 0x2647 JUMP JUMPDEST PUSH2 0x276D DUP5 PUSH2 0x2659 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x277C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2790 PUSH2 0x2788 DUP6 PUSH2 0x2659 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2730 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27B3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2798 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27CB DUP4 DUP4 PUSH2 0x27A4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E4 DUP3 PUSH2 0x1D70 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27FD JUMPI PUSH2 0x27FC PUSH2 0x1E3E JUMP JUMPDEST JUMPDEST PUSH2 0x2807 DUP3 SLOAD PUSH2 0x24C1 JUMP JUMPDEST PUSH2 0x2812 DUP3 DUP3 DUP6 PUSH2 0x2752 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2843 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2831 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x283B DUP6 DUP3 PUSH2 0x27C0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28A2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2851 DUP7 PUSH2 0x2647 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2878 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2853 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2895 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2891 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27A4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28BD PUSH0 DUP4 ADD DUP7 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x28CA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x203F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x28DC DUP2 DUP5 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F20616464726573732075736572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x291A PUSH1 0x11 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2925 DUP3 PUSH2 0x28E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2947 DUP2 PUSH2 0x290E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29A8 PUSH1 0x2B DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x29B3 DUP3 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29D5 DUP2 PUSH2 0x299C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A10 PUSH1 0x12 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2A1B DUP3 PUSH2 0x29DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A3D DUP2 PUSH2 0x2A04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A78 PUSH1 0x1F DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2A83 DUP3 PUSH2 0x2A44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AA5 DUP2 PUSH2 0x2A6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2ABF PUSH0 DUP4 ADD DUP6 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x2ACC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AD6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2AE6 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x2AF3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x2B00 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AD6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE SWAP11 CALLCODE PUSH19 0x73360C69383A4B916DA5F67842AC34296B3A82 ORIGIN SWAP1 BLOBHASH SWAP5 PUSH20 0xBDB2881F64736F6C634300081A00330000000000 ",
							"sourceMap": "454:5722:13:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NATIVE_TOKEN_1495": {
									"entryPoint": 2385,
									"id": 1495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1944": {
									"entryPoint": null,
									"id": 1944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1952": {
									"entryPoint": null,
									"id": 1952,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 5939,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 6579,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_472": {
									"entryPoint": 5959,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_482": {
									"entryPoint": 6711,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1116": {
									"entryPoint": 6360,
									"id": 1116,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 6515,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 5977,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 5900,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 6321,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 6735,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_561": {
									"entryPoint": 6728,
									"id": 561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_516": {
									"entryPoint": 5761,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_508": {
									"entryPoint": 5557,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 6112,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowedAmounts_1518": {
									"entryPoint": 4119,
									"id": 1518,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_1781": {
									"entryPoint": 1054,
									"id": 1781,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentRound_1508": {
									"entryPoint": 3341,
									"id": 1508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1661": {
									"entryPoint": 2389,
									"id": 1661,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@initialize_1603": {
									"entryPoint": 2827,
									"id": 1603,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 3536,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 3285,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_821": {
									"entryPoint": 5770,
									"id": 821,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_794": {
									"entryPoint": 5634,
									"id": 794,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@scorer_1498": {
									"entryPoint": 3304,
									"id": 1498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAllowedAmount_1818": {
									"entryPoint": 4172,
									"id": 1818,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setRound_1852": {
									"entryPoint": 3589,
									"id": 1852,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@totalBalances_1512": {
									"entryPoint": 4151,
									"id": 1512,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 4729,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1924": {
									"entryPoint": 4861,
									"id": 1924,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 7924,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64": {
									"entryPoint": 7714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64t_uint64t_string_memory_ptr": {
									"entryPoint": 8034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack": {
									"entryPoint": 7462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 9324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint256_fromStack": {
									"entryPoint": 8255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 7521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10963,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b__to_t_address_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10924,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IScorer_$1472__to_t_address__fromStack_reversed": {
									"entryPoint": 7477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 9339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint64_t_uint64__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8270,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10410,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint64_t_uint64_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7632,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7030,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10066,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 9282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IScorer_$1472_to_t_address": {
									"entryPoint": 7445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 9291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint64_to_t_uint256": {
									"entryPoint": 8222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7910,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7546,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6774,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9364,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7742,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7738,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7043,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7039,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf": {
									"entryPoint": 8323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f": {
									"entryPoint": 9657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be": {
									"entryPoint": 8932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 10716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6": {
									"entryPoint": 6926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375": {
									"entryPoint": 9036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5": {
									"entryPoint": 8712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d": {
									"entryPoint": 8427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226": {
									"entryPoint": 9553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 8877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d": {
									"entryPoint": 10470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71": {
									"entryPoint": 9140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76": {
									"entryPoint": 10574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 10820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9844,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9967,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 7692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10004,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:33849:14",
										"nodeType": "YulBlock",
										"src": "0:33849:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:14",
													"nodeType": "YulBlock",
													"src": "52:32:14",
													"statements": [
														{
															"nativeSrc": "62:16:14",
															"nodeType": "YulAssignment",
															"src": "62:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:14",
																"nodeType": "YulIdentifier",
																"src": "73:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:14",
														"nodeType": "YulTypedName",
														"src": "34:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:14",
														"nodeType": "YulTypedName",
														"src": "44:7:14",
														"type": ""
													}
												],
												"src": "7:77:14"
											},
											{
												"body": {
													"nativeSrc": "118:152:14",
													"nodeType": "YulBlock",
													"src": "118:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "135:1:14",
																		"nodeType": "YulLiteral",
																		"src": "135:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "138:77:14",
																		"nodeType": "YulLiteral",
																		"src": "138:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "128:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:14"
																},
																"nativeSrc": "128:88:14",
																"nodeType": "YulFunctionCall",
																"src": "128:88:14"
															},
															"nativeSrc": "128:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "128:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "232:1:14",
																		"nodeType": "YulLiteral",
																		"src": "232:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "235:4:14",
																		"nodeType": "YulLiteral",
																		"src": "235:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "225:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:14"
																},
																"nativeSrc": "225:15:14",
																"nodeType": "YulFunctionCall",
																"src": "225:15:14"
															},
															"nativeSrc": "225:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "225:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:14",
																		"nodeType": "YulLiteral",
																		"src": "256:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "259:4:14",
																		"nodeType": "YulLiteral",
																		"src": "259:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "249:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:14"
																},
																"nativeSrc": "249:15:14",
																"nodeType": "YulFunctionCall",
																"src": "249:15:14"
															},
															"nativeSrc": "249:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "249:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "90:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:14"
											},
											{
												"body": {
													"nativeSrc": "320:147:14",
													"nodeType": "YulBlock",
													"src": "320:147:14",
													"statements": [
														{
															"nativeSrc": "330:25:14",
															"nodeType": "YulAssignment",
															"src": "330:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "353:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "335:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:14"
																},
																"nativeSrc": "335:20:14",
																"nodeType": "YulFunctionCall",
																"src": "335:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "330:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:14"
																}
															]
														},
														{
															"nativeSrc": "364:25:14",
															"nodeType": "YulAssignment",
															"src": "364:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "387:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "369:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:14"
																},
																"nativeSrc": "369:20:14",
																"nodeType": "YulFunctionCall",
																"src": "369:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "364:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:14"
																}
															]
														},
														{
															"nativeSrc": "398:16:14",
															"nodeType": "YulAssignment",
															"src": "398:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "409:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "412:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "405:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:14"
																},
																"nativeSrc": "405:9:14",
																"nodeType": "YulFunctionCall",
																"src": "405:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "398:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "438:22:14",
																"nodeType": "YulBlock",
																"src": "438:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "440:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:14"
																			},
																			"nativeSrc": "440:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:14"
																		},
																		"nativeSrc": "440:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "430:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "433:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "427:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:14"
																},
																"nativeSrc": "427:10:14",
																"nodeType": "YulFunctionCall",
																"src": "427:10:14"
															},
															"nativeSrc": "424:36:14",
															"nodeType": "YulIf",
															"src": "424:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "276:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "307:1:14",
														"nodeType": "YulTypedName",
														"src": "307:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "310:1:14",
														"nodeType": "YulTypedName",
														"src": "310:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "316:3:14",
														"nodeType": "YulTypedName",
														"src": "316:3:14",
														"type": ""
													}
												],
												"src": "276:191:14"
											},
											{
												"body": {
													"nativeSrc": "538:53:14",
													"nodeType": "YulBlock",
													"src": "538:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "555:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "578:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "578:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "560:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "560:17:14"
																		},
																		"nativeSrc": "560:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "560:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "548:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:14"
																},
																"nativeSrc": "548:37:14",
																"nodeType": "YulFunctionCall",
																"src": "548:37:14"
															},
															"nativeSrc": "548:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "548:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "473:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "526:5:14",
														"nodeType": "YulTypedName",
														"src": "526:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "533:3:14",
														"nodeType": "YulTypedName",
														"src": "533:3:14",
														"type": ""
													}
												],
												"src": "473:118:14"
											},
											{
												"body": {
													"nativeSrc": "695:124:14",
													"nodeType": "YulBlock",
													"src": "695:124:14",
													"statements": [
														{
															"nativeSrc": "705:26:14",
															"nodeType": "YulAssignment",
															"src": "705:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "717:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "717:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "728:2:14",
																		"nodeType": "YulLiteral",
																		"src": "728:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "713:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "713:3:14"
																},
																"nativeSrc": "713:18:14",
																"nodeType": "YulFunctionCall",
																"src": "713:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "705:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "705:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "785:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "798:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "798:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "809:1:14",
																				"nodeType": "YulLiteral",
																				"src": "809:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:14"
																		},
																		"nativeSrc": "794:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "794:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "741:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "741:43:14"
																},
																"nativeSrc": "741:71:14",
																"nodeType": "YulFunctionCall",
																"src": "741:71:14"
															},
															"nativeSrc": "741:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "741:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "597:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "667:9:14",
														"nodeType": "YulTypedName",
														"src": "667:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "679:6:14",
														"nodeType": "YulTypedName",
														"src": "679:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "690:4:14",
														"nodeType": "YulTypedName",
														"src": "690:4:14",
														"type": ""
													}
												],
												"src": "597:222:14"
											},
											{
												"body": {
													"nativeSrc": "921:73:14",
													"nodeType": "YulBlock",
													"src": "921:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "938:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "943:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "931:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "931:6:14"
																},
																"nativeSrc": "931:19:14",
																"nodeType": "YulFunctionCall",
																"src": "931:19:14"
															},
															"nativeSrc": "931:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "931:19:14"
														},
														{
															"nativeSrc": "959:29:14",
															"nodeType": "YulAssignment",
															"src": "959:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "978:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "978:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "983:4:14",
																		"nodeType": "YulLiteral",
																		"src": "983:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "974:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:14"
																},
																"nativeSrc": "974:14:14",
																"nodeType": "YulFunctionCall",
																"src": "974:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "959:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "959:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "825:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "893:3:14",
														"nodeType": "YulTypedName",
														"src": "893:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "898:6:14",
														"nodeType": "YulTypedName",
														"src": "898:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "909:11:14",
														"nodeType": "YulTypedName",
														"src": "909:11:14",
														"type": ""
													}
												],
												"src": "825:169:14"
											},
											{
												"body": {
													"nativeSrc": "1106:69:14",
													"nodeType": "YulBlock",
													"src": "1106:69:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1128:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1128:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1136:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1136:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1124:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:14"
																		},
																		"nativeSrc": "1124:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1124:14:14"
																	},
																	{
																		"hexValue": "6e436f6f6b69654a61723a20757365206465706f7369742829",
																		"kind": "string",
																		"nativeSrc": "1140:27:14",
																		"nodeType": "YulLiteral",
																		"src": "1140:27:14",
																		"type": "",
																		"value": "nCookieJar: use deposit()"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1117:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:14"
																},
																"nativeSrc": "1117:51:14",
																"nodeType": "YulFunctionCall",
																"src": "1117:51:14"
															},
															"nativeSrc": "1117:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "1117:51:14"
														}
													]
												},
												"name": "store_literal_in_memory_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6",
												"nativeSrc": "1000:175:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1098:6:14",
														"nodeType": "YulTypedName",
														"src": "1098:6:14",
														"type": ""
													}
												],
												"src": "1000:175:14"
											},
											{
												"body": {
													"nativeSrc": "1327:220:14",
													"nodeType": "YulBlock",
													"src": "1327:220:14",
													"statements": [
														{
															"nativeSrc": "1337:74:14",
															"nodeType": "YulAssignment",
															"src": "1337:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1403:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1403:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1408:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1408:2:14",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1344:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "1344:58:14"
																},
																"nativeSrc": "1344:67:14",
																"nodeType": "YulFunctionCall",
																"src": "1344:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1337:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1337:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1509:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1509:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6",
																	"nativeSrc": "1420:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "1420:88:14"
																},
																"nativeSrc": "1420:93:14",
																"nodeType": "YulFunctionCall",
																"src": "1420:93:14"
															},
															"nativeSrc": "1420:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "1420:93:14"
														},
														{
															"nativeSrc": "1522:19:14",
															"nodeType": "YulAssignment",
															"src": "1522:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1533:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1533:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1538:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1538:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1529:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1529:3:14"
																},
																"nativeSrc": "1529:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1522:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1522:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1181:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1315:3:14",
														"nodeType": "YulTypedName",
														"src": "1315:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1323:3:14",
														"nodeType": "YulTypedName",
														"src": "1323:3:14",
														"type": ""
													}
												],
												"src": "1181:366:14"
											},
											{
												"body": {
													"nativeSrc": "1724:248:14",
													"nodeType": "YulBlock",
													"src": "1724:248:14",
													"statements": [
														{
															"nativeSrc": "1734:26:14",
															"nodeType": "YulAssignment",
															"src": "1734:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1746:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1746:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1757:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1757:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1742:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:14"
																},
																"nativeSrc": "1742:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1742:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1734:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1734:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1781:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1781:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1792:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1792:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1777:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1777:3:14"
																		},
																		"nativeSrc": "1777:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1777:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1800:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1800:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1806:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1806:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1796:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1796:3:14"
																		},
																		"nativeSrc": "1796:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1796:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1770:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1770:6:14"
																},
																"nativeSrc": "1770:47:14",
																"nodeType": "YulFunctionCall",
																"src": "1770:47:14"
															},
															"nativeSrc": "1770:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "1770:47:14"
														},
														{
															"nativeSrc": "1826:139:14",
															"nodeType": "YulAssignment",
															"src": "1826:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1960:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1960:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1834:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "1834:124:14"
																},
																"nativeSrc": "1834:131:14",
																"nodeType": "YulFunctionCall",
																"src": "1834:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1826:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1826:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1553:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1704:9:14",
														"nodeType": "YulTypedName",
														"src": "1704:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1719:4:14",
														"nodeType": "YulTypedName",
														"src": "1719:4:14",
														"type": ""
													}
												],
												"src": "1553:419:14"
											},
											{
												"body": {
													"nativeSrc": "2018:35:14",
													"nodeType": "YulBlock",
													"src": "2018:35:14",
													"statements": [
														{
															"nativeSrc": "2028:19:14",
															"nodeType": "YulAssignment",
															"src": "2028:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2044:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2044:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2038:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2038:5:14"
																},
																"nativeSrc": "2038:9:14",
																"nodeType": "YulFunctionCall",
																"src": "2038:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2028:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1978:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2011:6:14",
														"nodeType": "YulTypedName",
														"src": "2011:6:14",
														"type": ""
													}
												],
												"src": "1978:75:14"
											},
											{
												"body": {
													"nativeSrc": "2148:28:14",
													"nodeType": "YulBlock",
													"src": "2148:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2165:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2165:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2168:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2168:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2158:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:14"
																},
																"nativeSrc": "2158:12:14",
																"nodeType": "YulFunctionCall",
																"src": "2158:12:14"
															},
															"nativeSrc": "2158:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "2158:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2059:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2059:117:14"
											},
											{
												"body": {
													"nativeSrc": "2271:28:14",
													"nodeType": "YulBlock",
													"src": "2271:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2288:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2288:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2291:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2291:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2281:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2281:6:14"
																},
																"nativeSrc": "2281:12:14",
																"nodeType": "YulFunctionCall",
																"src": "2281:12:14"
															},
															"nativeSrc": "2281:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "2281:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2182:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2182:117:14"
											},
											{
												"body": {
													"nativeSrc": "2350:81:14",
													"nodeType": "YulBlock",
													"src": "2350:81:14",
													"statements": [
														{
															"nativeSrc": "2360:65:14",
															"nodeType": "YulAssignment",
															"src": "2360:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2375:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2375:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2382:42:14",
																		"nodeType": "YulLiteral",
																		"src": "2382:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2371:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2371:3:14"
																},
																"nativeSrc": "2371:54:14",
																"nodeType": "YulFunctionCall",
																"src": "2371:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2360:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2360:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2305:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2332:5:14",
														"nodeType": "YulTypedName",
														"src": "2332:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2342:7:14",
														"nodeType": "YulTypedName",
														"src": "2342:7:14",
														"type": ""
													}
												],
												"src": "2305:126:14"
											},
											{
												"body": {
													"nativeSrc": "2482:51:14",
													"nodeType": "YulBlock",
													"src": "2482:51:14",
													"statements": [
														{
															"nativeSrc": "2492:35:14",
															"nodeType": "YulAssignment",
															"src": "2492:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2503:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "2503:17:14"
																},
																"nativeSrc": "2503:24:14",
																"nodeType": "YulFunctionCall",
																"src": "2503:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2492:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2492:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2437:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2464:5:14",
														"nodeType": "YulTypedName",
														"src": "2464:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2474:7:14",
														"nodeType": "YulTypedName",
														"src": "2474:7:14",
														"type": ""
													}
												],
												"src": "2437:96:14"
											},
											{
												"body": {
													"nativeSrc": "2582:79:14",
													"nodeType": "YulBlock",
													"src": "2582:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2639:16:14",
																"nodeType": "YulBlock",
																"src": "2639:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2648:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2648:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2651:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2651:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2641:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2641:6:14"
																			},
																			"nativeSrc": "2641:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2641:12:14"
																		},
																		"nativeSrc": "2641:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2641:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2605:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2605:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2630:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2630:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2612:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2612:17:14"
																				},
																				"nativeSrc": "2612:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2612:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2602:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2602:2:14"
																		},
																		"nativeSrc": "2602:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2602:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2595:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2595:6:14"
																},
																"nativeSrc": "2595:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2595:43:14"
															},
															"nativeSrc": "2592:63:14",
															"nodeType": "YulIf",
															"src": "2592:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2539:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2575:5:14",
														"nodeType": "YulTypedName",
														"src": "2575:5:14",
														"type": ""
													}
												],
												"src": "2539:122:14"
											},
											{
												"body": {
													"nativeSrc": "2719:87:14",
													"nodeType": "YulBlock",
													"src": "2719:87:14",
													"statements": [
														{
															"nativeSrc": "2729:29:14",
															"nodeType": "YulAssignment",
															"src": "2729:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2751:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2751:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2738:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2738:12:14"
																},
																"nativeSrc": "2738:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2738:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2729:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2729:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2794:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2794:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2767:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2767:26:14"
																},
																"nativeSrc": "2767:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2767:33:14"
															},
															"nativeSrc": "2767:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2767:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2667:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2697:6:14",
														"nodeType": "YulTypedName",
														"src": "2697:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2705:3:14",
														"nodeType": "YulTypedName",
														"src": "2705:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2713:5:14",
														"nodeType": "YulTypedName",
														"src": "2713:5:14",
														"type": ""
													}
												],
												"src": "2667:139:14"
											},
											{
												"body": {
													"nativeSrc": "2878:263:14",
													"nodeType": "YulBlock",
													"src": "2878:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2924:83:14",
																"nodeType": "YulBlock",
																"src": "2924:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2926:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2926:77:14"
																			},
																			"nativeSrc": "2926:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2926:79:14"
																		},
																		"nativeSrc": "2926:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2926:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2899:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2899:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2908:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2908:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2895:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2895:3:14"
																		},
																		"nativeSrc": "2895:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2895:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2920:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2920:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2891:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2891:3:14"
																},
																"nativeSrc": "2891:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2891:32:14"
															},
															"nativeSrc": "2888:119:14",
															"nodeType": "YulIf",
															"src": "2888:119:14"
														},
														{
															"nativeSrc": "3017:117:14",
															"nodeType": "YulBlock",
															"src": "3017:117:14",
															"statements": [
																{
																	"nativeSrc": "3032:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3032:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3046:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3046:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3036:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3036:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3061:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3061:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3096:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3096:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3107:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3107:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3092:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3092:3:14"
																				},
																				"nativeSrc": "3092:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3092:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3116:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3116:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3071:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3071:20:14"
																		},
																		"nativeSrc": "3071:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3071:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3061:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3061:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2812:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2848:9:14",
														"nodeType": "YulTypedName",
														"src": "2848:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2859:7:14",
														"nodeType": "YulTypedName",
														"src": "2859:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2871:6:14",
														"nodeType": "YulTypedName",
														"src": "2871:6:14",
														"type": ""
													}
												],
												"src": "2812:329:14"
											},
											{
												"body": {
													"nativeSrc": "3212:53:14",
													"nodeType": "YulBlock",
													"src": "3212:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3229:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3229:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3252:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3252:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3234:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3234:17:14"
																		},
																		"nativeSrc": "3234:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3234:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3222:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3222:6:14"
																},
																"nativeSrc": "3222:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3222:37:14"
															},
															"nativeSrc": "3222:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3222:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3147:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3200:5:14",
														"nodeType": "YulTypedName",
														"src": "3200:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3207:3:14",
														"nodeType": "YulTypedName",
														"src": "3207:3:14",
														"type": ""
													}
												],
												"src": "3147:118:14"
											},
											{
												"body": {
													"nativeSrc": "3369:124:14",
													"nodeType": "YulBlock",
													"src": "3369:124:14",
													"statements": [
														{
															"nativeSrc": "3379:26:14",
															"nodeType": "YulAssignment",
															"src": "3379:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3391:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3391:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3402:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3402:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3387:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3387:3:14"
																},
																"nativeSrc": "3387:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3387:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3379:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3379:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3459:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3459:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3472:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3472:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3483:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3483:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3468:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3468:3:14"
																		},
																		"nativeSrc": "3468:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3415:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "3415:43:14"
																},
																"nativeSrc": "3415:71:14",
																"nodeType": "YulFunctionCall",
																"src": "3415:71:14"
															},
															"nativeSrc": "3415:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "3415:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3271:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3341:9:14",
														"nodeType": "YulTypedName",
														"src": "3341:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3353:6:14",
														"nodeType": "YulTypedName",
														"src": "3353:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3364:4:14",
														"nodeType": "YulTypedName",
														"src": "3364:4:14",
														"type": ""
													}
												],
												"src": "3271:222:14"
											},
											{
												"body": {
													"nativeSrc": "3542:79:14",
													"nodeType": "YulBlock",
													"src": "3542:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3599:16:14",
																"nodeType": "YulBlock",
																"src": "3599:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3608:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3608:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3611:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3611:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3601:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3601:6:14"
																			},
																			"nativeSrc": "3601:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3601:12:14"
																		},
																		"nativeSrc": "3601:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3601:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3565:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3565:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3590:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3590:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3572:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "3572:17:14"
																				},
																				"nativeSrc": "3572:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3572:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3562:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3562:2:14"
																		},
																		"nativeSrc": "3562:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3562:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3555:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3555:6:14"
																},
																"nativeSrc": "3555:43:14",
																"nodeType": "YulFunctionCall",
																"src": "3555:43:14"
															},
															"nativeSrc": "3552:63:14",
															"nodeType": "YulIf",
															"src": "3552:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3499:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3535:5:14",
														"nodeType": "YulTypedName",
														"src": "3535:5:14",
														"type": ""
													}
												],
												"src": "3499:122:14"
											},
											{
												"body": {
													"nativeSrc": "3679:87:14",
													"nodeType": "YulBlock",
													"src": "3679:87:14",
													"statements": [
														{
															"nativeSrc": "3689:29:14",
															"nodeType": "YulAssignment",
															"src": "3689:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3711:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3711:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3698:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3698:12:14"
																},
																"nativeSrc": "3698:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3698:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3689:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3689:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3754:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3754:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3727:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "3727:26:14"
																},
																"nativeSrc": "3727:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3727:33:14"
															},
															"nativeSrc": "3727:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "3727:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3627:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3657:6:14",
														"nodeType": "YulTypedName",
														"src": "3657:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3665:3:14",
														"nodeType": "YulTypedName",
														"src": "3665:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3673:5:14",
														"nodeType": "YulTypedName",
														"src": "3673:5:14",
														"type": ""
													}
												],
												"src": "3627:139:14"
											},
											{
												"body": {
													"nativeSrc": "3855:391:14",
													"nodeType": "YulBlock",
													"src": "3855:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3901:83:14",
																"nodeType": "YulBlock",
																"src": "3901:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3903:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3903:77:14"
																			},
																			"nativeSrc": "3903:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3903:79:14"
																		},
																		"nativeSrc": "3903:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3903:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3876:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3876:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3885:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3885:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3872:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3872:3:14"
																		},
																		"nativeSrc": "3872:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3897:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3897:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3868:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3868:3:14"
																},
																"nativeSrc": "3868:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3868:32:14"
															},
															"nativeSrc": "3865:119:14",
															"nodeType": "YulIf",
															"src": "3865:119:14"
														},
														{
															"nativeSrc": "3994:117:14",
															"nodeType": "YulBlock",
															"src": "3994:117:14",
															"statements": [
																{
																	"nativeSrc": "4009:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4009:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4023:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4023:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4013:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4013:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4038:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4038:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4073:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4073:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4084:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4084:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4069:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4069:3:14"
																				},
																				"nativeSrc": "4069:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4069:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4093:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4093:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4048:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4048:20:14"
																		},
																		"nativeSrc": "4048:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4048:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4038:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4038:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4121:118:14",
															"nodeType": "YulBlock",
															"src": "4121:118:14",
															"statements": [
																{
																	"nativeSrc": "4136:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4136:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4150:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4150:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4140:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4140:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4166:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4166:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4201:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4201:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4212:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4212:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4197:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4197:3:14"
																				},
																				"nativeSrc": "4197:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4197:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4221:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4221:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4176:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4176:20:14"
																		},
																		"nativeSrc": "4176:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4176:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4166:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4166:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3772:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3817:9:14",
														"nodeType": "YulTypedName",
														"src": "3817:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3828:7:14",
														"nodeType": "YulTypedName",
														"src": "3828:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3840:6:14",
														"nodeType": "YulTypedName",
														"src": "3840:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3848:6:14",
														"nodeType": "YulTypedName",
														"src": "3848:6:14",
														"type": ""
													}
												],
												"src": "3772:474:14"
											},
											{
												"body": {
													"nativeSrc": "4335:391:14",
													"nodeType": "YulBlock",
													"src": "4335:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4381:83:14",
																"nodeType": "YulBlock",
																"src": "4381:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4383:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4383:77:14"
																			},
																			"nativeSrc": "4383:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4383:79:14"
																		},
																		"nativeSrc": "4383:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4383:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4356:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4356:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4365:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4352:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4352:3:14"
																		},
																		"nativeSrc": "4352:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4352:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4377:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4377:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4348:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4348:3:14"
																},
																"nativeSrc": "4348:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4348:32:14"
															},
															"nativeSrc": "4345:119:14",
															"nodeType": "YulIf",
															"src": "4345:119:14"
														},
														{
															"nativeSrc": "4474:117:14",
															"nodeType": "YulBlock",
															"src": "4474:117:14",
															"statements": [
																{
																	"nativeSrc": "4489:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4489:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4503:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4503:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4493:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4493:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4518:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4518:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4553:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4553:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4564:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4564:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4549:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4549:3:14"
																				},
																				"nativeSrc": "4549:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4549:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4573:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4573:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4528:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4528:20:14"
																		},
																		"nativeSrc": "4528:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4528:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4518:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4518:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4601:118:14",
															"nodeType": "YulBlock",
															"src": "4601:118:14",
															"statements": [
																{
																	"nativeSrc": "4616:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4616:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4630:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4630:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4620:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4620:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4646:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4646:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4681:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4681:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4692:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4692:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4677:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4677:3:14"
																				},
																				"nativeSrc": "4677:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4677:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4701:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4701:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4656:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4656:20:14"
																		},
																		"nativeSrc": "4656:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4656:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4646:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4646:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4252:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4297:9:14",
														"nodeType": "YulTypedName",
														"src": "4297:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4308:7:14",
														"nodeType": "YulTypedName",
														"src": "4308:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4320:6:14",
														"nodeType": "YulTypedName",
														"src": "4320:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4328:6:14",
														"nodeType": "YulTypedName",
														"src": "4328:6:14",
														"type": ""
													}
												],
												"src": "4252:474:14"
											},
											{
												"body": {
													"nativeSrc": "4764:28:14",
													"nodeType": "YulBlock",
													"src": "4764:28:14",
													"statements": [
														{
															"nativeSrc": "4774:12:14",
															"nodeType": "YulAssignment",
															"src": "4774:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "4781:5:14",
																"nodeType": "YulIdentifier",
																"src": "4781:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4774:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4774:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4732:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4750:5:14",
														"nodeType": "YulTypedName",
														"src": "4750:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4760:3:14",
														"nodeType": "YulTypedName",
														"src": "4760:3:14",
														"type": ""
													}
												],
												"src": "4732:60:14"
											},
											{
												"body": {
													"nativeSrc": "4858:82:14",
													"nodeType": "YulBlock",
													"src": "4858:82:14",
													"statements": [
														{
															"nativeSrc": "4868:66:14",
															"nodeType": "YulAssignment",
															"src": "4868:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4926:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4926:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4908:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "4908:17:14"
																				},
																				"nativeSrc": "4908:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4908:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4899:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "4899:8:14"
																		},
																		"nativeSrc": "4899:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4899:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4881:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "4881:17:14"
																},
																"nativeSrc": "4881:53:14",
																"nodeType": "YulFunctionCall",
																"src": "4881:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4868:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4868:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4798:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4838:5:14",
														"nodeType": "YulTypedName",
														"src": "4838:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4848:9:14",
														"nodeType": "YulTypedName",
														"src": "4848:9:14",
														"type": ""
													}
												],
												"src": "4798:142:14"
											},
											{
												"body": {
													"nativeSrc": "5006:66:14",
													"nodeType": "YulBlock",
													"src": "5006:66:14",
													"statements": [
														{
															"nativeSrc": "5016:50:14",
															"nodeType": "YulAssignment",
															"src": "5016:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5060:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5060:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5029:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5029:30:14"
																},
																"nativeSrc": "5029:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5029:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5016:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5016:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4946:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4986:5:14",
														"nodeType": "YulTypedName",
														"src": "4986:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4996:9:14",
														"nodeType": "YulTypedName",
														"src": "4996:9:14",
														"type": ""
													}
												],
												"src": "4946:126:14"
											},
											{
												"body": {
													"nativeSrc": "5154:66:14",
													"nodeType": "YulBlock",
													"src": "5154:66:14",
													"statements": [
														{
															"nativeSrc": "5164:50:14",
															"nodeType": "YulAssignment",
															"src": "5164:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5208:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5208:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5177:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5177:30:14"
																},
																"nativeSrc": "5177:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5177:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5164:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5164:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IScorer_$1472_to_t_address",
												"nativeSrc": "5078:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:14",
														"nodeType": "YulTypedName",
														"src": "5134:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5144:9:14",
														"nodeType": "YulTypedName",
														"src": "5144:9:14",
														"type": ""
													}
												],
												"src": "5078:142:14"
											},
											{
												"body": {
													"nativeSrc": "5307:82:14",
													"nodeType": "YulBlock",
													"src": "5307:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5324:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5324:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5376:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5376:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IScorer_$1472_to_t_address",
																			"nativeSrc": "5329:46:14",
																			"nodeType": "YulIdentifier",
																			"src": "5329:46:14"
																		},
																		"nativeSrc": "5329:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5329:53:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5317:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5317:6:14"
																},
																"nativeSrc": "5317:66:14",
																"nodeType": "YulFunctionCall",
																"src": "5317:66:14"
															},
															"nativeSrc": "5317:66:14",
															"nodeType": "YulExpressionStatement",
															"src": "5317:66:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack",
												"nativeSrc": "5226:163:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5295:5:14",
														"nodeType": "YulTypedName",
														"src": "5295:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5302:3:14",
														"nodeType": "YulTypedName",
														"src": "5302:3:14",
														"type": ""
													}
												],
												"src": "5226:163:14"
											},
											{
												"body": {
													"nativeSrc": "5509:140:14",
													"nodeType": "YulBlock",
													"src": "5509:140:14",
													"statements": [
														{
															"nativeSrc": "5519:26:14",
															"nodeType": "YulAssignment",
															"src": "5519:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5531:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5531:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5542:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5542:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5527:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5527:3:14"
																},
																"nativeSrc": "5527:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5527:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5519:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5519:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5615:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5615:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5628:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5628:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5639:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5639:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5624:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5624:3:14"
																		},
																		"nativeSrc": "5624:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5624:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack",
																	"nativeSrc": "5555:59:14",
																	"nodeType": "YulIdentifier",
																	"src": "5555:59:14"
																},
																"nativeSrc": "5555:87:14",
																"nodeType": "YulFunctionCall",
																"src": "5555:87:14"
															},
															"nativeSrc": "5555:87:14",
															"nodeType": "YulExpressionStatement",
															"src": "5555:87:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IScorer_$1472__to_t_address__fromStack_reversed",
												"nativeSrc": "5395:254:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5481:9:14",
														"nodeType": "YulTypedName",
														"src": "5481:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5493:6:14",
														"nodeType": "YulTypedName",
														"src": "5493:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5504:4:14",
														"nodeType": "YulTypedName",
														"src": "5504:4:14",
														"type": ""
													}
												],
												"src": "5395:254:14"
											},
											{
												"body": {
													"nativeSrc": "5699:57:14",
													"nodeType": "YulBlock",
													"src": "5699:57:14",
													"statements": [
														{
															"nativeSrc": "5709:41:14",
															"nodeType": "YulAssignment",
															"src": "5709:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5724:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5724:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5731:18:14",
																		"nodeType": "YulLiteral",
																		"src": "5731:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5720:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5720:3:14"
																},
																"nativeSrc": "5720:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5720:30:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5709:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5709:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "5655:101:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5681:5:14",
														"nodeType": "YulTypedName",
														"src": "5681:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5691:7:14",
														"nodeType": "YulTypedName",
														"src": "5691:7:14",
														"type": ""
													}
												],
												"src": "5655:101:14"
											},
											{
												"body": {
													"nativeSrc": "5825:52:14",
													"nodeType": "YulBlock",
													"src": "5825:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5842:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5842:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5864:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5864:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "5847:16:14",
																			"nodeType": "YulIdentifier",
																			"src": "5847:16:14"
																		},
																		"nativeSrc": "5847:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5847:23:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5835:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5835:6:14"
																},
																"nativeSrc": "5835:36:14",
																"nodeType": "YulFunctionCall",
																"src": "5835:36:14"
															},
															"nativeSrc": "5835:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "5835:36:14"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "5762:115:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5813:5:14",
														"nodeType": "YulTypedName",
														"src": "5813:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5820:3:14",
														"nodeType": "YulTypedName",
														"src": "5820:3:14",
														"type": ""
													}
												],
												"src": "5762:115:14"
											},
											{
												"body": {
													"nativeSrc": "5942:40:14",
													"nodeType": "YulBlock",
													"src": "5942:40:14",
													"statements": [
														{
															"nativeSrc": "5953:22:14",
															"nodeType": "YulAssignment",
															"src": "5953:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5969:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5969:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5963:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5963:5:14"
																},
																"nativeSrc": "5963:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5963:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5953:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5953:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5883:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5925:5:14",
														"nodeType": "YulTypedName",
														"src": "5925:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5935:6:14",
														"nodeType": "YulTypedName",
														"src": "5935:6:14",
														"type": ""
													}
												],
												"src": "5883:99:14"
											},
											{
												"body": {
													"nativeSrc": "6050:77:14",
													"nodeType": "YulBlock",
													"src": "6050:77:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6067:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6067:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6072:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6072:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6077:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6077:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6061:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "6061:5:14"
																},
																"nativeSrc": "6061:23:14",
																"nodeType": "YulFunctionCall",
																"src": "6061:23:14"
															},
															"nativeSrc": "6061:23:14",
															"nodeType": "YulExpressionStatement",
															"src": "6061:23:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6104:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6104:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6109:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6109:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6100:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6100:3:14"
																		},
																		"nativeSrc": "6100:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6100:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6118:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6118:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6093:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:14"
																},
																"nativeSrc": "6093:27:14",
																"nodeType": "YulFunctionCall",
																"src": "6093:27:14"
															},
															"nativeSrc": "6093:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "6093:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5988:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6032:3:14",
														"nodeType": "YulTypedName",
														"src": "6032:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6037:3:14",
														"nodeType": "YulTypedName",
														"src": "6037:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6042:6:14",
														"nodeType": "YulTypedName",
														"src": "6042:6:14",
														"type": ""
													}
												],
												"src": "5988:139:14"
											},
											{
												"body": {
													"nativeSrc": "6181:54:14",
													"nodeType": "YulBlock",
													"src": "6181:54:14",
													"statements": [
														{
															"nativeSrc": "6191:38:14",
															"nodeType": "YulAssignment",
															"src": "6191:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6209:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6209:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6216:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6216:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6205:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6205:3:14"
																		},
																		"nativeSrc": "6205:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6205:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6225:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6225:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6221:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6221:3:14"
																		},
																		"nativeSrc": "6221:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6221:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6201:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6201:3:14"
																},
																"nativeSrc": "6201:28:14",
																"nodeType": "YulFunctionCall",
																"src": "6201:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6191:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6191:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "6133:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6164:5:14",
														"nodeType": "YulTypedName",
														"src": "6164:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6174:6:14",
														"nodeType": "YulTypedName",
														"src": "6174:6:14",
														"type": ""
													}
												],
												"src": "6133:102:14"
											},
											{
												"body": {
													"nativeSrc": "6333:285:14",
													"nodeType": "YulBlock",
													"src": "6333:285:14",
													"statements": [
														{
															"nativeSrc": "6343:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6343:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6390:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6390:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6357:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "6357:32:14"
																},
																"nativeSrc": "6357:39:14",
																"nodeType": "YulFunctionCall",
																"src": "6357:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6347:6:14",
																	"nodeType": "YulTypedName",
																	"src": "6347:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6405:78:14",
															"nodeType": "YulAssignment",
															"src": "6405:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6471:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6471:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6476:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6476:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6412:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "6412:58:14"
																},
																"nativeSrc": "6412:71:14",
																"nodeType": "YulFunctionCall",
																"src": "6412:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6405:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6405:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6531:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6531:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6538:4:14",
																				"nodeType": "YulLiteral",
																				"src": "6538:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6527:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6527:3:14"
																		},
																		"nativeSrc": "6527:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6527:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6545:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6545:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6550:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6550:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6492:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "6492:34:14"
																},
																"nativeSrc": "6492:65:14",
																"nodeType": "YulFunctionCall",
																"src": "6492:65:14"
															},
															"nativeSrc": "6492:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "6492:65:14"
														},
														{
															"nativeSrc": "6566:46:14",
															"nodeType": "YulAssignment",
															"src": "6566:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6577:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6577:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6604:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6604:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6582:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "6582:21:14"
																		},
																		"nativeSrc": "6582:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6582:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6573:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6573:3:14"
																},
																"nativeSrc": "6573:39:14",
																"nodeType": "YulFunctionCall",
																"src": "6573:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6566:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6241:377:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6314:5:14",
														"nodeType": "YulTypedName",
														"src": "6314:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6321:3:14",
														"nodeType": "YulTypedName",
														"src": "6321:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6329:3:14",
														"nodeType": "YulTypedName",
														"src": "6329:3:14",
														"type": ""
													}
												],
												"src": "6241:377:14"
											},
											{
												"body": {
													"nativeSrc": "6794:355:14",
													"nodeType": "YulBlock",
													"src": "6794:355:14",
													"statements": [
														{
															"nativeSrc": "6804:26:14",
															"nodeType": "YulAssignment",
															"src": "6804:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6816:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6816:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6827:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6827:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6812:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6812:3:14"
																},
																"nativeSrc": "6812:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6812:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6804:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6804:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6882:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6882:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6895:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6895:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6906:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6906:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6891:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6891:3:14"
																		},
																		"nativeSrc": "6891:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6891:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "6840:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "6840:41:14"
																},
																"nativeSrc": "6840:69:14",
																"nodeType": "YulFunctionCall",
																"src": "6840:69:14"
															},
															"nativeSrc": "6840:69:14",
															"nodeType": "YulExpressionStatement",
															"src": "6840:69:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6961:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6961:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6974:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6974:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6985:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6985:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6970:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6970:3:14"
																		},
																		"nativeSrc": "6970:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6970:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "6919:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "6919:41:14"
																},
																"nativeSrc": "6919:70:14",
																"nodeType": "YulFunctionCall",
																"src": "6919:70:14"
															},
															"nativeSrc": "6919:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "6919:70:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7010:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7010:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7021:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7021:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7006:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7006:3:14"
																		},
																		"nativeSrc": "7006:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7006:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7030:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "7030:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7036:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7036:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7026:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7026:3:14"
																		},
																		"nativeSrc": "7026:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7026:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6999:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6999:6:14"
																},
																"nativeSrc": "6999:48:14",
																"nodeType": "YulFunctionCall",
																"src": "6999:48:14"
															},
															"nativeSrc": "6999:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "6999:48:14"
														},
														{
															"nativeSrc": "7056:86:14",
															"nodeType": "YulAssignment",
															"src": "7056:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7128:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7128:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7137:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7137:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7064:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "7064:63:14"
																},
																"nativeSrc": "7064:78:14",
																"nodeType": "YulFunctionCall",
																"src": "7064:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7056:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7056:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint64_t_uint64_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6624:525:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6750:9:14",
														"nodeType": "YulTypedName",
														"src": "6750:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6762:6:14",
														"nodeType": "YulTypedName",
														"src": "6762:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6770:6:14",
														"nodeType": "YulTypedName",
														"src": "6770:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6778:6:14",
														"nodeType": "YulTypedName",
														"src": "6778:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6789:4:14",
														"nodeType": "YulTypedName",
														"src": "6789:4:14",
														"type": ""
													}
												],
												"src": "6624:525:14"
											},
											{
												"body": {
													"nativeSrc": "7197:78:14",
													"nodeType": "YulBlock",
													"src": "7197:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7253:16:14",
																"nodeType": "YulBlock",
																"src": "7253:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7262:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7262:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7265:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7265:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7255:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7255:6:14"
																			},
																			"nativeSrc": "7255:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7255:12:14"
																		},
																		"nativeSrc": "7255:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7255:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7220:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7220:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7244:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "7244:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "7227:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "7227:16:14"
																				},
																				"nativeSrc": "7227:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7227:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7217:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "7217:2:14"
																		},
																		"nativeSrc": "7217:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7217:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7210:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7210:6:14"
																},
																"nativeSrc": "7210:42:14",
																"nodeType": "YulFunctionCall",
																"src": "7210:42:14"
															},
															"nativeSrc": "7207:62:14",
															"nodeType": "YulIf",
															"src": "7207:62:14"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nativeSrc": "7155:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7190:5:14",
														"nodeType": "YulTypedName",
														"src": "7190:5:14",
														"type": ""
													}
												],
												"src": "7155:120:14"
											},
											{
												"body": {
													"nativeSrc": "7332:86:14",
													"nodeType": "YulBlock",
													"src": "7332:86:14",
													"statements": [
														{
															"nativeSrc": "7342:29:14",
															"nodeType": "YulAssignment",
															"src": "7342:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7364:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7364:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7351:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7351:12:14"
																},
																"nativeSrc": "7351:20:14",
																"nodeType": "YulFunctionCall",
																"src": "7351:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7342:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7342:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7406:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7406:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nativeSrc": "7380:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "7380:25:14"
																},
																"nativeSrc": "7380:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7380:32:14"
															},
															"nativeSrc": "7380:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "7380:32:14"
														}
													]
												},
												"name": "abi_decode_t_uint64",
												"nativeSrc": "7281:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7310:6:14",
														"nodeType": "YulTypedName",
														"src": "7310:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7318:3:14",
														"nodeType": "YulTypedName",
														"src": "7318:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7326:5:14",
														"nodeType": "YulTypedName",
														"src": "7326:5:14",
														"type": ""
													}
												],
												"src": "7281:137:14"
											},
											{
												"body": {
													"nativeSrc": "7513:28:14",
													"nodeType": "YulBlock",
													"src": "7513:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7530:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7530:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7533:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7533:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7523:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7523:6:14"
																},
																"nativeSrc": "7523:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7523:12:14"
															},
															"nativeSrc": "7523:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "7523:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7424:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7424:117:14"
											},
											{
												"body": {
													"nativeSrc": "7636:28:14",
													"nodeType": "YulBlock",
													"src": "7636:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7653:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7653:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7656:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7656:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7646:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7646:6:14"
																},
																"nativeSrc": "7646:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7646:12:14"
															},
															"nativeSrc": "7646:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "7646:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7547:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7547:117:14"
											},
											{
												"body": {
													"nativeSrc": "7698:152:14",
													"nodeType": "YulBlock",
													"src": "7698:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7715:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7715:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7718:77:14",
																		"nodeType": "YulLiteral",
																		"src": "7718:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7708:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7708:6:14"
																},
																"nativeSrc": "7708:88:14",
																"nodeType": "YulFunctionCall",
																"src": "7708:88:14"
															},
															"nativeSrc": "7708:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "7708:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7812:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7812:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7815:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7815:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7805:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7805:6:14"
																},
																"nativeSrc": "7805:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7805:15:14"
															},
															"nativeSrc": "7805:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "7805:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7836:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7836:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7839:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7839:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7829:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7829:6:14"
																},
																"nativeSrc": "7829:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7829:15:14"
															},
															"nativeSrc": "7829:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "7829:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7670:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7670:180:14"
											},
											{
												"body": {
													"nativeSrc": "7899:238:14",
													"nodeType": "YulBlock",
													"src": "7899:238:14",
													"statements": [
														{
															"nativeSrc": "7909:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7909:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7931:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7931:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7961:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "7961:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7939:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "7939:21:14"
																		},
																		"nativeSrc": "7939:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7939:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7927:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7927:3:14"
																},
																"nativeSrc": "7927:40:14",
																"nodeType": "YulFunctionCall",
																"src": "7927:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7913:10:14",
																	"nodeType": "YulTypedName",
																	"src": "7913:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8078:22:14",
																"nodeType": "YulBlock",
																"src": "8078:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8080:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "8080:16:14"
																			},
																			"nativeSrc": "8080:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8080:18:14"
																		},
																		"nativeSrc": "8080:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8080:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8021:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "8021:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8033:18:14",
																				"nodeType": "YulLiteral",
																				"src": "8033:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8018:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8018:2:14"
																		},
																		"nativeSrc": "8018:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8018:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8057:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "8057:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8069:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8069:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8054:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8054:2:14"
																		},
																		"nativeSrc": "8054:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8054:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8015:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8015:2:14"
																},
																"nativeSrc": "8015:62:14",
																"nodeType": "YulFunctionCall",
																"src": "8015:62:14"
															},
															"nativeSrc": "8012:88:14",
															"nodeType": "YulIf",
															"src": "8012:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8116:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8116:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8120:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "8120:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8109:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8109:6:14"
																},
																"nativeSrc": "8109:22:14",
																"nodeType": "YulFunctionCall",
																"src": "8109:22:14"
															},
															"nativeSrc": "8109:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "8109:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7856:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7885:6:14",
														"nodeType": "YulTypedName",
														"src": "7885:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7893:4:14",
														"nodeType": "YulTypedName",
														"src": "7893:4:14",
														"type": ""
													}
												],
												"src": "7856:281:14"
											},
											{
												"body": {
													"nativeSrc": "8184:88:14",
													"nodeType": "YulBlock",
													"src": "8184:88:14",
													"statements": [
														{
															"nativeSrc": "8194:30:14",
															"nodeType": "YulAssignment",
															"src": "8194:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8204:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "8204:18:14"
																},
																"nativeSrc": "8204:20:14",
																"nodeType": "YulFunctionCall",
																"src": "8204:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8194:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8194:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8253:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8253:6:14"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8261:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8261:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8233:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "8233:19:14"
																},
																"nativeSrc": "8233:33:14",
																"nodeType": "YulFunctionCall",
																"src": "8233:33:14"
															},
															"nativeSrc": "8233:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "8233:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8143:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8168:4:14",
														"nodeType": "YulTypedName",
														"src": "8168:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8177:6:14",
														"nodeType": "YulTypedName",
														"src": "8177:6:14",
														"type": ""
													}
												],
												"src": "8143:129:14"
											},
											{
												"body": {
													"nativeSrc": "8345:241:14",
													"nodeType": "YulBlock",
													"src": "8345:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8450:22:14",
																"nodeType": "YulBlock",
																"src": "8450:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8452:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "8452:16:14"
																			},
																			"nativeSrc": "8452:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8452:18:14"
																		},
																		"nativeSrc": "8452:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8452:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8422:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8422:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8430:18:14",
																		"nodeType": "YulLiteral",
																		"src": "8430:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8419:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8419:2:14"
																},
																"nativeSrc": "8419:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8419:30:14"
															},
															"nativeSrc": "8416:56:14",
															"nodeType": "YulIf",
															"src": "8416:56:14"
														},
														{
															"nativeSrc": "8482:37:14",
															"nodeType": "YulAssignment",
															"src": "8482:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8512:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8512:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8490:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "8490:21:14"
																},
																"nativeSrc": "8490:29:14",
																"nodeType": "YulFunctionCall",
																"src": "8490:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8482:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8482:4:14"
																}
															]
														},
														{
															"nativeSrc": "8556:23:14",
															"nodeType": "YulAssignment",
															"src": "8556:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8568:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8568:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8574:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8574:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8564:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8564:3:14"
																},
																"nativeSrc": "8564:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8564:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8556:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8556:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "8278:308:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8329:6:14",
														"nodeType": "YulTypedName",
														"src": "8329:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8340:4:14",
														"nodeType": "YulTypedName",
														"src": "8340:4:14",
														"type": ""
													}
												],
												"src": "8278:308:14"
											},
											{
												"body": {
													"nativeSrc": "8656:84:14",
													"nodeType": "YulBlock",
													"src": "8656:84:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8680:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8680:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8685:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8685:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8690:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8690:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8667:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "8667:12:14"
																},
																"nativeSrc": "8667:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8667:30:14"
															},
															"nativeSrc": "8667:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8667:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8717:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8717:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8722:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8722:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8713:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8713:3:14"
																		},
																		"nativeSrc": "8713:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8713:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8731:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8731:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8706:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8706:6:14"
																},
																"nativeSrc": "8706:27:14",
																"nodeType": "YulFunctionCall",
																"src": "8706:27:14"
															},
															"nativeSrc": "8706:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "8706:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8592:148:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8638:3:14",
														"nodeType": "YulTypedName",
														"src": "8638:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8643:3:14",
														"nodeType": "YulTypedName",
														"src": "8643:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8648:6:14",
														"nodeType": "YulTypedName",
														"src": "8648:6:14",
														"type": ""
													}
												],
												"src": "8592:148:14"
											},
											{
												"body": {
													"nativeSrc": "8830:341:14",
													"nodeType": "YulBlock",
													"src": "8830:341:14",
													"statements": [
														{
															"nativeSrc": "8840:75:14",
															"nodeType": "YulAssignment",
															"src": "8840:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8907:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8907:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "8865:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "8865:41:14"
																		},
																		"nativeSrc": "8865:49:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8865:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8849:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "8849:15:14"
																},
																"nativeSrc": "8849:66:14",
																"nodeType": "YulFunctionCall",
																"src": "8849:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8840:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8840:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8931:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "8931:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8938:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8938:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8924:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8924:6:14"
																},
																"nativeSrc": "8924:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8924:21:14"
															},
															"nativeSrc": "8924:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8924:21:14"
														},
														{
															"nativeSrc": "8954:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8954:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8969:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "8969:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8976:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8976:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8965:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8965:3:14"
																},
																"nativeSrc": "8965:16:14",
																"nodeType": "YulFunctionCall",
																"src": "8965:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8958:3:14",
																	"nodeType": "YulTypedName",
																	"src": "8958:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9019:83:14",
																"nodeType": "YulBlock",
																"src": "9019:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9021:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9021:77:14"
																			},
																			"nativeSrc": "9021:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9021:79:14"
																		},
																		"nativeSrc": "9021:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9021:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9000:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "9000:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9005:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9005:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8996:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8996:3:14"
																		},
																		"nativeSrc": "8996:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8996:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9014:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9014:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8993:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8993:2:14"
																},
																"nativeSrc": "8993:25:14",
																"nodeType": "YulFunctionCall",
																"src": "8993:25:14"
															},
															"nativeSrc": "8990:112:14",
															"nodeType": "YulIf",
															"src": "8990:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9148:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9148:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9153:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9153:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9158:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9158:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9111:36:14",
																	"nodeType": "YulIdentifier",
																	"src": "9111:36:14"
																},
																"nativeSrc": "9111:54:14",
																"nodeType": "YulFunctionCall",
																"src": "9111:54:14"
															},
															"nativeSrc": "9111:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "9111:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "8746:425:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8803:3:14",
														"nodeType": "YulTypedName",
														"src": "8803:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8808:6:14",
														"nodeType": "YulTypedName",
														"src": "8808:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8816:3:14",
														"nodeType": "YulTypedName",
														"src": "8816:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8824:5:14",
														"nodeType": "YulTypedName",
														"src": "8824:5:14",
														"type": ""
													}
												],
												"src": "8746:425:14"
											},
											{
												"body": {
													"nativeSrc": "9253:278:14",
													"nodeType": "YulBlock",
													"src": "9253:278:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9302:83:14",
																"nodeType": "YulBlock",
																"src": "9302:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9304:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9304:77:14"
																			},
																			"nativeSrc": "9304:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9304:79:14"
																		},
																		"nativeSrc": "9304:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9304:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9281:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9281:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9289:4:14",
																						"nodeType": "YulLiteral",
																						"src": "9289:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9277:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9277:3:14"
																				},
																				"nativeSrc": "9277:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9277:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9296:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "9296:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9273:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9273:3:14"
																		},
																		"nativeSrc": "9273:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9273:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9266:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9266:6:14"
																},
																"nativeSrc": "9266:35:14",
																"nodeType": "YulFunctionCall",
																"src": "9266:35:14"
															},
															"nativeSrc": "9263:122:14",
															"nodeType": "YulIf",
															"src": "9263:122:14"
														},
														{
															"nativeSrc": "9394:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9394:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9421:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9421:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9408:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "9408:12:14"
																},
																"nativeSrc": "9408:20:14",
																"nodeType": "YulFunctionCall",
																"src": "9408:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9398:6:14",
																	"nodeType": "YulTypedName",
																	"src": "9398:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9437:88:14",
															"nodeType": "YulAssignment",
															"src": "9437:88:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9498:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9498:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9506:4:14",
																				"nodeType": "YulLiteral",
																				"src": "9506:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9494:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9494:3:14"
																		},
																		"nativeSrc": "9494:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9494:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9513:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9513:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9521:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9521:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "9446:47:14",
																	"nodeType": "YulIdentifier",
																	"src": "9446:47:14"
																},
																"nativeSrc": "9446:79:14",
																"nodeType": "YulFunctionCall",
																"src": "9446:79:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9437:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9437:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "9191:340:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9231:6:14",
														"nodeType": "YulTypedName",
														"src": "9231:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9239:3:14",
														"nodeType": "YulTypedName",
														"src": "9239:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9247:5:14",
														"nodeType": "YulTypedName",
														"src": "9247:5:14",
														"type": ""
													}
												],
												"src": "9191:340:14"
											},
											{
												"body": {
													"nativeSrc": "9645:687:14",
													"nodeType": "YulBlock",
													"src": "9645:687:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9691:83:14",
																"nodeType": "YulBlock",
																"src": "9691:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9693:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9693:77:14"
																			},
																			"nativeSrc": "9693:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9693:79:14"
																		},
																		"nativeSrc": "9693:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9693:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9666:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9666:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9675:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9675:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9662:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9662:3:14"
																		},
																		"nativeSrc": "9662:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9662:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9687:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9687:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9658:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9658:3:14"
																},
																"nativeSrc": "9658:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9658:32:14"
															},
															"nativeSrc": "9655:119:14",
															"nodeType": "YulIf",
															"src": "9655:119:14"
														},
														{
															"nativeSrc": "9784:116:14",
															"nodeType": "YulBlock",
															"src": "9784:116:14",
															"statements": [
																{
																	"nativeSrc": "9799:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9799:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9813:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9813:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9803:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9803:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9828:62:14",
																	"nodeType": "YulAssignment",
																	"src": "9828:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9862:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9862:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9873:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9873:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9858:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9858:3:14"
																				},
																				"nativeSrc": "9858:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9858:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9882:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9882:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "9838:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "9838:19:14"
																		},
																		"nativeSrc": "9838:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9838:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9828:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9828:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9910:117:14",
															"nodeType": "YulBlock",
															"src": "9910:117:14",
															"statements": [
																{
																	"nativeSrc": "9925:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9925:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9939:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9939:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9929:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9929:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9955:62:14",
																	"nodeType": "YulAssignment",
																	"src": "9955:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9989:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9989:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10000:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10000:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9985:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9985:3:14"
																				},
																				"nativeSrc": "9985:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9985:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10009:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10009:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "9965:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "9965:19:14"
																		},
																		"nativeSrc": "9965:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9965:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9955:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9955:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10037:288:14",
															"nodeType": "YulBlock",
															"src": "10037:288:14",
															"statements": [
																{
																	"nativeSrc": "10052:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10052:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10083:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10083:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10094:2:14",
																						"nodeType": "YulLiteral",
																						"src": "10094:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10079:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10079:3:14"
																				},
																				"nativeSrc": "10079:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10079:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10066:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "10066:12:14"
																		},
																		"nativeSrc": "10066:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10066:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10056:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10056:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10145:83:14",
																		"nodeType": "YulBlock",
																		"src": "10145:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10147:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "10147:77:14"
																					},
																					"nativeSrc": "10147:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10147:79:14"
																				},
																				"nativeSrc": "10147:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "10147:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10117:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10117:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10125:18:14",
																				"nodeType": "YulLiteral",
																				"src": "10125:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10114:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10114:2:14"
																		},
																		"nativeSrc": "10114:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10114:30:14"
																	},
																	"nativeSrc": "10111:117:14",
																	"nodeType": "YulIf",
																	"src": "10111:117:14"
																},
																{
																	"nativeSrc": "10242:73:14",
																	"nodeType": "YulAssignment",
																	"src": "10242:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10287:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10287:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10298:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10298:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10283:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10283:3:14"
																				},
																				"nativeSrc": "10283:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10283:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10307:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10307:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "10252:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "10252:30:14"
																		},
																		"nativeSrc": "10252:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10252:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10242:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10242:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64t_uint64t_string_memory_ptr",
												"nativeSrc": "9537:795:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9599:9:14",
														"nodeType": "YulTypedName",
														"src": "9599:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9610:7:14",
														"nodeType": "YulTypedName",
														"src": "9610:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9622:6:14",
														"nodeType": "YulTypedName",
														"src": "9622:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9630:6:14",
														"nodeType": "YulTypedName",
														"src": "9630:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9638:6:14",
														"nodeType": "YulTypedName",
														"src": "9638:6:14",
														"type": ""
													}
												],
												"src": "9537:795:14"
											},
											{
												"body": {
													"nativeSrc": "10438:519:14",
													"nodeType": "YulBlock",
													"src": "10438:519:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10484:83:14",
																"nodeType": "YulBlock",
																"src": "10484:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10486:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "10486:77:14"
																			},
																			"nativeSrc": "10486:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10486:79:14"
																		},
																		"nativeSrc": "10486:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10486:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10459:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10459:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10468:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10468:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10455:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10455:3:14"
																		},
																		"nativeSrc": "10455:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10455:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10480:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10480:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10451:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10451:3:14"
																},
																"nativeSrc": "10451:32:14",
																"nodeType": "YulFunctionCall",
																"src": "10451:32:14"
															},
															"nativeSrc": "10448:119:14",
															"nodeType": "YulIf",
															"src": "10448:119:14"
														},
														{
															"nativeSrc": "10577:117:14",
															"nodeType": "YulBlock",
															"src": "10577:117:14",
															"statements": [
																{
																	"nativeSrc": "10592:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10592:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10606:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10606:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10596:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10596:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10621:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10621:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10656:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10656:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10667:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10667:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10652:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10652:3:14"
																				},
																				"nativeSrc": "10652:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10652:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10676:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10676:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10631:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10631:20:14"
																		},
																		"nativeSrc": "10631:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10631:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10621:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10621:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10704:118:14",
															"nodeType": "YulBlock",
															"src": "10704:118:14",
															"statements": [
																{
																	"nativeSrc": "10719:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10719:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10733:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10733:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10723:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10723:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10749:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10749:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10784:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10784:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10795:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10795:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10780:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10780:3:14"
																				},
																				"nativeSrc": "10780:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10780:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10804:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10804:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10759:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10759:20:14"
																		},
																		"nativeSrc": "10759:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10759:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10749:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10749:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10832:118:14",
															"nodeType": "YulBlock",
															"src": "10832:118:14",
															"statements": [
																{
																	"nativeSrc": "10847:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10847:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10861:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10861:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10851:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10851:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10877:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10877:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10912:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10912:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10923:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10923:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10908:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10908:3:14"
																				},
																				"nativeSrc": "10908:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10908:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10932:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10932:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10887:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10887:20:14"
																		},
																		"nativeSrc": "10887:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10887:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10877:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10877:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "10338:619:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10392:9:14",
														"nodeType": "YulTypedName",
														"src": "10392:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10403:7:14",
														"nodeType": "YulTypedName",
														"src": "10403:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10415:6:14",
														"nodeType": "YulTypedName",
														"src": "10415:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10423:6:14",
														"nodeType": "YulTypedName",
														"src": "10423:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10431:6:14",
														"nodeType": "YulTypedName",
														"src": "10431:6:14",
														"type": ""
													}
												],
												"src": "10338:619:14"
											},
											{
												"body": {
													"nativeSrc": "11022:81:14",
													"nodeType": "YulBlock",
													"src": "11022:81:14",
													"statements": [
														{
															"nativeSrc": "11032:65:14",
															"nodeType": "YulAssignment",
															"src": "11032:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11089:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "11089:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "11072:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "11072:16:14"
																				},
																				"nativeSrc": "11072:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11072:23:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11063:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "11063:8:14"
																		},
																		"nativeSrc": "11063:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11063:33:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11045:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "11045:17:14"
																},
																"nativeSrc": "11045:52:14",
																"nodeType": "YulFunctionCall",
																"src": "11045:52:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11032:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "11032:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint64_to_t_uint256",
												"nativeSrc": "10963:140:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11002:5:14",
														"nodeType": "YulTypedName",
														"src": "11002:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11012:9:14",
														"nodeType": "YulTypedName",
														"src": "11012:9:14",
														"type": ""
													}
												],
												"src": "10963:140:14"
											},
											{
												"body": {
													"nativeSrc": "11173:65:14",
													"nodeType": "YulBlock",
													"src": "11173:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11190:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11190:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11225:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "11225:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint64_to_t_uint256",
																			"nativeSrc": "11195:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "11195:29:14"
																		},
																		"nativeSrc": "11195:36:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11195:36:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11183:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11183:6:14"
																},
																"nativeSrc": "11183:49:14",
																"nodeType": "YulFunctionCall",
																"src": "11183:49:14"
															},
															"nativeSrc": "11183:49:14",
															"nodeType": "YulExpressionStatement",
															"src": "11183:49:14"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
												"nativeSrc": "11109:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11161:5:14",
														"nodeType": "YulTypedName",
														"src": "11161:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11168:3:14",
														"nodeType": "YulTypedName",
														"src": "11168:3:14",
														"type": ""
													}
												],
												"src": "11109:129:14"
											},
											{
												"body": {
													"nativeSrc": "11396:286:14",
													"nodeType": "YulBlock",
													"src": "11396:286:14",
													"statements": [
														{
															"nativeSrc": "11406:26:14",
															"nodeType": "YulAssignment",
															"src": "11406:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11418:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11418:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11429:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11429:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11414:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11414:3:14"
																},
																"nativeSrc": "11414:18:14",
																"nodeType": "YulFunctionCall",
																"src": "11414:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11406:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11406:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11486:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11486:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11499:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11499:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11510:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11510:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11495:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11495:3:14"
																		},
																		"nativeSrc": "11495:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11495:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11442:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "11442:43:14"
																},
																"nativeSrc": "11442:71:14",
																"nodeType": "YulFunctionCall",
																"src": "11442:71:14"
															},
															"nativeSrc": "11442:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "11442:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11566:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11566:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11579:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11579:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11590:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11590:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11575:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11575:3:14"
																		},
																		"nativeSrc": "11575:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11575:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "11523:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "11523:42:14"
																},
																"nativeSrc": "11523:71:14",
																"nodeType": "YulFunctionCall",
																"src": "11523:71:14"
															},
															"nativeSrc": "11523:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "11523:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11647:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11647:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11660:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11660:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11671:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11671:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11656:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11656:3:14"
																		},
																		"nativeSrc": "11656:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11656:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "11604:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "11604:42:14"
																},
																"nativeSrc": "11604:71:14",
																"nodeType": "YulFunctionCall",
																"src": "11604:71:14"
															},
															"nativeSrc": "11604:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "11604:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint64_t_uint64__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11244:438:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11352:9:14",
														"nodeType": "YulTypedName",
														"src": "11352:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11364:6:14",
														"nodeType": "YulTypedName",
														"src": "11364:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11372:6:14",
														"nodeType": "YulTypedName",
														"src": "11372:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11380:6:14",
														"nodeType": "YulTypedName",
														"src": "11380:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11391:4:14",
														"nodeType": "YulTypedName",
														"src": "11391:4:14",
														"type": ""
													}
												],
												"src": "11244:438:14"
											},
											{
												"body": {
													"nativeSrc": "11794:63:14",
													"nodeType": "YulBlock",
													"src": "11794:63:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11816:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11816:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11824:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11824:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11812:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11812:3:14"
																		},
																		"nativeSrc": "11812:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11812:14:14"
																	},
																	{
																		"hexValue": "4e6f20636c61696d61626c6520616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "11828:21:14",
																		"nodeType": "YulLiteral",
																		"src": "11828:21:14",
																		"type": "",
																		"value": "No claimable amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11805:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11805:6:14"
																},
																"nativeSrc": "11805:45:14",
																"nodeType": "YulFunctionCall",
																"src": "11805:45:14"
															},
															"nativeSrc": "11805:45:14",
															"nodeType": "YulExpressionStatement",
															"src": "11805:45:14"
														}
													]
												},
												"name": "store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
												"nativeSrc": "11688:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11786:6:14",
														"nodeType": "YulTypedName",
														"src": "11786:6:14",
														"type": ""
													}
												],
												"src": "11688:169:14"
											},
											{
												"body": {
													"nativeSrc": "12009:220:14",
													"nodeType": "YulBlock",
													"src": "12009:220:14",
													"statements": [
														{
															"nativeSrc": "12019:74:14",
															"nodeType": "YulAssignment",
															"src": "12019:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12085:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12085:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12090:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12090:2:14",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12026:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "12026:58:14"
																},
																"nativeSrc": "12026:67:14",
																"nodeType": "YulFunctionCall",
																"src": "12026:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12019:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12019:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12191:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12191:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																	"nativeSrc": "12102:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "12102:88:14"
																},
																"nativeSrc": "12102:93:14",
																"nodeType": "YulFunctionCall",
																"src": "12102:93:14"
															},
															"nativeSrc": "12102:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "12102:93:14"
														},
														{
															"nativeSrc": "12204:19:14",
															"nodeType": "YulAssignment",
															"src": "12204:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12215:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12215:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12220:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12220:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12211:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12211:3:14"
																},
																"nativeSrc": "12211:12:14",
																"nodeType": "YulFunctionCall",
																"src": "12211:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12204:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12204:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11863:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11997:3:14",
														"nodeType": "YulTypedName",
														"src": "11997:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12005:3:14",
														"nodeType": "YulTypedName",
														"src": "12005:3:14",
														"type": ""
													}
												],
												"src": "11863:366:14"
											},
											{
												"body": {
													"nativeSrc": "12406:248:14",
													"nodeType": "YulBlock",
													"src": "12406:248:14",
													"statements": [
														{
															"nativeSrc": "12416:26:14",
															"nodeType": "YulAssignment",
															"src": "12416:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12428:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "12428:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12439:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12439:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12424:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12424:3:14"
																},
																"nativeSrc": "12424:18:14",
																"nodeType": "YulFunctionCall",
																"src": "12424:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12416:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12416:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12463:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12463:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12474:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12474:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12459:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12459:3:14"
																		},
																		"nativeSrc": "12459:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12459:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12482:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "12482:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12488:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12488:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12478:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12478:3:14"
																		},
																		"nativeSrc": "12478:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12478:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12452:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12452:6:14"
																},
																"nativeSrc": "12452:47:14",
																"nodeType": "YulFunctionCall",
																"src": "12452:47:14"
															},
															"nativeSrc": "12452:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "12452:47:14"
														},
														{
															"nativeSrc": "12508:139:14",
															"nodeType": "YulAssignment",
															"src": "12508:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12642:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12642:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12516:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "12516:124:14"
																},
																"nativeSrc": "12516:131:14",
																"nodeType": "YulFunctionCall",
																"src": "12516:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12508:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12508:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12235:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12386:9:14",
														"nodeType": "YulTypedName",
														"src": "12386:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12401:4:14",
														"nodeType": "YulTypedName",
														"src": "12401:4:14",
														"type": ""
													}
												],
												"src": "12235:419:14"
											},
											{
												"body": {
													"nativeSrc": "12766:69:14",
													"nodeType": "YulBlock",
													"src": "12766:69:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12788:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12788:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12796:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12796:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12784:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12784:3:14"
																		},
																		"nativeSrc": "12784:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12784:14:14"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
																		"kind": "string",
																		"nativeSrc": "12800:27:14",
																		"nodeType": "YulLiteral",
																		"src": "12800:27:14",
																		"type": "",
																		"value": "Insufficient funds in jar"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12777:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12777:6:14"
																},
																"nativeSrc": "12777:51:14",
																"nodeType": "YulFunctionCall",
																"src": "12777:51:14"
															},
															"nativeSrc": "12777:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "12777:51:14"
														}
													]
												},
												"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
												"nativeSrc": "12660:175:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12758:6:14",
														"nodeType": "YulTypedName",
														"src": "12758:6:14",
														"type": ""
													}
												],
												"src": "12660:175:14"
											},
											{
												"body": {
													"nativeSrc": "12987:220:14",
													"nodeType": "YulBlock",
													"src": "12987:220:14",
													"statements": [
														{
															"nativeSrc": "12997:74:14",
															"nodeType": "YulAssignment",
															"src": "12997:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13063:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13063:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13068:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13068:2:14",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13004:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "13004:58:14"
																},
																"nativeSrc": "13004:67:14",
																"nodeType": "YulFunctionCall",
																"src": "13004:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12997:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12997:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13169:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13169:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																	"nativeSrc": "13080:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "13080:88:14"
																},
																"nativeSrc": "13080:93:14",
																"nodeType": "YulFunctionCall",
																"src": "13080:93:14"
															},
															"nativeSrc": "13080:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "13080:93:14"
														},
														{
															"nativeSrc": "13182:19:14",
															"nodeType": "YulAssignment",
															"src": "13182:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13193:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13193:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13198:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13198:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13189:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13189:3:14"
																},
																"nativeSrc": "13189:12:14",
																"nodeType": "YulFunctionCall",
																"src": "13189:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13182:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13182:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12841:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12975:3:14",
														"nodeType": "YulTypedName",
														"src": "12975:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12983:3:14",
														"nodeType": "YulTypedName",
														"src": "12983:3:14",
														"type": ""
													}
												],
												"src": "12841:366:14"
											},
											{
												"body": {
													"nativeSrc": "13384:248:14",
													"nodeType": "YulBlock",
													"src": "13384:248:14",
													"statements": [
														{
															"nativeSrc": "13394:26:14",
															"nodeType": "YulAssignment",
															"src": "13394:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13406:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13406:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13417:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13417:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13402:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13402:3:14"
																},
																"nativeSrc": "13402:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13402:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13394:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13394:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13441:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13441:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13452:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13452:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13437:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13437:3:14"
																		},
																		"nativeSrc": "13437:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13437:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13460:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "13460:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13466:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13466:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13456:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13456:3:14"
																		},
																		"nativeSrc": "13456:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13456:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13430:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13430:6:14"
																},
																"nativeSrc": "13430:47:14",
																"nodeType": "YulFunctionCall",
																"src": "13430:47:14"
															},
															"nativeSrc": "13430:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "13430:47:14"
														},
														{
															"nativeSrc": "13486:139:14",
															"nodeType": "YulAssignment",
															"src": "13486:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13620:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13620:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13494:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "13494:124:14"
																},
																"nativeSrc": "13494:131:14",
																"nodeType": "YulFunctionCall",
																"src": "13494:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13486:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13486:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13213:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13364:9:14",
														"nodeType": "YulTypedName",
														"src": "13364:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13379:4:14",
														"nodeType": "YulTypedName",
														"src": "13379:4:14",
														"type": ""
													}
												],
												"src": "13213:419:14"
											},
											{
												"body": {
													"nativeSrc": "13744:49:14",
													"nodeType": "YulBlock",
													"src": "13744:49:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13766:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13766:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13774:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13774:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13762:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13762:3:14"
																		},
																		"nativeSrc": "13762:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13762:14:14"
																	},
																	{
																		"hexValue": "5472757374",
																		"kind": "string",
																		"nativeSrc": "13778:7:14",
																		"nodeType": "YulLiteral",
																		"src": "13778:7:14",
																		"type": "",
																		"value": "Trust"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13755:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13755:6:14"
																},
																"nativeSrc": "13755:31:14",
																"nodeType": "YulFunctionCall",
																"src": "13755:31:14"
															},
															"nativeSrc": "13755:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "13755:31:14"
														}
													]
												},
												"name": "store_literal_in_memory_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b",
												"nativeSrc": "13638:155:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13736:6:14",
														"nodeType": "YulTypedName",
														"src": "13736:6:14",
														"type": ""
													}
												],
												"src": "13638:155:14"
											},
											{
												"body": {
													"nativeSrc": "13945:219:14",
													"nodeType": "YulBlock",
													"src": "13945:219:14",
													"statements": [
														{
															"nativeSrc": "13955:73:14",
															"nodeType": "YulAssignment",
															"src": "13955:73:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14021:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14021:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14026:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14026:1:14",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13962:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "13962:58:14"
																},
																"nativeSrc": "13962:66:14",
																"nodeType": "YulFunctionCall",
																"src": "13962:66:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13955:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13955:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14126:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14126:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b",
																	"nativeSrc": "14037:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "14037:88:14"
																},
																"nativeSrc": "14037:93:14",
																"nodeType": "YulFunctionCall",
																"src": "14037:93:14"
															},
															"nativeSrc": "14037:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "14037:93:14"
														},
														{
															"nativeSrc": "14139:19:14",
															"nodeType": "YulAssignment",
															"src": "14139:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14150:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14150:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14155:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14155:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14146:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14146:3:14"
																},
																"nativeSrc": "14146:12:14",
																"nodeType": "YulFunctionCall",
																"src": "14146:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14139:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14139:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13799:365:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13933:3:14",
														"nodeType": "YulTypedName",
														"src": "13933:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13941:3:14",
														"nodeType": "YulTypedName",
														"src": "13941:3:14",
														"type": ""
													}
												],
												"src": "13799:365:14"
											},
											{
												"body": {
													"nativeSrc": "14369:330:14",
													"nodeType": "YulBlock",
													"src": "14369:330:14",
													"statements": [
														{
															"nativeSrc": "14379:26:14",
															"nodeType": "YulAssignment",
															"src": "14379:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14391:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14391:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14402:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14402:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14387:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14387:3:14"
																},
																"nativeSrc": "14387:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14387:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14379:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14379:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14459:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14459:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14472:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14472:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14483:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14483:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14468:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14468:3:14"
																		},
																		"nativeSrc": "14468:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14468:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14415:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "14415:43:14"
																},
																"nativeSrc": "14415:71:14",
																"nodeType": "YulFunctionCall",
																"src": "14415:71:14"
															},
															"nativeSrc": "14415:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "14415:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14507:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14507:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14518:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14518:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14503:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14503:3:14"
																		},
																		"nativeSrc": "14503:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14503:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14527:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "14527:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14533:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14533:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14523:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14523:3:14"
																		},
																		"nativeSrc": "14523:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14523:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14496:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14496:6:14"
																},
																"nativeSrc": "14496:48:14",
																"nodeType": "YulFunctionCall",
																"src": "14496:48:14"
															},
															"nativeSrc": "14496:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "14496:48:14"
														},
														{
															"nativeSrc": "14553:139:14",
															"nodeType": "YulAssignment",
															"src": "14553:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14687:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "14687:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14561:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "14561:124:14"
																},
																"nativeSrc": "14561:131:14",
																"nodeType": "YulFunctionCall",
																"src": "14561:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14553:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14553:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b__to_t_address_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14170:529:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14341:9:14",
														"nodeType": "YulTypedName",
														"src": "14341:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14353:6:14",
														"nodeType": "YulTypedName",
														"src": "14353:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14364:4:14",
														"nodeType": "YulTypedName",
														"src": "14364:4:14",
														"type": ""
													}
												],
												"src": "14170:529:14"
											},
											{
												"body": {
													"nativeSrc": "14768:80:14",
													"nodeType": "YulBlock",
													"src": "14768:80:14",
													"statements": [
														{
															"nativeSrc": "14778:22:14",
															"nodeType": "YulAssignment",
															"src": "14778:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14793:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14793:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14787:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "14787:5:14"
																},
																"nativeSrc": "14787:13:14",
																"nodeType": "YulFunctionCall",
																"src": "14787:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14778:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "14778:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14836:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "14836:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "14809:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "14809:26:14"
																},
																"nativeSrc": "14809:33:14",
																"nodeType": "YulFunctionCall",
																"src": "14809:33:14"
															},
															"nativeSrc": "14809:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "14809:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "14705:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14746:6:14",
														"nodeType": "YulTypedName",
														"src": "14746:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14754:3:14",
														"nodeType": "YulTypedName",
														"src": "14754:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14762:5:14",
														"nodeType": "YulTypedName",
														"src": "14762:5:14",
														"type": ""
													}
												],
												"src": "14705:143:14"
											},
											{
												"body": {
													"nativeSrc": "14931:274:14",
													"nodeType": "YulBlock",
													"src": "14931:274:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "14977:83:14",
																"nodeType": "YulBlock",
																"src": "14977:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14979:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "14979:77:14"
																			},
																			"nativeSrc": "14979:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14979:79:14"
																		},
																		"nativeSrc": "14979:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14979:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14952:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "14952:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14961:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14961:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14948:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14948:3:14"
																		},
																		"nativeSrc": "14948:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14948:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14973:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14973:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14944:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14944:3:14"
																},
																"nativeSrc": "14944:32:14",
																"nodeType": "YulFunctionCall",
																"src": "14944:32:14"
															},
															"nativeSrc": "14941:119:14",
															"nodeType": "YulIf",
															"src": "14941:119:14"
														},
														{
															"nativeSrc": "15070:128:14",
															"nodeType": "YulBlock",
															"src": "15070:128:14",
															"statements": [
																{
																	"nativeSrc": "15085:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15085:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15099:1:14",
																		"nodeType": "YulLiteral",
																		"src": "15099:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15089:6:14",
																			"nodeType": "YulTypedName",
																			"src": "15089:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15114:74:14",
																	"nodeType": "YulAssignment",
																	"src": "15114:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15160:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "15160:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15171:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "15171:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15156:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15156:3:14"
																				},
																				"nativeSrc": "15156:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15156:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15180:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "15180:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "15124:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "15124:31:14"
																		},
																		"nativeSrc": "15124:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15124:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15114:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "15114:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "14854:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14901:9:14",
														"nodeType": "YulTypedName",
														"src": "14901:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14912:7:14",
														"nodeType": "YulTypedName",
														"src": "14912:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14924:6:14",
														"nodeType": "YulTypedName",
														"src": "14924:6:14",
														"type": ""
													}
												],
												"src": "14854:351:14"
											},
											{
												"body": {
													"nativeSrc": "15317:68:14",
													"nodeType": "YulBlock",
													"src": "15317:68:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15339:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15339:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15347:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15347:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15335:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15335:3:14"
																		},
																		"nativeSrc": "15335:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15335:14:14"
																	},
																	{
																		"hexValue": "496e73756666696369656e742054727573742073636f7265",
																		"kind": "string",
																		"nativeSrc": "15351:26:14",
																		"nodeType": "YulLiteral",
																		"src": "15351:26:14",
																		"type": "",
																		"value": "Insufficient Trust score"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15328:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15328:6:14"
																},
																"nativeSrc": "15328:50:14",
																"nodeType": "YulFunctionCall",
																"src": "15328:50:14"
															},
															"nativeSrc": "15328:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "15328:50:14"
														}
													]
												},
												"name": "store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5",
												"nativeSrc": "15211:174:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15309:6:14",
														"nodeType": "YulTypedName",
														"src": "15309:6:14",
														"type": ""
													}
												],
												"src": "15211:174:14"
											},
											{
												"body": {
													"nativeSrc": "15537:220:14",
													"nodeType": "YulBlock",
													"src": "15537:220:14",
													"statements": [
														{
															"nativeSrc": "15547:74:14",
															"nodeType": "YulAssignment",
															"src": "15547:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15613:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15613:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15618:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15618:2:14",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15554:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "15554:58:14"
																},
																"nativeSrc": "15554:67:14",
																"nodeType": "YulFunctionCall",
																"src": "15554:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15547:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15547:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15719:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15719:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5",
																	"nativeSrc": "15630:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "15630:88:14"
																},
																"nativeSrc": "15630:93:14",
																"nodeType": "YulFunctionCall",
																"src": "15630:93:14"
															},
															"nativeSrc": "15630:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "15630:93:14"
														},
														{
															"nativeSrc": "15732:19:14",
															"nodeType": "YulAssignment",
															"src": "15732:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15743:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15743:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15748:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15748:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15739:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15739:3:14"
																},
																"nativeSrc": "15739:12:14",
																"nodeType": "YulFunctionCall",
																"src": "15739:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15732:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15732:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15391:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15525:3:14",
														"nodeType": "YulTypedName",
														"src": "15525:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15533:3:14",
														"nodeType": "YulTypedName",
														"src": "15533:3:14",
														"type": ""
													}
												],
												"src": "15391:366:14"
											},
											{
												"body": {
													"nativeSrc": "15934:248:14",
													"nodeType": "YulBlock",
													"src": "15934:248:14",
													"statements": [
														{
															"nativeSrc": "15944:26:14",
															"nodeType": "YulAssignment",
															"src": "15944:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15956:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15956:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15967:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15967:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15952:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15952:3:14"
																},
																"nativeSrc": "15952:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15952:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15944:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15944:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15991:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15991:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16002:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16002:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15987:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15987:3:14"
																		},
																		"nativeSrc": "15987:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15987:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16010:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "16010:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16016:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16016:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16006:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16006:3:14"
																		},
																		"nativeSrc": "16006:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16006:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15980:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15980:6:14"
																},
																"nativeSrc": "15980:47:14",
																"nodeType": "YulFunctionCall",
																"src": "15980:47:14"
															},
															"nativeSrc": "15980:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "15980:47:14"
														},
														{
															"nativeSrc": "16036:139:14",
															"nodeType": "YulAssignment",
															"src": "16036:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16170:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16170:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16044:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "16044:124:14"
																},
																"nativeSrc": "16044:131:14",
																"nodeType": "YulFunctionCall",
																"src": "16044:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16036:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16036:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15763:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15914:9:14",
														"nodeType": "YulTypedName",
														"src": "15914:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15929:4:14",
														"nodeType": "YulTypedName",
														"src": "15929:4:14",
														"type": ""
													}
												],
												"src": "15763:419:14"
											},
											{
												"body": {
													"nativeSrc": "16233:149:14",
													"nodeType": "YulBlock",
													"src": "16233:149:14",
													"statements": [
														{
															"nativeSrc": "16243:25:14",
															"nodeType": "YulAssignment",
															"src": "16243:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16266:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16266:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16248:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "16248:17:14"
																},
																"nativeSrc": "16248:20:14",
																"nodeType": "YulFunctionCall",
																"src": "16248:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16243:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "16243:1:14"
																}
															]
														},
														{
															"nativeSrc": "16277:25:14",
															"nodeType": "YulAssignment",
															"src": "16277:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16300:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16300:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16282:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "16282:17:14"
																},
																"nativeSrc": "16282:20:14",
																"nodeType": "YulFunctionCall",
																"src": "16282:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16277:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "16277:1:14"
																}
															]
														},
														{
															"nativeSrc": "16311:17:14",
															"nodeType": "YulAssignment",
															"src": "16311:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16323:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16323:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16326:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16326:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16319:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16319:3:14"
																},
																"nativeSrc": "16319:9:14",
																"nodeType": "YulFunctionCall",
																"src": "16319:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16311:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16311:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16353:22:14",
																"nodeType": "YulBlock",
																"src": "16353:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16355:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "16355:16:14"
																			},
																			"nativeSrc": "16355:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16355:18:14"
																		},
																		"nativeSrc": "16355:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "16355:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16344:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16344:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16350:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16350:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16341:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "16341:2:14"
																},
																"nativeSrc": "16341:11:14",
																"nodeType": "YulFunctionCall",
																"src": "16341:11:14"
															},
															"nativeSrc": "16338:37:14",
															"nodeType": "YulIf",
															"src": "16338:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16188:194:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16219:1:14",
														"nodeType": "YulTypedName",
														"src": "16219:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16222:1:14",
														"nodeType": "YulTypedName",
														"src": "16222:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16228:4:14",
														"nodeType": "YulTypedName",
														"src": "16228:4:14",
														"type": ""
													}
												],
												"src": "16188:194:14"
											},
											{
												"body": {
													"nativeSrc": "16501:34:14",
													"nodeType": "YulBlock",
													"src": "16501:34:14",
													"statements": [
														{
															"nativeSrc": "16511:18:14",
															"nodeType": "YulAssignment",
															"src": "16511:18:14",
															"value": {
																"name": "pos",
																"nativeSrc": "16526:3:14",
																"nodeType": "YulIdentifier",
																"src": "16526:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16511:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "16511:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16388:147:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16473:3:14",
														"nodeType": "YulTypedName",
														"src": "16473:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16478:6:14",
														"nodeType": "YulTypedName",
														"src": "16478:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16489:11:14",
														"nodeType": "YulTypedName",
														"src": "16489:11:14",
														"type": ""
													}
												],
												"src": "16388:147:14"
											},
											{
												"body": {
													"nativeSrc": "16647:8:14",
													"nodeType": "YulBlock",
													"src": "16647:8:14",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "16541:114:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16639:6:14",
														"nodeType": "YulTypedName",
														"src": "16639:6:14",
														"type": ""
													}
												],
												"src": "16541:114:14"
											},
											{
												"body": {
													"nativeSrc": "16824:235:14",
													"nodeType": "YulBlock",
													"src": "16824:235:14",
													"statements": [
														{
															"nativeSrc": "16834:90:14",
															"nodeType": "YulAssignment",
															"src": "16834:90:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16917:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16917:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16922:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16922:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16841:75:14",
																	"nodeType": "YulIdentifier",
																	"src": "16841:75:14"
																},
																"nativeSrc": "16841:83:14",
																"nodeType": "YulFunctionCall",
																"src": "16841:83:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16834:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16834:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17022:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17022:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "16933:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "16933:88:14"
																},
																"nativeSrc": "16933:93:14",
																"nodeType": "YulFunctionCall",
																"src": "16933:93:14"
															},
															"nativeSrc": "16933:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "16933:93:14"
														},
														{
															"nativeSrc": "17035:18:14",
															"nodeType": "YulAssignment",
															"src": "17035:18:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17046:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17046:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17051:1:14",
																		"nodeType": "YulLiteral",
																		"src": "17051:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17042:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17042:3:14"
																},
																"nativeSrc": "17042:11:14",
																"nodeType": "YulFunctionCall",
																"src": "17042:11:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17035:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17035:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16661:398:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16812:3:14",
														"nodeType": "YulTypedName",
														"src": "16812:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16820:3:14",
														"nodeType": "YulTypedName",
														"src": "16820:3:14",
														"type": ""
													}
												],
												"src": "16661:398:14"
											},
											{
												"body": {
													"nativeSrc": "17253:191:14",
													"nodeType": "YulBlock",
													"src": "17253:191:14",
													"statements": [
														{
															"nativeSrc": "17264:154:14",
															"nodeType": "YulAssignment",
															"src": "17264:154:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17414:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17414:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17271:141:14",
																	"nodeType": "YulIdentifier",
																	"src": "17271:141:14"
																},
																"nativeSrc": "17271:147:14",
																"nodeType": "YulFunctionCall",
																"src": "17271:147:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17264:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17264:3:14"
																}
															]
														},
														{
															"nativeSrc": "17428:10:14",
															"nodeType": "YulAssignment",
															"src": "17428:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "17435:3:14",
																"nodeType": "YulIdentifier",
																"src": "17435:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17428:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17428:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17065:379:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17240:3:14",
														"nodeType": "YulTypedName",
														"src": "17240:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17249:3:14",
														"nodeType": "YulTypedName",
														"src": "17249:3:14",
														"type": ""
													}
												],
												"src": "17065:379:14"
											},
											{
												"body": {
													"nativeSrc": "17556:65:14",
													"nodeType": "YulBlock",
													"src": "17556:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17578:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17578:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17586:1:14",
																				"nodeType": "YulLiteral",
																				"src": "17586:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17574:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17574:3:14"
																		},
																		"nativeSrc": "17574:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17574:14:14"
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "17590:23:14",
																		"nodeType": "YulLiteral",
																		"src": "17590:23:14",
																		"type": "",
																		"value": "Ether transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17567:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17567:6:14"
																},
																"nativeSrc": "17567:47:14",
																"nodeType": "YulFunctionCall",
																"src": "17567:47:14"
															},
															"nativeSrc": "17567:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "17567:47:14"
														}
													]
												},
												"name": "store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
												"nativeSrc": "17450:171:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17548:6:14",
														"nodeType": "YulTypedName",
														"src": "17548:6:14",
														"type": ""
													}
												],
												"src": "17450:171:14"
											},
											{
												"body": {
													"nativeSrc": "17773:220:14",
													"nodeType": "YulBlock",
													"src": "17773:220:14",
													"statements": [
														{
															"nativeSrc": "17783:74:14",
															"nodeType": "YulAssignment",
															"src": "17783:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17849:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17849:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17854:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17854:2:14",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17790:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "17790:58:14"
																},
																"nativeSrc": "17790:67:14",
																"nodeType": "YulFunctionCall",
																"src": "17790:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17783:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17783:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17955:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17955:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																	"nativeSrc": "17866:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "17866:88:14"
																},
																"nativeSrc": "17866:93:14",
																"nodeType": "YulFunctionCall",
																"src": "17866:93:14"
															},
															"nativeSrc": "17866:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "17866:93:14"
														},
														{
															"nativeSrc": "17968:19:14",
															"nodeType": "YulAssignment",
															"src": "17968:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17979:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17979:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17984:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17984:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17975:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17975:3:14"
																},
																"nativeSrc": "17975:12:14",
																"nodeType": "YulFunctionCall",
																"src": "17975:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17968:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17968:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17627:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17761:3:14",
														"nodeType": "YulTypedName",
														"src": "17761:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17769:3:14",
														"nodeType": "YulTypedName",
														"src": "17769:3:14",
														"type": ""
													}
												],
												"src": "17627:366:14"
											},
											{
												"body": {
													"nativeSrc": "18170:248:14",
													"nodeType": "YulBlock",
													"src": "18170:248:14",
													"statements": [
														{
															"nativeSrc": "18180:26:14",
															"nodeType": "YulAssignment",
															"src": "18180:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18192:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18192:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18203:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18203:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18188:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18188:3:14"
																},
																"nativeSrc": "18188:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18188:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18180:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18180:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18227:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18227:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18238:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18238:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18223:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18223:3:14"
																		},
																		"nativeSrc": "18223:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18223:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18246:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "18246:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18252:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18252:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18242:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18242:3:14"
																		},
																		"nativeSrc": "18242:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18242:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18216:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18216:6:14"
																},
																"nativeSrc": "18216:47:14",
																"nodeType": "YulFunctionCall",
																"src": "18216:47:14"
															},
															"nativeSrc": "18216:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "18216:47:14"
														},
														{
															"nativeSrc": "18272:139:14",
															"nodeType": "YulAssignment",
															"src": "18272:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18406:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18406:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18280:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "18280:124:14"
																},
																"nativeSrc": "18280:131:14",
																"nodeType": "YulFunctionCall",
																"src": "18280:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18272:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18272:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17999:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18150:9:14",
														"nodeType": "YulTypedName",
														"src": "18150:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18165:4:14",
														"nodeType": "YulTypedName",
														"src": "18165:4:14",
														"type": ""
													}
												],
												"src": "17999:419:14"
											},
											{
												"body": {
													"nativeSrc": "18530:66:14",
													"nodeType": "YulBlock",
													"src": "18530:66:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18552:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "18552:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18560:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18560:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18548:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18548:3:14"
																		},
																		"nativeSrc": "18548:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18548:14:14"
																	},
																	{
																		"hexValue": "496e636f727265637420457468657220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "18564:24:14",
																		"nodeType": "YulLiteral",
																		"src": "18564:24:14",
																		"type": "",
																		"value": "Incorrect Ether amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18541:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18541:6:14"
																},
																"nativeSrc": "18541:48:14",
																"nodeType": "YulFunctionCall",
																"src": "18541:48:14"
															},
															"nativeSrc": "18541:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "18541:48:14"
														}
													]
												},
												"name": "store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
												"nativeSrc": "18424:172:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18522:6:14",
														"nodeType": "YulTypedName",
														"src": "18522:6:14",
														"type": ""
													}
												],
												"src": "18424:172:14"
											},
											{
												"body": {
													"nativeSrc": "18748:220:14",
													"nodeType": "YulBlock",
													"src": "18748:220:14",
													"statements": [
														{
															"nativeSrc": "18758:74:14",
															"nodeType": "YulAssignment",
															"src": "18758:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18824:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18824:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18829:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18829:2:14",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18765:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "18765:58:14"
																},
																"nativeSrc": "18765:67:14",
																"nodeType": "YulFunctionCall",
																"src": "18765:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18758:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18758:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18930:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18930:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																	"nativeSrc": "18841:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "18841:88:14"
																},
																"nativeSrc": "18841:93:14",
																"nodeType": "YulFunctionCall",
																"src": "18841:93:14"
															},
															"nativeSrc": "18841:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "18841:93:14"
														},
														{
															"nativeSrc": "18943:19:14",
															"nodeType": "YulAssignment",
															"src": "18943:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18954:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18954:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18959:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18959:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18950:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18950:3:14"
																},
																"nativeSrc": "18950:12:14",
																"nodeType": "YulFunctionCall",
																"src": "18950:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18943:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18943:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18602:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18736:3:14",
														"nodeType": "YulTypedName",
														"src": "18736:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18744:3:14",
														"nodeType": "YulTypedName",
														"src": "18744:3:14",
														"type": ""
													}
												],
												"src": "18602:366:14"
											},
											{
												"body": {
													"nativeSrc": "19145:248:14",
													"nodeType": "YulBlock",
													"src": "19145:248:14",
													"statements": [
														{
															"nativeSrc": "19155:26:14",
															"nodeType": "YulAssignment",
															"src": "19155:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19167:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19167:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19178:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19178:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19163:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19163:3:14"
																},
																"nativeSrc": "19163:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19163:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19155:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19155:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19202:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19202:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19213:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19213:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19198:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19198:3:14"
																		},
																		"nativeSrc": "19198:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19198:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19221:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "19221:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19227:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19227:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19217:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19217:3:14"
																		},
																		"nativeSrc": "19217:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19217:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19191:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19191:6:14"
																},
																"nativeSrc": "19191:47:14",
																"nodeType": "YulFunctionCall",
																"src": "19191:47:14"
															},
															"nativeSrc": "19191:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "19191:47:14"
														},
														{
															"nativeSrc": "19247:139:14",
															"nodeType": "YulAssignment",
															"src": "19247:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19381:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "19381:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19255:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "19255:124:14"
																},
																"nativeSrc": "19255:131:14",
																"nodeType": "YulFunctionCall",
																"src": "19255:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19247:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19247:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18974:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19125:9:14",
														"nodeType": "YulTypedName",
														"src": "19125:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19140:4:14",
														"nodeType": "YulTypedName",
														"src": "19140:4:14",
														"type": ""
													}
												],
												"src": "18974:419:14"
											},
											{
												"body": {
													"nativeSrc": "19505:121:14",
													"nodeType": "YulBlock",
													"src": "19505:121:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19527:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19527:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19535:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19535:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19523:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19523:3:14"
																		},
																		"nativeSrc": "19523:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19523:14:14"
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "19539:34:14",
																		"nodeType": "YulLiteral",
																		"src": "19539:34:14",
																		"type": "",
																		"value": "Deposit amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19516:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19516:6:14"
																},
																"nativeSrc": "19516:58:14",
																"nodeType": "YulFunctionCall",
																"src": "19516:58:14"
															},
															"nativeSrc": "19516:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "19516:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19595:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19595:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19603:2:14",
																				"nodeType": "YulLiteral",
																				"src": "19603:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19591:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19591:3:14"
																		},
																		"nativeSrc": "19591:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19591:15:14"
																	},
																	{
																		"hexValue": "68616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "19608:10:14",
																		"nodeType": "YulLiteral",
																		"src": "19608:10:14",
																		"type": "",
																		"value": "han zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19584:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19584:6:14"
																},
																"nativeSrc": "19584:35:14",
																"nodeType": "YulFunctionCall",
																"src": "19584:35:14"
															},
															"nativeSrc": "19584:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "19584:35:14"
														}
													]
												},
												"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
												"nativeSrc": "19399:227:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19497:6:14",
														"nodeType": "YulTypedName",
														"src": "19497:6:14",
														"type": ""
													}
												],
												"src": "19399:227:14"
											},
											{
												"body": {
													"nativeSrc": "19778:220:14",
													"nodeType": "YulBlock",
													"src": "19778:220:14",
													"statements": [
														{
															"nativeSrc": "19788:74:14",
															"nodeType": "YulAssignment",
															"src": "19788:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19854:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19854:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19859:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19859:2:14",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19795:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "19795:58:14"
																},
																"nativeSrc": "19795:67:14",
																"nodeType": "YulFunctionCall",
																"src": "19795:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19788:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19788:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19960:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19960:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																	"nativeSrc": "19871:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "19871:88:14"
																},
																"nativeSrc": "19871:93:14",
																"nodeType": "YulFunctionCall",
																"src": "19871:93:14"
															},
															"nativeSrc": "19871:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "19871:93:14"
														},
														{
															"nativeSrc": "19973:19:14",
															"nodeType": "YulAssignment",
															"src": "19973:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19984:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19984:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19989:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19989:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19980:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19980:3:14"
																},
																"nativeSrc": "19980:12:14",
																"nodeType": "YulFunctionCall",
																"src": "19980:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19973:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19973:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19632:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19766:3:14",
														"nodeType": "YulTypedName",
														"src": "19766:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19774:3:14",
														"nodeType": "YulTypedName",
														"src": "19774:3:14",
														"type": ""
													}
												],
												"src": "19632:366:14"
											},
											{
												"body": {
													"nativeSrc": "20175:248:14",
													"nodeType": "YulBlock",
													"src": "20175:248:14",
													"statements": [
														{
															"nativeSrc": "20185:26:14",
															"nodeType": "YulAssignment",
															"src": "20185:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20197:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "20197:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20208:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20208:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20193:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20193:3:14"
																},
																"nativeSrc": "20193:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20193:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20185:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20185:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20232:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20232:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20243:1:14",
																				"nodeType": "YulLiteral",
																				"src": "20243:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20228:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20228:3:14"
																		},
																		"nativeSrc": "20228:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20228:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20251:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "20251:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20257:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20257:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20247:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20247:3:14"
																		},
																		"nativeSrc": "20247:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20247:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20221:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20221:6:14"
																},
																"nativeSrc": "20221:47:14",
																"nodeType": "YulFunctionCall",
																"src": "20221:47:14"
															},
															"nativeSrc": "20221:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "20221:47:14"
														},
														{
															"nativeSrc": "20277:139:14",
															"nodeType": "YulAssignment",
															"src": "20277:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20411:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "20411:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20285:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "20285:124:14"
																},
																"nativeSrc": "20285:131:14",
																"nodeType": "YulFunctionCall",
																"src": "20285:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20277:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20277:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20004:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20155:9:14",
														"nodeType": "YulTypedName",
														"src": "20155:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20170:4:14",
														"nodeType": "YulTypedName",
														"src": "20170:4:14",
														"type": ""
													}
												],
												"src": "20004:419:14"
											},
											{
												"body": {
													"nativeSrc": "20482:32:14",
													"nodeType": "YulBlock",
													"src": "20482:32:14",
													"statements": [
														{
															"nativeSrc": "20492:16:14",
															"nodeType": "YulAssignment",
															"src": "20492:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "20503:5:14",
																"nodeType": "YulIdentifier",
																"src": "20503:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "20492:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "20492:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "20429:85:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20464:5:14",
														"nodeType": "YulTypedName",
														"src": "20464:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "20474:7:14",
														"nodeType": "YulTypedName",
														"src": "20474:7:14",
														"type": ""
													}
												],
												"src": "20429:85:14"
											},
											{
												"body": {
													"nativeSrc": "20587:89:14",
													"nodeType": "YulBlock",
													"src": "20587:89:14",
													"statements": [
														{
															"nativeSrc": "20597:73:14",
															"nodeType": "YulAssignment",
															"src": "20597:73:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20662:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "20662:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "20636:25:14",
																					"nodeType": "YulIdentifier",
																					"src": "20636:25:14"
																				},
																				"nativeSrc": "20636:32:14",
																				"nodeType": "YulFunctionCall",
																				"src": "20636:32:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "20627:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "20627:8:14"
																		},
																		"nativeSrc": "20627:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20627:42:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "20610:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "20610:16:14"
																},
																"nativeSrc": "20610:60:14",
																"nodeType": "YulFunctionCall",
																"src": "20610:60:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "20597:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "20597:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "20520:156:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20567:5:14",
														"nodeType": "YulTypedName",
														"src": "20567:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "20577:9:14",
														"nodeType": "YulTypedName",
														"src": "20577:9:14",
														"type": ""
													}
												],
												"src": "20520:156:14"
											},
											{
												"body": {
													"nativeSrc": "20754:73:14",
													"nodeType": "YulBlock",
													"src": "20754:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20771:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "20771:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20814:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "20814:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "20776:37:14",
																			"nodeType": "YulIdentifier",
																			"src": "20776:37:14"
																		},
																		"nativeSrc": "20776:44:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20776:44:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20764:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20764:6:14"
																},
																"nativeSrc": "20764:57:14",
																"nodeType": "YulFunctionCall",
																"src": "20764:57:14"
															},
															"nativeSrc": "20764:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "20764:57:14"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "20682:145:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20742:5:14",
														"nodeType": "YulTypedName",
														"src": "20742:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20749:3:14",
														"nodeType": "YulTypedName",
														"src": "20749:3:14",
														"type": ""
													}
												],
												"src": "20682:145:14"
											},
											{
												"body": {
													"nativeSrc": "20938:131:14",
													"nodeType": "YulBlock",
													"src": "20938:131:14",
													"statements": [
														{
															"nativeSrc": "20948:26:14",
															"nodeType": "YulAssignment",
															"src": "20948:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20960:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "20960:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20971:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20971:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20956:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20956:3:14"
																},
																"nativeSrc": "20956:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20956:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20948:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20948:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21035:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "21035:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21048:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "21048:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21059:1:14",
																				"nodeType": "YulLiteral",
																				"src": "21059:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21044:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21044:3:14"
																		},
																		"nativeSrc": "21044:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21044:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "20984:50:14",
																	"nodeType": "YulIdentifier",
																	"src": "20984:50:14"
																},
																"nativeSrc": "20984:78:14",
																"nodeType": "YulFunctionCall",
																"src": "20984:78:14"
															},
															"nativeSrc": "20984:78:14",
															"nodeType": "YulExpressionStatement",
															"src": "20984:78:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "20833:236:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20910:9:14",
														"nodeType": "YulTypedName",
														"src": "20910:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20922:6:14",
														"nodeType": "YulTypedName",
														"src": "20922:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20933:4:14",
														"nodeType": "YulTypedName",
														"src": "20933:4:14",
														"type": ""
													}
												],
												"src": "20833:236:14"
											},
											{
												"body": {
													"nativeSrc": "21103:152:14",
													"nodeType": "YulBlock",
													"src": "21103:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21120:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21120:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21123:77:14",
																		"nodeType": "YulLiteral",
																		"src": "21123:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21113:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21113:6:14"
																},
																"nativeSrc": "21113:88:14",
																"nodeType": "YulFunctionCall",
																"src": "21113:88:14"
															},
															"nativeSrc": "21113:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "21113:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21217:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21217:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21220:4:14",
																		"nodeType": "YulLiteral",
																		"src": "21220:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21210:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21210:6:14"
																},
																"nativeSrc": "21210:15:14",
																"nodeType": "YulFunctionCall",
																"src": "21210:15:14"
															},
															"nativeSrc": "21210:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "21210:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21241:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21241:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21244:4:14",
																		"nodeType": "YulLiteral",
																		"src": "21244:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21234:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21234:6:14"
																},
																"nativeSrc": "21234:15:14",
																"nodeType": "YulFunctionCall",
																"src": "21234:15:14"
															},
															"nativeSrc": "21234:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "21234:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "21075:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "21075:180:14"
											},
											{
												"body": {
													"nativeSrc": "21312:269:14",
													"nodeType": "YulBlock",
													"src": "21312:269:14",
													"statements": [
														{
															"nativeSrc": "21322:22:14",
															"nodeType": "YulAssignment",
															"src": "21322:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21336:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "21336:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21342:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21342:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "21332:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21332:3:14"
																},
																"nativeSrc": "21332:12:14",
																"nodeType": "YulFunctionCall",
																"src": "21332:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21322:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21322:6:14"
																}
															]
														},
														{
															"nativeSrc": "21353:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "21353:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21383:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "21383:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21389:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21389:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21379:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21379:3:14"
																},
																"nativeSrc": "21379:12:14",
																"nodeType": "YulFunctionCall",
																"src": "21379:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "21357:18:14",
																	"nodeType": "YulTypedName",
																	"src": "21357:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21430:51:14",
																"nodeType": "YulBlock",
																"src": "21430:51:14",
																"statements": [
																	{
																		"nativeSrc": "21444:27:14",
																		"nodeType": "YulAssignment",
																		"src": "21444:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "21458:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "21458:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21466:4:14",
																					"nodeType": "YulLiteral",
																					"src": "21466:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "21454:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "21454:3:14"
																			},
																			"nativeSrc": "21454:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21454:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "21444:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21444:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "21410:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "21410:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21403:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21403:6:14"
																},
																"nativeSrc": "21403:26:14",
																"nodeType": "YulFunctionCall",
																"src": "21403:26:14"
															},
															"nativeSrc": "21400:81:14",
															"nodeType": "YulIf",
															"src": "21400:81:14"
														},
														{
															"body": {
																"nativeSrc": "21533:42:14",
																"nodeType": "YulBlock",
																"src": "21533:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "21547:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "21547:16:14"
																			},
																			"nativeSrc": "21547:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21547:18:14"
																		},
																		"nativeSrc": "21547:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "21547:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "21497:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "21497:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21520:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21520:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21528:2:14",
																				"nodeType": "YulLiteral",
																				"src": "21528:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "21517:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "21517:2:14"
																		},
																		"nativeSrc": "21517:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21517:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "21494:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "21494:2:14"
																},
																"nativeSrc": "21494:38:14",
																"nodeType": "YulFunctionCall",
																"src": "21494:38:14"
															},
															"nativeSrc": "21491:84:14",
															"nodeType": "YulIf",
															"src": "21491:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "21261:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21296:4:14",
														"nodeType": "YulTypedName",
														"src": "21296:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21305:6:14",
														"nodeType": "YulTypedName",
														"src": "21305:6:14",
														"type": ""
													}
												],
												"src": "21261:320:14"
											},
											{
												"body": {
													"nativeSrc": "21629:48:14",
													"nodeType": "YulBlock",
													"src": "21629:48:14",
													"statements": [
														{
															"nativeSrc": "21639:32:14",
															"nodeType": "YulAssignment",
															"src": "21639:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21664:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "21664:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "21657:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "21657:6:14"
																		},
																		"nativeSrc": "21657:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21657:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21650:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21650:6:14"
																},
																"nativeSrc": "21650:21:14",
																"nodeType": "YulFunctionCall",
																"src": "21650:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "21639:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "21639:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "21587:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21611:5:14",
														"nodeType": "YulTypedName",
														"src": "21611:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "21621:7:14",
														"nodeType": "YulTypedName",
														"src": "21621:7:14",
														"type": ""
													}
												],
												"src": "21587:90:14"
											},
											{
												"body": {
													"nativeSrc": "21723:76:14",
													"nodeType": "YulBlock",
													"src": "21723:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "21777:16:14",
																"nodeType": "YulBlock",
																"src": "21777:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "21786:1:14",
																					"nodeType": "YulLiteral",
																					"src": "21786:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21789:1:14",
																					"nodeType": "YulLiteral",
																					"src": "21789:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "21779:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21779:6:14"
																			},
																			"nativeSrc": "21779:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21779:12:14"
																		},
																		"nativeSrc": "21779:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "21779:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21746:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "21746:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21768:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "21768:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "21753:14:14",
																					"nodeType": "YulIdentifier",
																					"src": "21753:14:14"
																				},
																				"nativeSrc": "21753:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "21753:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "21743:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "21743:2:14"
																		},
																		"nativeSrc": "21743:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21743:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21736:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21736:6:14"
																},
																"nativeSrc": "21736:40:14",
																"nodeType": "YulFunctionCall",
																"src": "21736:40:14"
															},
															"nativeSrc": "21733:60:14",
															"nodeType": "YulIf",
															"src": "21733:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "21683:116:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21716:5:14",
														"nodeType": "YulTypedName",
														"src": "21716:5:14",
														"type": ""
													}
												],
												"src": "21683:116:14"
											},
											{
												"body": {
													"nativeSrc": "21865:77:14",
													"nodeType": "YulBlock",
													"src": "21865:77:14",
													"statements": [
														{
															"nativeSrc": "21875:22:14",
															"nodeType": "YulAssignment",
															"src": "21875:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21890:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "21890:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21884:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "21884:5:14"
																},
																"nativeSrc": "21884:13:14",
																"nodeType": "YulFunctionCall",
																"src": "21884:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21875:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "21875:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21930:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "21930:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "21906:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "21906:23:14"
																},
																"nativeSrc": "21906:30:14",
																"nodeType": "YulFunctionCall",
																"src": "21906:30:14"
															},
															"nativeSrc": "21906:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "21906:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "21805:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21843:6:14",
														"nodeType": "YulTypedName",
														"src": "21843:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21851:3:14",
														"nodeType": "YulTypedName",
														"src": "21851:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21859:5:14",
														"nodeType": "YulTypedName",
														"src": "21859:5:14",
														"type": ""
													}
												],
												"src": "21805:137:14"
											},
											{
												"body": {
													"nativeSrc": "22022:271:14",
													"nodeType": "YulBlock",
													"src": "22022:271:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "22068:83:14",
																"nodeType": "YulBlock",
																"src": "22068:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22070:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "22070:77:14"
																			},
																			"nativeSrc": "22070:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "22070:79:14"
																		},
																		"nativeSrc": "22070:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "22070:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22043:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "22043:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22052:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22052:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22039:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22039:3:14"
																		},
																		"nativeSrc": "22039:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22039:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22064:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22064:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "22035:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22035:3:14"
																},
																"nativeSrc": "22035:32:14",
																"nodeType": "YulFunctionCall",
																"src": "22035:32:14"
															},
															"nativeSrc": "22032:119:14",
															"nodeType": "YulIf",
															"src": "22032:119:14"
														},
														{
															"nativeSrc": "22161:125:14",
															"nodeType": "YulBlock",
															"src": "22161:125:14",
															"statements": [
																{
																	"nativeSrc": "22176:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22176:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22190:1:14",
																		"nodeType": "YulLiteral",
																		"src": "22190:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22180:6:14",
																			"nodeType": "YulTypedName",
																			"src": "22180:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22205:71:14",
																	"nodeType": "YulAssignment",
																	"src": "22205:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22248:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "22248:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22259:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "22259:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22244:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "22244:3:14"
																				},
																				"nativeSrc": "22244:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "22244:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22268:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "22268:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "22215:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "22215:28:14"
																		},
																		"nativeSrc": "22215:61:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22215:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22205:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "22205:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "21948:345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21992:9:14",
														"nodeType": "YulTypedName",
														"src": "21992:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "22003:7:14",
														"nodeType": "YulTypedName",
														"src": "22003:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "22015:6:14",
														"nodeType": "YulTypedName",
														"src": "22015:6:14",
														"type": ""
													}
												],
												"src": "21948:345:14"
											},
											{
												"body": {
													"nativeSrc": "22405:66:14",
													"nodeType": "YulBlock",
													"src": "22405:66:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22427:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "22427:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22435:1:14",
																				"nodeType": "YulLiteral",
																				"src": "22435:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22423:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22423:3:14"
																		},
																		"nativeSrc": "22423:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22423:14:14"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
																		"kind": "string",
																		"nativeSrc": "22439:24:14",
																		"nodeType": "YulLiteral",
																		"src": "22439:24:14",
																		"type": "",
																		"value": "Caller is not an admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22416:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22416:6:14"
																},
																"nativeSrc": "22416:48:14",
																"nodeType": "YulFunctionCall",
																"src": "22416:48:14"
															},
															"nativeSrc": "22416:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "22416:48:14"
														}
													]
												},
												"name": "store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
												"nativeSrc": "22299:172:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22397:6:14",
														"nodeType": "YulTypedName",
														"src": "22397:6:14",
														"type": ""
													}
												],
												"src": "22299:172:14"
											},
											{
												"body": {
													"nativeSrc": "22623:220:14",
													"nodeType": "YulBlock",
													"src": "22623:220:14",
													"statements": [
														{
															"nativeSrc": "22633:74:14",
															"nodeType": "YulAssignment",
															"src": "22633:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22699:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22699:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22704:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22704:2:14",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22640:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "22640:58:14"
																},
																"nativeSrc": "22640:67:14",
																"nodeType": "YulFunctionCall",
																"src": "22640:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22633:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22633:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22805:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22805:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																	"nativeSrc": "22716:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "22716:88:14"
																},
																"nativeSrc": "22716:93:14",
																"nodeType": "YulFunctionCall",
																"src": "22716:93:14"
															},
															"nativeSrc": "22716:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "22716:93:14"
														},
														{
															"nativeSrc": "22818:19:14",
															"nodeType": "YulAssignment",
															"src": "22818:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22829:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22829:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22834:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22834:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22825:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22825:3:14"
																},
																"nativeSrc": "22825:12:14",
																"nodeType": "YulFunctionCall",
																"src": "22825:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22818:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22818:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22477:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22611:3:14",
														"nodeType": "YulTypedName",
														"src": "22611:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22619:3:14",
														"nodeType": "YulTypedName",
														"src": "22619:3:14",
														"type": ""
													}
												],
												"src": "22477:366:14"
											},
											{
												"body": {
													"nativeSrc": "23020:248:14",
													"nodeType": "YulBlock",
													"src": "23020:248:14",
													"statements": [
														{
															"nativeSrc": "23030:26:14",
															"nodeType": "YulAssignment",
															"src": "23030:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23042:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "23042:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23053:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23053:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23038:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23038:3:14"
																},
																"nativeSrc": "23038:18:14",
																"nodeType": "YulFunctionCall",
																"src": "23038:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23030:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23030:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23077:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23077:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23088:1:14",
																				"nodeType": "YulLiteral",
																				"src": "23088:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23073:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23073:3:14"
																		},
																		"nativeSrc": "23073:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23073:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23096:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "23096:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23102:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23102:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23092:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23092:3:14"
																		},
																		"nativeSrc": "23092:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23092:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23066:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23066:6:14"
																},
																"nativeSrc": "23066:47:14",
																"nodeType": "YulFunctionCall",
																"src": "23066:47:14"
															},
															"nativeSrc": "23066:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "23066:47:14"
														},
														{
															"nativeSrc": "23122:139:14",
															"nodeType": "YulAssignment",
															"src": "23122:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23256:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "23256:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23130:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "23130:124:14"
																},
																"nativeSrc": "23130:131:14",
																"nodeType": "YulFunctionCall",
																"src": "23130:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23122:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23122:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22849:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23000:9:14",
														"nodeType": "YulTypedName",
														"src": "23000:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23015:4:14",
														"nodeType": "YulTypedName",
														"src": "23015:4:14",
														"type": ""
													}
												],
												"src": "22849:419:14"
											},
											{
												"body": {
													"nativeSrc": "23380:115:14",
													"nodeType": "YulBlock",
													"src": "23380:115:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23402:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "23402:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23410:1:14",
																				"nodeType": "YulLiteral",
																				"src": "23410:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23398:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23398:3:14"
																		},
																		"nativeSrc": "23398:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23398:14:14"
																	},
																	{
																		"hexValue": "53746172742074696d65206d757374206265206265666f726520656e64207469",
																		"kind": "string",
																		"nativeSrc": "23414:34:14",
																		"nodeType": "YulLiteral",
																		"src": "23414:34:14",
																		"type": "",
																		"value": "Start time must be before end ti"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23391:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23391:6:14"
																},
																"nativeSrc": "23391:58:14",
																"nodeType": "YulFunctionCall",
																"src": "23391:58:14"
															},
															"nativeSrc": "23391:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "23391:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23470:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "23470:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23478:2:14",
																				"nodeType": "YulLiteral",
																				"src": "23478:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23466:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23466:3:14"
																		},
																		"nativeSrc": "23466:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23466:15:14"
																	},
																	{
																		"hexValue": "6d65",
																		"kind": "string",
																		"nativeSrc": "23483:4:14",
																		"nodeType": "YulLiteral",
																		"src": "23483:4:14",
																		"type": "",
																		"value": "me"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23459:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23459:6:14"
																},
																"nativeSrc": "23459:29:14",
																"nodeType": "YulFunctionCall",
																"src": "23459:29:14"
															},
															"nativeSrc": "23459:29:14",
															"nodeType": "YulExpressionStatement",
															"src": "23459:29:14"
														}
													]
												},
												"name": "store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
												"nativeSrc": "23274:221:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23372:6:14",
														"nodeType": "YulTypedName",
														"src": "23372:6:14",
														"type": ""
													}
												],
												"src": "23274:221:14"
											},
											{
												"body": {
													"nativeSrc": "23647:220:14",
													"nodeType": "YulBlock",
													"src": "23647:220:14",
													"statements": [
														{
															"nativeSrc": "23657:74:14",
															"nodeType": "YulAssignment",
															"src": "23657:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23723:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23723:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23728:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23728:2:14",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23664:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "23664:58:14"
																},
																"nativeSrc": "23664:67:14",
																"nodeType": "YulFunctionCall",
																"src": "23664:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23657:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23657:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23829:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23829:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																	"nativeSrc": "23740:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "23740:88:14"
																},
																"nativeSrc": "23740:93:14",
																"nodeType": "YulFunctionCall",
																"src": "23740:93:14"
															},
															"nativeSrc": "23740:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "23740:93:14"
														},
														{
															"nativeSrc": "23842:19:14",
															"nodeType": "YulAssignment",
															"src": "23842:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23853:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23853:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23858:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23858:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23849:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23849:3:14"
																},
																"nativeSrc": "23849:12:14",
																"nodeType": "YulFunctionCall",
																"src": "23849:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23842:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23842:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23501:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23635:3:14",
														"nodeType": "YulTypedName",
														"src": "23635:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23643:3:14",
														"nodeType": "YulTypedName",
														"src": "23643:3:14",
														"type": ""
													}
												],
												"src": "23501:366:14"
											},
											{
												"body": {
													"nativeSrc": "24044:248:14",
													"nodeType": "YulBlock",
													"src": "24044:248:14",
													"statements": [
														{
															"nativeSrc": "24054:26:14",
															"nodeType": "YulAssignment",
															"src": "24054:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24066:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24066:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24077:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24077:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24062:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24062:3:14"
																},
																"nativeSrc": "24062:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24062:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24054:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24054:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24101:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24101:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24112:1:14",
																				"nodeType": "YulLiteral",
																				"src": "24112:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24097:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24097:3:14"
																		},
																		"nativeSrc": "24097:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24097:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24120:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "24120:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24126:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24126:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24116:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24116:3:14"
																		},
																		"nativeSrc": "24116:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24116:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24090:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24090:6:14"
																},
																"nativeSrc": "24090:47:14",
																"nodeType": "YulFunctionCall",
																"src": "24090:47:14"
															},
															"nativeSrc": "24090:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "24090:47:14"
														},
														{
															"nativeSrc": "24146:139:14",
															"nodeType": "YulAssignment",
															"src": "24146:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24280:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "24280:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24154:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "24154:124:14"
																},
																"nativeSrc": "24154:131:14",
																"nodeType": "YulFunctionCall",
																"src": "24154:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24146:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24146:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23873:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24024:9:14",
														"nodeType": "YulTypedName",
														"src": "24024:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24039:4:14",
														"nodeType": "YulTypedName",
														"src": "24039:4:14",
														"type": ""
													}
												],
												"src": "23873:419:14"
											},
											{
												"body": {
													"nativeSrc": "24352:87:14",
													"nodeType": "YulBlock",
													"src": "24352:87:14",
													"statements": [
														{
															"nativeSrc": "24362:11:14",
															"nodeType": "YulAssignment",
															"src": "24362:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "24370:3:14",
																"nodeType": "YulIdentifier",
																"src": "24370:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24362:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24362:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24390:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24390:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "24393:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24393:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24383:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24383:6:14"
																},
																"nativeSrc": "24383:14:14",
																"nodeType": "YulFunctionCall",
																"src": "24383:14:14"
															},
															"nativeSrc": "24383:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "24383:14:14"
														},
														{
															"nativeSrc": "24406:26:14",
															"nodeType": "YulAssignment",
															"src": "24406:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24424:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24424:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24427:4:14",
																		"nodeType": "YulLiteral",
																		"src": "24427:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "24414:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "24414:9:14"
																},
																"nativeSrc": "24414:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24414:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24406:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24406:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "24298:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "24339:3:14",
														"nodeType": "YulTypedName",
														"src": "24339:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "24347:4:14",
														"nodeType": "YulTypedName",
														"src": "24347:4:14",
														"type": ""
													}
												],
												"src": "24298:141:14"
											},
											{
												"body": {
													"nativeSrc": "24489:49:14",
													"nodeType": "YulBlock",
													"src": "24489:49:14",
													"statements": [
														{
															"nativeSrc": "24499:33:14",
															"nodeType": "YulAssignment",
															"src": "24499:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24517:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "24517:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24524:2:14",
																				"nodeType": "YulLiteral",
																				"src": "24524:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24513:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24513:3:14"
																		},
																		"nativeSrc": "24513:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24513:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24529:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24529:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "24509:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24509:3:14"
																},
																"nativeSrc": "24509:23:14",
																"nodeType": "YulFunctionCall",
																"src": "24509:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24499:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24499:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "24445:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24472:5:14",
														"nodeType": "YulTypedName",
														"src": "24472:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24482:6:14",
														"nodeType": "YulTypedName",
														"src": "24482:6:14",
														"type": ""
													}
												],
												"src": "24445:93:14"
											},
											{
												"body": {
													"nativeSrc": "24597:54:14",
													"nodeType": "YulBlock",
													"src": "24597:54:14",
													"statements": [
														{
															"nativeSrc": "24607:37:14",
															"nodeType": "YulAssignment",
															"src": "24607:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "24632:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "24632:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "24638:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "24638:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "24628:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24628:3:14"
																},
																"nativeSrc": "24628:16:14",
																"nodeType": "YulFunctionCall",
																"src": "24628:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "24607:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "24607:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "24544:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "24572:4:14",
														"nodeType": "YulTypedName",
														"src": "24572:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "24578:5:14",
														"nodeType": "YulTypedName",
														"src": "24578:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "24588:8:14",
														"nodeType": "YulTypedName",
														"src": "24588:8:14",
														"type": ""
													}
												],
												"src": "24544:107:14"
											},
											{
												"body": {
													"nativeSrc": "24733:317:14",
													"nodeType": "YulBlock",
													"src": "24733:317:14",
													"statements": [
														{
															"nativeSrc": "24743:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "24743:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "24764:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "24764:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24776:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24776:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "24760:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24760:3:14"
																},
																"nativeSrc": "24760:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24760:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "24747:9:14",
																	"nodeType": "YulTypedName",
																	"src": "24747:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24787:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "24787:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "24818:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24818:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24829:66:14",
																		"nodeType": "YulLiteral",
																		"src": "24829:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "24799:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "24799:18:14"
																},
																"nativeSrc": "24799:97:14",
																"nodeType": "YulFunctionCall",
																"src": "24799:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "24791:4:14",
																	"nodeType": "YulTypedName",
																	"src": "24791:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24905:51:14",
															"nodeType": "YulAssignment",
															"src": "24905:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "24936:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24936:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "24947:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "24947:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "24917:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "24917:18:14"
																},
																"nativeSrc": "24917:39:14",
																"nodeType": "YulFunctionCall",
																"src": "24917:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "24905:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "24905:8:14"
																}
															]
														},
														{
															"nativeSrc": "24965:30:14",
															"nodeType": "YulAssignment",
															"src": "24965:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24978:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "24978:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "24989:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "24989:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "24985:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24985:3:14"
																		},
																		"nativeSrc": "24985:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24985:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24974:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24974:3:14"
																},
																"nativeSrc": "24974:21:14",
																"nodeType": "YulFunctionCall",
																"src": "24974:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24965:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "24965:5:14"
																}
															]
														},
														{
															"nativeSrc": "25004:40:14",
															"nodeType": "YulAssignment",
															"src": "25004:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25017:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "25017:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "25028:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "25028:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "25038:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "25038:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "25024:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25024:3:14"
																		},
																		"nativeSrc": "25024:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25024:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "25014:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "25014:2:14"
																},
																"nativeSrc": "25014:30:14",
																"nodeType": "YulFunctionCall",
																"src": "25014:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "25004:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "25004:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "24657:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24694:5:14",
														"nodeType": "YulTypedName",
														"src": "24694:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "24701:10:14",
														"nodeType": "YulTypedName",
														"src": "24701:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "24713:8:14",
														"nodeType": "YulTypedName",
														"src": "24713:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24726:6:14",
														"nodeType": "YulTypedName",
														"src": "24726:6:14",
														"type": ""
													}
												],
												"src": "24657:393:14"
											},
											{
												"body": {
													"nativeSrc": "25116:82:14",
													"nodeType": "YulBlock",
													"src": "25116:82:14",
													"statements": [
														{
															"nativeSrc": "25126:66:14",
															"nodeType": "YulAssignment",
															"src": "25126:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "25184:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "25184:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "25166:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "25166:17:14"
																				},
																				"nativeSrc": "25166:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25166:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "25157:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "25157:8:14"
																		},
																		"nativeSrc": "25157:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25157:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25139:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "25139:17:14"
																},
																"nativeSrc": "25139:53:14",
																"nodeType": "YulFunctionCall",
																"src": "25139:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "25126:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "25126:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "25056:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25096:5:14",
														"nodeType": "YulTypedName",
														"src": "25096:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "25106:9:14",
														"nodeType": "YulTypedName",
														"src": "25106:9:14",
														"type": ""
													}
												],
												"src": "25056:142:14"
											},
											{
												"body": {
													"nativeSrc": "25251:28:14",
													"nodeType": "YulBlock",
													"src": "25251:28:14",
													"statements": [
														{
															"nativeSrc": "25261:12:14",
															"nodeType": "YulAssignment",
															"src": "25261:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "25268:5:14",
																"nodeType": "YulIdentifier",
																"src": "25268:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "25261:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25261:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "25204:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25237:5:14",
														"nodeType": "YulTypedName",
														"src": "25237:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "25247:3:14",
														"nodeType": "YulTypedName",
														"src": "25247:3:14",
														"type": ""
													}
												],
												"src": "25204:75:14"
											},
											{
												"body": {
													"nativeSrc": "25361:193:14",
													"nodeType": "YulBlock",
													"src": "25361:193:14",
													"statements": [
														{
															"nativeSrc": "25371:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "25371:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "25426:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "25426:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "25395:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "25395:30:14"
																},
																"nativeSrc": "25395:39:14",
																"nodeType": "YulFunctionCall",
																"src": "25395:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "25375:16:14",
																	"nodeType": "YulTypedName",
																	"src": "25375:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25450:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "25450:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "25490:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "25490:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "25484:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "25484:5:14"
																				},
																				"nativeSrc": "25484:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25484:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "25497:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "25497:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "25529:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "25529:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "25505:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "25505:23:14"
																				},
																				"nativeSrc": "25505:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25505:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "25456:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "25456:27:14"
																		},
																		"nativeSrc": "25456:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25456:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "25443:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "25443:6:14"
																},
																"nativeSrc": "25443:105:14",
																"nodeType": "YulFunctionCall",
																"src": "25443:105:14"
															},
															"nativeSrc": "25443:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "25443:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "25285:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25338:4:14",
														"nodeType": "YulTypedName",
														"src": "25338:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "25344:6:14",
														"nodeType": "YulTypedName",
														"src": "25344:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "25352:7:14",
														"nodeType": "YulTypedName",
														"src": "25352:7:14",
														"type": ""
													}
												],
												"src": "25285:269:14"
											},
											{
												"body": {
													"nativeSrc": "25609:24:14",
													"nodeType": "YulBlock",
													"src": "25609:24:14",
													"statements": [
														{
															"nativeSrc": "25619:8:14",
															"nodeType": "YulAssignment",
															"src": "25619:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "25626:1:14",
																"nodeType": "YulLiteral",
																"src": "25626:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "25619:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25619:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "25560:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "25605:3:14",
														"nodeType": "YulTypedName",
														"src": "25605:3:14",
														"type": ""
													}
												],
												"src": "25560:73:14"
											},
											{
												"body": {
													"nativeSrc": "25692:136:14",
													"nodeType": "YulBlock",
													"src": "25692:136:14",
													"statements": [
														{
															"nativeSrc": "25702:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "25702:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "25716:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "25716:30:14"
																},
																"nativeSrc": "25716:32:14",
																"nodeType": "YulFunctionCall",
																"src": "25716:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "25706:6:14",
																	"nodeType": "YulTypedName",
																	"src": "25706:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25801:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "25801:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "25807:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25807:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "25815:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25815:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "25757:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "25757:43:14"
																},
																"nativeSrc": "25757:65:14",
																"nodeType": "YulFunctionCall",
																"src": "25757:65:14"
															},
															"nativeSrc": "25757:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "25757:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "25639:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25678:4:14",
														"nodeType": "YulTypedName",
														"src": "25678:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "25684:6:14",
														"nodeType": "YulTypedName",
														"src": "25684:6:14",
														"type": ""
													}
												],
												"src": "25639:189:14"
											},
											{
												"body": {
													"nativeSrc": "25884:136:14",
													"nodeType": "YulBlock",
													"src": "25884:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "25951:63:14",
																"nodeType": "YulBlock",
																"src": "25951:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "25995:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "25995:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26002:1:14",
																					"nodeType": "YulLiteral",
																					"src": "26002:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "25965:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "25965:29:14"
																			},
																			"nativeSrc": "25965:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "25965:39:14"
																		},
																		"nativeSrc": "25965:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "25965:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "25904:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "25904:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "25911:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "25911:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "25901:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "25901:2:14"
																},
																"nativeSrc": "25901:14:14",
																"nodeType": "YulFunctionCall",
																"src": "25901:14:14"
															},
															"nativeSrc": "25894:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "25916:26:14",
																"nodeType": "YulBlock",
																"src": "25916:26:14",
																"statements": [
																	{
																		"nativeSrc": "25918:22:14",
																		"nodeType": "YulAssignment",
																		"src": "25918:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "25931:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "25931:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "25938:1:14",
																					"nodeType": "YulLiteral",
																					"src": "25938:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "25927:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "25927:3:14"
																			},
																			"nativeSrc": "25927:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "25927:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "25918:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "25918:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "25898:2:14",
																"nodeType": "YulBlock",
																"src": "25898:2:14",
																"statements": []
															},
															"src": "25894:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "25834:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "25872:5:14",
														"nodeType": "YulTypedName",
														"src": "25872:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "25879:3:14",
														"nodeType": "YulTypedName",
														"src": "25879:3:14",
														"type": ""
													}
												],
												"src": "25834:186:14"
											},
											{
												"body": {
													"nativeSrc": "26105:464:14",
													"nodeType": "YulBlock",
													"src": "26105:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "26131:431:14",
																"nodeType": "YulBlock",
																"src": "26131:431:14",
																"statements": [
																	{
																		"nativeSrc": "26145:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "26145:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "26193:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "26193:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "26161:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "26161:31:14"
																			},
																			"nativeSrc": "26161:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26161:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "26149:8:14",
																				"nodeType": "YulTypedName",
																				"src": "26149:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "26212:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "26212:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "26235:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "26235:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "26263:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "26263:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "26245:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "26245:17:14"
																					},
																					"nativeSrc": "26245:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "26245:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "26231:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "26231:3:14"
																			},
																			"nativeSrc": "26231:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26231:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "26216:11:14",
																				"nodeType": "YulTypedName",
																				"src": "26216:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "26432:27:14",
																			"nodeType": "YulBlock",
																			"src": "26432:27:14",
																			"statements": [
																				{
																					"nativeSrc": "26434:23:14",
																					"nodeType": "YulAssignment",
																					"src": "26434:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "26449:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "26449:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "26434:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "26434:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "26416:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "26416:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26428:2:14",
																					"nodeType": "YulLiteral",
																					"src": "26428:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "26413:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "26413:2:14"
																			},
																			"nativeSrc": "26413:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26413:18:14"
																		},
																		"nativeSrc": "26410:49:14",
																		"nodeType": "YulIf",
																		"src": "26410:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "26501:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "26501:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "26518:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "26518:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "26546:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "26546:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "26528:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "26528:17:14"
																							},
																							"nativeSrc": "26528:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "26528:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "26514:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "26514:3:14"
																					},
																					"nativeSrc": "26514:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "26514:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "26472:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "26472:28:14"
																			},
																			"nativeSrc": "26472:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26472:80:14"
																		},
																		"nativeSrc": "26472:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "26472:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "26122:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "26122:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26127:2:14",
																		"nodeType": "YulLiteral",
																		"src": "26127:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26119:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "26119:2:14"
																},
																"nativeSrc": "26119:11:14",
																"nodeType": "YulFunctionCall",
																"src": "26119:11:14"
															},
															"nativeSrc": "26116:446:14",
															"nodeType": "YulIf",
															"src": "26116:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "26026:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "26081:5:14",
														"nodeType": "YulTypedName",
														"src": "26081:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "26088:3:14",
														"nodeType": "YulTypedName",
														"src": "26088:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "26093:10:14",
														"nodeType": "YulTypedName",
														"src": "26093:10:14",
														"type": ""
													}
												],
												"src": "26026:543:14"
											},
											{
												"body": {
													"nativeSrc": "26638:54:14",
													"nodeType": "YulBlock",
													"src": "26638:54:14",
													"statements": [
														{
															"nativeSrc": "26648:37:14",
															"nodeType": "YulAssignment",
															"src": "26648:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "26673:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26673:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "26679:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "26679:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "26669:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26669:3:14"
																},
																"nativeSrc": "26669:16:14",
																"nodeType": "YulFunctionCall",
																"src": "26669:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "26648:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "26648:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "26575:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "26613:4:14",
														"nodeType": "YulTypedName",
														"src": "26613:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "26619:5:14",
														"nodeType": "YulTypedName",
														"src": "26619:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "26629:8:14",
														"nodeType": "YulTypedName",
														"src": "26629:8:14",
														"type": ""
													}
												],
												"src": "26575:117:14"
											},
											{
												"body": {
													"nativeSrc": "26749:118:14",
													"nodeType": "YulBlock",
													"src": "26749:118:14",
													"statements": [
														{
															"nativeSrc": "26759:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "26759:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "26808:1:14",
																						"nodeType": "YulLiteral",
																						"src": "26808:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "26811:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "26811:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "26804:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "26804:3:14"
																				},
																				"nativeSrc": "26804:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "26804:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "26823:1:14",
																						"nodeType": "YulLiteral",
																						"src": "26823:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "26819:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "26819:3:14"
																				},
																				"nativeSrc": "26819:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "26819:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "26775:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "26775:28:14"
																		},
																		"nativeSrc": "26775:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26775:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "26771:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26771:3:14"
																},
																"nativeSrc": "26771:56:14",
																"nodeType": "YulFunctionCall",
																"src": "26771:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "26763:4:14",
																	"nodeType": "YulTypedName",
																	"src": "26763:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26836:25:14",
															"nodeType": "YulAssignment",
															"src": "26836:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "26850:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26850:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "26856:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26856:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "26846:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26846:3:14"
																},
																"nativeSrc": "26846:15:14",
																"nodeType": "YulFunctionCall",
																"src": "26846:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "26836:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "26836:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "26698:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "26726:4:14",
														"nodeType": "YulTypedName",
														"src": "26726:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "26732:5:14",
														"nodeType": "YulTypedName",
														"src": "26732:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "26742:6:14",
														"nodeType": "YulTypedName",
														"src": "26742:6:14",
														"type": ""
													}
												],
												"src": "26698:169:14"
											},
											{
												"body": {
													"nativeSrc": "26953:214:14",
													"nodeType": "YulBlock",
													"src": "26953:214:14",
													"statements": [
														{
															"nativeSrc": "27086:37:14",
															"nodeType": "YulAssignment",
															"src": "27086:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "27113:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27113:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "27119:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "27119:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "27094:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "27094:18:14"
																},
																"nativeSrc": "27094:29:14",
																"nodeType": "YulFunctionCall",
																"src": "27094:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "27086:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "27086:4:14"
																}
															]
														},
														{
															"nativeSrc": "27132:29:14",
															"nodeType": "YulAssignment",
															"src": "27132:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "27143:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27143:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "27153:1:14",
																				"nodeType": "YulLiteral",
																				"src": "27153:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "27156:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "27156:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "27149:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "27149:3:14"
																		},
																		"nativeSrc": "27149:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "27149:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "27140:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "27140:2:14"
																},
																"nativeSrc": "27140:21:14",
																"nodeType": "YulFunctionCall",
																"src": "27140:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "27132:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "27132:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "26872:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "26934:4:14",
														"nodeType": "YulTypedName",
														"src": "26934:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "26940:3:14",
														"nodeType": "YulTypedName",
														"src": "26940:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "26948:4:14",
														"nodeType": "YulTypedName",
														"src": "26948:4:14",
														"type": ""
													}
												],
												"src": "26872:295:14"
											},
											{
												"body": {
													"nativeSrc": "27264:1303:14",
													"nodeType": "YulBlock",
													"src": "27264:1303:14",
													"statements": [
														{
															"nativeSrc": "27275:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27275:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "27322:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "27322:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "27289:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "27289:32:14"
																},
																"nativeSrc": "27289:37:14",
																"nodeType": "YulFunctionCall",
																"src": "27289:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "27279:6:14",
																	"nodeType": "YulTypedName",
																	"src": "27279:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "27411:22:14",
																"nodeType": "YulBlock",
																"src": "27411:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "27413:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "27413:16:14"
																			},
																			"nativeSrc": "27413:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "27413:18:14"
																		},
																		"nativeSrc": "27413:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "27413:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "27383:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27383:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27391:18:14",
																		"nodeType": "YulLiteral",
																		"src": "27391:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27380:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "27380:2:14"
																},
																"nativeSrc": "27380:30:14",
																"nodeType": "YulFunctionCall",
																"src": "27380:30:14"
															},
															"nativeSrc": "27377:56:14",
															"nodeType": "YulIf",
															"src": "27377:56:14"
														},
														{
															"nativeSrc": "27443:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27443:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "27489:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "27489:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "27483:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "27483:5:14"
																		},
																		"nativeSrc": "27483:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "27483:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "27457:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "27457:25:14"
																},
																"nativeSrc": "27457:38:14",
																"nodeType": "YulFunctionCall",
																"src": "27457:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "27447:6:14",
																	"nodeType": "YulTypedName",
																	"src": "27447:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "27588:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27588:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "27594:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27594:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "27602:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27602:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "27542:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "27542:45:14"
																},
																"nativeSrc": "27542:67:14",
																"nodeType": "YulFunctionCall",
																"src": "27542:67:14"
															},
															"nativeSrc": "27542:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "27542:67:14"
														},
														{
															"nativeSrc": "27619:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27619:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "27636:1:14",
																"nodeType": "YulLiteral",
																"src": "27636:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "27623:9:14",
																	"nodeType": "YulTypedName",
																	"src": "27623:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27647:17:14",
															"nodeType": "YulAssignment",
															"src": "27647:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "27660:4:14",
																"nodeType": "YulLiteral",
																"src": "27660:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "27647:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "27647:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "27711:611:14",
																		"nodeType": "YulBlock",
																		"src": "27711:611:14",
																		"statements": [
																			{
																				"nativeSrc": "27725:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27725:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "27744:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "27744:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "27756:4:14",
																									"nodeType": "YulLiteral",
																									"src": "27756:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "27752:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "27752:3:14"
																							},
																							"nativeSrc": "27752:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "27752:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "27740:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "27740:3:14"
																					},
																					"nativeSrc": "27740:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27740:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "27729:7:14",
																						"nodeType": "YulTypedName",
																						"src": "27729:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "27776:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27776:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "27822:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "27822:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "27790:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "27790:31:14"
																					},
																					"nativeSrc": "27790:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27790:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "27780:6:14",
																						"nodeType": "YulTypedName",
																						"src": "27780:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "27840:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27840:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "27849:1:14",
																					"nodeType": "YulLiteral",
																					"src": "27849:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "27844:1:14",
																						"nodeType": "YulTypedName",
																						"src": "27844:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "27908:163:14",
																					"nodeType": "YulBlock",
																					"src": "27908:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "27933:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "27933:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "27951:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "27951:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "27956:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "27956:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "27947:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "27947:3:14"
																												},
																												"nativeSrc": "27947:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "27947:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "27941:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "27941:5:14"
																										},
																										"nativeSrc": "27941:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "27941:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "27926:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "27926:6:14"
																								},
																								"nativeSrc": "27926:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27926:42:14"
																							},
																							"nativeSrc": "27926:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "27926:42:14"
																						},
																						{
																							"nativeSrc": "27985:24:14",
																							"nodeType": "YulAssignment",
																							"src": "27985:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "27999:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "27999:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "28007:1:14",
																										"nodeType": "YulLiteral",
																										"src": "28007:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "27995:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "27995:3:14"
																								},
																								"nativeSrc": "27995:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27995:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "27985:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "27985:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "28026:31:14",
																							"nodeType": "YulAssignment",
																							"src": "28026:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "28043:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "28043:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "28054:2:14",
																										"nodeType": "YulLiteral",
																										"src": "28054:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "28039:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "28039:3:14"
																								},
																								"nativeSrc": "28039:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28039:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "28026:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "28026:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "27874:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "27874:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "27877:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "27877:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "27871:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "27871:2:14"
																					},
																					"nativeSrc": "27871:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27871:14:14"
																				},
																				"nativeSrc": "27863:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "27886:21:14",
																					"nodeType": "YulBlock",
																					"src": "27886:21:14",
																					"statements": [
																						{
																							"nativeSrc": "27888:17:14",
																							"nodeType": "YulAssignment",
																							"src": "27888:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "27897:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "27897:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "27900:4:14",
																										"nodeType": "YulLiteral",
																										"src": "27900:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "27893:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "27893:3:14"
																								},
																								"nativeSrc": "27893:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27893:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "27888:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "27888:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "27867:3:14",
																					"nodeType": "YulBlock",
																					"src": "27867:3:14",
																					"statements": []
																				},
																				"src": "27863:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "28107:156:14",
																					"nodeType": "YulBlock",
																					"src": "28107:156:14",
																					"statements": [
																						{
																							"nativeSrc": "28125:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "28125:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "28152:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "28152:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "28157:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "28157:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "28148:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "28148:3:14"
																										},
																										"nativeSrc": "28148:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28148:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "28142:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28142:5:14"
																								},
																								"nativeSrc": "28142:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28142:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "28129:9:14",
																									"nodeType": "YulTypedName",
																									"src": "28129:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "28192:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "28192:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "28219:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "28219:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "28234:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "28234:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "28242:4:14",
																														"nodeType": "YulLiteral",
																														"src": "28242:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "28230:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "28230:3:14"
																												},
																												"nativeSrc": "28230:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "28230:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "28200:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "28200:18:14"
																										},
																										"nativeSrc": "28200:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28200:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "28185:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "28185:6:14"
																								},
																								"nativeSrc": "28185:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28185:64:14"
																							},
																							"nativeSrc": "28185:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "28185:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "28090:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "28090:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "28099:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "28099:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "28087:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "28087:2:14"
																					},
																					"nativeSrc": "28087:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28087:19:14"
																				},
																				"nativeSrc": "28084:179:14",
																				"nodeType": "YulIf",
																				"src": "28084:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28283:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "28283:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "28297:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "28297:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "28305:1:14",
																											"nodeType": "YulLiteral",
																											"src": "28305:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "28293:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "28293:3:14"
																									},
																									"nativeSrc": "28293:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "28293:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "28309:1:14",
																									"nodeType": "YulLiteral",
																									"src": "28309:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "28289:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "28289:3:14"
																							},
																							"nativeSrc": "28289:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "28289:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "28276:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "28276:6:14"
																					},
																					"nativeSrc": "28276:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28276:36:14"
																				},
																				"nativeSrc": "28276:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "28276:36:14"
																			}
																		]
																	},
																	"nativeSrc": "27704:618:14",
																	"nodeType": "YulCase",
																	"src": "27704:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27709:1:14",
																		"nodeType": "YulLiteral",
																		"src": "27709:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "28339:222:14",
																		"nodeType": "YulBlock",
																		"src": "28339:222:14",
																		"statements": [
																			{
																				"nativeSrc": "28353:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28353:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "28366:1:14",
																					"nodeType": "YulLiteral",
																					"src": "28366:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "28357:5:14",
																						"nodeType": "YulTypedName",
																						"src": "28357:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "28390:67:14",
																					"nodeType": "YulBlock",
																					"src": "28390:67:14",
																					"statements": [
																						{
																							"nativeSrc": "28408:35:14",
																							"nodeType": "YulAssignment",
																							"src": "28408:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "28427:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "28427:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "28432:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "28432:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "28423:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "28423:3:14"
																										},
																										"nativeSrc": "28423:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28423:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "28417:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28417:5:14"
																								},
																								"nativeSrc": "28417:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28417:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "28408:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28408:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "28383:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "28383:6:14"
																				},
																				"nativeSrc": "28380:77:14",
																				"nodeType": "YulIf",
																				"src": "28380:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28477:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "28477:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "28536:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28536:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "28543:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "28543:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "28483:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "28483:52:14"
																							},
																							"nativeSrc": "28483:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "28483:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "28470:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "28470:6:14"
																					},
																					"nativeSrc": "28470:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28470:81:14"
																				},
																				"nativeSrc": "28470:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "28470:81:14"
																			}
																		]
																	},
																	"nativeSrc": "28331:230:14",
																	"nodeType": "YulCase",
																	"src": "28331:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "27684:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27684:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27692:2:14",
																		"nodeType": "YulLiteral",
																		"src": "27692:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27681:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "27681:2:14"
																},
																"nativeSrc": "27681:14:14",
																"nodeType": "YulFunctionCall",
																"src": "27681:14:14"
															},
															"nativeSrc": "27674:887:14",
															"nodeType": "YulSwitch",
															"src": "27674:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "27172:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "27253:4:14",
														"nodeType": "YulTypedName",
														"src": "27253:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "27259:3:14",
														"nodeType": "YulTypedName",
														"src": "27259:3:14",
														"type": ""
													}
												],
												"src": "27172:1395:14"
											},
											{
												"body": {
													"nativeSrc": "28745:357:14",
													"nodeType": "YulBlock",
													"src": "28745:357:14",
													"statements": [
														{
															"nativeSrc": "28755:26:14",
															"nodeType": "YulAssignment",
															"src": "28755:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28767:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "28767:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28778:2:14",
																		"nodeType": "YulLiteral",
																		"src": "28778:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28763:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "28763:3:14"
																},
																"nativeSrc": "28763:18:14",
																"nodeType": "YulFunctionCall",
																"src": "28763:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28755:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "28755:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28834:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "28834:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28847:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28847:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28858:1:14",
																				"nodeType": "YulLiteral",
																				"src": "28858:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28843:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28843:3:14"
																		},
																		"nativeSrc": "28843:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28843:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "28791:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "28791:42:14"
																},
																"nativeSrc": "28791:70:14",
																"nodeType": "YulFunctionCall",
																"src": "28791:70:14"
															},
															"nativeSrc": "28791:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "28791:70:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28914:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "28914:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28927:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28927:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28938:2:14",
																				"nodeType": "YulLiteral",
																				"src": "28938:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28923:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28923:3:14"
																		},
																		"nativeSrc": "28923:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28923:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "28871:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "28871:42:14"
																},
																"nativeSrc": "28871:71:14",
																"nodeType": "YulFunctionCall",
																"src": "28871:71:14"
															},
															"nativeSrc": "28871:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "28871:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28963:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28963:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28974:2:14",
																				"nodeType": "YulLiteral",
																				"src": "28974:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28959:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28959:3:14"
																		},
																		"nativeSrc": "28959:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28959:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28983:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "28983:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28989:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28989:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28979:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28979:3:14"
																		},
																		"nativeSrc": "28979:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28979:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28952:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "28952:6:14"
																},
																"nativeSrc": "28952:48:14",
																"nodeType": "YulFunctionCall",
																"src": "28952:48:14"
															},
															"nativeSrc": "28952:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "28952:48:14"
														},
														{
															"nativeSrc": "29009:86:14",
															"nodeType": "YulAssignment",
															"src": "29009:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "29081:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "29081:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "29090:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "29090:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29017:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "29017:63:14"
																},
																"nativeSrc": "29017:78:14",
																"nodeType": "YulFunctionCall",
																"src": "29017:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29009:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29009:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28573:529:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28701:9:14",
														"nodeType": "YulTypedName",
														"src": "28701:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "28713:6:14",
														"nodeType": "YulTypedName",
														"src": "28713:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28721:6:14",
														"nodeType": "YulTypedName",
														"src": "28721:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28729:6:14",
														"nodeType": "YulTypedName",
														"src": "28729:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28740:4:14",
														"nodeType": "YulTypedName",
														"src": "28740:4:14",
														"type": ""
													}
												],
												"src": "28573:529:14"
											},
											{
												"body": {
													"nativeSrc": "29214:61:14",
													"nodeType": "YulBlock",
													"src": "29214:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29236:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "29236:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29244:1:14",
																				"nodeType": "YulLiteral",
																				"src": "29244:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29232:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29232:3:14"
																		},
																		"nativeSrc": "29232:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29232:14:14"
																	},
																	{
																		"hexValue": "5a65726f20616464726573732075736572",
																		"kind": "string",
																		"nativeSrc": "29248:19:14",
																		"nodeType": "YulLiteral",
																		"src": "29248:19:14",
																		"type": "",
																		"value": "Zero address user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29225:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29225:6:14"
																},
																"nativeSrc": "29225:43:14",
																"nodeType": "YulFunctionCall",
																"src": "29225:43:14"
															},
															"nativeSrc": "29225:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "29225:43:14"
														}
													]
												},
												"name": "store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
												"nativeSrc": "29108:167:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29206:6:14",
														"nodeType": "YulTypedName",
														"src": "29206:6:14",
														"type": ""
													}
												],
												"src": "29108:167:14"
											},
											{
												"body": {
													"nativeSrc": "29427:220:14",
													"nodeType": "YulBlock",
													"src": "29427:220:14",
													"statements": [
														{
															"nativeSrc": "29437:74:14",
															"nodeType": "YulAssignment",
															"src": "29437:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29503:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29503:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29508:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29508:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29444:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "29444:58:14"
																},
																"nativeSrc": "29444:67:14",
																"nodeType": "YulFunctionCall",
																"src": "29444:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29437:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29437:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29609:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29609:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
																	"nativeSrc": "29520:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "29520:88:14"
																},
																"nativeSrc": "29520:93:14",
																"nodeType": "YulFunctionCall",
																"src": "29520:93:14"
															},
															"nativeSrc": "29520:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "29520:93:14"
														},
														{
															"nativeSrc": "29622:19:14",
															"nodeType": "YulAssignment",
															"src": "29622:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29633:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29633:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29638:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29638:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29629:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29629:3:14"
																},
																"nativeSrc": "29629:12:14",
																"nodeType": "YulFunctionCall",
																"src": "29629:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29622:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29622:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29281:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29415:3:14",
														"nodeType": "YulTypedName",
														"src": "29415:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29423:3:14",
														"nodeType": "YulTypedName",
														"src": "29423:3:14",
														"type": ""
													}
												],
												"src": "29281:366:14"
											},
											{
												"body": {
													"nativeSrc": "29824:248:14",
													"nodeType": "YulBlock",
													"src": "29824:248:14",
													"statements": [
														{
															"nativeSrc": "29834:26:14",
															"nodeType": "YulAssignment",
															"src": "29834:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29846:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "29846:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29857:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29857:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29842:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29842:3:14"
																},
																"nativeSrc": "29842:18:14",
																"nodeType": "YulFunctionCall",
																"src": "29842:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29834:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29834:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29881:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29881:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29892:1:14",
																				"nodeType": "YulLiteral",
																				"src": "29892:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29877:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29877:3:14"
																		},
																		"nativeSrc": "29877:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29877:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29900:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "29900:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29906:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29906:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29896:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29896:3:14"
																		},
																		"nativeSrc": "29896:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29896:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29870:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29870:6:14"
																},
																"nativeSrc": "29870:47:14",
																"nodeType": "YulFunctionCall",
																"src": "29870:47:14"
															},
															"nativeSrc": "29870:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "29870:47:14"
														},
														{
															"nativeSrc": "29926:139:14",
															"nodeType": "YulAssignment",
															"src": "29926:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30060:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "30060:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29934:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "29934:124:14"
																},
																"nativeSrc": "29934:131:14",
																"nodeType": "YulFunctionCall",
																"src": "29934:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29926:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29926:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29653:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29804:9:14",
														"nodeType": "YulTypedName",
														"src": "29804:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29819:4:14",
														"nodeType": "YulTypedName",
														"src": "29819:4:14",
														"type": ""
													}
												],
												"src": "29653:419:14"
											},
											{
												"body": {
													"nativeSrc": "30184:124:14",
													"nodeType": "YulBlock",
													"src": "30184:124:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "30206:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "30206:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30214:1:14",
																				"nodeType": "YulLiteral",
																				"src": "30214:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30202:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30202:3:14"
																		},
																		"nativeSrc": "30202:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30202:14:14"
																	},
																	{
																		"hexValue": "5769746864726177616c20616d6f756e74206d75737420626520677265617465",
																		"kind": "string",
																		"nativeSrc": "30218:34:14",
																		"nodeType": "YulLiteral",
																		"src": "30218:34:14",
																		"type": "",
																		"value": "Withdrawal amount must be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30195:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "30195:6:14"
																},
																"nativeSrc": "30195:58:14",
																"nodeType": "YulFunctionCall",
																"src": "30195:58:14"
															},
															"nativeSrc": "30195:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "30195:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "30274:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "30274:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30282:2:14",
																				"nodeType": "YulLiteral",
																				"src": "30282:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30270:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30270:3:14"
																		},
																		"nativeSrc": "30270:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30270:15:14"
																	},
																	{
																		"hexValue": "72207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "30287:13:14",
																		"nodeType": "YulLiteral",
																		"src": "30287:13:14",
																		"type": "",
																		"value": "r than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30263:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "30263:6:14"
																},
																"nativeSrc": "30263:38:14",
																"nodeType": "YulFunctionCall",
																"src": "30263:38:14"
															},
															"nativeSrc": "30263:38:14",
															"nodeType": "YulExpressionStatement",
															"src": "30263:38:14"
														}
													]
												},
												"name": "store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
												"nativeSrc": "30078:230:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "30176:6:14",
														"nodeType": "YulTypedName",
														"src": "30176:6:14",
														"type": ""
													}
												],
												"src": "30078:230:14"
											},
											{
												"body": {
													"nativeSrc": "30460:220:14",
													"nodeType": "YulBlock",
													"src": "30460:220:14",
													"statements": [
														{
															"nativeSrc": "30470:74:14",
															"nodeType": "YulAssignment",
															"src": "30470:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30536:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "30536:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30541:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30541:2:14",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30477:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "30477:58:14"
																},
																"nativeSrc": "30477:67:14",
																"nodeType": "YulFunctionCall",
																"src": "30477:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30470:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30470:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30642:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "30642:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																	"nativeSrc": "30553:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "30553:88:14"
																},
																"nativeSrc": "30553:93:14",
																"nodeType": "YulFunctionCall",
																"src": "30553:93:14"
															},
															"nativeSrc": "30553:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "30553:93:14"
														},
														{
															"nativeSrc": "30655:19:14",
															"nodeType": "YulAssignment",
															"src": "30655:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30666:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "30666:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30671:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30671:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30662:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30662:3:14"
																},
																"nativeSrc": "30662:12:14",
																"nodeType": "YulFunctionCall",
																"src": "30662:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30655:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30655:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "30314:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30448:3:14",
														"nodeType": "YulTypedName",
														"src": "30448:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30456:3:14",
														"nodeType": "YulTypedName",
														"src": "30456:3:14",
														"type": ""
													}
												],
												"src": "30314:366:14"
											},
											{
												"body": {
													"nativeSrc": "30857:248:14",
													"nodeType": "YulBlock",
													"src": "30857:248:14",
													"statements": [
														{
															"nativeSrc": "30867:26:14",
															"nodeType": "YulAssignment",
															"src": "30867:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30879:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "30879:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30890:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30890:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30875:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30875:3:14"
																},
																"nativeSrc": "30875:18:14",
																"nodeType": "YulFunctionCall",
																"src": "30875:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30867:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "30867:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30914:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30914:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30925:1:14",
																				"nodeType": "YulLiteral",
																				"src": "30925:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30910:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30910:3:14"
																		},
																		"nativeSrc": "30910:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30910:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30933:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "30933:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30939:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30939:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30929:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30929:3:14"
																		},
																		"nativeSrc": "30929:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30929:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30903:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "30903:6:14"
																},
																"nativeSrc": "30903:47:14",
																"nodeType": "YulFunctionCall",
																"src": "30903:47:14"
															},
															"nativeSrc": "30903:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "30903:47:14"
														},
														{
															"nativeSrc": "30959:139:14",
															"nodeType": "YulAssignment",
															"src": "30959:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "31093:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "31093:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30967:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "30967:124:14"
																},
																"nativeSrc": "30967:131:14",
																"nodeType": "YulFunctionCall",
																"src": "30967:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30959:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "30959:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "30686:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30837:9:14",
														"nodeType": "YulTypedName",
														"src": "30837:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30852:4:14",
														"nodeType": "YulTypedName",
														"src": "30852:4:14",
														"type": ""
													}
												],
												"src": "30686:419:14"
											},
											{
												"body": {
													"nativeSrc": "31217:62:14",
													"nodeType": "YulBlock",
													"src": "31217:62:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31239:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "31239:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31247:1:14",
																				"nodeType": "YulLiteral",
																				"src": "31247:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31235:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31235:3:14"
																		},
																		"nativeSrc": "31235:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31235:14:14"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "31251:20:14",
																		"nodeType": "YulLiteral",
																		"src": "31251:20:14",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31228:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31228:6:14"
																},
																"nativeSrc": "31228:44:14",
																"nodeType": "YulFunctionCall",
																"src": "31228:44:14"
															},
															"nativeSrc": "31228:44:14",
															"nodeType": "YulExpressionStatement",
															"src": "31228:44:14"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "31111:168:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "31209:6:14",
														"nodeType": "YulTypedName",
														"src": "31209:6:14",
														"type": ""
													}
												],
												"src": "31111:168:14"
											},
											{
												"body": {
													"nativeSrc": "31431:220:14",
													"nodeType": "YulBlock",
													"src": "31431:220:14",
													"statements": [
														{
															"nativeSrc": "31441:74:14",
															"nodeType": "YulAssignment",
															"src": "31441:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31507:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "31507:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31512:2:14",
																		"nodeType": "YulLiteral",
																		"src": "31512:2:14",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31448:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "31448:58:14"
																},
																"nativeSrc": "31448:67:14",
																"nodeType": "YulFunctionCall",
																"src": "31448:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31441:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31441:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31613:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "31613:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "31524:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "31524:88:14"
																},
																"nativeSrc": "31524:93:14",
																"nodeType": "YulFunctionCall",
																"src": "31524:93:14"
															},
															"nativeSrc": "31524:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "31524:93:14"
														},
														{
															"nativeSrc": "31626:19:14",
															"nodeType": "YulAssignment",
															"src": "31626:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31637:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "31637:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31642:2:14",
																		"nodeType": "YulLiteral",
																		"src": "31642:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31633:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31633:3:14"
																},
																"nativeSrc": "31633:12:14",
																"nodeType": "YulFunctionCall",
																"src": "31633:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "31626:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31626:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "31285:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "31419:3:14",
														"nodeType": "YulTypedName",
														"src": "31419:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31427:3:14",
														"nodeType": "YulTypedName",
														"src": "31427:3:14",
														"type": ""
													}
												],
												"src": "31285:366:14"
											},
											{
												"body": {
													"nativeSrc": "31828:248:14",
													"nodeType": "YulBlock",
													"src": "31828:248:14",
													"statements": [
														{
															"nativeSrc": "31838:26:14",
															"nodeType": "YulAssignment",
															"src": "31838:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31850:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "31850:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31861:2:14",
																		"nodeType": "YulLiteral",
																		"src": "31861:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31846:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31846:3:14"
																},
																"nativeSrc": "31846:18:14",
																"nodeType": "YulFunctionCall",
																"src": "31846:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31838:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "31838:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31885:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "31885:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31896:1:14",
																				"nodeType": "YulLiteral",
																				"src": "31896:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31881:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31881:3:14"
																		},
																		"nativeSrc": "31881:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31881:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31904:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "31904:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31910:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "31910:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31900:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31900:3:14"
																		},
																		"nativeSrc": "31900:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31900:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31874:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31874:6:14"
																},
																"nativeSrc": "31874:47:14",
																"nodeType": "YulFunctionCall",
																"src": "31874:47:14"
															},
															"nativeSrc": "31874:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "31874:47:14"
														},
														{
															"nativeSrc": "31930:139:14",
															"nodeType": "YulAssignment",
															"src": "31930:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "32064:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "32064:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31938:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "31938:124:14"
																},
																"nativeSrc": "31938:131:14",
																"nodeType": "YulFunctionCall",
																"src": "31938:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31930:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "31930:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "31657:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31808:9:14",
														"nodeType": "YulTypedName",
														"src": "31808:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31823:4:14",
														"nodeType": "YulTypedName",
														"src": "31823:4:14",
														"type": ""
													}
												],
												"src": "31657:419:14"
											},
											{
												"body": {
													"nativeSrc": "32188:75:14",
													"nodeType": "YulBlock",
													"src": "32188:75:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "32210:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "32210:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32218:1:14",
																				"nodeType": "YulLiteral",
																				"src": "32218:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32206:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32206:3:14"
																		},
																		"nativeSrc": "32206:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32206:14:14"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "32222:33:14",
																		"nodeType": "YulLiteral",
																		"src": "32222:33:14",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32199:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "32199:6:14"
																},
																"nativeSrc": "32199:57:14",
																"nodeType": "YulFunctionCall",
																"src": "32199:57:14"
															},
															"nativeSrc": "32199:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "32199:57:14"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "32082:181:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "32180:6:14",
														"nodeType": "YulTypedName",
														"src": "32180:6:14",
														"type": ""
													}
												],
												"src": "32082:181:14"
											},
											{
												"body": {
													"nativeSrc": "32415:220:14",
													"nodeType": "YulBlock",
													"src": "32415:220:14",
													"statements": [
														{
															"nativeSrc": "32425:74:14",
															"nodeType": "YulAssignment",
															"src": "32425:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32491:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32491:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32496:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32496:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32432:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "32432:58:14"
																},
																"nativeSrc": "32432:67:14",
																"nodeType": "YulFunctionCall",
																"src": "32432:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "32425:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32425:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32597:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32597:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "32508:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "32508:88:14"
																},
																"nativeSrc": "32508:93:14",
																"nodeType": "YulFunctionCall",
																"src": "32508:93:14"
															},
															"nativeSrc": "32508:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "32508:93:14"
														},
														{
															"nativeSrc": "32610:19:14",
															"nodeType": "YulAssignment",
															"src": "32610:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32621:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32621:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32626:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32626:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32617:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32617:3:14"
																},
																"nativeSrc": "32617:12:14",
																"nodeType": "YulFunctionCall",
																"src": "32617:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "32610:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32610:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "32269:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "32403:3:14",
														"nodeType": "YulTypedName",
														"src": "32403:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "32411:3:14",
														"nodeType": "YulTypedName",
														"src": "32411:3:14",
														"type": ""
													}
												],
												"src": "32269:366:14"
											},
											{
												"body": {
													"nativeSrc": "32812:248:14",
													"nodeType": "YulBlock",
													"src": "32812:248:14",
													"statements": [
														{
															"nativeSrc": "32822:26:14",
															"nodeType": "YulAssignment",
															"src": "32822:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32834:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "32834:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32845:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32845:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32830:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32830:3:14"
																},
																"nativeSrc": "32830:18:14",
																"nodeType": "YulFunctionCall",
																"src": "32830:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32822:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "32822:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32869:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "32869:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32880:1:14",
																				"nodeType": "YulLiteral",
																				"src": "32880:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32865:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32865:3:14"
																		},
																		"nativeSrc": "32865:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32865:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "32888:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "32888:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "32894:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "32894:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "32884:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32884:3:14"
																		},
																		"nativeSrc": "32884:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32884:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32858:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "32858:6:14"
																},
																"nativeSrc": "32858:47:14",
																"nodeType": "YulFunctionCall",
																"src": "32858:47:14"
															},
															"nativeSrc": "32858:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "32858:47:14"
														},
														{
															"nativeSrc": "32914:139:14",
															"nodeType": "YulAssignment",
															"src": "32914:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "33048:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "33048:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32922:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "32922:124:14"
																},
																"nativeSrc": "32922:131:14",
																"nodeType": "YulFunctionCall",
																"src": "32922:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32914:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "32914:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "32641:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "32792:9:14",
														"nodeType": "YulTypedName",
														"src": "32792:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "32807:4:14",
														"nodeType": "YulTypedName",
														"src": "32807:4:14",
														"type": ""
													}
												],
												"src": "32641:419:14"
											},
											{
												"body": {
													"nativeSrc": "33192:206:14",
													"nodeType": "YulBlock",
													"src": "33192:206:14",
													"statements": [
														{
															"nativeSrc": "33202:26:14",
															"nodeType": "YulAssignment",
															"src": "33202:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "33214:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "33214:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33225:2:14",
																		"nodeType": "YulLiteral",
																		"src": "33225:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33210:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33210:3:14"
																},
																"nativeSrc": "33210:18:14",
																"nodeType": "YulFunctionCall",
																"src": "33210:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33202:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "33202:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "33282:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "33282:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33295:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "33295:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33306:1:14",
																				"nodeType": "YulLiteral",
																				"src": "33306:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33291:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33291:3:14"
																		},
																		"nativeSrc": "33291:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33291:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "33238:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "33238:43:14"
																},
																"nativeSrc": "33238:71:14",
																"nodeType": "YulFunctionCall",
																"src": "33238:71:14"
															},
															"nativeSrc": "33238:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "33238:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "33363:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "33363:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33376:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "33376:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33387:2:14",
																				"nodeType": "YulLiteral",
																				"src": "33387:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33372:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33372:3:14"
																		},
																		"nativeSrc": "33372:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33372:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "33319:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "33319:43:14"
																},
																"nativeSrc": "33319:72:14",
																"nodeType": "YulFunctionCall",
																"src": "33319:72:14"
															},
															"nativeSrc": "33319:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "33319:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "33066:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "33156:9:14",
														"nodeType": "YulTypedName",
														"src": "33156:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "33168:6:14",
														"nodeType": "YulTypedName",
														"src": "33168:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "33176:6:14",
														"nodeType": "YulTypedName",
														"src": "33176:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "33187:4:14",
														"nodeType": "YulTypedName",
														"src": "33187:4:14",
														"type": ""
													}
												],
												"src": "33066:332:14"
											},
											{
												"body": {
													"nativeSrc": "33558:288:14",
													"nodeType": "YulBlock",
													"src": "33558:288:14",
													"statements": [
														{
															"nativeSrc": "33568:26:14",
															"nodeType": "YulAssignment",
															"src": "33568:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "33580:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "33580:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33591:2:14",
																		"nodeType": "YulLiteral",
																		"src": "33591:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33576:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33576:3:14"
																},
																"nativeSrc": "33576:18:14",
																"nodeType": "YulFunctionCall",
																"src": "33576:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33568:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "33568:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "33648:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "33648:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33661:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "33661:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33672:1:14",
																				"nodeType": "YulLiteral",
																				"src": "33672:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33657:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33657:3:14"
																		},
																		"nativeSrc": "33657:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33657:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "33604:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "33604:43:14"
																},
																"nativeSrc": "33604:71:14",
																"nodeType": "YulFunctionCall",
																"src": "33604:71:14"
															},
															"nativeSrc": "33604:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "33604:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "33729:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "33729:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33742:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "33742:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33753:2:14",
																				"nodeType": "YulLiteral",
																				"src": "33753:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33738:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33738:3:14"
																		},
																		"nativeSrc": "33738:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33738:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "33685:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "33685:43:14"
																},
																"nativeSrc": "33685:72:14",
																"nodeType": "YulFunctionCall",
																"src": "33685:72:14"
															},
															"nativeSrc": "33685:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "33685:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "33811:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "33811:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33824:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "33824:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33835:2:14",
																				"nodeType": "YulLiteral",
																				"src": "33835:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33820:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33820:3:14"
																		},
																		"nativeSrc": "33820:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33820:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "33767:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "33767:43:14"
																},
																"nativeSrc": "33767:72:14",
																"nodeType": "YulFunctionCall",
																"src": "33767:72:14"
															},
															"nativeSrc": "33767:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "33767:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "33404:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "33514:9:14",
														"nodeType": "YulTypedName",
														"src": "33514:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "33526:6:14",
														"nodeType": "YulTypedName",
														"src": "33526:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "33534:6:14",
														"nodeType": "YulTypedName",
														"src": "33534:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "33542:6:14",
														"nodeType": "YulTypedName",
														"src": "33542:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "33553:4:14",
														"nodeType": "YulTypedName",
														"src": "33553:4:14",
														"type": ""
													}
												],
												"src": "33404:442:14"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6(memPtr) {\n\n        mstore(add(memPtr, 0), \"nCookieJar: use deposit()\")\n\n    }\n\n    function abi_encode_t_stringliteral_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IScorer_$1472_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IScorer_$1472_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IScorer_$1472__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint64_t_uint64_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint64t_uint64t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_uint64_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint64(value)))\n    }\n\n    function abi_encode_t_uint64_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint64_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint64_t_uint64__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf(memPtr) {\n\n        mstore(add(memPtr, 0), \"No claimable amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds in jar\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trust\")\n\n    }\n\n    function abi_encode_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Trust score\")\n\n    }\n\n    function abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ether transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect Ether amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit amount must be greater t\")\n\n        mstore(add(memPtr, 32), \"han zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not an admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start time must be before end ti\")\n\n        mstore(add(memPtr, 32), \"me\")\n\n    }\n\n    function abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero address user\")\n\n    }\n\n    function abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal amount must be greate\")\n\n        mstore(add(memPtr, 32), \"r than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xAEE9C872 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xAEE9C872 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xB807A3C4 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x3F6 JUMPI PUSH2 0x19F JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xA9012C89 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xA9590E8A EQ PUSH2 0x32E JUMPI PUSH2 0x19F JUMP JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0x2B0 JUMPI PUSH2 0x19F JUMP JUMPDEST DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x22C JUMPI PUSH2 0x19F JUMP JUMPDEST CALLDATASIZE PUSH2 0x19F JUMPI CALLVALUE PUSH1 0x35 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0xCD5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST PUSH2 0x104C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x1279 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0x12FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x426 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x33 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x476 JUMPI POP PUSH1 0x33 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x4EB JUMPI TIMESTAMP PUSH1 0x33 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xFA7410D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x36 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x5A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A0 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x620 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB4F1024 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x684 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST GT PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x36 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B4 JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x82B SWAP1 PUSH2 0x22D0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x865 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x86A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A5 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x8DF CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1602 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP4 PUSH1 0x40 MLOAD PUSH2 0x93D SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x94E PUSH2 0x1681 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x95D PUSH2 0x15B5 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D7 JUMPI DUP1 CALLVALUE EQ PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP1 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA47 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA10 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA46 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x168A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA93 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAF7 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB07 PUSH2 0x1681 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB14 PUSH2 0x170C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB5C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB8F JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB9D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC21 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xC2A DUP7 PUSH2 0x1733 JUMP JUMPDEST PUSH2 0xC32 PUSH2 0x1747 JUMP JUMPDEST DUP7 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xCCC JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xCC3 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCDD PUSH2 0x1759 JUMP JUMPDEST PUSH2 0xCE6 PUSH0 PUSH2 0x17E0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x33 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD4F SWAP1 PUSH2 0x24C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD7B SWAP1 PUSH2 0x24C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDC6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD9D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDC6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDA9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDDA PUSH2 0x18B1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5F SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE7A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE9E SWAP2 SWAP1 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0xEDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED4 SWAP1 PUSH2 0x259B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2A SWAP1 PUSH2 0x2629 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x33 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xFD3 SWAP2 SWAP1 PUSH2 0x27DB JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x100A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10E5 SWAP2 SWAP1 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0x1124 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111B SWAP1 PUSH2 0x259B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1189 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x36 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x126C SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1281 PUSH2 0x1759 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12F1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E8 SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12FA DUP2 PUSH2 0x17E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1305 PUSH2 0x1759 JUMP JUMPDEST PUSH2 0x130D PUSH2 0x15B5 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x134F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1346 SWAP1 PUSH2 0x29BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x13CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C6 SWAP1 PUSH2 0x2A26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x141B SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x150A JUMPI PUSH0 PUSH2 0x145E PUSH2 0xDD0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1481 SWAP1 PUSH2 0x22D0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x14BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1504 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FB SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x153D JUMP JUMPDEST PUSH2 0x153C PUSH2 0x1515 PUSH2 0xDD0 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1602 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x155C PUSH2 0xDD0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x15A1 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x15B1 PUSH2 0x1681 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x15F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F0 SWAP1 PUSH2 0x2A8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x167C DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1635 SWAP3 SWAP2 SWAP1 PUSH2 0x2AAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1706 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16BF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18D8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x173B PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1744 DUP2 PUSH2 0x19B3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x174F PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1757 PUSH2 0x1A37 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1761 PUSH2 0x1A48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x177F PUSH2 0xDD0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17DE JUMPI PUSH2 0x17A2 PUSH2 0x1A48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D5 SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x17E9 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x18F7 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1910 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x192B JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x196D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1964 SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x197B PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0x19B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x19BB PUSH2 0x1973 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A2B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A22 SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A34 DUP2 PUSH2 0x17E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A3F PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1A58 PUSH2 0x170C JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AAD DUP3 PUSH2 0x1A6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB8 DUP4 PUSH2 0x1A6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AD0 JUMPI PUSH2 0x1ACF PUSH2 0x1A76 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ADF DUP2 PUSH2 0x1A6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E436F6F6B69654A61723A20757365206465706F736974282900000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B42 PUSH1 0x19 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4D DUP3 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B6F DUP2 PUSH2 0x1B36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BB0 DUP3 PUSH2 0x1B87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC0 DUP2 PUSH2 0x1BA6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BCA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BDB DUP2 PUSH2 0x1BB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF6 JUMPI PUSH2 0x1BF5 PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C03 DUP5 DUP3 DUP6 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C15 DUP2 PUSH2 0x1BA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C2E PUSH0 DUP4 ADD DUP5 PUSH2 0x1C0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C3D DUP2 PUSH2 0x1A6D JUMP JUMPDEST DUP2 EQ PUSH2 0x1C47 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C58 DUP2 PUSH2 0x1C34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1C73 PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C81 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C92 DUP6 DUP3 DUP7 ADD PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB2 JUMPI PUSH2 0x1CB1 PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CBF DUP6 DUP3 DUP7 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CD0 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CFD PUSH2 0x1CF8 PUSH2 0x1CF3 DUP5 PUSH2 0x1B87 JUMP JUMPDEST PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1B87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0E DUP3 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D1F DUP3 PUSH2 0x1D04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D2F DUP2 PUSH2 0x1D15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D48 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6A DUP2 PUSH2 0x1D4E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA2 DUP3 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x1DAC DUP2 DUP6 PUSH2 0x1AFE JUMP JUMPDEST SWAP4 POP PUSH2 0x1DBC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D7A JUMP JUMPDEST PUSH2 0x1DC5 DUP2 PUSH2 0x1D88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DE3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D61 JUMP JUMPDEST PUSH2 0x1DF0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D61 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E02 DUP2 DUP5 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1E15 DUP2 PUSH2 0x1D4E JUMP JUMPDEST DUP2 EQ PUSH2 0x1E1F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E30 DUP2 PUSH2 0x1E0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E74 DUP3 PUSH2 0x1D88 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E93 JUMPI PUSH2 0x1E92 PUSH2 0x1E3E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA5 PUSH2 0x1B76 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EB1 DUP3 DUP3 PUSH2 0x1E6B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ED0 JUMPI PUSH2 0x1ECF PUSH2 0x1E3E JUMP JUMPDEST JUMPDEST PUSH2 0x1ED9 DUP3 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F06 PUSH2 0x1F01 DUP5 PUSH2 0x1EB6 JUMP JUMPDEST PUSH2 0x1E9C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F22 JUMPI PUSH2 0x1F21 PUSH2 0x1E3A JUMP JUMPDEST JUMPDEST PUSH2 0x1F2D DUP5 DUP3 DUP6 PUSH2 0x1EE6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F49 JUMPI PUSH2 0x1F48 PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F59 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F79 JUMPI PUSH2 0x1F78 PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F86 DUP7 DUP3 DUP8 ADD PUSH2 0x1E22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F97 DUP7 DUP3 DUP8 ADD PUSH2 0x1E22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x1B83 JUMP JUMPDEST JUMPDEST PUSH2 0x1FC4 DUP7 DUP3 DUP8 ADD PUSH2 0x1F35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FE5 JUMPI PUSH2 0x1FE4 PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FF2 DUP7 DUP3 DUP8 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2003 DUP7 DUP3 DUP8 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2014 DUP7 DUP3 DUP8 ADD PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH2 0x2038 PUSH2 0x2033 PUSH2 0x202E DUP5 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1A6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2048 DUP2 PUSH2 0x201E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2061 PUSH0 DUP4 ADD DUP7 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x206E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x207B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x203F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20B7 PUSH1 0x13 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x20C2 DUP3 PUSH2 0x2083 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20E4 DUP2 PUSH2 0x20AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x211F PUSH1 0x19 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x212A DUP3 PUSH2 0x20EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x214C DUP2 PUSH2 0x2113 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472757374000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2187 PUSH1 0x5 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2192 DUP3 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C0C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x21C1 DUP2 PUSH2 0x217B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21D7 DUP2 PUSH2 0x1C34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F2 JUMPI PUSH2 0x21F1 PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21FF DUP5 DUP3 DUP6 ADD PUSH2 0x21C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742054727573742073636F72650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x223C PUSH1 0x18 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2247 DUP3 PUSH2 0x2208 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2269 DUP2 PUSH2 0x2230 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x227A DUP3 PUSH2 0x1A6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2285 DUP4 PUSH2 0x1A6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x229D JUMPI PUSH2 0x229C PUSH2 0x1A76 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x22BB PUSH0 DUP4 PUSH2 0x22A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C6 DUP3 PUSH2 0x22AD JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22DA DUP3 PUSH2 0x22B0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2318 PUSH1 0x15 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2323 DUP3 PUSH2 0x22E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2345 DUP2 PUSH2 0x230C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420457468657220616D6F756E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2380 PUSH1 0x16 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x238B DUP3 PUSH2 0x234C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23AD DUP2 PUSH2 0x2374 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x240E PUSH1 0x28 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2419 DUP3 PUSH2 0x23B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x243B DUP2 PUSH2 0x2402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2465 PUSH2 0x2460 PUSH2 0x245B DUP5 PUSH2 0x2442 JUMP JUMPDEST PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1D4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2475 DUP2 PUSH2 0x244B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248E PUSH0 DUP4 ADD DUP5 PUSH2 0x246C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24D8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24EB JUMPI PUSH2 0x24EA PUSH2 0x2494 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2505 DUP2 PUSH2 0x24F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x250F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2520 DUP2 PUSH2 0x24FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x253B JUMPI PUSH2 0x253A PUSH2 0x1B7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2548 DUP5 DUP3 DUP6 ADD PUSH2 0x2512 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2585 PUSH1 0x16 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2590 DUP3 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25B2 DUP2 PUSH2 0x2579 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2613 PUSH1 0x22 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x261E DUP3 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2640 DUP2 PUSH2 0x2607 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x26A3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2668 JUMP JUMPDEST PUSH2 0x26AD DUP7 DUP4 PUSH2 0x2668 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26DF PUSH2 0x26DA PUSH2 0x26D5 DUP5 PUSH2 0x1A6D JUMP JUMPDEST PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1A6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F8 DUP4 PUSH2 0x26C5 JUMP JUMPDEST PUSH2 0x270C PUSH2 0x2704 DUP3 PUSH2 0x26E6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2674 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2720 PUSH2 0x2714 JUMP JUMPDEST PUSH2 0x272B DUP2 DUP5 DUP5 PUSH2 0x26EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x274E JUMPI PUSH2 0x2743 PUSH0 DUP3 PUSH2 0x2718 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2731 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2793 JUMPI PUSH2 0x2764 DUP2 PUSH2 0x2647 JUMP JUMPDEST PUSH2 0x276D DUP5 PUSH2 0x2659 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x277C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2790 PUSH2 0x2788 DUP6 PUSH2 0x2659 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2730 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27B3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2798 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27CB DUP4 DUP4 PUSH2 0x27A4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E4 DUP3 PUSH2 0x1D70 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27FD JUMPI PUSH2 0x27FC PUSH2 0x1E3E JUMP JUMPDEST JUMPDEST PUSH2 0x2807 DUP3 SLOAD PUSH2 0x24C1 JUMP JUMPDEST PUSH2 0x2812 DUP3 DUP3 DUP6 PUSH2 0x2752 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2843 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2831 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x283B DUP6 DUP3 PUSH2 0x27C0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28A2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2851 DUP7 PUSH2 0x2647 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2878 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2853 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2895 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2891 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27A4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28BD PUSH0 DUP4 ADD DUP7 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x28CA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x203F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x28DC DUP2 DUP5 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F20616464726573732075736572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x291A PUSH1 0x11 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2925 DUP3 PUSH2 0x28E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2947 DUP2 PUSH2 0x290E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29A8 PUSH1 0x2B DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x29B3 DUP3 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29D5 DUP2 PUSH2 0x299C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A10 PUSH1 0x12 DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2A1B DUP3 PUSH2 0x29DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A3D DUP2 PUSH2 0x2A04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A78 PUSH1 0x1F DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2A83 DUP3 PUSH2 0x2A44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AA5 DUP2 PUSH2 0x2A6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2ABF PUSH0 DUP4 ADD DUP6 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x2ACC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AD6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2AE6 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x2AF3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x2B00 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AD6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE SWAP11 CALLCODE PUSH19 0x73360C69383A4B916DA5F67842AC34296B3A82 ORIGIN SWAP1 BLOBHASH SWAP5 PUSH20 0xBDB2881F64736F6C634300081A00330000000000 ",
							"sourceMap": "454:5722:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5941:9;5910:13;:27;613:1;5910:27;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;613:1;5966:44;;5974:10;5966:44;;;6000:9;5966:44;;;;;;:::i;:::-;;;;;;;;454:5722;;6130:35;;;;;;;;;;:::i;:::-;;;;;;;;2973:1017;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;566:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2414:474;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1978:218;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;622:21:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;883:25;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4732:278:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1097:69;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;999:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4222:261;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5215:578:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2973:1017;2526:21:2;:19;:21::i;:::-;3068:12:13::1;:18;;;;;;;;;;;;3050:36;;:15;:36;:74;;;;3108:12;:16;;;;;;;;;;;;3090:34;;:15;:34;3050:74;3046:183;;;3163:15;3180:12;:18;;;;;;;;;;;;3200:12;:16;;;;;;;;;;;;3148:69;;;;;;;;;;;;;:::i;:::-;;;;;;;;3046:183;3241:25;3269:14;:26;3284:10;3269:26;;;;;;;;;;;;;;;:33;3296:5;3269:33;;;;;;;;;;;;;;;;3241:61;;3341:1;3321:17;:21;3313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3409:17;3385:13;:20;3399:5;3385:20;;;;;;;;;;;;;;;;:41;;3377:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3511:1;3475:6;;;;;;;;;;;:12;;;3488:10;3475:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;3467:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;3590:1;3554:14;:26;3569:10;3554:26;;;;;;;;;;;;;;;:33;3581:5;3554:33;;;;;;;;;;;;;;;:37;;;;3626:17;3602:13;:20;3616:5;3602:20;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;613:1;3660:21;;:5;:21;;::::0;3656:264:::1;;3699:12;3717:10;:15;;3740:17;3717:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3698:64;;;3785:7;3777:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3683:147;3656:264;;;3851:57;3878:10;3890:17;3858:5;3851:26;;;;:57;;;;;:::i;:::-;3656:264;3957:5;3937:45;;3945:10;3937:45;;;3964:17;3937:45;;;;;;:::i;:::-;;;;;;;;3025:965;2568:20:2::0;:18;:20::i;:::-;2973:1017:13;:::o;566:49::-;613:1;566:49;:::o;2414:474::-;2526:21:2;:19;:21::i;:::-;613:1:13::1;2508:21;;:5;:21;;::::0;2504:284:::1;;2567:6;2554:9;:19;2546:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2504:284;;;2650:1;2641:6;:10;2633:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2711:65;2742:10;2762:4;2769:6;2718:5;2711:30;;;;:65;;;;;;:::i;:::-;2504:284;2824:6;2800:13;:20;2814:5;2800:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;2866:5;2846:34;;2854:10;2846:34;;;2873:6;2846:34;;;;;;:::i;:::-;;;;;;;;2568:20:2::0;:18;:20::i;:::-;2414:474:13;;:::o;1978:218::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;2062:21:13::1;2077:5;2062:14;:21::i;:::-;2128:24;:22;:24::i;:::-;2180:7;2163:6;;:25;;;;;;;;;;;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1978:218:13;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;622:21:13:-;;;;;;;;;;;;;:::o;883:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;4732:278:13:-;1726:6;;;;;;;;;;;:14;;;1741:10;1726:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1718:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4851:3:::1;4843:11;;:5;:11;;;4835:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4919:30;;;;;;;;4925:5;4919:30;;;;;;4932:3;4919:30;;;;;;4937:11;4919:30;;::::0;4904:12:::1;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4965:37;4978:5;4985:3;4990:11;4965:37;;;;;;;;:::i;:::-;;;;;;;;4732:278:::0;;;:::o;1097:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;999:48::-;;;;;;;;;;;;;;;;;:::o;4222:261::-;1726:6;;;;;;;;;;;:14;;;1741:10;1726:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1718:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4347:1:::1;4331:18;;:4;:18;;::::0;4323:48:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4412:6;4382:14;:20;4397:4;4382:20;;;;;;;;;;;;;;;:27;4403:5;4382:27;;;;;;;;;;;;;;;:36;;;;4461:5;4434:41;;4455:4;4434:41;;;4468:6;4434:41;;;;;;:::i;:::-;;;;;;;;4222:261:::0;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;5215:578:13:-;2334:13:0;:11;:13::i;:::-;2526:21:2::1;:19;:21::i;:::-;5325:1:13::2;5316:6;:10;5308:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5417:6;5393:13;:20;5407:5;5393:20;;;;;;;;;;;;;;;;:30;;5385:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5483:6;5459:13;:20;5473:5;5459:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;613:1;5506:21;;:5;:21;;::::0;5502:236:::2;;5545:12;5563:7;:5;:7::i;:::-;:12;;5583:6;5563:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5544:50;;;5617:7;5609:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;5529:133;5502:236;;;5683:43;5710:7;:5;:7::i;:::-;5719:6;5690:5;5683:26;;;;:43;;;;;:::i;:::-;5502:236;5771:5;5753:32;;5762:7;:5;:7::i;:::-;5753:32;;;5778:6;5753:32;;;;;;:::i;:::-;;;;;;;;2568:20:2::1;:18;:20::i;:::-;5215:578:13::0;;:::o;2601:287:2:-;1851:1;2733:7;;:19;2725:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1851:1;2863:7;:18;;;;2601:287::o;1271:160:8:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;2894:209:2:-;1808:1;3074:7;:22;;;;2894:209::o;1670:188:8:-;1770:81;1790:5;1812;:18;;;1833:4;1839:2;1843:5;1797:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1889:111:2:-;6931:20:1;:18;:20::i;:::-;1959:34:2::1;:32;:34::i;:::-;1889:111::o:0;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;7738:720:8:-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;2006:109:2:-;6931:20:1;:18;:20::i;:::-;1808:1:2::1;2086:7;:22;;;;2006:109::o:0;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;7:77:14:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;473:118::-;560:24;578:5;560:24;:::i;:::-;555:3;548:37;473:118;;:::o;597:222::-;690:4;728:2;717:9;713:18;705:26;;741:71;809:1;798:9;794:17;785:6;741:71;:::i;:::-;597:222;;;;:::o;825:169::-;909:11;943:6;938:3;931:19;983:4;978:3;974:14;959:29;;825:169;;;;:::o;1000:175::-;1140:27;1136:1;1128:6;1124:14;1117:51;1000:175;:::o;1181:366::-;1323:3;1344:67;1408:2;1403:3;1344:67;:::i;:::-;1337:74;;1420:93;1509:3;1420:93;:::i;:::-;1538:2;1533:3;1529:12;1522:19;;1181:366;;;:::o;1553:419::-;1719:4;1757:2;1746:9;1742:18;1734:26;;1806:9;1800:4;1796:20;1792:1;1781:9;1777:17;1770:47;1834:131;1960:4;1834:131;:::i;:::-;1826:139;;1553:419;;;:::o;1978:75::-;2011:6;2044:2;2038:9;2028:19;;1978:75;:::o;2059:117::-;2168:1;2165;2158:12;2182:117;2291:1;2288;2281:12;2305:126;2342:7;2382:42;2375:5;2371:54;2360:65;;2305:126;;;:::o;2437:96::-;2474:7;2503:24;2521:5;2503:24;:::i;:::-;2492:35;;2437:96;;;:::o;2539:122::-;2612:24;2630:5;2612:24;:::i;:::-;2605:5;2602:35;2592:63;;2651:1;2648;2641:12;2592:63;2539:122;:::o;2667:139::-;2713:5;2751:6;2738:20;2729:29;;2767:33;2794:5;2767:33;:::i;:::-;2667:139;;;;:::o;2812:329::-;2871:6;2920:2;2908:9;2899:7;2895:23;2891:32;2888:119;;;2926:79;;:::i;:::-;2888:119;3046:1;3071:53;3116:7;3107:6;3096:9;3092:22;3071:53;:::i;:::-;3061:63;;3017:117;2812:329;;;;:::o;3147:118::-;3234:24;3252:5;3234:24;:::i;:::-;3229:3;3222:37;3147:118;;:::o;3271:222::-;3364:4;3402:2;3391:9;3387:18;3379:26;;3415:71;3483:1;3472:9;3468:17;3459:6;3415:71;:::i;:::-;3271:222;;;;:::o;3499:122::-;3572:24;3590:5;3572:24;:::i;:::-;3565:5;3562:35;3552:63;;3611:1;3608;3601:12;3552:63;3499:122;:::o;3627:139::-;3673:5;3711:6;3698:20;3689:29;;3727:33;3754:5;3727:33;:::i;:::-;3627:139;;;;:::o;3772:474::-;3840:6;3848;3897:2;3885:9;3876:7;3872:23;3868:32;3865:119;;;3903:79;;:::i;:::-;3865:119;4023:1;4048:53;4093:7;4084:6;4073:9;4069:22;4048:53;:::i;:::-;4038:63;;3994:117;4150:2;4176:53;4221:7;4212:6;4201:9;4197:22;4176:53;:::i;:::-;4166:63;;4121:118;3772:474;;;;;:::o;4252:::-;4320:6;4328;4377:2;4365:9;4356:7;4352:23;4348:32;4345:119;;;4383:79;;:::i;:::-;4345:119;4503:1;4528:53;4573:7;4564:6;4553:9;4549:22;4528:53;:::i;:::-;4518:63;;4474:117;4630:2;4656:53;4701:7;4692:6;4681:9;4677:22;4656:53;:::i;:::-;4646:63;;4601:118;4252:474;;;;;:::o;4732:60::-;4760:3;4781:5;4774:12;;4732:60;;;:::o;4798:142::-;4848:9;4881:53;4899:34;4908:24;4926:5;4908:24;:::i;:::-;4899:34;:::i;:::-;4881:53;:::i;:::-;4868:66;;4798:142;;;:::o;4946:126::-;4996:9;5029:37;5060:5;5029:37;:::i;:::-;5016:50;;4946:126;;;:::o;5078:142::-;5144:9;5177:37;5208:5;5177:37;:::i;:::-;5164:50;;5078:142;;;:::o;5226:163::-;5329:53;5376:5;5329:53;:::i;:::-;5324:3;5317:66;5226:163;;:::o;5395:254::-;5504:4;5542:2;5531:9;5527:18;5519:26;;5555:87;5639:1;5628:9;5624:17;5615:6;5555:87;:::i;:::-;5395:254;;;;:::o;5655:101::-;5691:7;5731:18;5724:5;5720:30;5709:41;;5655:101;;;:::o;5762:115::-;5847:23;5864:5;5847:23;:::i;:::-;5842:3;5835:36;5762:115;;:::o;5883:99::-;5935:6;5969:5;5963:12;5953:22;;5883:99;;;:::o;5988:139::-;6077:6;6072:3;6067;6061:23;6118:1;6109:6;6104:3;6100:16;6093:27;5988:139;;;:::o;6133:102::-;6174:6;6225:2;6221:7;6216:2;6209:5;6205:14;6201:28;6191:38;;6133:102;;;:::o;6241:377::-;6329:3;6357:39;6390:5;6357:39;:::i;:::-;6412:71;6476:6;6471:3;6412:71;:::i;:::-;6405:78;;6492:65;6550:6;6545:3;6538:4;6531:5;6527:16;6492:65;:::i;:::-;6582:29;6604:6;6582:29;:::i;:::-;6577:3;6573:39;6566:46;;6333:285;6241:377;;;;:::o;6624:525::-;6789:4;6827:2;6816:9;6812:18;6804:26;;6840:69;6906:1;6895:9;6891:17;6882:6;6840:69;:::i;:::-;6919:70;6985:2;6974:9;6970:18;6961:6;6919:70;:::i;:::-;7036:9;7030:4;7026:20;7021:2;7010:9;7006:18;6999:48;7064:78;7137:4;7128:6;7064:78;:::i;:::-;7056:86;;6624:525;;;;;;:::o;7155:120::-;7227:23;7244:5;7227:23;:::i;:::-;7220:5;7217:34;7207:62;;7265:1;7262;7255:12;7207:62;7155:120;:::o;7281:137::-;7326:5;7364:6;7351:20;7342:29;;7380:32;7406:5;7380:32;:::i;:::-;7281:137;;;;:::o;7424:117::-;7533:1;7530;7523:12;7547:117;7656:1;7653;7646:12;7670:180;7718:77;7715:1;7708:88;7815:4;7812:1;7805:15;7839:4;7836:1;7829:15;7856:281;7939:27;7961:4;7939:27;:::i;:::-;7931:6;7927:40;8069:6;8057:10;8054:22;8033:18;8021:10;8018:34;8015:62;8012:88;;;8080:18;;:::i;:::-;8012:88;8120:10;8116:2;8109:22;7899:238;7856:281;;:::o;8143:129::-;8177:6;8204:20;;:::i;:::-;8194:30;;8233:33;8261:4;8253:6;8233:33;:::i;:::-;8143:129;;;:::o;8278:308::-;8340:4;8430:18;8422:6;8419:30;8416:56;;;8452:18;;:::i;:::-;8416:56;8490:29;8512:6;8490:29;:::i;:::-;8482:37;;8574:4;8568;8564:15;8556:23;;8278:308;;;:::o;8592:148::-;8690:6;8685:3;8680;8667:30;8731:1;8722:6;8717:3;8713:16;8706:27;8592:148;;;:::o;8746:425::-;8824:5;8849:66;8865:49;8907:6;8865:49;:::i;:::-;8849:66;:::i;:::-;8840:75;;8938:6;8931:5;8924:21;8976:4;8969:5;8965:16;9014:3;9005:6;9000:3;8996:16;8993:25;8990:112;;;9021:79;;:::i;:::-;8990:112;9111:54;9158:6;9153:3;9148;9111:54;:::i;:::-;8830:341;8746:425;;;;;:::o;9191:340::-;9247:5;9296:3;9289:4;9281:6;9277:17;9273:27;9263:122;;9304:79;;:::i;:::-;9263:122;9421:6;9408:20;9446:79;9521:3;9513:6;9506:4;9498:6;9494:17;9446:79;:::i;:::-;9437:88;;9253:278;9191:340;;;;:::o;9537:795::-;9622:6;9630;9638;9687:2;9675:9;9666:7;9662:23;9658:32;9655:119;;;9693:79;;:::i;:::-;9655:119;9813:1;9838:52;9882:7;9873:6;9862:9;9858:22;9838:52;:::i;:::-;9828:62;;9784:116;9939:2;9965:52;10009:7;10000:6;9989:9;9985:22;9965:52;:::i;:::-;9955:62;;9910:117;10094:2;10083:9;10079:18;10066:32;10125:18;10117:6;10114:30;10111:117;;;10147:79;;:::i;:::-;10111:117;10252:63;10307:7;10298:6;10287:9;10283:22;10252:63;:::i;:::-;10242:73;;10037:288;9537:795;;;;;:::o;10338:619::-;10415:6;10423;10431;10480:2;10468:9;10459:7;10455:23;10451:32;10448:119;;;10486:79;;:::i;:::-;10448:119;10606:1;10631:53;10676:7;10667:6;10656:9;10652:22;10631:53;:::i;:::-;10621:63;;10577:117;10733:2;10759:53;10804:7;10795:6;10784:9;10780:22;10759:53;:::i;:::-;10749:63;;10704:118;10861:2;10887:53;10932:7;10923:6;10912:9;10908:22;10887:53;:::i;:::-;10877:63;;10832:118;10338:619;;;;;:::o;10963:140::-;11012:9;11045:52;11063:33;11072:23;11089:5;11072:23;:::i;:::-;11063:33;:::i;:::-;11045:52;:::i;:::-;11032:65;;10963:140;;;:::o;11109:129::-;11195:36;11225:5;11195:36;:::i;:::-;11190:3;11183:49;11109:129;;:::o;11244:438::-;11391:4;11429:2;11418:9;11414:18;11406:26;;11442:71;11510:1;11499:9;11495:17;11486:6;11442:71;:::i;:::-;11523;11590:2;11579:9;11575:18;11566:6;11523:71;:::i;:::-;11604;11671:2;11660:9;11656:18;11647:6;11604:71;:::i;:::-;11244:438;;;;;;:::o;11688:169::-;11828:21;11824:1;11816:6;11812:14;11805:45;11688:169;:::o;11863:366::-;12005:3;12026:67;12090:2;12085:3;12026:67;:::i;:::-;12019:74;;12102:93;12191:3;12102:93;:::i;:::-;12220:2;12215:3;12211:12;12204:19;;11863:366;;;:::o;12235:419::-;12401:4;12439:2;12428:9;12424:18;12416:26;;12488:9;12482:4;12478:20;12474:1;12463:9;12459:17;12452:47;12516:131;12642:4;12516:131;:::i;:::-;12508:139;;12235:419;;;:::o;12660:175::-;12800:27;12796:1;12788:6;12784:14;12777:51;12660:175;:::o;12841:366::-;12983:3;13004:67;13068:2;13063:3;13004:67;:::i;:::-;12997:74;;13080:93;13169:3;13080:93;:::i;:::-;13198:2;13193:3;13189:12;13182:19;;12841:366;;;:::o;13213:419::-;13379:4;13417:2;13406:9;13402:18;13394:26;;13466:9;13460:4;13456:20;13452:1;13441:9;13437:17;13430:47;13494:131;13620:4;13494:131;:::i;:::-;13486:139;;13213:419;;;:::o;13638:155::-;13778:7;13774:1;13766:6;13762:14;13755:31;13638:155;:::o;13799:365::-;13941:3;13962:66;14026:1;14021:3;13962:66;:::i;:::-;13955:73;;14037:93;14126:3;14037:93;:::i;:::-;14155:2;14150:3;14146:12;14139:19;;13799:365;;;:::o;14170:529::-;14364:4;14402:2;14391:9;14387:18;14379:26;;14415:71;14483:1;14472:9;14468:17;14459:6;14415:71;:::i;:::-;14533:9;14527:4;14523:20;14518:2;14507:9;14503:18;14496:48;14561:131;14687:4;14561:131;:::i;:::-;14553:139;;14170:529;;;;:::o;14705:143::-;14762:5;14793:6;14787:13;14778:22;;14809:33;14836:5;14809:33;:::i;:::-;14705:143;;;;:::o;14854:351::-;14924:6;14973:2;14961:9;14952:7;14948:23;14944:32;14941:119;;;14979:79;;:::i;:::-;14941:119;15099:1;15124:64;15180:7;15171:6;15160:9;15156:22;15124:64;:::i;:::-;15114:74;;15070:128;14854:351;;;;:::o;15211:174::-;15351:26;15347:1;15339:6;15335:14;15328:50;15211:174;:::o;15391:366::-;15533:3;15554:67;15618:2;15613:3;15554:67;:::i;:::-;15547:74;;15630:93;15719:3;15630:93;:::i;:::-;15748:2;15743:3;15739:12;15732:19;;15391:366;;;:::o;15763:419::-;15929:4;15967:2;15956:9;15952:18;15944:26;;16016:9;16010:4;16006:20;16002:1;15991:9;15987:17;15980:47;16044:131;16170:4;16044:131;:::i;:::-;16036:139;;15763:419;;;:::o;16188:194::-;16228:4;16248:20;16266:1;16248:20;:::i;:::-;16243:25;;16282:20;16300:1;16282:20;:::i;:::-;16277:25;;16326:1;16323;16319:9;16311:17;;16350:1;16344:4;16341:11;16338:37;;;16355:18;;:::i;:::-;16338:37;16188:194;;;;:::o;16388:147::-;16489:11;16526:3;16511:18;;16388:147;;;;:::o;16541:114::-;;:::o;16661:398::-;16820:3;16841:83;16922:1;16917:3;16841:83;:::i;:::-;16834:90;;16933:93;17022:3;16933:93;:::i;:::-;17051:1;17046:3;17042:11;17035:18;;16661:398;;;:::o;17065:379::-;17249:3;17271:147;17414:3;17271:147;:::i;:::-;17264:154;;17435:3;17428:10;;17065:379;;;:::o;17450:171::-;17590:23;17586:1;17578:6;17574:14;17567:47;17450:171;:::o;17627:366::-;17769:3;17790:67;17854:2;17849:3;17790:67;:::i;:::-;17783:74;;17866:93;17955:3;17866:93;:::i;:::-;17984:2;17979:3;17975:12;17968:19;;17627:366;;;:::o;17999:419::-;18165:4;18203:2;18192:9;18188:18;18180:26;;18252:9;18246:4;18242:20;18238:1;18227:9;18223:17;18216:47;18280:131;18406:4;18280:131;:::i;:::-;18272:139;;17999:419;;;:::o;18424:172::-;18564:24;18560:1;18552:6;18548:14;18541:48;18424:172;:::o;18602:366::-;18744:3;18765:67;18829:2;18824:3;18765:67;:::i;:::-;18758:74;;18841:93;18930:3;18841:93;:::i;:::-;18959:2;18954:3;18950:12;18943:19;;18602:366;;;:::o;18974:419::-;19140:4;19178:2;19167:9;19163:18;19155:26;;19227:9;19221:4;19217:20;19213:1;19202:9;19198:17;19191:47;19255:131;19381:4;19255:131;:::i;:::-;19247:139;;18974:419;;;:::o;19399:227::-;19539:34;19535:1;19527:6;19523:14;19516:58;19608:10;19603:2;19595:6;19591:15;19584:35;19399:227;:::o;19632:366::-;19774:3;19795:67;19859:2;19854:3;19795:67;:::i;:::-;19788:74;;19871:93;19960:3;19871:93;:::i;:::-;19989:2;19984:3;19980:12;19973:19;;19632:366;;;:::o;20004:419::-;20170:4;20208:2;20197:9;20193:18;20185:26;;20257:9;20251:4;20247:20;20243:1;20232:9;20228:17;20221:47;20285:131;20411:4;20285:131;:::i;:::-;20277:139;;20004:419;;;:::o;20429:85::-;20474:7;20503:5;20492:16;;20429:85;;;:::o;20520:156::-;20577:9;20610:60;20627:42;20636:32;20662:5;20636:32;:::i;:::-;20627:42;:::i;:::-;20610:60;:::i;:::-;20597:73;;20520:156;;;:::o;20682:145::-;20776:44;20814:5;20776:44;:::i;:::-;20771:3;20764:57;20682:145;;:::o;20833:236::-;20933:4;20971:2;20960:9;20956:18;20948:26;;20984:78;21059:1;21048:9;21044:17;21035:6;20984:78;:::i;:::-;20833:236;;;;:::o;21075:180::-;21123:77;21120:1;21113:88;21220:4;21217:1;21210:15;21244:4;21241:1;21234:15;21261:320;21305:6;21342:1;21336:4;21332:12;21322:22;;21389:1;21383:4;21379:12;21410:18;21400:81;;21466:4;21458:6;21454:17;21444:27;;21400:81;21528:2;21520:6;21517:14;21497:18;21494:38;21491:84;;21547:18;;:::i;:::-;21491:84;21312:269;21261:320;;;:::o;21587:90::-;21621:7;21664:5;21657:13;21650:21;21639:32;;21587:90;;;:::o;21683:116::-;21753:21;21768:5;21753:21;:::i;:::-;21746:5;21743:32;21733:60;;21789:1;21786;21779:12;21733:60;21683:116;:::o;21805:137::-;21859:5;21890:6;21884:13;21875:22;;21906:30;21930:5;21906:30;:::i;:::-;21805:137;;;;:::o;21948:345::-;22015:6;22064:2;22052:9;22043:7;22039:23;22035:32;22032:119;;;22070:79;;:::i;:::-;22032:119;22190:1;22215:61;22268:7;22259:6;22248:9;22244:22;22215:61;:::i;:::-;22205:71;;22161:125;21948:345;;;;:::o;22299:172::-;22439:24;22435:1;22427:6;22423:14;22416:48;22299:172;:::o;22477:366::-;22619:3;22640:67;22704:2;22699:3;22640:67;:::i;:::-;22633:74;;22716:93;22805:3;22716:93;:::i;:::-;22834:2;22829:3;22825:12;22818:19;;22477:366;;;:::o;22849:419::-;23015:4;23053:2;23042:9;23038:18;23030:26;;23102:9;23096:4;23092:20;23088:1;23077:9;23073:17;23066:47;23130:131;23256:4;23130:131;:::i;:::-;23122:139;;22849:419;;;:::o;23274:221::-;23414:34;23410:1;23402:6;23398:14;23391:58;23483:4;23478:2;23470:6;23466:15;23459:29;23274:221;:::o;23501:366::-;23643:3;23664:67;23728:2;23723:3;23664:67;:::i;:::-;23657:74;;23740:93;23829:3;23740:93;:::i;:::-;23858:2;23853:3;23849:12;23842:19;;23501:366;;;:::o;23873:419::-;24039:4;24077:2;24066:9;24062:18;24054:26;;24126:9;24120:4;24116:20;24112:1;24101:9;24097:17;24090:47;24154:131;24280:4;24154:131;:::i;:::-;24146:139;;23873:419;;;:::o;24298:141::-;24347:4;24370:3;24362:11;;24393:3;24390:1;24383:14;24427:4;24424:1;24414:18;24406:26;;24298:141;;;:::o;24445:93::-;24482:6;24529:2;24524;24517:5;24513:14;24509:23;24499:33;;24445:93;;;:::o;24544:107::-;24588:8;24638:5;24632:4;24628:16;24607:37;;24544:107;;;;:::o;24657:393::-;24726:6;24776:1;24764:10;24760:18;24799:97;24829:66;24818:9;24799:97;:::i;:::-;24917:39;24947:8;24936:9;24917:39;:::i;:::-;24905:51;;24989:4;24985:9;24978:5;24974:21;24965:30;;25038:4;25028:8;25024:19;25017:5;25014:30;25004:40;;24733:317;;24657:393;;;;;:::o;25056:142::-;25106:9;25139:53;25157:34;25166:24;25184:5;25166:24;:::i;:::-;25157:34;:::i;:::-;25139:53;:::i;:::-;25126:66;;25056:142;;;:::o;25204:75::-;25247:3;25268:5;25261:12;;25204:75;;;:::o;25285:269::-;25395:39;25426:7;25395:39;:::i;:::-;25456:91;25505:41;25529:16;25505:41;:::i;:::-;25497:6;25490:4;25484:11;25456:91;:::i;:::-;25450:4;25443:105;25361:193;25285:269;;;:::o;25560:73::-;25605:3;25560:73;:::o;25639:189::-;25716:32;;:::i;:::-;25757:65;25815:6;25807;25801:4;25757:65;:::i;:::-;25692:136;25639:189;;:::o;25834:186::-;25894:120;25911:3;25904:5;25901:14;25894:120;;;25965:39;26002:1;25995:5;25965:39;:::i;:::-;25938:1;25931:5;25927:13;25918:22;;25894:120;;;25834:186;;:::o;26026:543::-;26127:2;26122:3;26119:11;26116:446;;;26161:38;26193:5;26161:38;:::i;:::-;26245:29;26263:10;26245:29;:::i;:::-;26235:8;26231:44;26428:2;26416:10;26413:18;26410:49;;;26449:8;26434:23;;26410:49;26472:80;26528:22;26546:3;26528:22;:::i;:::-;26518:8;26514:37;26501:11;26472:80;:::i;:::-;26131:431;;26116:446;26026:543;;;:::o;26575:117::-;26629:8;26679:5;26673:4;26669:16;26648:37;;26575:117;;;;:::o;26698:169::-;26742:6;26775:51;26823:1;26819:6;26811:5;26808:1;26804:13;26775:51;:::i;:::-;26771:56;26856:4;26850;26846:15;26836:25;;26749:118;26698:169;;;;:::o;26872:295::-;26948:4;27094:29;27119:3;27113:4;27094:29;:::i;:::-;27086:37;;27156:3;27153:1;27149:11;27143:4;27140:21;27132:29;;26872:295;;;;:::o;27172:1395::-;27289:37;27322:3;27289:37;:::i;:::-;27391:18;27383:6;27380:30;27377:56;;;27413:18;;:::i;:::-;27377:56;27457:38;27489:4;27483:11;27457:38;:::i;:::-;27542:67;27602:6;27594;27588:4;27542:67;:::i;:::-;27636:1;27660:4;27647:17;;27692:2;27684:6;27681:14;27709:1;27704:618;;;;28366:1;28383:6;28380:77;;;28432:9;28427:3;28423:19;28417:26;28408:35;;28380:77;28483:67;28543:6;28536:5;28483:67;:::i;:::-;28477:4;28470:81;28339:222;27674:887;;27704:618;27756:4;27752:9;27744:6;27740:22;27790:37;27822:4;27790:37;:::i;:::-;27849:1;27863:208;27877:7;27874:1;27871:14;27863:208;;;27956:9;27951:3;27947:19;27941:26;27933:6;27926:42;28007:1;27999:6;27995:14;27985:24;;28054:2;28043:9;28039:18;28026:31;;27900:4;27897:1;27893:12;27888:17;;27863:208;;;28099:6;28090:7;28087:19;28084:179;;;28157:9;28152:3;28148:19;28142:26;28200:48;28242:4;28234:6;28230:17;28219:9;28200:48;:::i;:::-;28192:6;28185:64;28107:156;28084:179;28309:1;28305;28297:6;28293:14;28289:22;28283:4;28276:36;27711:611;;;27674:887;;27264:1303;;;27172:1395;;:::o;28573:529::-;28740:4;28778:2;28767:9;28763:18;28755:26;;28791:70;28858:1;28847:9;28843:17;28834:6;28791:70;:::i;:::-;28871:71;28938:2;28927:9;28923:18;28914:6;28871:71;:::i;:::-;28989:9;28983:4;28979:20;28974:2;28963:9;28959:18;28952:48;29017:78;29090:4;29081:6;29017:78;:::i;:::-;29009:86;;28573:529;;;;;;:::o;29108:167::-;29248:19;29244:1;29236:6;29232:14;29225:43;29108:167;:::o;29281:366::-;29423:3;29444:67;29508:2;29503:3;29444:67;:::i;:::-;29437:74;;29520:93;29609:3;29520:93;:::i;:::-;29638:2;29633:3;29629:12;29622:19;;29281:366;;;:::o;29653:419::-;29819:4;29857:2;29846:9;29842:18;29834:26;;29906:9;29900:4;29896:20;29892:1;29881:9;29877:17;29870:47;29934:131;30060:4;29934:131;:::i;:::-;29926:139;;29653:419;;;:::o;30078:230::-;30218:34;30214:1;30206:6;30202:14;30195:58;30287:13;30282:2;30274:6;30270:15;30263:38;30078:230;:::o;30314:366::-;30456:3;30477:67;30541:2;30536:3;30477:67;:::i;:::-;30470:74;;30553:93;30642:3;30553:93;:::i;:::-;30671:2;30666:3;30662:12;30655:19;;30314:366;;;:::o;30686:419::-;30852:4;30890:2;30879:9;30875:18;30867:26;;30939:9;30933:4;30929:20;30925:1;30914:9;30910:17;30903:47;30967:131;31093:4;30967:131;:::i;:::-;30959:139;;30686:419;;;:::o;31111:168::-;31251:20;31247:1;31239:6;31235:14;31228:44;31111:168;:::o;31285:366::-;31427:3;31448:67;31512:2;31507:3;31448:67;:::i;:::-;31441:74;;31524:93;31613:3;31524:93;:::i;:::-;31642:2;31637:3;31633:12;31626:19;;31285:366;;;:::o;31657:419::-;31823:4;31861:2;31850:9;31846:18;31838:26;;31910:9;31904:4;31900:20;31896:1;31885:9;31881:17;31874:47;31938:131;32064:4;31938:131;:::i;:::-;31930:139;;31657:419;;;:::o;32082:181::-;32222:33;32218:1;32210:6;32206:14;32199:57;32082:181;:::o;32269:366::-;32411:3;32432:67;32496:2;32491:3;32432:67;:::i;:::-;32425:74;;32508:93;32597:3;32508:93;:::i;:::-;32626:2;32621:3;32617:12;32610:19;;32269:366;;;:::o;32641:419::-;32807:4;32845:2;32834:9;32830:18;32822:26;;32894:9;32888:4;32884:20;32880:1;32869:9;32865:17;32858:47;32922:131;33048:4;32922:131;:::i;:::-;32914:139;;32641:419;;;:::o;33066:332::-;33187:4;33225:2;33214:9;33210:18;33202:26;;33238:71;33306:1;33295:9;33291:17;33282:6;33238:71;:::i;:::-;33319:72;33387:2;33376:9;33372:18;33363:6;33319:72;:::i;:::-;33066:332;;;;;:::o;33404:442::-;33553:4;33591:2;33580:9;33576:18;33568:26;;33604:71;33672:1;33661:9;33657:17;33648:6;33604:71;:::i;:::-;33685:72;33753:2;33742:9;33738:18;33729:6;33685:72;:::i;:::-;33767;33835:2;33824:9;33820:18;33811:6;33767:72;:::i;:::-;33404:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2214000",
								"executionCost": "2358",
								"totalCost": "2216358"
							},
							"external": {
								"": "468",
								"NATIVE_TOKEN()": "418",
								"allowedAmounts(address,address)": "infinite",
								"claim(address)": "infinite",
								"currentRound()": "infinite",
								"deposit(address,uint256)": "infinite",
								"initialize(address,address)": "infinite",
								"owner()": "2590",
								"renounceOwnership()": "infinite",
								"scorer()": "infinite",
								"setAllowedAmount(address,address,uint256)": "infinite",
								"setRound(uint64,uint64,string)": "infinite",
								"totalBalances(address)": "2824",
								"transferOwnership(address)": "infinite",
								"withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 454,
									"end": 6176,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 6176,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d9af27273360c69383a4b916da5f67842ac34296b3a823290499473bdb2881f64736f6c634300081a0033",
									".code": [
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "AEE9C872"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "AEE9C872"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "B807A3C4"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "F3FEF3A3"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "A9012C89"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "A9590E8A"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "485CC955"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "485CC955"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "85C758F7"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "8A19C8BC"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "1E83409A"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "31F7D964"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "47E7EF24"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5941,
											"end": 5950,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5923,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 614,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 5910,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5974,
											"end": 5984,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "PUSH",
											"source": 13,
											"value": "5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
										},
										{
											"begin": 6000,
											"end": 6009,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 5966,
											"end": 6010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6010,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 6130,
											"end": 6165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6165,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2973,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2973,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 566,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 566,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 2414,
											"end": 2888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2414,
											"end": 2888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1978,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1978,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 622,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 622,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 4732,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 4732,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4222,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4222,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 5215,
											"end": 5793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 5215,
											"end": 5793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3068,
											"end": 3086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3086,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3068,
											"end": 3086,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3086,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3068,
											"end": 3086,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3050,
											"end": 3086,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3065,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3086,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 3050,
											"end": 3124,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3108,
											"end": 3120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3108,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3108,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3108,
											"end": 3124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3108,
											"end": 3124,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3108,
											"end": 3124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3108,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3108,
											"end": 3124,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3108,
											"end": 3124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3108,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3108,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3108,
											"end": 3124,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3090,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3090,
											"end": 3124,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3090,
											"end": 3105,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 3090,
											"end": 3124,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3124,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 3050,
											"end": 3124,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3046,
											"end": 3229,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3046,
											"end": 3229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 3046,
											"end": 3229,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3163,
											"end": 3178,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3200,
											"end": 3216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3216,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3200,
											"end": 3216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3216,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3200,
											"end": 3216,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3216,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3200,
											"end": 3216,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FA7410D400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 3148,
											"end": 3217,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3217,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3046,
											"end": 3229,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 3046,
											"end": 3229,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3241,
											"end": 3266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3294,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3301,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3302,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3241,
											"end": 3302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3241,
											"end": 3302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3338,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3321,
											"end": 3342,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3313,
											"end": 3366,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 3313,
											"end": 3366,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3426,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3404,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3405,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3426,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3426,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3377,
											"end": 3456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3377,
											"end": 3456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 3475,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3475,
											"end": 3481,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3481,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3475,
											"end": 3481,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3475,
											"end": 3487,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "DB4F1024"
										},
										{
											"begin": 3488,
											"end": 3498,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3475,
											"end": 3508,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3508,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 3475,
											"end": 3508,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 3475,
											"end": 3508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3512,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3467,
											"end": 3541,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 3467,
											"end": 3541,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3579,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3580,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3586,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3587,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3591,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3591,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3626,
											"end": 3643,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3621,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 3602,
											"end": 3643,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3660,
											"end": 3681,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3660,
											"end": 3665,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3660,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3660,
											"end": 3681,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3660,
											"end": 3681,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3656,
											"end": 3920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 3656,
											"end": 3920,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3699,
											"end": 3711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3727,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3717,
											"end": 3732,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3740,
											"end": 3757,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 3717,
											"end": 3762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3762,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3698,
											"end": 3762,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3698,
											"end": 3762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3698,
											"end": 3762,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3792,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 3777,
											"end": 3818,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 3777,
											"end": 3818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3656,
											"end": 3920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3656,
											"end": 3920,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3656,
											"end": 3920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 3656,
											"end": 3920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 3878,
											"end": 3888,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3890,
											"end": 3907,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3863,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3908,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3908,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3851,
											"end": 3908,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3908,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 3851,
											"end": 3908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3656,
											"end": 3920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3656,
											"end": 3920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3957,
											"end": 3962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 3955,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "F7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683"
										},
										{
											"begin": 3964,
											"end": 3981,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 3937,
											"end": 3982,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3982,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3990,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3990,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 613,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2508,
											"end": 2529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2513,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2508,
											"end": 2529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2504,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2504,
											"end": 2788,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2567,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2554,
											"end": 2563,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2554,
											"end": 2573,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 2546,
											"end": 2600,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2546,
											"end": 2600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2504,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 2504,
											"end": 2788,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2504,
											"end": 2788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2504,
											"end": 2788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2650,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2647,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2641,
											"end": 2651,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 2633,
											"end": 2696,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 2633,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 2742,
											"end": 2752,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2762,
											"end": 2766,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2775,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2718,
											"end": 2723,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2711,
											"end": 2741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 2711,
											"end": 2741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2776,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2776,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2776,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2776,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2711,
											"end": 2776,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2776,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2776,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 2711,
											"end": 2776,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2504,
											"end": 2788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 2504,
											"end": 2788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2830,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2819,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 2800,
											"end": 2830,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2866,
											"end": 2871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
										},
										{
											"begin": 2873,
											"end": 2879,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 2846,
											"end": 2880,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2880,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 2077,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2062,
											"end": 2076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 2062,
											"end": 2083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2062,
											"end": 2083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 2062,
											"end": 2083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2128,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 2128,
											"end": 2150,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 2128,
											"end": 2152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2128,
											"end": 2152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 2128,
											"end": 2152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2180,
											"end": 2187,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2163,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2188,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 2196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1740,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1726,
											"end": 1740,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1740,
											"name": "PUSH",
											"source": 13,
											"value": "24D7806C"
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1726,
											"end": 1752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1726,
											"end": 1752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 1718,
											"end": 1779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4843,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4843,
											"end": 4854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4843,
											"end": 4848,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4843,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4843,
											"end": 4854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4843,
											"end": 4854,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 4835,
											"end": 4893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 4835,
											"end": 4893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4925,
											"end": 4930,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4932,
											"end": 4935,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4937,
											"end": 4948,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 4904,
											"end": 4949,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4949,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13"
										},
										{
											"begin": 4978,
											"end": 4983,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4985,
											"end": 4988,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4990,
											"end": 5001,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 4965,
											"end": 5002,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 5010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1740,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1726,
											"end": 1740,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1740,
											"name": "PUSH",
											"source": 13,
											"value": "24D7806C"
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1726,
											"end": 1752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1726,
											"end": 1752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 1726,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 1718,
											"end": 1779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 1718,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4331,
											"end": 4349,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4331,
											"end": 4335,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4331,
											"end": 4349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4331,
											"end": 4349,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4331,
											"end": 4349,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 4323,
											"end": 4371,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4323,
											"end": 4371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4418,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4401,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4402,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4408,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4409,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4418,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4418,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4418,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4461,
											"end": 4466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4455,
											"end": 4459,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2"
										},
										{
											"begin": 4468,
											"end": 4474,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 4434,
											"end": 4475,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4475,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2526,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2526,
											"end": 2547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5326,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5322,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5316,
											"end": 5326,
											"modifierDepth": 2,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 5308,
											"end": 5374,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 5308,
											"end": 5374,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5417,
											"end": 5423,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5412,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5413,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5423,
											"modifierDepth": 2,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5423,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 5385,
											"end": 5446,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 5385,
											"end": 5446,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5483,
											"end": 5489,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5472,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5478,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 5459,
											"end": 5489,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5489,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5527,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5506,
											"end": 5527,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5506,
											"end": 5511,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5506,
											"end": 5527,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5506,
											"end": 5527,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5506,
											"end": 5527,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5502,
											"end": 5738,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 5502,
											"end": 5738,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5557,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5570,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 5563,
											"end": 5568,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5563,
											"end": 5570,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5570,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 5563,
											"end": 5570,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5575,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5563,
											"end": 5575,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5583,
											"end": 5589,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 5563,
											"end": 5594,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5594,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5594,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5594,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5594,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5617,
											"end": 5624,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 5609,
											"end": 5650,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 5609,
											"end": 5650,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5529,
											"end": 5662,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5502,
											"end": 5738,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 5502,
											"end": 5738,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5502,
											"end": 5738,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 5502,
											"end": 5738,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5683,
											"end": 5726,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 5710,
											"end": 5717,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 5710,
											"end": 5715,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5710,
											"end": 5717,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5710,
											"end": 5717,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 5710,
											"end": 5717,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5725,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5690,
											"end": 5695,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5683,
											"end": 5709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5683,
											"end": 5709,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5683,
											"end": 5709,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 5683,
											"end": 5709,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5683,
											"end": 5726,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5683,
											"end": 5726,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5683,
											"end": 5726,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5683,
											"end": 5726,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5683,
											"end": 5726,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5683,
											"end": 5726,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5683,
											"end": 5726,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 5683,
											"end": 5726,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5502,
											"end": 5738,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 5502,
											"end": 5738,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5771,
											"end": 5776,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5762,
											"end": 5769,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5762,
											"end": 5767,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5762,
											"end": 5769,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5762,
											"end": 5769,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5762,
											"end": 5769,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB"
										},
										{
											"begin": 5778,
											"end": 5784,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 5753,
											"end": 5785,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5785,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 2568,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 2568,
											"end": 2588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2752,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 2725,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2894,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 1797,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 1959,
											"end": 1991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1959,
											"end": 1993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2086,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 276,
											"end": 467,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 316,
											"end": 319,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 369,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 369,
											"end": 389,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 369,
											"end": 389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 364,
											"end": 389,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 364,
											"end": 389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 405,
											"end": 414,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 398,
											"end": 414,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 398,
											"end": 414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 433,
											"end": 436,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 427,
											"end": 437,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 424,
											"end": 460,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 440,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 440,
											"end": 458,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 473,
											"end": 591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 560,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 560,
											"end": 584,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 560,
											"end": 584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 548,
											"end": 585,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 597,
											"end": 819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 690,
											"end": 694,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 713,
											"end": 731,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 705,
											"end": 731,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 705,
											"end": 731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 809,
											"end": 810,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 807,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 794,
											"end": 811,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 741,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 741,
											"end": 812,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 741,
											"end": 812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 825,
											"end": 994,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 909,
											"end": 920,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 931,
											"end": 950,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 983,
											"end": 987,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 981,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 974,
											"end": 988,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1000,
											"end": 1175,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 1000,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1140,
											"end": 1167,
											"name": "PUSH",
											"source": 14,
											"value": "6E436F6F6B69654A61723A20757365206465706F736974282900000000000000"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1124,
											"end": 1138,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1000,
											"end": 1175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1000,
											"end": 1175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1181,
											"end": 1547,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 1181,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1323,
											"end": 1326,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 1403,
											"end": 1406,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1344,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 1344,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1344,
											"end": 1411,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 1344,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1411,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1411,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1420,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 1509,
											"end": 1512,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1420,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 1420,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1420,
											"end": 1513,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 1420,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1540,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1536,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1522,
											"end": 1541,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1522,
											"end": 1541,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1181,
											"end": 1547,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1181,
											"end": 1547,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1181,
											"end": 1547,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1181,
											"end": 1547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1972,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 1553,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1719,
											"end": 1723,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1759,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1755,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1742,
											"end": 1760,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1734,
											"end": 1760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1734,
											"end": 1760,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1800,
											"end": 1804,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1796,
											"end": 1816,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1792,
											"end": 1793,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1790,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1777,
											"end": 1794,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1770,
											"end": 1817,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 1960,
											"end": 1964,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 1834,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1965,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 1834,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1826,
											"end": 1965,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1826,
											"end": 1965,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1972,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1972,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1972,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2053,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 1978,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2046,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2053,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2059,
											"end": 2176,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 2059,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2170,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2299,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 2182,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2289,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2305,
											"end": 2431,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 2305,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2342,
											"end": 2349,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2424,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2375,
											"end": 2380,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2371,
											"end": 2425,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2425,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2425,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2305,
											"end": 2431,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2305,
											"end": 2431,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2305,
											"end": 2431,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2305,
											"end": 2431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2437,
											"end": 2533,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 2437,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2474,
											"end": 2481,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2503,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 2503,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2503,
											"end": 2527,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 2503,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2527,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2527,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2437,
											"end": 2533,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2437,
											"end": 2533,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2437,
											"end": 2533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2437,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 2661,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 2539,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2612,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 2630,
											"end": 2635,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2612,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 2612,
											"end": 2636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2612,
											"end": 2636,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 2612,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2605,
											"end": 2610,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2592,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 2592,
											"end": 2655,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2651,
											"end": 2652,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2649,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2592,
											"end": 2655,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 2592,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 2661,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 2661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2806,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 2667,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2718,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2738,
											"end": 2758,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2758,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2758,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2767,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 2794,
											"end": 2799,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2767,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 2767,
											"end": 2800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2767,
											"end": 2800,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 2767,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2806,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2806,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2806,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2806,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2812,
											"end": 3141,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 2812,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2871,
											"end": 2877,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 2922,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2908,
											"end": 2917,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2899,
											"end": 2906,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2891,
											"end": 2923,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 3007,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 2888,
											"end": 3007,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2926,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 2926,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 2926,
											"end": 3005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2926,
											"end": 3005,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 2926,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 3007,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 2888,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3046,
											"end": 3047,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 3116,
											"end": 3123,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3107,
											"end": 3113,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3096,
											"end": 3105,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3114,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 3071,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3124,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 3071,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3061,
											"end": 3124,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3061,
											"end": 3124,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3017,
											"end": 3134,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2812,
											"end": 3141,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2812,
											"end": 3141,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2812,
											"end": 3141,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2812,
											"end": 3141,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2812,
											"end": 3141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3147,
											"end": 3265,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 3147,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 3252,
											"end": 3257,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 3234,
											"end": 3258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3258,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 3234,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3229,
											"end": 3232,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3222,
											"end": 3259,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3147,
											"end": 3265,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3147,
											"end": 3265,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3147,
											"end": 3265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3271,
											"end": 3493,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 3271,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3364,
											"end": 3368,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3400,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3405,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3379,
											"end": 3405,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3379,
											"end": 3405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3481,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3468,
											"end": 3485,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 3415,
											"end": 3486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3271,
											"end": 3493,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3271,
											"end": 3493,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3271,
											"end": 3493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3271,
											"end": 3493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3271,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3499,
											"end": 3621,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 3499,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3572,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 3590,
											"end": 3595,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3572,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 3572,
											"end": 3596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3572,
											"end": 3596,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 3572,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3565,
											"end": 3570,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3562,
											"end": 3597,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 3552,
											"end": 3615,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3611,
											"end": 3612,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3609,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 3613,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3615,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 3552,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3499,
											"end": 3621,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3499,
											"end": 3621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3627,
											"end": 3766,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 3627,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3673,
											"end": 3678,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3698,
											"end": 3718,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3689,
											"end": 3718,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3689,
											"end": 3718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3727,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3727,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 3727,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3727,
											"end": 3760,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 3727,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3627,
											"end": 3766,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3627,
											"end": 3766,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3627,
											"end": 3766,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3627,
											"end": 3766,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3627,
											"end": 3766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3772,
											"end": 4246,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 3772,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3840,
											"end": 3846,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3848,
											"end": 3854,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3885,
											"end": 3894,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3876,
											"end": 3883,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3895,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3868,
											"end": 3900,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3903,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 3903,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 3903,
											"end": 3982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3903,
											"end": 3982,
											"name": "tag",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 3903,
											"end": 3982,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4023,
											"end": 4024,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 4093,
											"end": 4100,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4090,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4073,
											"end": 4082,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4069,
											"end": 4091,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4048,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4048,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4048,
											"end": 4101,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 4048,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4101,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4101,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3994,
											"end": 4111,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4150,
											"end": 4152,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 4221,
											"end": 4228,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4212,
											"end": 4218,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4201,
											"end": 4210,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4197,
											"end": 4219,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4176,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4166,
											"end": 4229,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4166,
											"end": 4229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4121,
											"end": 4239,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3772,
											"end": 4246,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3772,
											"end": 4246,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3772,
											"end": 4246,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3772,
											"end": 4246,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3772,
											"end": 4246,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3772,
											"end": 4246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4252,
											"end": 4726,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 4252,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4320,
											"end": 4326,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4334,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4377,
											"end": 4379,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4365,
											"end": 4374,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4356,
											"end": 4363,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4352,
											"end": 4375,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4348,
											"end": 4380,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4345,
											"end": 4464,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4345,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 4345,
											"end": 4464,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4383,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 4383,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 4383,
											"end": 4462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4383,
											"end": 4462,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 4383,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4345,
											"end": 4464,
											"name": "tag",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 4345,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4503,
											"end": 4504,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 4573,
											"end": 4580,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4564,
											"end": 4570,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4553,
											"end": 4562,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4549,
											"end": 4571,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4528,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4528,
											"end": 4581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4528,
											"end": 4581,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 4528,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4518,
											"end": 4581,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4518,
											"end": 4581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4474,
											"end": 4591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4630,
											"end": 4632,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4656,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 4701,
											"end": 4708,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4681,
											"end": 4690,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4677,
											"end": 4699,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4656,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4656,
											"end": 4709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4656,
											"end": 4709,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 4656,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4709,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4709,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4601,
											"end": 4719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4252,
											"end": 4726,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4252,
											"end": 4726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4252,
											"end": 4726,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4252,
											"end": 4726,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4252,
											"end": 4726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4252,
											"end": 4726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4732,
											"end": 4792,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 4732,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4760,
											"end": 4763,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4774,
											"end": 4786,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4774,
											"end": 4786,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4732,
											"end": 4792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4732,
											"end": 4792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4732,
											"end": 4792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4732,
											"end": 4792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 4940,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 4798,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4848,
											"end": 4857,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 4899,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 4908,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4908,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 4908,
											"end": 4932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4908,
											"end": 4932,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 4908,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4899,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 4899,
											"end": 4933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4899,
											"end": 4933,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 4899,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4881,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 4881,
											"end": 4934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4881,
											"end": 4934,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 4881,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4868,
											"end": 4934,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4868,
											"end": 4934,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 4940,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 4940,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 4940,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 4940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4946,
											"end": 5072,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 4946,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4996,
											"end": 5005,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5029,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5029,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 5029,
											"end": 5066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5029,
											"end": 5066,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 5029,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5016,
											"end": 5066,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5016,
											"end": 5066,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4946,
											"end": 5072,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4946,
											"end": 5072,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4946,
											"end": 5072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4946,
											"end": 5072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5078,
											"end": 5220,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 5078,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5177,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 5208,
											"end": 5213,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 5177,
											"end": 5214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5214,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 5177,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5164,
											"end": 5214,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5164,
											"end": 5214,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5078,
											"end": 5220,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5078,
											"end": 5220,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5078,
											"end": 5220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5078,
											"end": 5220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5226,
											"end": 5389,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 5226,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5329,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 5376,
											"end": 5381,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5329,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 5329,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5329,
											"end": 5382,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 5329,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5324,
											"end": 5327,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5317,
											"end": 5383,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5226,
											"end": 5389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5226,
											"end": 5389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5226,
											"end": 5389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5395,
											"end": 5649,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 5395,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5504,
											"end": 5508,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5531,
											"end": 5540,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5519,
											"end": 5545,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5519,
											"end": 5545,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5555,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5628,
											"end": 5637,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5624,
											"end": 5641,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5615,
											"end": 5621,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5555,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 5555,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5555,
											"end": 5642,
											"name": "tag",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 5555,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5395,
											"end": 5649,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5395,
											"end": 5649,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5395,
											"end": 5649,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5395,
											"end": 5649,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5395,
											"end": 5649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5655,
											"end": 5756,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 5655,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5691,
											"end": 5698,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5724,
											"end": 5729,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5720,
											"end": 5750,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5709,
											"end": 5750,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5709,
											"end": 5750,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5655,
											"end": 5756,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5655,
											"end": 5756,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5655,
											"end": 5756,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5655,
											"end": 5756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5877,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 5762,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5847,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 5864,
											"end": 5869,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5847,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 5847,
											"end": 5870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5847,
											"end": 5870,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 5847,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5842,
											"end": 5845,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5835,
											"end": 5871,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 5982,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 5883,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5935,
											"end": 5941,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5969,
											"end": 5974,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5953,
											"end": 5975,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5953,
											"end": 5975,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 5982,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 5982,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 5982,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 5982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5988,
											"end": 6127,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 5988,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6077,
											"end": 6083,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6072,
											"end": 6075,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6067,
											"end": 6070,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6061,
											"end": 6084,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6115,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6104,
											"end": 6107,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6100,
											"end": 6116,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6093,
											"end": 6120,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5988,
											"end": 6127,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5988,
											"end": 6127,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5988,
											"end": 6127,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5988,
											"end": 6127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6235,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 6133,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6174,
											"end": 6180,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6227,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6221,
											"end": 6228,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 6216,
											"end": 6218,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6209,
											"end": 6214,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6205,
											"end": 6219,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6201,
											"end": 6229,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6191,
											"end": 6229,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6191,
											"end": 6229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6235,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6235,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6618,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 6241,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6329,
											"end": 6332,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 6390,
											"end": 6395,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6357,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 6357,
											"end": 6396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6357,
											"end": 6396,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 6357,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 6476,
											"end": 6482,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6471,
											"end": 6474,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 6412,
											"end": 6483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6483,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 6412,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6405,
											"end": 6483,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6405,
											"end": 6483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6492,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 6550,
											"end": 6556,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6545,
											"end": 6548,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6538,
											"end": 6542,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6531,
											"end": 6536,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6527,
											"end": 6543,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6492,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 6492,
											"end": 6557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6492,
											"end": 6557,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 6492,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6582,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 6604,
											"end": 6610,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6582,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 6582,
											"end": 6611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6582,
											"end": 6611,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 6582,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6577,
											"end": 6580,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6573,
											"end": 6612,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6566,
											"end": 6612,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6566,
											"end": 6612,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6333,
											"end": 6618,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6618,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6618,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6618,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6618,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6624,
											"end": 7149,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 6624,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6789,
											"end": 6793,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6827,
											"end": 6829,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6816,
											"end": 6825,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6804,
											"end": 6830,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6804,
											"end": 6830,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6840,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 6906,
											"end": 6907,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 6904,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6891,
											"end": 6908,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6882,
											"end": 6888,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6840,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 6840,
											"end": 6909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6840,
											"end": 6909,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 6840,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6919,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 6985,
											"end": 6987,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6974,
											"end": 6983,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6961,
											"end": 6967,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6919,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 6919,
											"end": 6989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6919,
											"end": 6989,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 6919,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7036,
											"end": 7045,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7030,
											"end": 7034,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7026,
											"end": 7046,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7021,
											"end": 7023,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7010,
											"end": 7019,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6999,
											"end": 7047,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7064,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 7137,
											"end": 7141,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7128,
											"end": 7134,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7064,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 7064,
											"end": 7142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7064,
											"end": 7142,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 7064,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7056,
											"end": 7142,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7056,
											"end": 7142,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6624,
											"end": 7149,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6624,
											"end": 7149,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6624,
											"end": 7149,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6624,
											"end": 7149,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6624,
											"end": 7149,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6624,
											"end": 7149,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6624,
											"end": 7149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7155,
											"end": 7275,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 7155,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7227,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 7244,
											"end": 7249,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7227,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 7227,
											"end": 7250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7227,
											"end": 7250,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 7227,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7220,
											"end": 7225,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7217,
											"end": 7251,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7207,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 7207,
											"end": 7269,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7265,
											"end": 7266,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7263,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7255,
											"end": 7267,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7207,
											"end": 7269,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 7207,
											"end": 7269,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7155,
											"end": 7275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7155,
											"end": 7275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7281,
											"end": 7418,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 7281,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7326,
											"end": 7331,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7364,
											"end": 7370,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7351,
											"end": 7371,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7342,
											"end": 7371,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7342,
											"end": 7371,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7380,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 7406,
											"end": 7411,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7380,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 7380,
											"end": 7412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7380,
											"end": 7412,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 7380,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7281,
											"end": 7418,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7281,
											"end": 7418,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7281,
											"end": 7418,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7281,
											"end": 7418,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7281,
											"end": 7418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7424,
											"end": 7541,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7424,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7533,
											"end": 7534,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7523,
											"end": 7535,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7547,
											"end": 7664,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7547,
											"end": 7664,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7656,
											"end": 7657,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7653,
											"end": 7654,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7670,
											"end": 7850,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 7670,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7718,
											"end": 7795,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7715,
											"end": 7716,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7796,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7815,
											"end": 7819,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 7812,
											"end": 7813,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7805,
											"end": 7820,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7839,
											"end": 7843,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7836,
											"end": 7837,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7829,
											"end": 7844,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7856,
											"end": 8137,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 7856,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7939,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7939,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 7939,
											"end": 7966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7939,
											"end": 7966,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 7939,
											"end": 7966,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7931,
											"end": 7937,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7927,
											"end": 7967,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8069,
											"end": 8075,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8057,
											"end": 8067,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8054,
											"end": 8076,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8021,
											"end": 8031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8018,
											"end": 8052,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8015,
											"end": 8077,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 8012,
											"end": 8100,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8012,
											"end": 8100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 8012,
											"end": 8100,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8080,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 8080,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 8080,
											"end": 8098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8080,
											"end": 8098,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 8080,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8012,
											"end": 8100,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 8012,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8116,
											"end": 8118,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8109,
											"end": 8131,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7899,
											"end": 8137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7856,
											"end": 8137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7856,
											"end": 8137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7856,
											"end": 8137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8143,
											"end": 8272,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 8143,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8177,
											"end": 8183,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8204,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 8204,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 8204,
											"end": 8224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8204,
											"end": 8224,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 8204,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8194,
											"end": 8224,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8194,
											"end": 8224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8233,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 8261,
											"end": 8265,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8253,
											"end": 8259,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8233,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 8233,
											"end": 8266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8233,
											"end": 8266,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 8233,
											"end": 8266,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8143,
											"end": 8272,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8143,
											"end": 8272,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8143,
											"end": 8272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8143,
											"end": 8272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8278,
											"end": 8586,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 8278,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8340,
											"end": 8344,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8422,
											"end": 8428,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8419,
											"end": 8449,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8416,
											"end": 8472,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8416,
											"end": 8472,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 8416,
											"end": 8472,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 8452,
											"end": 8470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8416,
											"end": 8472,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 8416,
											"end": 8472,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8490,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 8512,
											"end": 8518,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8490,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 8490,
											"end": 8519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8490,
											"end": 8519,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 8490,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8482,
											"end": 8519,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8482,
											"end": 8519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8574,
											"end": 8578,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8568,
											"end": 8572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8564,
											"end": 8579,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8556,
											"end": 8579,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8556,
											"end": 8579,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8278,
											"end": 8586,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8278,
											"end": 8586,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8278,
											"end": 8586,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8278,
											"end": 8586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8592,
											"end": 8740,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 8592,
											"end": 8740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8690,
											"end": 8696,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8685,
											"end": 8688,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8680,
											"end": 8683,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8667,
											"end": 8697,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 8731,
											"end": 8732,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8722,
											"end": 8728,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8717,
											"end": 8720,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8713,
											"end": 8729,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8706,
											"end": 8733,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8592,
											"end": 8740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8592,
											"end": 8740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8592,
											"end": 8740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8592,
											"end": 8740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8746,
											"end": 9171,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 8746,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8824,
											"end": 8829,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8849,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 8865,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 8907,
											"end": 8913,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8865,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 8865,
											"end": 8914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8865,
											"end": 8914,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 8865,
											"end": 8914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8849,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 8849,
											"end": 8915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8849,
											"end": 8915,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 8849,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8840,
											"end": 8915,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8840,
											"end": 8915,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8931,
											"end": 8936,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8924,
											"end": 8945,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8976,
											"end": 8980,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8969,
											"end": 8974,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8965,
											"end": 8981,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9014,
											"end": 9017,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9005,
											"end": 9011,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9000,
											"end": 9003,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8996,
											"end": 9012,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8993,
											"end": 9018,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8990,
											"end": 9102,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8990,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 8990,
											"end": 9102,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9021,
											"end": 9100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 9021,
											"end": 9100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 9021,
											"end": 9100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9021,
											"end": 9100,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 9021,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8990,
											"end": 9102,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 8990,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9111,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 9158,
											"end": 9164,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9153,
											"end": 9156,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9148,
											"end": 9151,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9111,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 9111,
											"end": 9165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9111,
											"end": 9165,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 9111,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8830,
											"end": 9171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8746,
											"end": 9171,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8746,
											"end": 9171,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8746,
											"end": 9171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8746,
											"end": 9171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8746,
											"end": 9171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8746,
											"end": 9171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9191,
											"end": 9531,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 9191,
											"end": 9531,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9247,
											"end": 9252,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9296,
											"end": 9299,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9289,
											"end": 9293,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 9281,
											"end": 9287,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9277,
											"end": 9294,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9273,
											"end": 9300,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9263,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 9263,
											"end": 9385,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9304,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 9304,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 9304,
											"end": 9383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9304,
											"end": 9383,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 9304,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9263,
											"end": 9385,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 9263,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9408,
											"end": 9428,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9446,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 9521,
											"end": 9524,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9513,
											"end": 9519,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9506,
											"end": 9510,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9498,
											"end": 9504,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9494,
											"end": 9511,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9446,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 9446,
											"end": 9525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9446,
											"end": 9525,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 9446,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9437,
											"end": 9525,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9437,
											"end": 9525,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9253,
											"end": 9531,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9191,
											"end": 9531,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9191,
											"end": 9531,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9191,
											"end": 9531,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9191,
											"end": 9531,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9191,
											"end": 9531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9537,
											"end": 10332,
											"name": "tag",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 9537,
											"end": 10332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9622,
											"end": 9628,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9630,
											"end": 9636,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9638,
											"end": 9644,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9687,
											"end": 9689,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9675,
											"end": 9684,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9666,
											"end": 9673,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9662,
											"end": 9685,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9658,
											"end": 9690,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9655,
											"end": 9774,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9655,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 9655,
											"end": 9774,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9693,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 9693,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 9693,
											"end": 9772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9693,
											"end": 9772,
											"name": "tag",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 9693,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9655,
											"end": 9774,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 9655,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9813,
											"end": 9814,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 9882,
											"end": 9889,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9873,
											"end": 9879,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9862,
											"end": 9871,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9858,
											"end": 9880,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9838,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 9838,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9838,
											"end": 9890,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 9838,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9828,
											"end": 9890,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9828,
											"end": 9890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9784,
											"end": 9900,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9939,
											"end": 9941,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9965,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 10009,
											"end": 10016,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10000,
											"end": 10006,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9989,
											"end": 9998,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9985,
											"end": 10007,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9965,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 9965,
											"end": 10017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9965,
											"end": 10017,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 9965,
											"end": 10017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9955,
											"end": 10017,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9955,
											"end": 10017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9910,
											"end": 10027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10094,
											"end": 10096,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10083,
											"end": 10092,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10079,
											"end": 10097,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10066,
											"end": 10098,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10117,
											"end": 10123,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10114,
											"end": 10144,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10111,
											"end": 10228,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10111,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 10111,
											"end": 10228,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10147,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 10147,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 10147,
											"end": 10226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10147,
											"end": 10226,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 10147,
											"end": 10226,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10111,
											"end": 10228,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 10111,
											"end": 10228,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10252,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 10307,
											"end": 10314,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10298,
											"end": 10304,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10287,
											"end": 10296,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10283,
											"end": 10305,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10252,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 10252,
											"end": 10315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10252,
											"end": 10315,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 10252,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10242,
											"end": 10315,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10242,
											"end": 10315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10037,
											"end": 10325,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9537,
											"end": 10332,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9537,
											"end": 10332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9537,
											"end": 10332,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9537,
											"end": 10332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9537,
											"end": 10332,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9537,
											"end": 10332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10338,
											"end": 10957,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 10338,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10415,
											"end": 10421,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10423,
											"end": 10429,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10480,
											"end": 10482,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10468,
											"end": 10477,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10459,
											"end": 10466,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10455,
											"end": 10478,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10451,
											"end": 10483,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10448,
											"end": 10567,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10448,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 10448,
											"end": 10567,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10486,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 10486,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 10486,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10486,
											"end": 10565,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 10486,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10448,
											"end": 10567,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 10448,
											"end": 10567,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10606,
											"end": 10607,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10631,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 10676,
											"end": 10683,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10667,
											"end": 10673,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10656,
											"end": 10665,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10652,
											"end": 10674,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10631,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 10631,
											"end": 10684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10631,
											"end": 10684,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 10631,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10621,
											"end": 10684,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10621,
											"end": 10684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10577,
											"end": 10694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10733,
											"end": 10735,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10759,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 10804,
											"end": 10811,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10795,
											"end": 10801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10759,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 10759,
											"end": 10812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10759,
											"end": 10812,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 10759,
											"end": 10812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10749,
											"end": 10812,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10749,
											"end": 10812,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10704,
											"end": 10822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10861,
											"end": 10863,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10887,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 10932,
											"end": 10939,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10923,
											"end": 10929,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10912,
											"end": 10921,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10908,
											"end": 10930,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10887,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 10887,
											"end": 10940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10887,
											"end": 10940,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 10887,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10877,
											"end": 10940,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10877,
											"end": 10940,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10832,
											"end": 10950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10338,
											"end": 10957,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10338,
											"end": 10957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10338,
											"end": 10957,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10338,
											"end": 10957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10338,
											"end": 10957,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10338,
											"end": 10957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10963,
											"end": 11103,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 10963,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11012,
											"end": 11021,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 11063,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 11072,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 11089,
											"end": 11094,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11072,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 11072,
											"end": 11095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11072,
											"end": 11095,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 11072,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11063,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 11063,
											"end": 11096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11063,
											"end": 11096,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 11063,
											"end": 11096,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11045,
											"end": 11097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 11045,
											"end": 11097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11045,
											"end": 11097,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 11045,
											"end": 11097,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11032,
											"end": 11097,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11032,
											"end": 11097,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10963,
											"end": 11103,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10963,
											"end": 11103,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10963,
											"end": 11103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10963,
											"end": 11103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11109,
											"end": 11238,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 11109,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11195,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 11225,
											"end": 11230,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11195,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 11195,
											"end": 11231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11195,
											"end": 11231,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 11195,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11190,
											"end": 11193,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11183,
											"end": 11232,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11109,
											"end": 11238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11109,
											"end": 11238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11109,
											"end": 11238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11244,
											"end": 11682,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 11244,
											"end": 11682,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11391,
											"end": 11395,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11429,
											"end": 11431,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11418,
											"end": 11427,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11414,
											"end": 11432,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11406,
											"end": 11432,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11406,
											"end": 11432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11442,
											"end": 11513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 11510,
											"end": 11511,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11499,
											"end": 11508,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11495,
											"end": 11512,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11486,
											"end": 11492,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11442,
											"end": 11513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 11442,
											"end": 11513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11442,
											"end": 11513,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 11442,
											"end": 11513,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11523,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 11590,
											"end": 11592,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11579,
											"end": 11588,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11575,
											"end": 11593,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11523,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 11523,
											"end": 11594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11523,
											"end": 11594,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 11523,
											"end": 11594,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11604,
											"end": 11675,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 11671,
											"end": 11673,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11660,
											"end": 11669,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11656,
											"end": 11674,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11647,
											"end": 11653,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11604,
											"end": 11675,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 11604,
											"end": 11675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11604,
											"end": 11675,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 11604,
											"end": 11675,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11244,
											"end": 11682,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11244,
											"end": 11682,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11244,
											"end": 11682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11244,
											"end": 11682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11244,
											"end": 11682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11244,
											"end": 11682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11244,
											"end": 11682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11688,
											"end": 11857,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 11688,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11828,
											"end": 11849,
											"name": "PUSH",
											"source": 14,
											"value": "4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000"
										},
										{
											"begin": 11824,
											"end": 11825,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11816,
											"end": 11822,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11812,
											"end": 11826,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11805,
											"end": 11850,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11688,
											"end": 11857,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11688,
											"end": 11857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 12229,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 11863,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12005,
											"end": 12008,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12026,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 12090,
											"end": 12092,
											"name": "PUSH",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 12085,
											"end": 12088,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12026,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 12026,
											"end": 12093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12026,
											"end": 12093,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 12026,
											"end": 12093,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12019,
											"end": 12093,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12019,
											"end": 12093,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12102,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 12191,
											"end": 12194,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12102,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 12102,
											"end": 12195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12102,
											"end": 12195,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 12102,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12220,
											"end": 12222,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12215,
											"end": 12218,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12211,
											"end": 12223,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12204,
											"end": 12223,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12204,
											"end": 12223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 12229,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 12229,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 12229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 12229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12235,
											"end": 12654,
											"name": "tag",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 12235,
											"end": 12654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12401,
											"end": 12405,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12424,
											"end": 12442,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12416,
											"end": 12442,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12416,
											"end": 12442,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12488,
											"end": 12497,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12482,
											"end": 12486,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12478,
											"end": 12498,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12474,
											"end": 12475,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12463,
											"end": 12472,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12459,
											"end": 12476,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12499,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12516,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 12642,
											"end": 12646,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12516,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 12516,
											"end": 12647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12516,
											"end": 12647,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 12516,
											"end": 12647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12508,
											"end": 12647,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12508,
											"end": 12647,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12235,
											"end": 12654,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12235,
											"end": 12654,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12235,
											"end": 12654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12235,
											"end": 12654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12660,
											"end": 12835,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 12660,
											"end": 12835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12800,
											"end": 12827,
											"name": "PUSH",
											"source": 14,
											"value": "496E73756666696369656E742066756E647320696E206A617200000000000000"
										},
										{
											"begin": 12796,
											"end": 12797,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12788,
											"end": 12794,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12784,
											"end": 12798,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12777,
											"end": 12828,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12660,
											"end": 12835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12660,
											"end": 12835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12841,
											"end": 13207,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 12841,
											"end": 13207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12983,
											"end": 12986,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13004,
											"end": 13071,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 13068,
											"end": 13070,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 13063,
											"end": 13066,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13004,
											"end": 13071,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 13004,
											"end": 13071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13004,
											"end": 13071,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 13004,
											"end": 13071,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12997,
											"end": 13071,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12997,
											"end": 13071,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13080,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 13169,
											"end": 13172,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13080,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 13080,
											"end": 13173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13080,
											"end": 13173,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 13080,
											"end": 13173,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13198,
											"end": 13200,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13193,
											"end": 13196,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13189,
											"end": 13201,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13182,
											"end": 13201,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13182,
											"end": 13201,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12841,
											"end": 13207,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12841,
											"end": 13207,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12841,
											"end": 13207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12841,
											"end": 13207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13213,
											"end": 13632,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 13213,
											"end": 13632,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13379,
											"end": 13383,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13417,
											"end": 13419,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13406,
											"end": 13415,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13420,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13394,
											"end": 13420,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13394,
											"end": 13420,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13466,
											"end": 13475,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13460,
											"end": 13464,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13456,
											"end": 13476,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13452,
											"end": 13453,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13441,
											"end": 13450,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13437,
											"end": 13454,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13430,
											"end": 13477,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13494,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 13620,
											"end": 13624,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13494,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 13494,
											"end": 13625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13494,
											"end": 13625,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 13494,
											"end": 13625,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13486,
											"end": 13625,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13486,
											"end": 13625,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13213,
											"end": 13632,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13213,
											"end": 13632,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13213,
											"end": 13632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13213,
											"end": 13632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13638,
											"end": 13793,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 13638,
											"end": 13793,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13778,
											"end": 13785,
											"name": "PUSH",
											"source": 14,
											"value": "5472757374000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13774,
											"end": 13775,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13766,
											"end": 13772,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13762,
											"end": 13776,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13755,
											"end": 13786,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13638,
											"end": 13793,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13638,
											"end": 13793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13799,
											"end": 14164,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 13799,
											"end": 14164,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13941,
											"end": 13944,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13962,
											"end": 14028,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 14026,
											"end": 14027,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 14021,
											"end": 14024,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13962,
											"end": 14028,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 13962,
											"end": 14028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13962,
											"end": 14028,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 13962,
											"end": 14028,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13955,
											"end": 14028,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13955,
											"end": 14028,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14037,
											"end": 14130,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 14126,
											"end": 14129,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14037,
											"end": 14130,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 14037,
											"end": 14130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14037,
											"end": 14130,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 14037,
											"end": 14130,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14155,
											"end": 14157,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14150,
											"end": 14153,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14146,
											"end": 14158,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14139,
											"end": 14158,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14139,
											"end": 14158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13799,
											"end": 14164,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13799,
											"end": 14164,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13799,
											"end": 14164,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13799,
											"end": 14164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14170,
											"end": 14699,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 14170,
											"end": 14699,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14364,
											"end": 14368,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14402,
											"end": 14404,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14391,
											"end": 14400,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14387,
											"end": 14405,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14379,
											"end": 14405,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14379,
											"end": 14405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14415,
											"end": 14486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 14483,
											"end": 14484,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14472,
											"end": 14481,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14468,
											"end": 14485,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14459,
											"end": 14465,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14415,
											"end": 14486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 14415,
											"end": 14486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14415,
											"end": 14486,
											"name": "tag",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 14415,
											"end": 14486,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14533,
											"end": 14542,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14527,
											"end": 14531,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14523,
											"end": 14543,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14518,
											"end": 14520,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14507,
											"end": 14516,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14503,
											"end": 14521,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14496,
											"end": 14544,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14561,
											"end": 14692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 14687,
											"end": 14691,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14561,
											"end": 14692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 14561,
											"end": 14692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14561,
											"end": 14692,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 14561,
											"end": 14692,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14553,
											"end": 14692,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14553,
											"end": 14692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14170,
											"end": 14699,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14170,
											"end": 14699,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14170,
											"end": 14699,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14170,
											"end": 14699,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14170,
											"end": 14699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14705,
											"end": 14848,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 14705,
											"end": 14848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14762,
											"end": 14767,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14793,
											"end": 14799,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14787,
											"end": 14800,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14778,
											"end": 14800,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14778,
											"end": 14800,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14809,
											"end": 14842,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 14836,
											"end": 14841,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14809,
											"end": 14842,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 14809,
											"end": 14842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14809,
											"end": 14842,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 14809,
											"end": 14842,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14705,
											"end": 14848,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14705,
											"end": 14848,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14705,
											"end": 14848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14705,
											"end": 14848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14705,
											"end": 14848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14854,
											"end": 15205,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 14854,
											"end": 15205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14924,
											"end": 14930,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14973,
											"end": 14975,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14961,
											"end": 14970,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14952,
											"end": 14959,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14948,
											"end": 14971,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14944,
											"end": 14976,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 14941,
											"end": 15060,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14941,
											"end": 15060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 14941,
											"end": 15060,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14979,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 14979,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 14979,
											"end": 15058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14979,
											"end": 15058,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 14979,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14941,
											"end": 15060,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 14941,
											"end": 15060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15099,
											"end": 15100,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15124,
											"end": 15188,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 15180,
											"end": 15187,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15177,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15160,
											"end": 15169,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15156,
											"end": 15178,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15124,
											"end": 15188,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 15124,
											"end": 15188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15124,
											"end": 15188,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 15124,
											"end": 15188,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15114,
											"end": 15188,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15114,
											"end": 15188,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15070,
											"end": 15198,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14854,
											"end": 15205,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14854,
											"end": 15205,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14854,
											"end": 15205,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14854,
											"end": 15205,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14854,
											"end": 15205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15211,
											"end": 15385,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 15211,
											"end": 15385,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15351,
											"end": 15377,
											"name": "PUSH",
											"source": 14,
											"value": "496E73756666696369656E742054727573742073636F72650000000000000000"
										},
										{
											"begin": 15347,
											"end": 15348,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15339,
											"end": 15345,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15335,
											"end": 15349,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15328,
											"end": 15378,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15211,
											"end": 15385,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15211,
											"end": 15385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15391,
											"end": 15757,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 15391,
											"end": 15757,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15533,
											"end": 15536,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15554,
											"end": 15621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 15618,
											"end": 15620,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 15613,
											"end": 15616,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15554,
											"end": 15621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 15554,
											"end": 15621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15554,
											"end": 15621,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 15554,
											"end": 15621,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15547,
											"end": 15621,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15547,
											"end": 15621,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15630,
											"end": 15723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 15719,
											"end": 15722,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15630,
											"end": 15723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 15630,
											"end": 15723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15630,
											"end": 15723,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 15630,
											"end": 15723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15748,
											"end": 15750,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15743,
											"end": 15746,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15739,
											"end": 15751,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15732,
											"end": 15751,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15732,
											"end": 15751,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15391,
											"end": 15757,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15391,
											"end": 15757,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15391,
											"end": 15757,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15391,
											"end": 15757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15763,
											"end": 16182,
											"name": "tag",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 15763,
											"end": 16182,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15929,
											"end": 15933,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15967,
											"end": 15969,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15956,
											"end": 15965,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15952,
											"end": 15970,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15944,
											"end": 15970,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15944,
											"end": 15970,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16016,
											"end": 16025,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16010,
											"end": 16014,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16006,
											"end": 16026,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16002,
											"end": 16003,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15991,
											"end": 16000,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15987,
											"end": 16004,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15980,
											"end": 16027,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16044,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 16170,
											"end": 16174,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16044,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 16044,
											"end": 16175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16044,
											"end": 16175,
											"name": "tag",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 16044,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16036,
											"end": 16175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16036,
											"end": 16175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15763,
											"end": 16182,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15763,
											"end": 16182,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15763,
											"end": 16182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15763,
											"end": 16182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16188,
											"end": 16382,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 16188,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16228,
											"end": 16232,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16248,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 16266,
											"end": 16267,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16248,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 16248,
											"end": 16268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16248,
											"end": 16268,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 16248,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16243,
											"end": 16268,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16243,
											"end": 16268,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16282,
											"end": 16302,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 16300,
											"end": 16301,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16282,
											"end": 16302,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 16282,
											"end": 16302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16282,
											"end": 16302,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 16282,
											"end": 16302,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16277,
											"end": 16302,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16277,
											"end": 16302,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16326,
											"end": 16327,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16323,
											"end": 16324,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16319,
											"end": 16328,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16311,
											"end": 16328,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16311,
											"end": 16328,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16350,
											"end": 16351,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16344,
											"end": 16348,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16341,
											"end": 16352,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 16338,
											"end": 16375,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16338,
											"end": 16375,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 16338,
											"end": 16375,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16355,
											"end": 16373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 16355,
											"end": 16373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 16355,
											"end": 16373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16355,
											"end": 16373,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 16355,
											"end": 16373,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16338,
											"end": 16375,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 16338,
											"end": 16375,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16188,
											"end": 16382,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16188,
											"end": 16382,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16188,
											"end": 16382,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16188,
											"end": 16382,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16188,
											"end": 16382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16388,
											"end": 16535,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 16388,
											"end": 16535,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16489,
											"end": 16500,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16526,
											"end": 16529,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16511,
											"end": 16529,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16511,
											"end": 16529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16388,
											"end": 16535,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16388,
											"end": 16535,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16388,
											"end": 16535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16388,
											"end": 16535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16388,
											"end": 16535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16541,
											"end": 16655,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 16541,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16541,
											"end": 16655,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16541,
											"end": 16655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16661,
											"end": 17059,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 16661,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16820,
											"end": 16823,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16841,
											"end": 16924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 16922,
											"end": 16923,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16917,
											"end": 16920,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16841,
											"end": 16924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 16841,
											"end": 16924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16841,
											"end": 16924,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 16841,
											"end": 16924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16834,
											"end": 16924,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16834,
											"end": 16924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16933,
											"end": 17026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 17022,
											"end": 17025,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16933,
											"end": 17026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 16933,
											"end": 17026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16933,
											"end": 17026,
											"name": "tag",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 16933,
											"end": 17026,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17046,
											"end": 17049,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17042,
											"end": 17053,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17035,
											"end": 17053,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17035,
											"end": 17053,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16661,
											"end": 17059,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16661,
											"end": 17059,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16661,
											"end": 17059,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16661,
											"end": 17059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17065,
											"end": 17444,
											"name": "tag",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 17065,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17249,
											"end": 17252,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17271,
											"end": 17418,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 17414,
											"end": 17417,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17271,
											"end": 17418,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 17271,
											"end": 17418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17271,
											"end": 17418,
											"name": "tag",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 17271,
											"end": 17418,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17264,
											"end": 17418,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17264,
											"end": 17418,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17435,
											"end": 17438,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17428,
											"end": 17438,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17428,
											"end": 17438,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17065,
											"end": 17444,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17065,
											"end": 17444,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17065,
											"end": 17444,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17065,
											"end": 17444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17450,
											"end": 17621,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 17450,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17590,
											"end": 17613,
											"name": "PUSH",
											"source": 14,
											"value": "4574686572207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 17586,
											"end": 17587,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17578,
											"end": 17584,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17574,
											"end": 17588,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17567,
											"end": 17614,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17450,
											"end": 17621,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17450,
											"end": 17621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17627,
											"end": 17993,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 17627,
											"end": 17993,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17769,
											"end": 17772,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17790,
											"end": 17857,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 17854,
											"end": 17856,
											"name": "PUSH",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 17849,
											"end": 17852,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17790,
											"end": 17857,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 17790,
											"end": 17857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17790,
											"end": 17857,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 17790,
											"end": 17857,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17783,
											"end": 17857,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17783,
											"end": 17857,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17866,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 17955,
											"end": 17958,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17866,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 17866,
											"end": 17959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17866,
											"end": 17959,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 17866,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17984,
											"end": 17986,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17979,
											"end": 17982,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17975,
											"end": 17987,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17968,
											"end": 17987,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17968,
											"end": 17987,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17627,
											"end": 17993,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17627,
											"end": 17993,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17627,
											"end": 17993,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17627,
											"end": 17993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17999,
											"end": 18418,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 17999,
											"end": 18418,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18165,
											"end": 18169,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18203,
											"end": 18205,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18192,
											"end": 18201,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18188,
											"end": 18206,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18180,
											"end": 18206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18180,
											"end": 18206,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18252,
											"end": 18261,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18246,
											"end": 18250,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18242,
											"end": 18262,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18238,
											"end": 18239,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18227,
											"end": 18236,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18223,
											"end": 18240,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18216,
											"end": 18263,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18280,
											"end": 18411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 18406,
											"end": 18410,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18280,
											"end": 18411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 18280,
											"end": 18411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18280,
											"end": 18411,
											"name": "tag",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 18280,
											"end": 18411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18272,
											"end": 18411,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18272,
											"end": 18411,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17999,
											"end": 18418,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17999,
											"end": 18418,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17999,
											"end": 18418,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17999,
											"end": 18418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18424,
											"end": 18596,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 18424,
											"end": 18596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18564,
											"end": 18588,
											"name": "PUSH",
											"source": 14,
											"value": "496E636F727265637420457468657220616D6F756E7400000000000000000000"
										},
										{
											"begin": 18560,
											"end": 18561,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18552,
											"end": 18558,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18548,
											"end": 18562,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18541,
											"end": 18589,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18424,
											"end": 18596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18424,
											"end": 18596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18602,
											"end": 18968,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 18602,
											"end": 18968,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18744,
											"end": 18747,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18765,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 18829,
											"end": 18831,
											"name": "PUSH",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 18824,
											"end": 18827,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18765,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 18765,
											"end": 18832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18765,
											"end": 18832,
											"name": "tag",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 18765,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18758,
											"end": 18832,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18758,
											"end": 18832,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18841,
											"end": 18934,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 18930,
											"end": 18933,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18841,
											"end": 18934,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 18841,
											"end": 18934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18841,
											"end": 18934,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 18841,
											"end": 18934,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18959,
											"end": 18961,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18954,
											"end": 18957,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18950,
											"end": 18962,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18943,
											"end": 18962,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18943,
											"end": 18962,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18602,
											"end": 18968,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18602,
											"end": 18968,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18602,
											"end": 18968,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18602,
											"end": 18968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18974,
											"end": 19393,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 18974,
											"end": 19393,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19140,
											"end": 19144,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19178,
											"end": 19180,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19167,
											"end": 19176,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19163,
											"end": 19181,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19155,
											"end": 19181,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19155,
											"end": 19181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19227,
											"end": 19236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19221,
											"end": 19225,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19217,
											"end": 19237,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19213,
											"end": 19214,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19202,
											"end": 19211,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19191,
											"end": 19238,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19255,
											"end": 19386,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 19381,
											"end": 19385,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19255,
											"end": 19386,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 19255,
											"end": 19386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19255,
											"end": 19386,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 19255,
											"end": 19386,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19247,
											"end": 19386,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19247,
											"end": 19386,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18974,
											"end": 19393,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18974,
											"end": 19393,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18974,
											"end": 19393,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18974,
											"end": 19393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19399,
											"end": 19626,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 19399,
											"end": 19626,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19539,
											"end": 19573,
											"name": "PUSH",
											"source": 14,
											"value": "4465706F73697420616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 19535,
											"end": 19536,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19527,
											"end": 19533,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19523,
											"end": 19537,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19516,
											"end": 19574,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19608,
											"end": 19618,
											"name": "PUSH",
											"source": 14,
											"value": "68616E207A65726F000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19603,
											"end": 19605,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19595,
											"end": 19601,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19591,
											"end": 19606,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19584,
											"end": 19619,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19399,
											"end": 19626,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19399,
											"end": 19626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19632,
											"end": 19998,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 19632,
											"end": 19998,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19774,
											"end": 19777,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19795,
											"end": 19862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 19859,
											"end": 19861,
											"name": "PUSH",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 19854,
											"end": 19857,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19795,
											"end": 19862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 19795,
											"end": 19862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19795,
											"end": 19862,
											"name": "tag",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 19795,
											"end": 19862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19788,
											"end": 19862,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19788,
											"end": 19862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19871,
											"end": 19964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 19960,
											"end": 19963,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19871,
											"end": 19964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 19871,
											"end": 19964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19871,
											"end": 19964,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 19871,
											"end": 19964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19989,
											"end": 19991,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19984,
											"end": 19987,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19980,
											"end": 19992,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19973,
											"end": 19992,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19973,
											"end": 19992,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19632,
											"end": 19998,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19632,
											"end": 19998,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19632,
											"end": 19998,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19632,
											"end": 19998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20004,
											"end": 20423,
											"name": "tag",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 20004,
											"end": 20423,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20170,
											"end": 20174,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20208,
											"end": 20210,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20197,
											"end": 20206,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20193,
											"end": 20211,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20185,
											"end": 20211,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20185,
											"end": 20211,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20257,
											"end": 20266,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20251,
											"end": 20255,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20247,
											"end": 20267,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20243,
											"end": 20244,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20232,
											"end": 20241,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20228,
											"end": 20245,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20221,
											"end": 20268,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20285,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 20411,
											"end": 20415,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20285,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 20285,
											"end": 20416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20285,
											"end": 20416,
											"name": "tag",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 20285,
											"end": 20416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20277,
											"end": 20416,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20277,
											"end": 20416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20004,
											"end": 20423,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20004,
											"end": 20423,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20004,
											"end": 20423,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20004,
											"end": 20423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20429,
											"end": 20514,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 20429,
											"end": 20514,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20474,
											"end": 20481,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20503,
											"end": 20508,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20492,
											"end": 20508,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20492,
											"end": 20508,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20429,
											"end": 20514,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20429,
											"end": 20514,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20429,
											"end": 20514,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20429,
											"end": 20514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20520,
											"end": 20676,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 20520,
											"end": 20676,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20577,
											"end": 20586,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20610,
											"end": 20670,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 20627,
											"end": 20669,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 20636,
											"end": 20668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 20662,
											"end": 20667,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20636,
											"end": 20668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 20636,
											"end": 20668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20636,
											"end": 20668,
											"name": "tag",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 20636,
											"end": 20668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20627,
											"end": 20669,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 20627,
											"end": 20669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20627,
											"end": 20669,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 20627,
											"end": 20669,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20610,
											"end": 20670,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 20610,
											"end": 20670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20610,
											"end": 20670,
											"name": "tag",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 20610,
											"end": 20670,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20597,
											"end": 20670,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20597,
											"end": 20670,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20520,
											"end": 20676,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20520,
											"end": 20676,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20520,
											"end": 20676,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20520,
											"end": 20676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20682,
											"end": 20827,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 20682,
											"end": 20827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20776,
											"end": 20820,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 20814,
											"end": 20819,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20776,
											"end": 20820,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 20776,
											"end": 20820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20776,
											"end": 20820,
											"name": "tag",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 20776,
											"end": 20820,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20771,
											"end": 20774,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20764,
											"end": 20821,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20682,
											"end": 20827,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20682,
											"end": 20827,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20682,
											"end": 20827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20833,
											"end": 21069,
											"name": "tag",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 20833,
											"end": 21069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20933,
											"end": 20937,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20971,
											"end": 20973,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20960,
											"end": 20969,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20956,
											"end": 20974,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20948,
											"end": 20974,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20948,
											"end": 20974,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20984,
											"end": 21062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 21059,
											"end": 21060,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21048,
											"end": 21057,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21044,
											"end": 21061,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21035,
											"end": 21041,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20984,
											"end": 21062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 20984,
											"end": 21062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20984,
											"end": 21062,
											"name": "tag",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 20984,
											"end": 21062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20833,
											"end": 21069,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20833,
											"end": 21069,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20833,
											"end": 21069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20833,
											"end": 21069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20833,
											"end": 21069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21075,
											"end": 21255,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 21075,
											"end": 21255,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21123,
											"end": 21200,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21120,
											"end": 21121,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21113,
											"end": 21201,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21220,
											"end": 21224,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 21217,
											"end": 21218,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 21210,
											"end": 21225,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21244,
											"end": 21248,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 21241,
											"end": 21242,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21234,
											"end": 21249,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 21261,
											"end": 21581,
											"name": "tag",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 21261,
											"end": 21581,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21305,
											"end": 21311,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21342,
											"end": 21343,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 21336,
											"end": 21340,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21332,
											"end": 21344,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 21322,
											"end": 21344,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21322,
											"end": 21344,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21389,
											"end": 21390,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 21383,
											"end": 21387,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21379,
											"end": 21391,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 21410,
											"end": 21428,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21400,
											"end": 21481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 21400,
											"end": 21481,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21466,
											"end": 21470,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 21458,
											"end": 21464,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21454,
											"end": 21471,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 21444,
											"end": 21471,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21444,
											"end": 21471,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21400,
											"end": 21481,
											"name": "tag",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 21400,
											"end": 21481,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21528,
											"end": 21530,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21520,
											"end": 21526,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21517,
											"end": 21531,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 21497,
											"end": 21515,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21494,
											"end": 21532,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21491,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 21491,
											"end": 21575,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21547,
											"end": 21565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 21547,
											"end": 21565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 21547,
											"end": 21565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21547,
											"end": 21565,
											"name": "tag",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 21547,
											"end": 21565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21491,
											"end": 21575,
											"name": "tag",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 21491,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21312,
											"end": 21581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21261,
											"end": 21581,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21261,
											"end": 21581,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21261,
											"end": 21581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21261,
											"end": 21581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21587,
											"end": 21677,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 21587,
											"end": 21677,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21621,
											"end": 21628,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21664,
											"end": 21669,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21657,
											"end": 21670,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21650,
											"end": 21671,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21639,
											"end": 21671,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21639,
											"end": 21671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21587,
											"end": 21677,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21587,
											"end": 21677,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21587,
											"end": 21677,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21587,
											"end": 21677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21683,
											"end": 21799,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 21683,
											"end": 21799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21753,
											"end": 21774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 21768,
											"end": 21773,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21753,
											"end": 21774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 21753,
											"end": 21774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21753,
											"end": 21774,
											"name": "tag",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 21753,
											"end": 21774,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21746,
											"end": 21751,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21743,
											"end": 21775,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 21733,
											"end": 21793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 21733,
											"end": 21793,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21789,
											"end": 21790,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21786,
											"end": 21787,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21779,
											"end": 21791,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 21733,
											"end": 21793,
											"name": "tag",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 21733,
											"end": 21793,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21683,
											"end": 21799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21683,
											"end": 21799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21805,
											"end": 21942,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 21805,
											"end": 21942,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21859,
											"end": 21864,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21890,
											"end": 21896,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21884,
											"end": 21897,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 21875,
											"end": 21897,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21875,
											"end": 21897,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21906,
											"end": 21936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 21930,
											"end": 21935,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21906,
											"end": 21936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 21906,
											"end": 21936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21906,
											"end": 21936,
											"name": "tag",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 21906,
											"end": 21936,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21805,
											"end": 21942,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21805,
											"end": 21942,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21805,
											"end": 21942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21805,
											"end": 21942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21805,
											"end": 21942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21948,
											"end": 22293,
											"name": "tag",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 21948,
											"end": 22293,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22015,
											"end": 22021,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22064,
											"end": 22066,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22052,
											"end": 22061,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22043,
											"end": 22050,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22039,
											"end": 22062,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 22035,
											"end": 22067,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 22032,
											"end": 22151,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 22032,
											"end": 22151,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 22032,
											"end": 22151,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 22070,
											"end": 22149,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 22070,
											"end": 22149,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 22070,
											"end": 22149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22070,
											"end": 22149,
											"name": "tag",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 22070,
											"end": 22149,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22032,
											"end": 22151,
											"name": "tag",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 22032,
											"end": 22151,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22190,
											"end": 22191,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22215,
											"end": 22276,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 22268,
											"end": 22275,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22259,
											"end": 22265,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22248,
											"end": 22257,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 22244,
											"end": 22266,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22215,
											"end": 22276,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 22215,
											"end": 22276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22215,
											"end": 22276,
											"name": "tag",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 22215,
											"end": 22276,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22205,
											"end": 22276,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22205,
											"end": 22276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22161,
											"end": 22286,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21948,
											"end": 22293,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21948,
											"end": 22293,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21948,
											"end": 22293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21948,
											"end": 22293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21948,
											"end": 22293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22299,
											"end": 22471,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 22299,
											"end": 22471,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22439,
											"end": 22463,
											"name": "PUSH",
											"source": 14,
											"value": "43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000"
										},
										{
											"begin": 22435,
											"end": 22436,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22427,
											"end": 22433,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22423,
											"end": 22437,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22416,
											"end": 22464,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22299,
											"end": 22471,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22299,
											"end": 22471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22477,
											"end": 22843,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 22477,
											"end": 22843,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22619,
											"end": 22622,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22640,
											"end": 22707,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 22704,
											"end": 22706,
											"name": "PUSH",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 22699,
											"end": 22702,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22640,
											"end": 22707,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 22640,
											"end": 22707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22640,
											"end": 22707,
											"name": "tag",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 22640,
											"end": 22707,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22633,
											"end": 22707,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22633,
											"end": 22707,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22716,
											"end": 22809,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 22805,
											"end": 22808,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22716,
											"end": 22809,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 22716,
											"end": 22809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22716,
											"end": 22809,
											"name": "tag",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 22716,
											"end": 22809,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22834,
											"end": 22836,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22829,
											"end": 22832,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22825,
											"end": 22837,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22818,
											"end": 22837,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22818,
											"end": 22837,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22477,
											"end": 22843,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22477,
											"end": 22843,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22477,
											"end": 22843,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22477,
											"end": 22843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22849,
											"end": 23268,
											"name": "tag",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 22849,
											"end": 23268,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23015,
											"end": 23019,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23053,
											"end": 23055,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23042,
											"end": 23051,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23038,
											"end": 23056,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23030,
											"end": 23056,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23030,
											"end": 23056,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23102,
											"end": 23111,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23096,
											"end": 23100,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23092,
											"end": 23112,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 23088,
											"end": 23089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23077,
											"end": 23086,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23073,
											"end": 23090,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23066,
											"end": 23113,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23130,
											"end": 23261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 23256,
											"end": 23260,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23130,
											"end": 23261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 23130,
											"end": 23261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23130,
											"end": 23261,
											"name": "tag",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 23130,
											"end": 23261,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23122,
											"end": 23261,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23122,
											"end": 23261,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22849,
											"end": 23268,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22849,
											"end": 23268,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22849,
											"end": 23268,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22849,
											"end": 23268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23274,
											"end": 23495,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 23274,
											"end": 23495,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23414,
											"end": 23448,
											"name": "PUSH",
											"source": 14,
											"value": "53746172742074696D65206D757374206265206265666F726520656E64207469"
										},
										{
											"begin": 23410,
											"end": 23411,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23402,
											"end": 23408,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23398,
											"end": 23412,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23391,
											"end": 23449,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23483,
											"end": 23487,
											"name": "PUSH",
											"source": 14,
											"value": "6D65000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23478,
											"end": 23480,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23470,
											"end": 23476,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23466,
											"end": 23481,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23459,
											"end": 23488,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23274,
											"end": 23495,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23274,
											"end": 23495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23501,
											"end": 23867,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 23501,
											"end": 23867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23643,
											"end": 23646,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23664,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 23728,
											"end": 23730,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 23723,
											"end": 23726,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23664,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 23664,
											"end": 23731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23664,
											"end": 23731,
											"name": "tag",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 23664,
											"end": 23731,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23657,
											"end": 23731,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23657,
											"end": 23731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23740,
											"end": 23833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 23829,
											"end": 23832,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23740,
											"end": 23833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 23740,
											"end": 23833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23740,
											"end": 23833,
											"name": "tag",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 23740,
											"end": 23833,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23858,
											"end": 23860,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 23853,
											"end": 23856,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23849,
											"end": 23861,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23842,
											"end": 23861,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23842,
											"end": 23861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23501,
											"end": 23867,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23501,
											"end": 23867,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23501,
											"end": 23867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23501,
											"end": 23867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23873,
											"end": 24292,
											"name": "tag",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 23873,
											"end": 24292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24039,
											"end": 24043,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24077,
											"end": 24079,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24066,
											"end": 24075,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24062,
											"end": 24080,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24054,
											"end": 24080,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24054,
											"end": 24080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24126,
											"end": 24135,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24120,
											"end": 24124,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24116,
											"end": 24136,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 24112,
											"end": 24113,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24101,
											"end": 24110,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24097,
											"end": 24114,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24090,
											"end": 24137,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24154,
											"end": 24285,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 24280,
											"end": 24284,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24154,
											"end": 24285,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 24154,
											"end": 24285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24154,
											"end": 24285,
											"name": "tag",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 24154,
											"end": 24285,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24146,
											"end": 24285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24146,
											"end": 24285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23873,
											"end": 24292,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23873,
											"end": 24292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23873,
											"end": 24292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23873,
											"end": 24292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24298,
											"end": 24439,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 24298,
											"end": 24439,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24347,
											"end": 24351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24370,
											"end": 24373,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24362,
											"end": 24373,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24362,
											"end": 24373,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24393,
											"end": 24396,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24390,
											"end": 24391,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24383,
											"end": 24397,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24427,
											"end": 24431,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24424,
											"end": 24425,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24414,
											"end": 24432,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 24406,
											"end": 24432,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24406,
											"end": 24432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24298,
											"end": 24439,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24298,
											"end": 24439,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24298,
											"end": 24439,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24298,
											"end": 24439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24445,
											"end": 24538,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 24445,
											"end": 24538,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24482,
											"end": 24488,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24529,
											"end": 24531,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24524,
											"end": 24526,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 24517,
											"end": 24522,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24513,
											"end": 24527,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24509,
											"end": 24532,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 24499,
											"end": 24532,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24499,
											"end": 24532,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24445,
											"end": 24538,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24445,
											"end": 24538,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24445,
											"end": 24538,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24445,
											"end": 24538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24544,
											"end": 24651,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 24544,
											"end": 24651,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24588,
											"end": 24596,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24638,
											"end": 24643,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24632,
											"end": 24636,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24628,
											"end": 24644,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 24607,
											"end": 24644,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24607,
											"end": 24644,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24544,
											"end": 24651,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24544,
											"end": 24651,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24544,
											"end": 24651,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24544,
											"end": 24651,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24544,
											"end": 24651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 25050,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 24657,
											"end": 25050,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24726,
											"end": 24732,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24776,
											"end": 24777,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 24764,
											"end": 24774,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24760,
											"end": 24778,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 24799,
											"end": 24896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 24829,
											"end": 24895,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24818,
											"end": 24827,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24799,
											"end": 24896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 24799,
											"end": 24896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24799,
											"end": 24896,
											"name": "tag",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 24799,
											"end": 24896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24917,
											"end": 24956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 24947,
											"end": 24955,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 24936,
											"end": 24945,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24917,
											"end": 24956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 24917,
											"end": 24956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24917,
											"end": 24956,
											"name": "tag",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 24917,
											"end": 24956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24905,
											"end": 24956,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 24905,
											"end": 24956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24989,
											"end": 24993,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 24985,
											"end": 24994,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 24978,
											"end": 24983,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24974,
											"end": 24995,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 24965,
											"end": 24995,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24965,
											"end": 24995,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25038,
											"end": 25042,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 25028,
											"end": 25036,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 25024,
											"end": 25043,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 25017,
											"end": 25022,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25014,
											"end": 25044,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 25004,
											"end": 25044,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 25004,
											"end": 25044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24733,
											"end": 25050,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24733,
											"end": 25050,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 25050,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 25050,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 25050,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 25050,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 25050,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 25050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25056,
											"end": 25198,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 25056,
											"end": 25198,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25106,
											"end": 25115,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25139,
											"end": 25192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 25157,
											"end": 25191,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 25166,
											"end": 25190,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 25184,
											"end": 25189,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25166,
											"end": 25190,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 25166,
											"end": 25190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25166,
											"end": 25190,
											"name": "tag",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 25166,
											"end": 25190,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25157,
											"end": 25191,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 25157,
											"end": 25191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25157,
											"end": 25191,
											"name": "tag",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 25157,
											"end": 25191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25139,
											"end": 25192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 25139,
											"end": 25192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25139,
											"end": 25192,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 25139,
											"end": 25192,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25126,
											"end": 25192,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25126,
											"end": 25192,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25056,
											"end": 25198,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25056,
											"end": 25198,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25056,
											"end": 25198,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25056,
											"end": 25198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25204,
											"end": 25279,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 25204,
											"end": 25279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25247,
											"end": 25250,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25268,
											"end": 25273,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25261,
											"end": 25273,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25261,
											"end": 25273,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25204,
											"end": 25279,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25204,
											"end": 25279,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25204,
											"end": 25279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25204,
											"end": 25279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25285,
											"end": 25554,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 25285,
											"end": 25554,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25395,
											"end": 25434,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 25426,
											"end": 25433,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25395,
											"end": 25434,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 25395,
											"end": 25434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25395,
											"end": 25434,
											"name": "tag",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 25395,
											"end": 25434,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25456,
											"end": 25547,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 25505,
											"end": 25546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 25529,
											"end": 25545,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25505,
											"end": 25546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 25505,
											"end": 25546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25505,
											"end": 25546,
											"name": "tag",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 25505,
											"end": 25546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25497,
											"end": 25503,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25490,
											"end": 25494,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25484,
											"end": 25495,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 25456,
											"end": 25547,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 25456,
											"end": 25547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25456,
											"end": 25547,
											"name": "tag",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 25456,
											"end": 25547,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25450,
											"end": 25454,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25443,
											"end": 25548,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 25361,
											"end": 25554,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25285,
											"end": 25554,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25285,
											"end": 25554,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25285,
											"end": 25554,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25285,
											"end": 25554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25560,
											"end": 25633,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 25560,
											"end": 25633,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25605,
											"end": 25608,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25560,
											"end": 25633,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25560,
											"end": 25633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25639,
											"end": 25828,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 25639,
											"end": 25828,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25716,
											"end": 25748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 25716,
											"end": 25748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 25716,
											"end": 25748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25716,
											"end": 25748,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 25716,
											"end": 25748,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25757,
											"end": 25822,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 25815,
											"end": 25821,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25807,
											"end": 25813,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25801,
											"end": 25805,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25757,
											"end": 25822,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 25757,
											"end": 25822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25757,
											"end": 25822,
											"name": "tag",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 25757,
											"end": 25822,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25692,
											"end": 25828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25639,
											"end": 25828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25639,
											"end": 25828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25639,
											"end": 25828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25834,
											"end": 26020,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 25834,
											"end": 26020,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25894,
											"end": 26014,
											"name": "tag",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 25894,
											"end": 26014,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25911,
											"end": 25914,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25904,
											"end": 25909,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25901,
											"end": 25915,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 25894,
											"end": 26014,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 25894,
											"end": 26014,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 25894,
											"end": 26014,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 25965,
											"end": 26004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 26002,
											"end": 26003,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25995,
											"end": 26000,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25965,
											"end": 26004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 25965,
											"end": 26004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25965,
											"end": 26004,
											"name": "tag",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 25965,
											"end": 26004,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25938,
											"end": 25939,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 25931,
											"end": 25936,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25927,
											"end": 25940,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25918,
											"end": 25940,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25918,
											"end": 25940,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25894,
											"end": 26014,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 25894,
											"end": 26014,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25894,
											"end": 26014,
											"name": "tag",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 25894,
											"end": 26014,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25834,
											"end": 26020,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25834,
											"end": 26020,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25834,
											"end": 26020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26026,
											"end": 26569,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 26026,
											"end": 26569,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26127,
											"end": 26129,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 26122,
											"end": 26125,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26119,
											"end": 26130,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 26116,
											"end": 26562,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26116,
											"end": 26562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 26116,
											"end": 26562,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26161,
											"end": 26199,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 26193,
											"end": 26198,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26161,
											"end": 26199,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 26161,
											"end": 26199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26161,
											"end": 26199,
											"name": "tag",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 26161,
											"end": 26199,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26245,
											"end": 26274,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 26263,
											"end": 26273,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26245,
											"end": 26274,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 26245,
											"end": 26274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26245,
											"end": 26274,
											"name": "tag",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 26245,
											"end": 26274,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26235,
											"end": 26243,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26231,
											"end": 26275,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26428,
											"end": 26430,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26416,
											"end": 26426,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26413,
											"end": 26431,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 26410,
											"end": 26459,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26410,
											"end": 26459,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 26410,
											"end": 26459,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26449,
											"end": 26457,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26434,
											"end": 26457,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26434,
											"end": 26457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26410,
											"end": 26459,
											"name": "tag",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 26410,
											"end": 26459,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26472,
											"end": 26552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 26528,
											"end": 26550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 26546,
											"end": 26549,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26528,
											"end": 26550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 26528,
											"end": 26550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26528,
											"end": 26550,
											"name": "tag",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 26528,
											"end": 26550,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26518,
											"end": 26526,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26514,
											"end": 26551,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26501,
											"end": 26512,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26472,
											"end": 26552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 26472,
											"end": 26552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26472,
											"end": 26552,
											"name": "tag",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 26472,
											"end": 26552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26131,
											"end": 26562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26131,
											"end": 26562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26116,
											"end": 26562,
											"name": "tag",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 26116,
											"end": 26562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26026,
											"end": 26569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26026,
											"end": 26569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26026,
											"end": 26569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26026,
											"end": 26569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26575,
											"end": 26692,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 26575,
											"end": 26692,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26629,
											"end": 26637,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26679,
											"end": 26684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26673,
											"end": 26677,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26669,
											"end": 26685,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 26648,
											"end": 26685,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26648,
											"end": 26685,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26575,
											"end": 26692,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26575,
											"end": 26692,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26575,
											"end": 26692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26575,
											"end": 26692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26575,
											"end": 26692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26698,
											"end": 26867,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 26698,
											"end": 26867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26742,
											"end": 26748,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26775,
											"end": 26826,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 26823,
											"end": 26824,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26819,
											"end": 26825,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 26811,
											"end": 26816,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26808,
											"end": 26809,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 26804,
											"end": 26817,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 26775,
											"end": 26826,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 26775,
											"end": 26826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26775,
											"end": 26826,
											"name": "tag",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 26775,
											"end": 26826,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26771,
											"end": 26827,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 26856,
											"end": 26860,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 26850,
											"end": 26854,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26846,
											"end": 26861,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 26836,
											"end": 26861,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26836,
											"end": 26861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26749,
											"end": 26867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26698,
											"end": 26867,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26698,
											"end": 26867,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26698,
											"end": 26867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26698,
											"end": 26867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26698,
											"end": 26867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26872,
											"end": 27167,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 26872,
											"end": 27167,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26948,
											"end": 26952,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27094,
											"end": 27123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 27119,
											"end": 27122,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27113,
											"end": 27117,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27094,
											"end": 27123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 27094,
											"end": 27123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27094,
											"end": 27123,
											"name": "tag",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 27094,
											"end": 27123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27086,
											"end": 27123,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27086,
											"end": 27123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27156,
											"end": 27159,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27153,
											"end": 27154,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 27149,
											"end": 27160,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 27143,
											"end": 27147,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27140,
											"end": 27161,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 27132,
											"end": 27161,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27132,
											"end": 27161,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26872,
											"end": 27167,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26872,
											"end": 27167,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26872,
											"end": 27167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26872,
											"end": 27167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26872,
											"end": 27167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27172,
											"end": 28567,
											"name": "tag",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 27172,
											"end": 28567,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27289,
											"end": 27326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 27322,
											"end": 27325,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27289,
											"end": 27326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 27289,
											"end": 27326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27289,
											"end": 27326,
											"name": "tag",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 27289,
											"end": 27326,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27391,
											"end": 27409,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27383,
											"end": 27389,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27380,
											"end": 27410,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 27377,
											"end": 27433,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 27377,
											"end": 27433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 27377,
											"end": 27433,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 27413,
											"end": 27431,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 27413,
											"end": 27431,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 27413,
											"end": 27431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27413,
											"end": 27431,
											"name": "tag",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 27413,
											"end": 27431,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27377,
											"end": 27433,
											"name": "tag",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 27377,
											"end": 27433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27457,
											"end": 27495,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 27489,
											"end": 27493,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27483,
											"end": 27494,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 27457,
											"end": 27495,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 27457,
											"end": 27495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27457,
											"end": 27495,
											"name": "tag",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 27457,
											"end": 27495,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27542,
											"end": 27609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 27602,
											"end": 27608,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27594,
											"end": 27600,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27588,
											"end": 27592,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27542,
											"end": 27609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 27542,
											"end": 27609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27542,
											"end": 27609,
											"name": "tag",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 27542,
											"end": 27609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27636,
											"end": 27637,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27660,
											"end": 27664,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27647,
											"end": 27664,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27647,
											"end": 27664,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27692,
											"end": 27694,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 27684,
											"end": 27690,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27681,
											"end": 27695,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 27709,
											"end": 27710,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 27704,
											"end": 28322,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27704,
											"end": 28322,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 27704,
											"end": 28322,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 27704,
											"end": 28322,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28366,
											"end": 28367,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28383,
											"end": 28389,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28380,
											"end": 28457,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 28380,
											"end": 28457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 28380,
											"end": 28457,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28432,
											"end": 28441,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28427,
											"end": 28430,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 28423,
											"end": 28442,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28417,
											"end": 28443,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 28408,
											"end": 28443,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28408,
											"end": 28443,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28380,
											"end": 28457,
											"name": "tag",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 28380,
											"end": 28457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28483,
											"end": 28550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 28543,
											"end": 28549,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28536,
											"end": 28541,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28483,
											"end": 28550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 28483,
											"end": 28550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28483,
											"end": 28550,
											"name": "tag",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 28483,
											"end": 28550,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28477,
											"end": 28481,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28470,
											"end": 28551,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 28339,
											"end": 28561,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27674,
											"end": 28561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 27674,
											"end": 28561,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27704,
											"end": 28322,
											"name": "tag",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 27704,
											"end": 28322,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27756,
											"end": 27760,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 27752,
											"end": 27761,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 27744,
											"end": 27750,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27740,
											"end": 27762,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 27790,
											"end": 27827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 27822,
											"end": 27826,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 27790,
											"end": 27827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 27790,
											"end": 27827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27790,
											"end": 27827,
											"name": "tag",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 27790,
											"end": 27827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27849,
											"end": 27850,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27863,
											"end": 28071,
											"name": "tag",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 27863,
											"end": 28071,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27877,
											"end": 27884,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27874,
											"end": 27875,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27871,
											"end": 27885,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 27863,
											"end": 28071,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 27863,
											"end": 28071,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 27863,
											"end": 28071,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 27956,
											"end": 27965,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27951,
											"end": 27954,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 27947,
											"end": 27966,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27941,
											"end": 27967,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 27933,
											"end": 27939,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27926,
											"end": 27968,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 28007,
											"end": 28008,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 27999,
											"end": 28005,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27995,
											"end": 28009,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27985,
											"end": 28009,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27985,
											"end": 28009,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28054,
											"end": 28056,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28043,
											"end": 28052,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28039,
											"end": 28057,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28026,
											"end": 28057,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 28026,
											"end": 28057,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27900,
											"end": 27904,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27897,
											"end": 27898,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27893,
											"end": 27905,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27888,
											"end": 27905,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27888,
											"end": 27905,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27863,
											"end": 28071,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 27863,
											"end": 28071,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27863,
											"end": 28071,
											"name": "tag",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 27863,
											"end": 28071,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28099,
											"end": 28105,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28090,
											"end": 28097,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28087,
											"end": 28106,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 28084,
											"end": 28263,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 28084,
											"end": 28263,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 28084,
											"end": 28263,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28157,
											"end": 28166,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28152,
											"end": 28155,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 28148,
											"end": 28167,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28142,
											"end": 28168,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 28200,
											"end": 28248,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "674"
										},
										{
											"begin": 28242,
											"end": 28246,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 28234,
											"end": 28240,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 28230,
											"end": 28247,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 28219,
											"end": 28228,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28200,
											"end": 28248,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 28200,
											"end": 28248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28200,
											"end": 28248,
											"name": "tag",
											"source": 14,
											"value": "674"
										},
										{
											"begin": 28200,
											"end": 28248,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28192,
											"end": 28198,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28185,
											"end": 28249,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 28107,
											"end": 28263,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28084,
											"end": 28263,
											"name": "tag",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 28084,
											"end": 28263,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28309,
											"end": 28310,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 28305,
											"end": 28306,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 28297,
											"end": 28303,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 28293,
											"end": 28307,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 28289,
											"end": 28311,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28283,
											"end": 28287,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 28276,
											"end": 28312,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 27711,
											"end": 28322,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27711,
											"end": 28322,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27711,
											"end": 28322,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27674,
											"end": 28561,
											"name": "tag",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 27674,
											"end": 28561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27674,
											"end": 28561,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27264,
											"end": 28567,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27264,
											"end": 28567,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27264,
											"end": 28567,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27172,
											"end": 28567,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27172,
											"end": 28567,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27172,
											"end": 28567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28573,
											"end": 29102,
											"name": "tag",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 28573,
											"end": 29102,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28740,
											"end": 28744,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28778,
											"end": 28780,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 28767,
											"end": 28776,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28763,
											"end": 28781,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28755,
											"end": 28781,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28755,
											"end": 28781,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28791,
											"end": 28861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 28858,
											"end": 28859,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28847,
											"end": 28856,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28843,
											"end": 28860,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28834,
											"end": 28840,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28791,
											"end": 28861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 28791,
											"end": 28861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28791,
											"end": 28861,
											"name": "tag",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 28791,
											"end": 28861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28871,
											"end": 28942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 28938,
											"end": 28940,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28927,
											"end": 28936,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28923,
											"end": 28941,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28914,
											"end": 28920,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28871,
											"end": 28942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 28871,
											"end": 28942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28871,
											"end": 28942,
											"name": "tag",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 28871,
											"end": 28942,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28989,
											"end": 28998,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28983,
											"end": 28987,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28979,
											"end": 28999,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 28974,
											"end": 28976,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 28963,
											"end": 28972,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28959,
											"end": 28977,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28952,
											"end": 29000,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29017,
											"end": 29095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "678"
										},
										{
											"begin": 29090,
											"end": 29094,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29081,
											"end": 29087,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 29017,
											"end": 29095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 29017,
											"end": 29095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29017,
											"end": 29095,
											"name": "tag",
											"source": 14,
											"value": "678"
										},
										{
											"begin": 29017,
											"end": 29095,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29009,
											"end": 29095,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29009,
											"end": 29095,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28573,
											"end": 29102,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 28573,
											"end": 29102,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 28573,
											"end": 29102,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28573,
											"end": 29102,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28573,
											"end": 29102,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28573,
											"end": 29102,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28573,
											"end": 29102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29108,
											"end": 29275,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 29108,
											"end": 29275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29248,
											"end": 29267,
											"name": "PUSH",
											"source": 14,
											"value": "5A65726F20616464726573732075736572000000000000000000000000000000"
										},
										{
											"begin": 29244,
											"end": 29245,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29236,
											"end": 29242,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29232,
											"end": 29246,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29225,
											"end": 29268,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29108,
											"end": 29275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29108,
											"end": 29275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29281,
											"end": 29647,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 29281,
											"end": 29647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29423,
											"end": 29426,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29444,
											"end": 29511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 29508,
											"end": 29510,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 29503,
											"end": 29506,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29444,
											"end": 29511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 29444,
											"end": 29511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29444,
											"end": 29511,
											"name": "tag",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 29444,
											"end": 29511,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29437,
											"end": 29511,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29437,
											"end": 29511,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29520,
											"end": 29613,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 29609,
											"end": 29612,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29520,
											"end": 29613,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 29520,
											"end": 29613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29520,
											"end": 29613,
											"name": "tag",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 29520,
											"end": 29613,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29638,
											"end": 29640,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29633,
											"end": 29636,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29629,
											"end": 29641,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29622,
											"end": 29641,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29622,
											"end": 29641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29281,
											"end": 29647,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29281,
											"end": 29647,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29281,
											"end": 29647,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29281,
											"end": 29647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29653,
											"end": 30072,
											"name": "tag",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 29653,
											"end": 30072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29819,
											"end": 29823,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29857,
											"end": 29859,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29846,
											"end": 29855,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29842,
											"end": 29860,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29834,
											"end": 29860,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29834,
											"end": 29860,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29906,
											"end": 29915,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29900,
											"end": 29904,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29896,
											"end": 29916,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 29892,
											"end": 29893,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29881,
											"end": 29890,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29877,
											"end": 29894,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29870,
											"end": 29917,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29934,
											"end": 30065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 30060,
											"end": 30064,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29934,
											"end": 30065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 29934,
											"end": 30065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29934,
											"end": 30065,
											"name": "tag",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 29934,
											"end": 30065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29926,
											"end": 30065,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29926,
											"end": 30065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29653,
											"end": 30072,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29653,
											"end": 30072,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29653,
											"end": 30072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29653,
											"end": 30072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30078,
											"end": 30308,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 30078,
											"end": 30308,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30218,
											"end": 30252,
											"name": "PUSH",
											"source": 14,
											"value": "5769746864726177616C20616D6F756E74206D75737420626520677265617465"
										},
										{
											"begin": 30214,
											"end": 30215,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30206,
											"end": 30212,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30202,
											"end": 30216,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30195,
											"end": 30253,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30287,
											"end": 30300,
											"name": "PUSH",
											"source": 14,
											"value": "72207468616E207A65726F000000000000000000000000000000000000000000"
										},
										{
											"begin": 30282,
											"end": 30284,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 30274,
											"end": 30280,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30270,
											"end": 30285,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30263,
											"end": 30301,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30078,
											"end": 30308,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30078,
											"end": 30308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30314,
											"end": 30680,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 30314,
											"end": 30680,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30456,
											"end": 30459,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30477,
											"end": 30544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 30541,
											"end": 30543,
											"name": "PUSH",
											"source": 14,
											"value": "2B"
										},
										{
											"begin": 30536,
											"end": 30539,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30477,
											"end": 30544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 30477,
											"end": 30544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30477,
											"end": 30544,
											"name": "tag",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 30477,
											"end": 30544,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30470,
											"end": 30544,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30470,
											"end": 30544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30553,
											"end": 30646,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 30642,
											"end": 30645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30553,
											"end": 30646,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 30553,
											"end": 30646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30553,
											"end": 30646,
											"name": "tag",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 30553,
											"end": 30646,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30671,
											"end": 30673,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 30666,
											"end": 30669,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30662,
											"end": 30674,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30314,
											"end": 30680,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30314,
											"end": 30680,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30314,
											"end": 30680,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30314,
											"end": 30680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30686,
											"end": 31105,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 30686,
											"end": 31105,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30852,
											"end": 30856,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30890,
											"end": 30892,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 30879,
											"end": 30888,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30875,
											"end": 30893,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30867,
											"end": 30893,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30867,
											"end": 30893,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30939,
											"end": 30948,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30933,
											"end": 30937,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30929,
											"end": 30949,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 30925,
											"end": 30926,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30914,
											"end": 30923,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30910,
											"end": 30927,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30903,
											"end": 30950,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30967,
											"end": 31098,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 31093,
											"end": 31097,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30967,
											"end": 31098,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 30967,
											"end": 31098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30967,
											"end": 31098,
											"name": "tag",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 30967,
											"end": 31098,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30959,
											"end": 31098,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30959,
											"end": 31098,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30686,
											"end": 31105,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30686,
											"end": 31105,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30686,
											"end": 31105,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30686,
											"end": 31105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31111,
											"end": 31279,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 31111,
											"end": 31279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31251,
											"end": 31271,
											"name": "PUSH",
											"source": 14,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 31247,
											"end": 31248,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31239,
											"end": 31245,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31235,
											"end": 31249,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31228,
											"end": 31272,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31111,
											"end": 31279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31111,
											"end": 31279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31285,
											"end": 31651,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 31285,
											"end": 31651,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31427,
											"end": 31430,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31448,
											"end": 31515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 31512,
											"end": 31514,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 31507,
											"end": 31510,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31448,
											"end": 31515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 31448,
											"end": 31515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31448,
											"end": 31515,
											"name": "tag",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 31448,
											"end": 31515,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31441,
											"end": 31515,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31441,
											"end": 31515,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31524,
											"end": 31617,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 31613,
											"end": 31616,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31524,
											"end": 31617,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 31524,
											"end": 31617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31524,
											"end": 31617,
											"name": "tag",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 31524,
											"end": 31617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31642,
											"end": 31644,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 31637,
											"end": 31640,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31633,
											"end": 31645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31626,
											"end": 31645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31626,
											"end": 31645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31285,
											"end": 31651,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31285,
											"end": 31651,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31285,
											"end": 31651,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31285,
											"end": 31651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31657,
											"end": 32076,
											"name": "tag",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 31657,
											"end": 32076,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31823,
											"end": 31827,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31861,
											"end": 31863,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 31850,
											"end": 31859,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31846,
											"end": 31864,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31838,
											"end": 31864,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31838,
											"end": 31864,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31910,
											"end": 31919,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31904,
											"end": 31908,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31900,
											"end": 31920,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 31896,
											"end": 31897,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31885,
											"end": 31894,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31881,
											"end": 31898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31874,
											"end": 31921,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31938,
											"end": 32069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 32064,
											"end": 32068,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31938,
											"end": 32069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 31938,
											"end": 32069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31938,
											"end": 32069,
											"name": "tag",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 31938,
											"end": 32069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31930,
											"end": 32069,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31930,
											"end": 32069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31657,
											"end": 32076,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31657,
											"end": 32076,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31657,
											"end": 32076,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31657,
											"end": 32076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32082,
											"end": 32263,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 32082,
											"end": 32263,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32222,
											"end": 32255,
											"name": "PUSH",
											"source": 14,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 32218,
											"end": 32219,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32210,
											"end": 32216,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32206,
											"end": 32220,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32199,
											"end": 32256,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 32082,
											"end": 32263,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32082,
											"end": 32263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32269,
											"end": 32635,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 32269,
											"end": 32635,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32411,
											"end": 32414,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32432,
											"end": 32499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 32496,
											"end": 32498,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 32491,
											"end": 32494,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 32432,
											"end": 32499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 32432,
											"end": 32499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32432,
											"end": 32499,
											"name": "tag",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 32432,
											"end": 32499,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32425,
											"end": 32499,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32425,
											"end": 32499,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32508,
											"end": 32601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 32597,
											"end": 32600,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32508,
											"end": 32601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 32508,
											"end": 32601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32508,
											"end": 32601,
											"name": "tag",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 32508,
											"end": 32601,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32626,
											"end": 32628,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 32621,
											"end": 32624,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32617,
											"end": 32629,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32610,
											"end": 32629,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32610,
											"end": 32629,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32269,
											"end": 32635,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32269,
											"end": 32635,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32269,
											"end": 32635,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32269,
											"end": 32635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32641,
											"end": 33060,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 32641,
											"end": 33060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32807,
											"end": 32811,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32845,
											"end": 32847,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 32834,
											"end": 32843,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32830,
											"end": 32848,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32822,
											"end": 32848,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32822,
											"end": 32848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32894,
											"end": 32903,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32888,
											"end": 32892,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32884,
											"end": 32904,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 32880,
											"end": 32881,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32869,
											"end": 32878,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 32865,
											"end": 32882,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32858,
											"end": 32905,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 32922,
											"end": 33053,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 33048,
											"end": 33052,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32922,
											"end": 33053,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 32922,
											"end": 33053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32922,
											"end": 33053,
											"name": "tag",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 32922,
											"end": 33053,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32914,
											"end": 33053,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32914,
											"end": 33053,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32641,
											"end": 33060,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32641,
											"end": 33060,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32641,
											"end": 33060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32641,
											"end": 33060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33066,
											"end": 33398,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 33066,
											"end": 33398,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33187,
											"end": 33191,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33225,
											"end": 33227,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 33214,
											"end": 33223,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33210,
											"end": 33228,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33202,
											"end": 33228,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33202,
											"end": 33228,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33238,
											"end": 33309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 33306,
											"end": 33307,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33295,
											"end": 33304,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 33291,
											"end": 33308,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33282,
											"end": 33288,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 33238,
											"end": 33309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 33238,
											"end": 33309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33238,
											"end": 33309,
											"name": "tag",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 33238,
											"end": 33309,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33319,
											"end": 33391,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 33387,
											"end": 33389,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 33376,
											"end": 33385,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 33372,
											"end": 33390,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33363,
											"end": 33369,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 33319,
											"end": 33391,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 33319,
											"end": 33391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33319,
											"end": 33391,
											"name": "tag",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 33319,
											"end": 33391,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33066,
											"end": 33398,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 33066,
											"end": 33398,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 33066,
											"end": 33398,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33066,
											"end": 33398,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33066,
											"end": 33398,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33066,
											"end": 33398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33404,
											"end": 33846,
											"name": "tag",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 33404,
											"end": 33846,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33553,
											"end": 33557,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33591,
											"end": 33593,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 33580,
											"end": 33589,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33576,
											"end": 33594,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33568,
											"end": 33594,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33568,
											"end": 33594,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33604,
											"end": 33675,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 33672,
											"end": 33673,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33661,
											"end": 33670,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 33657,
											"end": 33674,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33648,
											"end": 33654,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 33604,
											"end": 33675,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 33604,
											"end": 33675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33604,
											"end": 33675,
											"name": "tag",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 33604,
											"end": 33675,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33685,
											"end": 33757,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 33753,
											"end": 33755,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 33742,
											"end": 33751,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 33738,
											"end": 33756,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33729,
											"end": 33735,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 33685,
											"end": 33757,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 33685,
											"end": 33757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33685,
											"end": 33757,
											"name": "tag",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 33685,
											"end": 33757,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33767,
											"end": 33839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 33835,
											"end": 33837,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 33824,
											"end": 33833,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 33820,
											"end": 33838,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33811,
											"end": 33817,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 33767,
											"end": 33839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 33767,
											"end": 33839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33767,
											"end": 33839,
											"name": "tag",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 33767,
											"end": 33839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33404,
											"end": 33846,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 33404,
											"end": 33846,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 33404,
											"end": 33846,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33404,
											"end": 33846,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33404,
											"end": 33846,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33404,
											"end": 33846,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33404,
											"end": 33846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NATIVE_TOKEN()": "31f7d964",
							"allowedAmounts(address,address)": "a9590e8a",
							"claim(address)": "1e83409a",
							"currentRound()": "8a19c8bc",
							"deposit(address,uint256)": "47e7ef24",
							"initialize(address,address)": "485cc955",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"scorer()": "85c758f7",
							"setAllowedAmount(address,address,uint256)": "b807a3c4",
							"setRound(uint64,uint64,string)": "a9012c89",
							"totalBalances(address)": "aee9c872",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"NotWithinRound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"AllowedAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"RoundUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"NATIVE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRound\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_scorer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scorer\",\"outputs\":[{\"internalType\":\"contract IScorer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"setRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"params\":{\"amount\":\"The value to add (in wei for Ether).\",\"token\":\"The token address (address(0) for Ether).\"}},\"initialize(address,address)\":{\"params\":{\"_scorer\":\"The scoring contract address.\",\"owner\":\"The owner address.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAllowedAmount(address,address,uint256)\":{\"params\":{\"amount\":\"The allowed amount for the user.\",\"token\":\"The token address.\",\"user\":\"The address of the user.\"}},\"setRound(uint64,uint64,string)\":{\"params\":{\"end\":\"The end timestamp of the round.\",\"metadataURI\":\"The IPFS URI for the round metadata.\",\"start\":\"The start timestamp of the round.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"The amount to withdraw.\",\"token\":\"The token address (address(0) for Ether).\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address)\":{\"notice\":\"Claims the full allowed amount for a user during the round.\"},\"deposit(address,uint256)\":{\"notice\":\"Deposits funds into this jar for a specific token or Ether.\"},\"initialize(address,address)\":{\"notice\":\"Initializes this contract with its initial state.\"},\"setAllowedAmount(address,address,uint256)\":{\"notice\":\"Sets the allowed amount for a specific user and token.\"},\"setRound(uint64,uint64,string)\":{\"notice\":\"Sets the round duration and metadata URI.\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws funds from the jar for a specific token or Ether.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sweetspot.sol\":\"sweetspot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0x5bf83793e4290e7e68813647ee12b8abc4c538289be58958e32b7333b5b04e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f2ae1e6cfcef833b0424c313a99b39e98c418ba4fc037c081644ef42e598776\",\"dweb:/ipfs/QmSyyx1J5C2o3KCaWxDf3Gd9szsZGdzJCbe4u4SvdNXPjV\"]},\"contracts/sweetspot.sol\":{\"keccak256\":\"0x79ee6064a8f87793f27133ca6e665441b7664f732f539e0592fd6137a8b4632b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922e75839e7077ac8b3c57fca1293bc6a75a54ac0be43ad055a846e7b47f843e\",\"dweb:/ipfs/QmTTjogpQWtbQXxjgpKbXm1ea7MAEvaRUfPVKxZVNDqxX6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1498,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "scorer",
								"offset": 0,
								"slot": "50",
								"type": "t_contract(IScorer)1472"
							},
							{
								"astId": 1508,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "currentRound",
								"offset": 0,
								"slot": "51",
								"type": "t_struct(Round)1505_storage"
							},
							{
								"astId": 1512,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "totalBalances",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1518,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "allowedAmounts",
								"offset": 0,
								"slot": "54",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_contract(IScorer)1472": {
								"encoding": "inplace",
								"label": "contract IScorer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Round)1505_storage": {
								"encoding": "inplace",
								"label": "struct sweetspot.Round",
								"members": [
									{
										"astId": 1500,
										"contract": "contracts/sweetspot.sol:sweetspot",
										"label": "start",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1502,
										"contract": "contracts/sweetspot.sol:sweetspot",
										"label": "end",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1504,
										"contract": "contracts/sweetspot.sol:sweetspot",
										"label": "metadataURI",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claim(address)": {
								"notice": "Claims the full allowed amount for a user during the round."
							},
							"deposit(address,uint256)": {
								"notice": "Deposits funds into this jar for a specific token or Ether."
							},
							"initialize(address,address)": {
								"notice": "Initializes this contract with its initial state."
							},
							"setAllowedAmount(address,address,uint256)": {
								"notice": "Sets the allowed amount for a specific user and token."
							},
							"setRound(uint64,uint64,string)": {
								"notice": "Sets the round duration and metadata URI."
							},
							"withdraw(address,uint256)": {
								"notice": "Withdraws funds from the jar for a specific token or Ether."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							579
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 580,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 579,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 579,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								579,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 561,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						],
						"ReentrancyGuardUpgradeable": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 534,
							"sourceUnit": 449,
							"src": "136:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "144:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"1000:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1000:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "1000:13:2"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "201:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 533,
							"linearizedBaseContracts": [
								533,
								448
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "970:26:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 458,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1793:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1768:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1768:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 457,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1808:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 461,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1840:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1815:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1815:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1851:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 463,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1875:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1859:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 462,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1859:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "1949:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 468,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "1959:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "1959:34:2"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 465,
												"name": "onlyInitializing",
												"nameLocations": [
													"1932:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1932:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1932:16:2"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1898:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:0:2"
									},
									"scope": 533,
									"src": "1889:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2076:39:2",
										"statements": [
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 477,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 478,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2096:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "2086:22:2"
											}
										]
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 475,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 474,
												"name": "onlyInitializing",
												"nameLocations": [
													"2059:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2059:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2059:16:2"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2015:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:0:2"
									},
									"scope": 533,
									"src": "2006:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2516:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 485,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2526:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2526:21:2"
											},
											{
												"id": 488,
												"nodeType": "PlaceholderStatement",
												"src": "2557:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 489,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "2568:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2568:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "2568:20:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2121:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 493,
									"name": "nonReentrant",
									"nameLocation": "2501:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2513:2:2"
									},
									"src": "2492:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "2640:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 497,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "2733:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 498,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2744:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2733:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2754:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2725:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2725:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "2725:63:2"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2863:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 504,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2873:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2863:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "2863:18:2"
											}
										]
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2610:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2629:2:2"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:0:2"
									},
									"scope": 533,
									"src": "2601:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "2932:171:2",
										"statements": [
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 511,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3074:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 512,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "3084:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3074:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "3074:22:2"
											}
										]
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2903:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2921:2:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2932:0:2"
									},
									"scope": 533,
									"src": "2894:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "3346:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3363:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 523,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3374:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3363:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 521,
												"id": 525,
												"nodeType": "Return",
												"src": "3356:26:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3109:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3291:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3314:2:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3340:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3340:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:6:2"
									},
									"scope": 533,
									"src": "3282:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "3395:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 532,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3674:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "3654:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 529,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3654:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 531,
										"length": {
											"hexValue": "3439",
											"id": 530,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3662:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3654:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 534,
							"src": "952:2730:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "112:3571:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							579
						],
						"Initializable": [
							448
						]
					},
					"id": 580,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 537,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 580,
							"sourceUnit": 449,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 536,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 539,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:3"
									},
									"id": 540,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 538,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 579,
							"linearizedBaseContracts": [
								579,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 543,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 542,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 579,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 548,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 579,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 557,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 556,
												"id": 559,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 579,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 566,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 565,
												"id": 568,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 579,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 574,
												"id": 576,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 579,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 580,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							661
						],
						"IERC165": [
							1451
						],
						"IERC20": [
							747
						]
					},
					"id": 662,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 581,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 583,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 662,
							"sourceUnit": 670,
							"src": "133:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 582,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "141:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 662,
							"sourceUnit": 666,
							"src": "170:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 584,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1451,
										"src": "178:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 587,
										"name": "IERC20",
										"nameLocations": [
											"590:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 747,
										"src": "590:6:4"
									},
									"id": 588,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:4"
								},
								{
									"baseName": {
										"id": 589,
										"name": "IERC165",
										"nameLocations": [
											"598:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1451,
										"src": "598:7:4"
									},
									"id": 590,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:4"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 586,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:4",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 661,
							"linearizedBaseContracts": [
								661,
								1451,
								747
							],
							"name": "IERC1363",
							"nameLocation": "578:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1548:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1560:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1593:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:4"
									},
									"scope": 661,
									"src": "1523:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2088:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2100:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2115:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:4"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2154:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:4"
									},
									"scope": 661,
									"src": "2063:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2653:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2667:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2679:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2712:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 621,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:4"
									},
									"scope": 661,
									"src": "2624:94:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3294:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3308:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3320:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3335:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:4"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3374:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:4"
									},
									"scope": 661,
									"src": "3265:115:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3805:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3822:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:4"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3855:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:4"
									},
									"scope": 661,
									"src": "3781:80:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4374:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4391:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4406:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:4"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4445:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:4"
									},
									"scope": 661,
									"src": "4350:101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 662,
							"src": "568:3885:4",
							"usedErrors": [],
							"usedEvents": [
								681,
								690
							]
						}
					],
					"src": "107:4347:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1451
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 663,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 665,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 666,
							"sourceUnit": 1452,
							"src": "132:59:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 664,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1451,
										"src": "140:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							747
						]
					},
					"id": 670,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 670,
							"sourceUnit": 748,
							"src": "131:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 668,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "139:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							747
						]
					},
					"id": 748,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 671,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 672,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 747,
							"linearizedBaseContracts": [
								747
							],
							"name": "IERC20",
							"nameLocation": "214:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 681,
									"name": "Transfer",
									"nameLocation": "396:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "405:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "427:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "447:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:7"
									},
									"src": "390:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 690,
									"name": "Approval",
									"nameLocation": "627:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "636:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "659:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:7"
									},
									"src": "621:78:7"
								},
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:7"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "821:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:7"
									},
									"scope": 747,
									"src": "775:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:7"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "971:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:7"
									},
									"scope": 747,
									"src": "912:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1222:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:7"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1267:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:7"
									},
									"scope": 747,
									"src": "1204:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1567:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1582:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:7"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1622:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:7"
									},
									"scope": 747,
									"src": "1548:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2326:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:7"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2376:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:7"
									},
									"scope": 747,
									"src": "2309:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2712:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2726:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:7"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2771:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:7"
									},
									"scope": 747,
									"src": "2690:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 748,
							"src": "204:2575:7",
							"usedErrors": [],
							"usedEvents": [
								681,
								690
							]
						}
					],
					"src": "106:2674:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1417
						],
						"IERC1363": [
							661
						],
						"IERC20": [
							747
						],
						"SafeERC20": [
							1158
						]
					},
					"id": 1159,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 749,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 751,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 748,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 750,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 753,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 662,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 752,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 661,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 1418,
							"src": "238:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 754,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1417,
										"src": "246:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 756,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1158,
							"linearizedBaseContracts": [
								1158
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 761,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "875:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:8"
									},
									"src": "844:46:8"
								},
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 770,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1011:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1028:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1054:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:8"
									},
									"src": "972:109:8"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "1343:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 782,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "1373:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 785,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "1395:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 714,
																	"src": "1395:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 787,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "1412:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 788,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 778,
																			"src": "1416:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 789,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 783,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 781,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "1353:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:8"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1293:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 772,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "1293:6:8"
													},
													"referencedDeclaration": 747,
													"src": "1293:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1307:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1319:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:8"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:8"
									},
									"scope": 1158,
									"src": "1271:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1760:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "1790:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 811,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "1812:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 746,
																	"src": "1812:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 813,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "1833:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 814,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "1839:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 815,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 804,
																			"src": "1843:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 816,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 809,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 807,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "1770:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:8"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1696:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 796,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "1696:6:8"
													},
													"referencedDeclaration": 747,
													"src": "1696:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1710:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1724:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1736:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:8"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:8"
									},
									"scope": 1158,
									"src": "1670:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "2600:139:8",
										"statements": [
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 851,
														"src": "2610:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 838,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1158",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1158",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 836,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "2664:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 834,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "2633:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "2633:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "2695:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 845,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "2702:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 846,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "2711:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 847,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "2726:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2682:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:8"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2545:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 824,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 823,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "2545:6:8"
													},
													"referencedDeclaration": 747,
													"src": "2545:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2559:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2576:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:8"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:8"
									},
									"scope": 1158,
									"src": "2514:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "3505:370:8",
										"statements": [
											{
												"id": 893,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:8",
												"statements": [
													{
														"assignments": [
															864
														],
														"declarations": [
															{
																"constant": false,
																"id": 864,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 893,
																"src": "3539:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 863,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 873,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 869,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1158",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1158",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 867,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 871,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "3597:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 865,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "3566:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$747",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 724,
																"src": "3566:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 874,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "3623:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 875,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "3642:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 884,
														"nodeType": "IfStatement",
														"src": "3619:160:8",
														"trueBody": {
															"id": 883,
															"nodeType": "Block",
															"src": "3661:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 878,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "3719:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 879,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 864,
																				"src": "3728:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 880,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "3746:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 877,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 770,
																			"src": "3686:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 882,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 886,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "3805:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$747",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 887,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "3812:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 888,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "3821:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 889,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "3840:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$747",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 885,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "3792:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 892,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3438:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 854,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "3438:6:8"
													},
													"referencedDeclaration": 747,
													"src": "3438:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3452:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3469:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:8"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:8"
									},
									"scope": 1158,
									"src": "3407:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "4529:303:8",
										"statements": [
											{
												"assignments": [
													907
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 941,
														"src": "4539:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 906,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 910,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "4582:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$747",
																	"typeString": "contract IERC20"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 734,
															"src": "4582:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 912,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "4598:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 913,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "4607:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 908,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:8"
											},
											{
												"condition": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 918,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "4654:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$747",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 919,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "4661:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$747",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 917,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "4630:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 940,
												"nodeType": "IfStatement",
												"src": "4625:201:8",
												"trueBody": {
													"id": 939,
													"nodeType": "Block",
													"src": "4676:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 923,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "4710:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 926,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 899,
																					"src": "4732:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$747",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 734,
																				"src": "4732:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 928,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 901,
																						"src": "4748:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 929,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 930,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 924,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 922,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "4690:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 933,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 935,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "4795:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 936,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "4802:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 934,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "4775:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 938,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4474:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 898,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 897,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "4474:6:8"
													},
													"referencedDeclaration": 747,
													"src": "4474:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4488:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4505:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:8"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:8"
									},
									"scope": 1158,
									"src": "4452:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "5279:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 955,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "5293:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 969,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "5402:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 970,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "5406:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 971,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "5413:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 967,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "5380:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$661",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 612,
																"src": "5380:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 982,
													"nodeType": "IfStatement",
													"src": "5375:117:8",
													"trueBody": {
														"id": 981,
														"nodeType": "Block",
														"src": "5420:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 977,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "5474:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 975,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 974,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "5441:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 980,
																"nodeType": "RevertStatement",
																"src": "5434:47:8"
															}
														]
													}
												},
												"id": 983,
												"nodeType": "IfStatement",
												"src": "5289:203:8",
												"trueBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "5314:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 961,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "5341:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 962,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "5348:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 963,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "5352:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 960,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "5328:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 965,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5208:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$661",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 661,
														"src": "5208:8:8"
													},
													"referencedDeclaration": 661,
													"src": "5208:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$661",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5224:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5236:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5251:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:8"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:8"
									},
									"scope": 1158,
									"src": "5176:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "6017:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1000,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "6031:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1015,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "6154:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1016,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "6160:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1017,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "6164:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1018,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "6171:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1013,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "6128:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$661",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 638,
																"src": "6128:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1029,
													"nodeType": "IfStatement",
													"src": "6123:127:8",
													"trueBody": {
														"id": 1028,
														"nodeType": "Block",
														"src": "6178:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1024,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 989,
																					"src": "6232:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1022,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1021,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "6199:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1027,
																"nodeType": "RevertStatement",
																"src": "6192:47:8"
															}
														]
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "6027:223:8",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "6052:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1006,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "6083:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1007,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "6090:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1008,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "6096:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1009,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "6100:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1005,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "6066:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1011,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5895:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$661",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 988,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 987,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 661,
														"src": "5895:8:8"
													},
													"referencedDeclaration": 661,
													"src": "5895:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$661",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5919:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5941:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5961:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5984:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:8"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:8"
									},
									"scope": 1158,
									"src": "5850:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "7023:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1045,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "7037:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1059,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "7145:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1060,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "7149:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1061,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "7156:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1057,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "7124:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$661",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 660,
																"src": "7124:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1072,
													"nodeType": "IfStatement",
													"src": "7119:116:8",
													"trueBody": {
														"id": 1071,
														"nodeType": "Block",
														"src": "7163:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1067,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1036,
																					"src": "7217:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1066,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1065,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1064,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "7184:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1070,
																"nodeType": "RevertStatement",
																"src": "7177:47:8"
															}
														]
													}
												},
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "7033:202:8",
												"trueBody": {
													"id": 1056,
													"nodeType": "Block",
													"src": "7058:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1051,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "7085:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1052,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "7092:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1053,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "7096:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1050,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "7072:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1055,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6952:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$661",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1034,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 661,
														"src": "6952:8:8"
													},
													"referencedDeclaration": 661,
													"src": "6952:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$661",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6968:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6980:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6995:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1041,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:8"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:8"
									},
									"scope": 1158,
									"src": "6921:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "7808:650:8",
										"statements": [
											{
												"assignments": [
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1085,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "7818:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1084,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:8"
											},
											{
												"assignments": [
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "7846:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1087,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1089,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:8"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:8",
													"nodeType": "YulBlock",
													"src": "7900:396:8",
													"statements": [
														{
															"nativeSrc": "7914:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:8"
																		},
																		"nativeSrc": "7934:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:8"
																		},
																		"nativeSrc": "7951:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:8"
																		},
																		"nativeSrc": "7968:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:8"
																},
																"nativeSrc": "7929:60:8",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:8",
																"nodeType": "YulBlock",
																"src": "8050:157:8",
																"statements": [
																	{
																		"nativeSrc": "8068:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:8"
																			},
																			"nativeSrc": "8079:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:8"
																					},
																					"nativeSrc": "8130:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:8"
																			},
																			"nativeSrc": "8107:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:8"
																		},
																		"nativeSrc": "8107:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:8"
																					},
																					"nativeSrc": "8176:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:8"
																			},
																			"nativeSrc": "8164:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:8"
																		},
																		"nativeSrc": "8164:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:8"
																},
																"nativeSrc": "8034:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:8"
															},
															"nativeSrc": "8031:176:8",
															"nodeType": "YulIf",
															"src": "8031:176:8"
														},
														{
															"nativeSrc": "8220:30:8",
															"nodeType": "YulAssignment",
															"src": "8220:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:8"
																},
																"nativeSrc": "8234:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:8"
																}
															]
														},
														{
															"nativeSrc": "8263:23:8",
															"nodeType": "YulAssignment",
															"src": "8263:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:8"
																},
																"nativeSrc": "8278:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1081,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1081,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1085,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1088,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1079,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1090,
												"nodeType": "InlineAssembly",
												"src": "7875:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1091,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "8310:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1102,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "8362:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1096,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1079,
																			"src": "8336:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$747",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$747",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1094,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1114,
												"nodeType": "IfStatement",
												"src": "8306:146:8",
												"trueBody": {
													"id": 1113,
													"nodeType": "Block",
													"src": "8380:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1109,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "8434:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$747",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$747",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1107,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1106,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "8401:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1112,
															"nodeType": "RevertStatement",
															"src": "8394:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "7767:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1078,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1077,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "7767:6:8"
													},
													"referencedDeclaration": 747,
													"src": "7767:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "7781:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:8"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:8"
									},
									"scope": 1158,
									"src": "7738:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "9049:391:8",
										"statements": [
											{
												"assignments": [
													1128
												],
												"declarations": [
													{
														"constant": false,
														"id": 1128,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "9059:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1127,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:8"
											},
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "9081:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:8"
											},
											{
												"assignments": [
													1134
												],
												"declarations": [
													{
														"constant": false,
														"id": 1134,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "9109:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1133,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1135,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:8",
													"nodeType": "YulBlock",
													"src": "9163:174:8",
													"statements": [
														{
															"nativeSrc": "9177:71:8",
															"nodeType": "YulAssignment",
															"src": "9177:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:8"
																		},
																		"nativeSrc": "9193:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:8"
																		},
																		"nativeSrc": "9210:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:8"
																		},
																		"nativeSrc": "9227:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:8"
																},
																"nativeSrc": "9188:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:8"
																}
															]
														},
														{
															"nativeSrc": "9261:30:8",
															"nodeType": "YulAssignment",
															"src": "9261:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:8"
																},
																"nativeSrc": "9275:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:8"
																}
															]
														},
														{
															"nativeSrc": "9304:23:8",
															"nodeType": "YulAssignment",
															"src": "9304:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:8"
																},
																"nativeSrc": "9319:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1122,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1122,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1131,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1134,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1128,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1120,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1136,
												"nodeType": "InlineAssembly",
												"src": "9138:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1137,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "9353:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1138,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "9365:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1149,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "9416:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1143,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1120,
																						"src": "9391:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$747",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$747",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1142,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1141,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1153,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1126,
												"id": 1155,
												"nodeType": "Return",
												"src": "9346:87:8"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "8993:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1119,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1118,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "8993:6:8"
													},
													"referencedDeclaration": 747,
													"src": "8993:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "9007:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:8"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "9043:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:8"
									},
									"scope": 1158,
									"src": "8960:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1159,
							"src": "750:8692:8",
							"usedErrors": [
								761,
								770
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1417
						],
						"Errors": [
							1439
						]
					},
					"id": 1418,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1160,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1162,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 1440,
							"src": "127:36:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1161,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1439,
										"src": "135:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1163,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1417,
							"linearizedBaseContracts": [
								1417
							],
							"name": "Address",
							"nameLocation": "241:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:9",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1168,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "358:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:9"
									},
									"src": "335:39:9"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "1361:278:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1178,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																],
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1176,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1181,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "1399:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1195,
												"nodeType": "IfStatement",
												"src": "1371:125:9",
												"trueBody": {
													"id": 1194,
													"nodeType": "Block",
													"src": "1407:89:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1188,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1186,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1191,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1173,
																		"src": "1478:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1183,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "1428:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "1428:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1193,
															"nodeType": "RevertStatement",
															"src": "1421:64:9"
														}
													]
												}
											},
											{
												"assignments": [
													1197,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "1507:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1204,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1198,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "1525:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1200,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "1547:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:9"
											},
											{
												"condition": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:9",
													"subExpression": {
														"id": 1205,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "1573:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1213,
												"nodeType": "IfStatement",
												"src": "1568:65:9",
												"trueBody": {
													"id": 1212,
													"nodeType": "Block",
													"src": "1582:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1207,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "1603:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1430,
																	"src": "1603:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1211,
															"nodeType": "RevertStatement",
															"src": "1596:26:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "1309:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "1336:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:9"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:9"
									},
									"scope": 1417,
									"src": "1290:349:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "2573:62:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2612:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "2620:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1225,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "2590:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1224,
												"id": 1230,
												"nodeType": "Return",
												"src": "2583:45:9"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2506:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2522:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:9"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2559:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:9"
									},
									"scope": 1417,
									"src": "2484:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "3072:294:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1246,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																],
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1244,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1249,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "3110:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1263,
												"nodeType": "IfStatement",
												"src": "3082:123:9",
												"trueBody": {
													"id": 1262,
													"nodeType": "Block",
													"src": "3117:88:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1256,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1254,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1259,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "3188:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1251,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "3138:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "3138:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1261,
															"nodeType": "RevertStatement",
															"src": "3131:63:9"
														}
													]
												}
											},
											{
												"assignments": [
													1265,
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "3215:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1264,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1267,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "3229:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1266,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"arguments": [
														{
															"id": 1272,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "3282:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1268,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "3256:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1270,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "3275:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1276,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "3331:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1277,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "3339:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1278,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "3348:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1275,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "3304:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1243,
												"id": 1280,
												"nodeType": "Return",
												"src": "3297:62:9"
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2990:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3006:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3025:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:9"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3058:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:9"
									},
									"scope": 1417,
									"src": "2959:407:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "3605:154:9",
										"statements": [
											{
												"assignments": [
													1293,
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1293,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "3616:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1292,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "3630:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1294,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"arguments": [
														{
															"id": 1298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "3675:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1296,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3657:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1302,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3724:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "3732:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1304,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "3741:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1301,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "3697:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1306,
												"nodeType": "Return",
												"src": "3690:62:9"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3533:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3549:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:9"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3591:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:9"
									},
									"scope": 1417,
									"src": "3505:254:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "3997:156:9",
										"statements": [
											{
												"assignments": [
													1319,
													1321
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "4008:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1318,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "4022:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1326,
												"initialValue": {
													"arguments": [
														{
															"id": 1324,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "4069:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1322,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4049:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:9",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1328,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4118:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "4126:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1330,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "4135:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1327,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "4091:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1317,
												"id": 1332,
												"nodeType": "Return",
												"src": "4084:62:9"
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3930:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3946:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:9"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3983:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1315,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:9"
									},
									"scope": 1417,
									"src": "3900:253:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "4579:424:9",
										"statements": [
											{
												"condition": {
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:9",
													"subExpression": {
														"id": 1346,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "4594:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "4653:344:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1353,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1341,
																			"src": "4841:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1357,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1337,
																				"src": "4867:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1368,
															"nodeType": "IfStatement",
															"src": "4837:119:9",
															"trueBody": {
																"id": 1367,
																"nodeType": "Block",
																"src": "4892:64:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1364,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "4934:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1363,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "4917:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1366,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1369,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "4976:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1345,
															"id": 1370,
															"nodeType": "Return",
															"src": "4969:17:9"
														}
													]
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "4589:408:9",
												"trueBody": {
													"id": 1352,
													"nodeType": "Block",
													"src": "4603:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1349,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "4625:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1348,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "4617:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1351,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4466:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4490:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4512:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:9"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4565:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:9"
									},
									"scope": 1417,
									"src": "4421:582:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "5307:122:9",
										"statements": [
											{
												"condition": {
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:9",
													"subExpression": {
														"id": 1384,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "5322:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1393,
													"nodeType": "Block",
													"src": "5381:42:9",
													"statements": [
														{
															"expression": {
																"id": 1391,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "5402:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1383,
															"id": 1392,
															"nodeType": "Return",
															"src": "5395:17:9"
														}
													]
												},
												"id": 1394,
												"nodeType": "IfStatement",
												"src": "5317:106:9",
												"trueBody": {
													"id": 1390,
													"nodeType": "Block",
													"src": "5331:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1387,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1379,
																		"src": "5353:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1386,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "5345:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1389,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:9",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5231:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5245:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:9"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5293:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:9"
									},
									"scope": 1417,
									"src": "5205:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "5598:432:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1402,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "5674:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1413,
													"nodeType": "Block",
													"src": "5973:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1408,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "5994:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1430,
																	"src": "5994:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1412,
															"nodeType": "RevertStatement",
															"src": "5987:26:9"
														}
													]
												},
												"id": 1414,
												"nodeType": "IfStatement",
												"src": "5670:354:9",
												"trueBody": {
													"id": 1407,
													"nodeType": "Block",
													"src": "5697:270:9",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:9",
																"nodeType": "YulBlock",
																"src": "5824:133:9",
																"statements": [
																	{
																		"nativeSrc": "5842:40:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:9"
																			},
																			"nativeSrc": "5865:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:9",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:9",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:9"
																					},
																					"nativeSrc": "5906:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:9"
																			},
																			"nativeSrc": "5899:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:9"
																		},
																		"nativeSrc": "5899:44:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:9"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1399,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1399,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:9",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1406,
															"nodeType": "InlineAssembly",
															"src": "5799:158:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:9",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "5560:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:9"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:9"
									},
									"scope": 1417,
									"src": "5543:487:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1418,
							"src": "233:5799:9",
							"usedErrors": [
								1168
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1439
						]
					},
					"id": 1440,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1419,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1420,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:10",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1439,
							"linearizedBaseContracts": [
								1439
							],
							"name": "Errors",
							"nameLocation": "419:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:10",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1427,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "557:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "574:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:10"
									},
									"src": "531:59:10"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:10",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1430,
									"name": "FailedCall",
									"nameLocation": "696:10:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:10"
									},
									"src": "690:19:10"
								},
								{
									"documentation": {
										"id": 1431,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:10",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1433,
									"name": "FailedDeployment",
									"nameLocation": "772:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:10"
									},
									"src": "766:25:10"
								},
								{
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:10",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1438,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "884:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:10"
									},
									"src": "860:33:10"
								}
							],
							"scope": 1440,
							"src": "411:484:10",
							"usedErrors": [
								1427,
								1430,
								1433,
								1438
							],
							"usedEvents": []
						}
					],
					"src": "100:796:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1451
						]
					},
					"id": 1452,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1441,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1442,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1451,
							"linearizedBaseContracts": [
								1451
							],
							"name": "IERC165",
							"nameLocation": "432:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "818:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1444,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:11"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "861:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:11"
									},
									"scope": 1451,
									"src": "791:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1452,
							"src": "422:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:11"
				},
				"id": 11
			},
			"contracts/interface/IScorer.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IScorer.sol",
					"exportedSymbols": {
						"IScorer": [
							1472
						]
					},
					"id": 1473,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1453,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IScorer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1472,
							"linearizedBaseContracts": [
								1472
							],
							"name": "IScorer",
							"nameLocation": "71:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "86:741:12",
										"text": " @dev Returns the score of a specific user for a given score type.\n      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).\n      The score is typically used to determine the user's eligibility for certain actions or claims.\n      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\n @param user The address of the user whose score is being queried.\n @param scoreType The type of score to query, represented as a `bytes32` hash.\n @return The score of the user as a uint256 value.\n @notice This function should be implemented in the contract that inherits the `IScorer` interface."
									},
									"functionSelector": "db4f1024",
									"id": 1463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "score",
									"nameLocation": "842:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "856:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "848:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "scoreType",
												"nameLocation": "876:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "862:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "862:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:39:12"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "910:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:9:12"
									},
									"scope": 1472,
									"src": "833:86:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "927:302:12",
										"text": " @dev Checks if the provided address is an admin.\n @param admin The address to check for admin status.\n @return True if the address is an admin, false otherwise.\n @notice This function should be implemented in the contract that inherits the `IScorer` interface."
									},
									"functionSelector": "24d7806c",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "1244:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1260:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1252:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:15:12"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1290:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1468,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1289:6:12"
									},
									"scope": 1472,
									"src": "1235:61:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1473,
							"src": "61:1238:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1268:12"
				},
				"id": 12
			},
			"contracts/sweetspot.sol": {
				"ast": {
					"absolutePath": "contracts/sweetspot.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							579
						],
						"IERC20": [
							747
						],
						"IScorer": [
							1472
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"ReentrancyGuardUpgradeable": [
							533
						],
						"SafeERC20": [
							1158
						],
						"sweetspot": [
							1953
						]
					},
					"id": 1954,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1475,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1954,
							"sourceUnit": 195,
							"src": "61:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1477,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1954,
							"sourceUnit": 748,
							"src": "138:72:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1476,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "147:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1479,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1954,
							"sourceUnit": 1159,
							"src": "212:84:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1478,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1158,
										"src": "221:9:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 1480,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1954,
							"sourceUnit": 534,
							"src": "298:85:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IScorer.sol",
							"file": "./interface/IScorer.sol",
							"id": 1481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1954,
							"sourceUnit": 1473,
							"src": "385:33:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1482,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"476:18:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "476:18:13"
									},
									"id": 1483,
									"nodeType": "InheritanceSpecifier",
									"src": "476:18:13"
								},
								{
									"baseName": {
										"id": 1484,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"496:26:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 533,
										"src": "496:26:13"
									},
									"id": 1485,
									"nodeType": "InheritanceSpecifier",
									"src": "496:26:13"
								}
							],
							"canonicalName": "sweetspot",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1953,
							"linearizedBaseContracts": [
								1953,
								533,
								194,
								579,
								448
							],
							"name": "sweetspot",
							"nameLocation": "463:9:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1489,
									"libraryName": {
										"id": 1486,
										"name": "SafeERC20",
										"nameLocations": [
											"537:9:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1158,
										"src": "537:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "531:27:13",
									"typeName": {
										"id": 1488,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1487,
											"name": "IERC20",
											"nameLocations": [
												"551:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 747,
											"src": "551:6:13"
										},
										"referencedDeclaration": 747,
										"src": "551:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$747",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "31f7d964",
									"id": 1495,
									"mutability": "constant",
									"name": "NATIVE_TOKEN",
									"nameLocation": "590:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 1953,
									"src": "566:49:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1490,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "566:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 1493,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "613:1:13",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 1492,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "605:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1491,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "605:7:13",
												"typeDescriptions": {}
											}
										},
										"id": 1494,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "605:10:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85c758f7",
									"id": 1498,
									"mutability": "mutable",
									"name": "scorer",
									"nameLocation": "637:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 1953,
									"src": "622:21:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IScorer_$1472",
										"typeString": "contract IScorer"
									},
									"typeName": {
										"id": 1497,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1496,
											"name": "IScorer",
											"nameLocations": [
												"622:7:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1472,
											"src": "622:7:13"
										},
										"referencedDeclaration": 1472,
										"src": "622:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IScorer_$1472",
											"typeString": "contract IScorer"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "sweetspot.Round",
									"id": 1505,
									"members": [
										{
											"constant": false,
											"id": 1500,
											"mutability": "mutable",
											"name": "start",
											"nameLocation": "719:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1505,
											"src": "712:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1499,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "712:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1502,
											"mutability": "mutable",
											"name": "end",
											"nameLocation": "774:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1505,
											"src": "767:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1501,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "767:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1504,
											"mutability": "mutable",
											"name": "metadataURI",
											"nameLocation": "825:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1505,
											"src": "818:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1503,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "818:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Round",
									"nameLocation": "695:5:13",
									"nodeType": "StructDefinition",
									"scope": 1953,
									"src": "688:187:13",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a19c8bc",
									"id": 1508,
									"mutability": "mutable",
									"name": "currentRound",
									"nameLocation": "896:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 1953,
									"src": "883:25:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Round_$1505_storage",
										"typeString": "struct sweetspot.Round"
									},
									"typeName": {
										"id": 1507,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1506,
											"name": "Round",
											"nameLocations": [
												"883:5:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1505,
											"src": "883:5:13"
										},
										"referencedDeclaration": 1505,
										"src": "883:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Round_$1505_storage_ptr",
											"typeString": "struct sweetspot.Round"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aee9c872",
									"id": 1512,
									"mutability": "mutable",
									"name": "totalBalances",
									"nameLocation": "1034:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 1953,
									"src": "999:48:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1511,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1509,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1007:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "999:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1510,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1018:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9590e8a",
									"id": 1518,
									"mutability": "mutable",
									"name": "allowedAmounts",
									"nameLocation": "1152:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 1953,
									"src": "1097:69:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1517,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1513,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1105:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1097:47:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1516,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1514,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1124:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1116:27:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1515,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1135:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62",
									"id": 1526,
									"name": "Deposit",
									"nameLocation": "1181:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"indexed": true,
												"mutability": "mutable",
												"name": "depositor",
												"nameLocation": "1205:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1189:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1232:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1216:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1247:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1239:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:66:13"
									},
									"src": "1175:80:13"
								},
								{
									"anonymous": false,
									"eventSelector": "9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb",
									"id": 1534,
									"name": "Withdraw",
									"nameLocation": "1267:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"indexed": true,
												"mutability": "mutable",
												"name": "withdrawer",
												"nameLocation": "1292:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1276:26:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1320:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1304:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1335:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1327:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:67:13"
									},
									"src": "1261:82:13"
								},
								{
									"anonymous": false,
									"eventSelector": "f7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683",
									"id": 1542,
									"name": "Claimed",
									"nameLocation": "1355:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimant",
												"nameLocation": "1379:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1363:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1405:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1389:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1420:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1412:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1362:65:13"
									},
									"src": "1349:79:13"
								},
								{
									"anonymous": false,
									"eventSelector": "3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2",
									"id": 1550,
									"name": "AllowedAmountUpdated",
									"nameLocation": "1440:20:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1477:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1461:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1461:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1499:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1483:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1483:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "1514:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1506:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1460:64:13"
									},
									"src": "1434:91:13"
								},
								{
									"anonymous": false,
									"eventSelector": "09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13",
									"id": 1558,
									"name": "RoundUpdated",
									"nameLocation": "1537:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"indexed": false,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1558:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1550:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1550:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"indexed": false,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "1573:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1565:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "1585:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1578:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1578:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:48:13"
									},
									"src": "1531:67:13"
								},
								{
									"errorSelector": "fa7410d4",
									"id": 1566,
									"name": "NotWithinRound",
									"nameLocation": "1612:14:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "currentTime",
												"nameLocation": "1635:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1627:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1656:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1648:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "1671:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1663:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1626:49:13"
									},
									"src": "1606:70:13"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "1707:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1571,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1741:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1745:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1741:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1569,
																	"name": "scorer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "1726:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IScorer_$1472",
																		"typeString": "contract IScorer"
																	}
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1733:7:13",
																"memberName": "isAdmin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1471,
																"src": "1726:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1726:26:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1754:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															},
															"value": "Caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															}
														],
														"id": 1568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1718:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "1718:61:13"
											},
											{
												"id": 1577,
												"nodeType": "PlaceholderStatement",
												"src": "1790:1:13"
											}
										]
									},
									"id": 1579,
									"name": "onlyAdmin",
									"nameLocation": "1695:9:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1704:2:13"
									},
									"src": "1686:113:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "2051:145:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1590,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "2077:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1589,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2062:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2062:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "2062:21:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1593,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "2128:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "2128:24:13"
											},
											{
												"expression": {
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1596,
														"name": "scorer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "2163:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1472",
															"typeString": "contract IScorer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1598,
																"name": "_scorer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "2180:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1597,
															"name": "IScorer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "2172:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IScorer_$1472_$",
																"typeString": "type(contract IScorer)"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2172:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1472",
															"typeString": "contract IScorer"
														}
													},
													"src": "2163:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IScorer_$1472",
														"typeString": "contract IScorer"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "2163:25:13"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "1807:165:13",
										"text": "@notice Initializes this contract with its initial state.\n @param _scorer The scoring contract address.\n @param owner The owner address."
									},
									"functionSelector": "485cc955",
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1587,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1586,
												"name": "initializer",
												"nameLocations": [
													"2039:11:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "2039:11:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2039:11:13"
										}
									],
									"name": "initialize",
									"nameLocation": "1987:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "_scorer",
												"nameLocation": "2006:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "1998:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1998:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2023:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "2015:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2015:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1997:32:13"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:13"
									},
									"scope": 1953,
									"src": "1978:218:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "2493:395:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1613,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "2508:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1614,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "2517:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2508:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1645,
													"nodeType": "Block",
													"src": "2618:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1626,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1608,
																			"src": "2641:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2650:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2641:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2653:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																			"typeString": "literal_string \"Deposit amount must be greater than zero\""
																		},
																		"value": "Deposit amount must be greater than zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																			"typeString": "literal_string \"Deposit amount must be greater than zero\""
																		}
																	],
																	"id": 1625,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2633:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2633:63:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1631,
															"nodeType": "ExpressionStatement",
															"src": "2633:63:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1636,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2742:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2746:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2742:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1640,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2762:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_sweetspot_$1953",
																					"typeString": "contract sweetspot"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_sweetspot_$1953",
																					"typeString": "contract sweetspot"
																				}
																			],
																			"id": 1639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2754:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1638,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2754:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2754:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1642,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "2769:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1633,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1606,
																				"src": "2718:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1632,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "2711:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$747_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2711:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2725:16:13",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 821,
																	"src": "2711:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$747_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2711:65:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1644,
															"nodeType": "ExpressionStatement",
															"src": "2711:65:13"
														}
													]
												},
												"id": 1646,
												"nodeType": "IfStatement",
												"src": "2504:284:13",
												"trueBody": {
													"id": 1624,
													"nodeType": "Block",
													"src": "2531:81:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1617,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2554:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2558:5:13",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2554:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1619,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1608,
																			"src": "2567:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2554:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e636f727265637420457468657220616d6f756e74",
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2575:24:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																			"typeString": "literal_string \"Incorrect Ether amount\""
																		},
																		"value": "Incorrect Ether amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																			"typeString": "literal_string \"Incorrect Ether amount\""
																		}
																	],
																	"id": 1616,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2546:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2546:54:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1623,
															"nodeType": "ExpressionStatement",
															"src": "2546:54:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1647,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "2800:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1649,
														"indexExpression": {
															"id": 1648,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "2814:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2800:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1650,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "2824:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2800:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "2800:30:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1654,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2854:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2858:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2854:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1656,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "2866:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "2873:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1653,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "2846:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2846:34:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "EmitStatement",
												"src": "2841:39:13"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "2204:204:13",
										"text": "@notice Deposits funds into this jar for a specific token or Ether.\n @param token The token address (address(0) for Ether).\n @param amount The value to add (in wei for Ether)."
									},
									"functionSelector": "47e7ef24",
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1611,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1610,
												"name": "nonReentrant",
												"nameLocations": [
													"2479:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "2479:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2479:12:13"
										}
									],
									"name": "deposit",
									"nameLocation": "2423:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2439:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "2431:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2454:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "2446:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:13"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2493:0:13"
									},
									"scope": 1953,
									"src": "2414:474:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "3025:965:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1669,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3050:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3056:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3050:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 1671,
																"name": "currentRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "3068:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$1505_storage",
																	"typeString": "struct sweetspot.Round storage ref"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3081:5:13",
															"memberName": "start",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1500,
															"src": "3068:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3050:36:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1674,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3090:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3096:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3090:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1676,
																"name": "currentRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "3108:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$1505_storage",
																	"typeString": "struct sweetspot.Round storage ref"
																}
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3121:3:13",
															"memberName": "end",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1502,
															"src": "3108:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3090:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3050:74:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "3046:183:13",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "3126:103:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1681,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3163:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3169:9:13",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3163:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1683,
																			"name": "currentRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "3180:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Round_$1505_storage",
																				"typeString": "struct sweetspot.Round storage ref"
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3193:5:13",
																		"memberName": "start",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1500,
																		"src": "3180:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	{
																		"expression": {
																			"id": 1685,
																			"name": "currentRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "3200:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Round_$1505_storage",
																				"typeString": "struct sweetspot.Round storage ref"
																			}
																		},
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3213:3:13",
																		"memberName": "end",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1502,
																		"src": "3200:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 1680,
																	"name": "NotWithinRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "3148:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3148:69:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1688,
															"nodeType": "RevertStatement",
															"src": "3141:76:13"
														}
													]
												}
											},
											{
												"assignments": [
													1692
												],
												"declarations": [
													{
														"constant": false,
														"id": 1692,
														"mutability": "mutable",
														"name": "userAllowedAmount",
														"nameLocation": "3249:17:13",
														"nodeType": "VariableDeclaration",
														"scope": 1780,
														"src": "3241:25:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1691,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3241:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1699,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1693,
															"name": "allowedAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "3269:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1696,
														"indexExpression": {
															"expression": {
																"id": 1694,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3284:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3288:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3284:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3269:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1698,
													"indexExpression": {
														"id": 1697,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3296:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3269:33:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3241:61:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1701,
																"name": "userAllowedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1692,
																"src": "3321:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3341:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3321:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20636c61696d61626c6520616d6f756e74",
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3344:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																"typeString": "literal_string \"No claimable amount\""
															},
															"value": "No claimable amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																"typeString": "literal_string \"No claimable amount\""
															}
														],
														"id": 1700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3313:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3313:53:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "3313:53:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1708,
																	"name": "totalBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "3385:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1710,
																"indexExpression": {
																	"id": 1709,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "3399:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3385:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1711,
																"name": "userAllowedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1692,
																"src": "3409:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3385:41:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3428:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															},
															"value": "Insufficient funds in jar"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															}
														],
														"id": 1707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3377:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3377:79:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "3377:79:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1719,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3488:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3492:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3488:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "5472757374",
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3500:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b",
																			"typeString": "literal_string \"Trust\""
																		},
																		"value": "Trust"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b",
																			"typeString": "literal_string \"Trust\""
																		}
																	],
																	"expression": {
																		"id": 1717,
																		"name": "scorer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1498,
																		"src": "3475:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IScorer_$1472",
																			"typeString": "contract IScorer"
																		}
																	},
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3482:5:13",
																	"memberName": "score",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1463,
																	"src": "3475:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (address,string memory) view external returns (uint256)"
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3475:33:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3511:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3475:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742054727573742073636f7265",
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3514:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5",
																"typeString": "literal_string \"Insufficient Trust score\""
															},
															"value": "Insufficient Trust score"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5",
																"typeString": "literal_string \"Insufficient Trust score\""
															}
														],
														"id": 1716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3467:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3467:74:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "3467:74:13"
											},
											{
												"expression": {
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1728,
																"name": "allowedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "3554:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1732,
															"indexExpression": {
																"expression": {
																	"id": 1729,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3569:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3573:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3569:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3554:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1733,
														"indexExpression": {
															"id": 1731,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3581:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3554:33:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3590:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3554:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "3554:37:13"
											},
											{
												"expression": {
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1737,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "3602:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1739,
														"indexExpression": {
															"id": 1738,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3616:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3602:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1740,
														"name": "userAllowedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "3626:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3602:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "3602:41:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1743,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3660:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1744,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "3669:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3660:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1771,
													"nodeType": "Block",
													"src": "3836:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1766,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3878:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3882:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3878:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1768,
																		"name": "userAllowedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "3890:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1763,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1664,
																				"src": "3858:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1762,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "3851:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$747_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3851:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3865:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "3851:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$747_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3851:57:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1770,
															"nodeType": "ExpressionStatement",
															"src": "3851:57:13"
														}
													]
												},
												"id": 1772,
												"nodeType": "IfStatement",
												"src": "3656:264:13",
												"trueBody": {
													"id": 1761,
													"nodeType": "Block",
													"src": "3683:147:13",
													"statements": [
														{
															"assignments": [
																1747,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1747,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "3704:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1761,
																	"src": "3699:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1746,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3699:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1755,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3759:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1748,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3717:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3721:6:13",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3717:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3728:4:13",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "3717:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1751,
																			"name": "userAllowedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1692,
																			"src": "3740:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "3717:41:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3717:45:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3698:64:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1757,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "3785:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"id": 1758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3794:23:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		},
																		"value": "Ether transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		}
																	],
																	"id": 1756,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3777:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3777:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1760,
															"nodeType": "ExpressionStatement",
															"src": "3777:41:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1774,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3945:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3949:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3945:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1776,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3957:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1777,
															"name": "userAllowedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "3964:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1773,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "3937:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3937:45:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1779,
												"nodeType": "EmitStatement",
												"src": "3932:50:13"
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "2896:71:13",
										"text": "@notice Claims the full allowed amount for a user during the round."
									},
									"functionSelector": "1e83409a",
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1666,
												"name": "nonReentrant",
												"nameLocations": [
													"3012:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "3012:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3012:12:13"
										}
									],
									"name": "claim",
									"nameLocation": "2982:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2996:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "2988:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2987:15:13"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3025:0:13"
									},
									"scope": 1953,
									"src": "2973:1017:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1817,
										"nodeType": "Block",
										"src": "4312:171:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1794,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "4331:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4347:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4339:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1795,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4339:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4339:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4331:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573732075736572",
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4351:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
																"typeString": "literal_string \"Zero address user\""
															},
															"value": "Zero address user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
																"typeString": "literal_string \"Zero address user\""
															}
														],
														"id": 1793,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4323:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4323:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1802,
												"nodeType": "ExpressionStatement",
												"src": "4323:48:13"
											},
											{
												"expression": {
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1803,
																"name": "allowedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "4382:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1806,
															"indexExpression": {
																"id": 1804,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "4397:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4382:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1807,
														"indexExpression": {
															"id": 1805,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "4403:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4382:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1808,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "4412:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4382:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "4382:36:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1812,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "4455:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1813,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "4461:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1814,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "4468:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1811,
														"name": "AllowedAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "4434:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4434:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1816,
												"nodeType": "EmitStatement",
												"src": "4429:46:13"
											}
										]
									},
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "3998:218:13",
										"text": "@notice Sets the allowed amount for a specific user and token.\n @param user The address of the user.\n @param token The token address.\n @param amount The allowed amount for the user."
									},
									"functionSelector": "b807a3c4",
									"id": 1818,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1791,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1790,
												"name": "onlyAdmin",
												"nameLocations": [
													"4302:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1579,
												"src": "4302:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4302:9:13"
										}
									],
									"name": "setAllowedAmount",
									"nameLocation": "4231:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4256:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "4248:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4270:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "4262:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4285:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "4277:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4277:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4247:45:13"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4312:0:13"
									},
									"scope": 1953,
									"src": "4222:261:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "4824:186:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1831,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "4843:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1832,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "4851:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "4843:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53746172742074696d65206d757374206265206265666f726520656e642074696d65",
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																"typeString": "literal_string \"Start time must be before end time\""
															},
															"value": "Start time must be before end time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																"typeString": "literal_string \"Start time must be before end time\""
															}
														],
														"id": 1830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4835:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4835:58:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1836,
												"nodeType": "ExpressionStatement",
												"src": "4835:58:13"
											},
											{
												"expression": {
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1837,
														"name": "currentRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "4904:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$1505_storage",
															"typeString": "struct sweetspot.Round storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1839,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "4925:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1840,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "4932:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1841,
																"name": "metadataURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "4937:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 1838,
															"name": "Round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "4919:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Round_$1505_storage_ptr_$",
																"typeString": "type(struct sweetspot.Round storage pointer)"
															}
														},
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4919:30:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$1505_memory_ptr",
															"typeString": "struct sweetspot.Round memory"
														}
													},
													"src": "4904:45:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Round_$1505_storage",
														"typeString": "struct sweetspot.Round storage ref"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "4904:45:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1846,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "4978:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1847,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "4985:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1848,
															"name": "metadataURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "4990:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1845,
														"name": "RoundUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "4965:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,string memory)"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4965:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1850,
												"nodeType": "EmitStatement",
												"src": "4960:42:13"
											}
										]
									},
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "4491:235:13",
										"text": "@notice Sets the round duration and metadata URI.\n @param start The start timestamp of the round.\n @param end The end timestamp of the round.\n @param metadataURI The IPFS URI for the round metadata."
									},
									"functionSelector": "a9012c89",
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1828,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1827,
												"name": "onlyAdmin",
												"nameLocations": [
													"4814:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1579,
												"src": "4814:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4814:9:13"
										}
									],
									"name": "setRound",
									"nameLocation": "4741:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "4758:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4750:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1820,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4750:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "4773:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4765:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1822,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4765:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "4792:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4778:25:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1824,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4778:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4749:55:13"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4824:0:13"
									},
									"scope": 1953,
									"src": "4732:278:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "5297:496:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1865,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1857,
																"src": "5316:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5325:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5316:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5328:45:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																"typeString": "literal_string \"Withdrawal amount must be greater than zero\""
															},
															"value": "Withdrawal amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																"typeString": "literal_string \"Withdrawal amount must be greater than zero\""
															}
														],
														"id": 1864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5308:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5308:66:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1870,
												"nodeType": "ExpressionStatement",
												"src": "5308:66:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1872,
																	"name": "totalBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "5393:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1874,
																"indexExpression": {
																	"id": 1873,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1855,
																	"src": "5407:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5393:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1875,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1857,
																"src": "5417:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5393:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5425:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 1871,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5385:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5385:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1879,
												"nodeType": "ExpressionStatement",
												"src": "5385:61:13"
											},
											{
												"expression": {
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1880,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "5459:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1882,
														"indexExpression": {
															"id": 1881,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "5473:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5459:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1883,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "5483:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5459:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1885,
												"nodeType": "ExpressionStatement",
												"src": "5459:30:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1886,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "5506:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1887,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "5515:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5506:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1914,
													"nodeType": "Block",
													"src": "5668:70:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1909,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "5710:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5710:7:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1911,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1857,
																		"src": "5719:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1906,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1855,
																				"src": "5690:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1905,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "5683:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$747_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5683:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5697:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "5683:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$747_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5683:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1913,
															"nodeType": "ExpressionStatement",
															"src": "5683:43:13"
														}
													]
												},
												"id": 1915,
												"nodeType": "IfStatement",
												"src": "5502:236:13",
												"trueBody": {
													"id": 1904,
													"nodeType": "Block",
													"src": "5529:133:13",
													"statements": [
														{
															"assignments": [
																1890,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1890,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "5550:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1904,
																	"src": "5545:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1889,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "5545:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1898,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5591:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1891,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 105,
																				"src": "5563:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5563:7:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5571:4:13",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "5563:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1894,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1857,
																			"src": "5583:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "5563:27:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5563:31:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5544:50:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1900,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "5617:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"id": 1901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5626:23:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		},
																		"value": "Ether transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		}
																	],
																	"id": 1899,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5609:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5609:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1903,
															"nodeType": "ExpressionStatement",
															"src": "5609:41:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1917,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "5762:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5762:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1919,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "5771:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1920,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "5778:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1916,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "5753:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5753:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1922,
												"nodeType": "EmitStatement",
												"src": "5748:37:13"
											}
										]
									},
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "5018:191:13",
										"text": "@notice Withdraws funds from the jar for a specific token or Ether.\n @param token The token address (address(0) for Ether).\n @param amount The amount to withdraw."
									},
									"functionSelector": "f3fef3a3",
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1860,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1859,
												"name": "onlyOwner",
												"nameLocations": [
													"5273:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "5273:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5273:9:13"
										},
										{
											"id": 1862,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1861,
												"name": "nonReentrant",
												"nameLocations": [
													"5283:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "5283:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5283:12:13"
										}
									],
									"name": "withdraw",
									"nameLocation": "5224:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5241:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5233:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5233:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5256:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5248:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5248:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5232:31:13"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5297:0:13"
									},
									"scope": 1953,
									"src": "5215:578:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1943,
										"nodeType": "Block",
										"src": "5899:119:13",
										"statements": [
											{
												"expression": {
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1928,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "5910:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1930,
														"indexExpression": {
															"id": 1929,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "5924:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5910:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1931,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5941:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5945:5:13",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "5941:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5910:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "5910:40:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1936,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5974:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5978:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5974:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1938,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "5986:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1939,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6000:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6004:5:13",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6000:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1935,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "5966:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5966:44:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1942,
												"nodeType": "EmitStatement",
												"src": "5961:49:13"
											}
										]
									},
									"documentation": {
										"id": 1925,
										"nodeType": "StructuredDocumentation",
										"src": "5801:65:13",
										"text": "@notice Allows Ether deposits directly via fallback function."
									},
									"id": 1944,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5879:2:13"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5899:0:13"
									},
									"scope": 1953,
									"src": "5872:146:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "6054:119:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "6e436f6f6b69654a61723a20757365206465706f7369742829",
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6137:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6",
																"typeString": "literal_string \"nCookieJar: use deposit()\""
															},
															"value": "nCookieJar: use deposit()"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_7152a76fdc3fefac21afa26879bc49902b06fd6ac40af5cb4f1816779dc5bac6",
																"typeString": "literal_string \"nCookieJar: use deposit()\""
															}
														],
														"id": 1947,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "6130:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6130:35:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1950,
												"nodeType": "ExpressionStatement",
												"src": "6130:35:13"
											}
										]
									},
									"id": 1952,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6034:2:13"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6054:0:13"
									},
									"scope": 1953,
									"src": "6026:147:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1954,
							"src": "454:5722:13",
							"usedErrors": [
								30,
								35,
								211,
								214,
								761,
								1566
							],
							"usedEvents": [
								41,
								219,
								1526,
								1534,
								1542,
								1550,
								1558
							]
						}
					],
					"src": "33:6145:13"
				},
				"id": 13
			}
		}
	}
}