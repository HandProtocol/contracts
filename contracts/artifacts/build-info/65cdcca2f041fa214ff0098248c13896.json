{
	"id": "65cdcca2f041fa214ff0098248c13896",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sweetspot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport { SafeERC20 } from '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\r\nimport \"./interface/IScorer.sol\"; // Import the IScorer interface\r\n\r\ncontract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address public constant NATIVE_TOKEN = address(0);\r\n    IScorer public scorer; // Scoring contract for eligibility\r\n\r\n    struct Round {\r\n        uint64 start; // Start timestamp of the round\r\n        uint64 end; // End timestamp of the round\r\n        string metadataURI; // IPFS URI for round metadata\r\n    }\r\n\r\n    Round public currentRound; // Current round details\r\n\r\n    // Tracks balances for each token (including Ether)\r\n    mapping(address => uint256) public totalBalances;\r\n    // Allowed amounts per user per token\r\n    mapping(address => mapping(address => uint256)) public allowedAmounts;\r\n \r\n    event Deposit(address indexed depositor, address indexed token, uint256 amount);\r\n    event Withdraw(address indexed withdrawer, address indexed token, uint256 amount);\r\n    event Claimed(address indexed claimant, address indexed token, uint256 amount);\r\n    event AllowedAmountUpdated(address indexed user, address indexed token, uint256 newAmount);\r\n    event RoundUpdated(uint256 start, uint256 end, string metadataURI);\r\n\r\n    error NotWithinRound(uint256 currentTime, uint256 start, uint256 end);\r\n\r\n    modifier onlyAdmin() {\r\n        require(scorer.isAdmin(msg.sender), \"Caller is not an admin\");\r\n        _;\r\n    }\r\n\r\n    /// @notice Initializes this contract with its initial state.\r\n    ///\r\n    /// @param _scorer The scoring contract address.\r\n    /// @param owner The owner address.\r\n    function initialize(address _scorer, address owner) external initializer {\r\n        __Ownable_init(owner); // Initialize OwnableUpgradeable\r\n        __ReentrancyGuard_init();\r\n        scorer = IScorer(_scorer);\r\n    }\r\n\r\n    /// @notice Deposits funds into this jar for a specific token or Ether.\r\n    ///\r\n    /// @param token The token address (address(0) for Ether).\r\n    /// @param amount The value to add (in wei for Ether).\r\n    function deposit(address token, uint256 amount) external payable nonReentrant  {\r\n        if (token == NATIVE_TOKEN) {\r\n            require(msg.value == amount, \"Incorrect Ether amount\");\r\n        } else {\r\n            require(amount > 0, \"Deposit amount must be greater than zero\");\r\n            IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\r\n        }\r\n\r\n        totalBalances[token] += amount;\r\n        emit Deposit(msg.sender, token, amount);\r\n    }\r\n\r\n    /// @notice Claims the full allowed amount for a user during the round.\r\n    function claim(address token) external nonReentrant {\r\n        \r\n        if (block.timestamp < currentRound.start || block.timestamp > currentRound.end) {\r\n            revert NotWithinRound(block.timestamp, currentRound.start, currentRound.end);\r\n        }\r\n\r\n        uint256 userAllowedAmount = allowedAmounts[msg.sender][token];\r\n        require(userAllowedAmount > 0, \"No claimable amount\");\r\n        require(totalBalances[token] >= userAllowedAmount, \"Insufficient funds in jar\");\r\n\r\n        allowedAmounts[msg.sender][token] = 0;\r\n        totalBalances[token] -= userAllowedAmount;\r\n\r\n        if (token == NATIVE_TOKEN) {\r\n            (bool success, ) = msg.sender.call{value: userAllowedAmount}(\"\");\r\n            require(success, \"Ether transfer failed\");\r\n        } else {\r\n            IERC20(token).safeTransfer(msg.sender, userAllowedAmount);\r\n        }\r\n\r\n        emit Claimed(msg.sender, token, userAllowedAmount);\r\n    }\r\n\r\n    /// @notice Sets the allowed amount for a specific user and token.\r\n    ///\r\n    /// @param user The address of the user.\r\n    /// @param token The token address.\r\n    /// @param amount The allowed amount for the user.\r\n    function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {\r\n        require(user != address(0), \"Zero address user\");\r\n        allowedAmounts[user][token] = amount;\r\n        emit AllowedAmountUpdated(user, token, amount);\r\n    }\r\n\r\n    /// @notice Sets the allowed amount for multiple users for a given token in one call.\r\n    function bulkSetAllowedAmount(\r\n        address token,\r\n        address[] calldata users,\r\n        uint256[] calldata amounts\r\n    ) external onlyAdmin {\r\n        require(users.length == amounts.length, \"Mismatched array lengths\");\r\n        for (uint256 i = 0; i < users.length; i++) {\r\n            // You might want to check that the user is not a zero address if needed\r\n            allowedAmounts[users[i]][token] = amounts[i];\r\n            emit AllowedAmountUpdated(users[i], token, amounts[i]);\r\n        }\r\n    }\r\n\r\n    /// @notice Sets the round duration and metadata URI.\r\n    ///\r\n    /// @param start The start timestamp of the round.\r\n    /// @param end The end timestamp of the round.\r\n    /// @param metadataURI The IPFS URI for the round metadata.\r\n    function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {\r\n        require(start < end, \"Start time must be before end time\");\r\n        currentRound = Round(start, end, metadataURI);\r\n        emit RoundUpdated(start, end, metadataURI);\r\n    }\r\n\r\n    /// @notice Withdraws funds from the jar for a specific token or Ether.\r\n    ///\r\n    /// @param token The token address (address(0) for Ether).\r\n    /// @param amount The amount to withdraw.\r\n    function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {\r\n        require(amount > 0, \"Withdrawal amount must be greater than zero\");\r\n        require(totalBalances[token] >= amount, \"Insufficient funds\");\r\n\r\n        totalBalances[token] -= amount;\r\n\r\n        if (token == NATIVE_TOKEN) {\r\n            (bool success, ) = owner().call{value: amount}(\"\");\r\n            require(success, \"Ether transfer failed\");\r\n        } else {\r\n            IERC20(token).safeTransfer(owner(), amount);\r\n        }\r\n        emit Withdraw(owner(), token, amount);\r\n    }\r\n\r\n    /// @notice Allows Ether deposits directly via fallback function.\r\n    receive() external payable {\r\n        totalBalances[NATIVE_TOKEN] += msg.value;\r\n        emit Deposit(msg.sender, NATIVE_TOKEN, msg.value);\r\n    }\r\n\r\n    fallback() external payable {\r\n        // Typically revert to avoid accidental calls with data\r\n        revert(\"Sweetspot: use deposit()\");\r\n    }\r\n}\r\n"
			},
			"contracts/interface/IScorer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ninterface IScorer {\r\n    /**\r\n     * @dev Returns the score of a specific user for a given score type.\r\n     *      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).\r\n     *      The score is typically used to determine the user's eligibility for certain actions or claims.\r\n     *      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\r\n     *\r\n     * @param user The address of the user whose score is being queried.\r\n     * @param scoreType The type of score to query, represented as a `bytes32` hash.\r\n     * @return The score of the user as a uint256 value.\r\n     * @notice This function should be implemented in the contract that inherits the `IScorer` interface.\r\n     */\r\n    function score(address user, string memory scoreType) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Checks if the provided address is an admin.\r\n     * @param admin The address to check for admin status.\r\n     * @return True if the address is an admin, false otherwise.\r\n     * @notice This function should be implemented in the contract that inherits the `IScorer` interface.\r\n     */\r\n    function isAdmin(address admin) external view returns (bool);\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IScorer.sol": {
				"IScorer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "scoreType",
									"type": "string"
								}
							],
							"name": "score",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isAdmin(address)": {
								"details": "Checks if the provided address is an admin.",
								"params": {
									"admin": "The address to check for admin status."
								},
								"returns": {
									"_0": "True if the address is an admin, false otherwise."
								}
							},
							"score(address,string)": {
								"details": "Returns the score of a specific user for a given score type.      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.",
								"params": {
									"scoreType": "The type of score to query, represented as a `bytes32` hash.",
									"user": "The address of the user whose score is being queried."
								},
								"returns": {
									"_0": "The score of the user as a uint256 value."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isAdmin(address)": "24d7806c",
							"score(address,string)": "db4f1024"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"scoreType\",\"type\":\"string\"}],\"name\":\"score\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isAdmin(address)\":{\"details\":\"Checks if the provided address is an admin.\",\"params\":{\"admin\":\"The address to check for admin status.\"},\"returns\":{\"_0\":\"True if the address is an admin, false otherwise.\"}},\"score(address,string)\":{\"details\":\"Returns the score of a specific user for a given score type.      The score type is represented as a `bytes32` hash (e.g., keccak256(\\\"Trust\\\")).      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\",\"params\":{\"scoreType\":\"The type of score to query, represented as a `bytes32` hash.\",\"user\":\"The address of the user whose score is being queried.\"},\"returns\":{\"_0\":\"The score of the user as a uint256 value.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isAdmin(address)\":{\"notice\":\"This function should be implemented in the contract that inherits the `IScorer` interface.\"},\"score(address,string)\":{\"notice\":\"This function should be implemented in the contract that inherits the `IScorer` interface.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IScorer.sol\":\"IScorer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0x5bf83793e4290e7e68813647ee12b8abc4c538289be58958e32b7333b5b04e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f2ae1e6cfcef833b0424c313a99b39e98c418ba4fc037c081644ef42e598776\",\"dweb:/ipfs/QmSyyx1J5C2o3KCaWxDf3Gd9szsZGdzJCbe4u4SvdNXPjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"isAdmin(address)": {
								"notice": "This function should be implemented in the contract that inherits the `IScorer` interface."
							},
							"score(address,string)": {
								"notice": "This function should be implemented in the contract that inherits the `IScorer` interface."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/sweetspot.sol": {
				"sweetspot": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "currentTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								}
							],
							"name": "NotWithinRound",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "AllowedAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimant",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"name": "RoundUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "withdrawer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "NATIVE_TOKEN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowedAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "bulkSetAllowedAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentRound",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "start",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "end",
									"type": "uint64"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_scorer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scorer",
							"outputs": [
								{
									"internalType": "contract IScorer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setAllowedAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "start",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "end",
									"type": "uint64"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"name": "setRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "totalBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"deposit(address,uint256)": {
								"params": {
									"amount": "The value to add (in wei for Ether).",
									"token": "The token address (address(0) for Ether)."
								}
							},
							"initialize(address,address)": {
								"params": {
									"_scorer": "The scoring contract address.",
									"owner": "The owner address."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setAllowedAmount(address,address,uint256)": {
								"params": {
									"amount": "The allowed amount for the user.",
									"token": "The token address.",
									"user": "The address of the user."
								}
							},
							"setRound(uint64,uint64,string)": {
								"params": {
									"end": "The end timestamp of the round.",
									"metadataURI": "The IPFS URI for the round metadata.",
									"start": "The start timestamp of the round."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address,uint256)": {
								"params": {
									"amount": "The amount to withdraw.",
									"token": "The token address (address(0) for Ether)."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sweetspot.sol\":454:6704  contract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sweetspot.sol\":454:6704  contract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb807a3c4\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb807a3c4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe3e7c1f9\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9012c89\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9590e8a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xaee9c872\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x485cc955\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x85c758f7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8a19c8bc\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x1e83409a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x31f7d964\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x47e7ef24\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/sweetspot.sol\":6470:6479  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":6439:6452  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":6439:6466  totalBalances[NATIVE_TOKEN] */\n      0x00\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      dup1\n        /* \"contracts/sweetspot.sol\":6439:6466  totalBalances[NATIVE_TOKEN] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":6439:6479  totalBalances[NATIVE_TOKEN] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":6495:6539  Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":6503:6513  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":6495:6539  Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62\n        /* \"contracts/sweetspot.sol\":6529:6538  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":6495:6539  Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":454:6704  contract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {... */\n      stop\n    tag_2:\n        /* \"contracts/sweetspot.sol\":6659:6693  revert(\"Sweetspot: use deposit()\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/sweetspot.sol\":2971:3903  function claim(address token) external nonReentrant {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/sweetspot.sol\":566:615  address public constant NATIVE_TOKEN = address(0) */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":2412:2886  function deposit(address token, uint256 amount) external payable nonReentrant  {... */\n    tag_5:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/sweetspot.sol\":1977:2194  function initialize(address _scorer, address owner) external initializer {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/sweetspot.sol\":622:643  IScorer public scorer */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":883:908  Round public currentRound */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":5261:5539  function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/sweetspot.sol\":1097:1166  mapping(address => mapping(address => uint256)) public allowedAmounts */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":999:1047  mapping(address => uint256) public totalBalances */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":4135:4396  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/sweetspot.sol\":4495:5012  function bulkSetAllowedAmount(... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/sweetspot.sol\":5744:6322  function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"contracts/sweetspot.sol\":2971:3903  function claim(address token) external nonReentrant {... */\n    tag_35:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/sweetspot.sol\":3066:3078  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3066:3084  currentRound.start */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3048:3084  block.timestamp < currentRound.start */\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3048:3063  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":3048:3084  block.timestamp < currentRound.start */\n      lt\n        /* \"contracts/sweetspot.sol\":3048:3122  block.timestamp < currentRound.start || block.timestamp > currentRound.end */\n      dup1\n      tag_104\n      jumpi\n      pop\n        /* \"contracts/sweetspot.sol\":3106:3118  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3106:3122  currentRound.end */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3088:3122  block.timestamp > currentRound.end */\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3088:3103  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":3088:3122  block.timestamp > currentRound.end */\n      gt\n        /* \"contracts/sweetspot.sol\":3048:3122  block.timestamp < currentRound.start || block.timestamp > currentRound.end */\n    tag_104:\n        /* \"contracts/sweetspot.sol\":3044:3227  if (block.timestamp < currentRound.start || block.timestamp > currentRound.end) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"contracts/sweetspot.sol\":3161:3176  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":3178:3190  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3178:3196  currentRound.start */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3198:3210  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3198:3214  currentRound.end */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3146:3215  NotWithinRound(block.timestamp, currentRound.start, currentRound.end) */\n      mload(0x40)\n      0xfa7410d400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/sweetspot.sol\":3044:3227  if (block.timestamp < currentRound.start || block.timestamp > currentRound.end) {... */\n    tag_105:\n        /* \"contracts/sweetspot.sol\":3239:3264  uint256 userAllowedAmount */\n      0x00\n        /* \"contracts/sweetspot.sol\":3267:3281  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":3267:3293  allowedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3282:3292  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3267:3293  allowedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3267:3300  allowedAmounts[msg.sender][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3294:3299  token */\n      dup4\n        /* \"contracts/sweetspot.sol\":3267:3300  allowedAmounts[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":3239:3300  uint256 userAllowedAmount = allowedAmounts[msg.sender][token] */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":3339:3340  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3319:3336  userAllowedAmount */\n      dup2\n        /* \"contracts/sweetspot.sol\":3319:3340  userAllowedAmount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":3311:3364  require(userAllowedAmount > 0, \"No claimable amount\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/sweetspot.sol\":3407:3424  userAllowedAmount */\n      dup1\n        /* \"contracts/sweetspot.sol\":3383:3396  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":3383:3403  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3397:3402  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3383:3403  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":3383:3424  totalBalances[token] >= userAllowedAmount */\n      lt\n      iszero\n        /* \"contracts/sweetspot.sol\":3375:3454  require(totalBalances[token] >= userAllowedAmount, \"Insufficient funds in jar\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/sweetspot.sol\":3503:3504  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3467:3481  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":3467:3493  allowedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3482:3492  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3467:3493  allowedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3467:3500  allowedAmounts[msg.sender][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3494:3499  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3467:3500  allowedAmounts[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3467:3504  allowedAmounts[msg.sender][token] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":3539:3556  userAllowedAmount */\n      dup1\n        /* \"contracts/sweetspot.sol\":3515:3528  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":3515:3535  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3529:3534  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3515:3535  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":3515:3556  totalBalances[token] -= userAllowedAmount */\n      dup3\n      dup3\n      sload\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3573:3594  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3573:3578  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":3573:3594  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":3569:3833  if (token == NATIVE_TOKEN) {... */\n      tag_116\n      jumpi\n        /* \"contracts/sweetspot.sol\":3612:3624  bool success */\n      0x00\n        /* \"contracts/sweetspot.sol\":3630:3640  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3630:3645  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3653:3670  userAllowedAmount */\n      dup3\n        /* \"contracts/sweetspot.sol\":3630:3675  msg.sender.call{value: userAllowedAmount}(\"\") */\n      mload(0x40)\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_121\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_120)\n    tag_121:\n      0x60\n      swap2\n      pop\n    tag_120:\n      pop\n        /* \"contracts/sweetspot.sol\":3611:3675  (bool success, ) = msg.sender.call{value: userAllowedAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":3698:3705  success */\n      dup1\n        /* \"contracts/sweetspot.sol\":3690:3731  require(success, \"Ether transfer failed\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/sweetspot.sol\":3596:3743  {... */\n      pop\n        /* \"contracts/sweetspot.sol\":3569:3833  if (token == NATIVE_TOKEN) {... */\n      jump(tag_125)\n    tag_116:\n        /* \"contracts/sweetspot.sol\":3764:3821  IERC20(token).safeTransfer(msg.sender, userAllowedAmount) */\n      tag_126\n        /* \"contracts/sweetspot.sol\":3791:3801  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3803:3820  userAllowedAmount */\n      dup3\n        /* \"contracts/sweetspot.sol\":3771:3776  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3764:3790  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_127\n      swap1\n        /* \"contracts/sweetspot.sol\":3764:3821  IERC20(token).safeTransfer(msg.sender, userAllowedAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"contracts/sweetspot.sol\":3569:3833  if (token == NATIVE_TOKEN) {... */\n    tag_125:\n        /* \"contracts/sweetspot.sol\":3870:3875  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":3850:3895  Claimed(msg.sender, token, userAllowedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3858:3868  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3850:3895  Claimed(msg.sender, token, userAllowedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683\n        /* \"contracts/sweetspot.sol\":3877:3894  userAllowedAmount */\n      dup4\n        /* \"contracts/sweetspot.sol\":3850:3895  Claimed(msg.sender, token, userAllowedAmount) */\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":3023:3903  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/sweetspot.sol\":2971:3903  function claim(address token) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":566:615  address public constant NATIVE_TOKEN = address(0) */\n    tag_38:\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":566:615  address public constant NATIVE_TOKEN = address(0) */\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":2412:2886  function deposit(address token, uint256 amount) external payable nonReentrant  {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":2506:2527  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":2506:2511  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":2506:2527  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":2502:2786  if (token == NATIVE_TOKEN) {... */\n      tag_134\n      jumpi\n        /* \"contracts/sweetspot.sol\":2565:2571  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":2552:2561  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":2552:2571  msg.value == amount */\n      eq\n        /* \"contracts/sweetspot.sol\":2544:2598  require(msg.value == amount, \"Incorrect Ether amount\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/sweetspot.sol\":2502:2786  if (token == NATIVE_TOKEN) {... */\n      jump(tag_138)\n    tag_134:\n        /* \"contracts/sweetspot.sol\":2648:2649  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":2639:2645  amount */\n      dup2\n        /* \"contracts/sweetspot.sol\":2639:2649  amount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":2631:2694  require(amount > 0, \"Deposit amount must be greater than zero\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/sweetspot.sol\":2709:2774  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_142\n        /* \"contracts/sweetspot.sol\":2740:2750  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":2760:2764  this */\n      address\n        /* \"contracts/sweetspot.sol\":2767:2773  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":2716:2721  token */\n      dup6\n        /* \"contracts/sweetspot.sol\":2709:2739  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_143\n      swap1\n        /* \"contracts/sweetspot.sol\":2709:2774  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"contracts/sweetspot.sol\":2502:2786  if (token == NATIVE_TOKEN) {... */\n    tag_138:\n        /* \"contracts/sweetspot.sol\":2822:2828  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":2798:2811  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":2798:2818  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":2812:2817  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":2798:2818  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":2798:2828  totalBalances[token] += amount */\n      dup3\n      dup3\n      sload\n      tag_144\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_144:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":2864:2869  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":2844:2878  Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":2852:2862  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":2844:2878  Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62\n        /* \"contracts/sweetspot.sol\":2871:2877  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":2844:2878  Deposit(msg.sender, token, amount) */\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/sweetspot.sol\":2412:2886  function deposit(address token, uint256 amount) external payable nonReentrant  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":1977:2194  function initialize(address _scorer, address owner) external initializer {... */\n    tag_49:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_150\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_151\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_152\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_154:\n        /* \"contracts/sweetspot.sol\":2061:2082  __Ownable_init(owner) */\n      tag_156\n        /* \"contracts/sweetspot.sol\":2076:2081  owner */\n      dup7\n        /* \"contracts/sweetspot.sol\":2061:2075  __Ownable_init */\n      tag_157\n        /* \"contracts/sweetspot.sol\":2061:2082  __Ownable_init(owner) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/sweetspot.sol\":2126:2150  __ReentrancyGuard_init() */\n      tag_158\n        /* \"contracts/sweetspot.sol\":2126:2148  __ReentrancyGuard_init */\n      tag_159\n        /* \"contracts/sweetspot.sol\":2126:2150  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/sweetspot.sol\":2178:2185  _scorer */\n      dup7\n        /* \"contracts/sweetspot.sol\":2161:2167  scorer */\n      0x32\n      0x00\n        /* \"contracts/sweetspot.sol\":2161:2186  scorer = IScorer(_scorer) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/sweetspot.sol\":1977:2194  function initialize(address _scorer, address owner) external initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":622:643  IScorer public scorer */\n    tag_55:\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":883:908  Round public currentRound */\n    tag_60:\n      0x33\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_170\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":5261:5539  function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {... */\n    tag_71:\n        /* \"contracts/sweetspot.sol\":1725:1731  scorer */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":1725:1739  scorer.isAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24d7806c\n        /* \"contracts/sweetspot.sol\":1740:1750  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":1725:1751  scorer.isAdmin(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_179:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"contracts/sweetspot.sol\":1717:1778  require(scorer.isAdmin(msg.sender), \"Caller is not an admin\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/sweetspot.sol\":5380:5383  end */\n      dup2\n        /* \"contracts/sweetspot.sol\":5372:5383  start < end */\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":5372:5377  start */\n      dup4\n        /* \"contracts/sweetspot.sol\":5372:5383  start < end */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"contracts/sweetspot.sol\":5364:5422  require(start < end, \"Start time must be before end time\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/sweetspot.sol\":5448:5478  Round(start, end, metadataURI) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/sweetspot.sol\":5454:5459  start */\n      dup5\n        /* \"contracts/sweetspot.sol\":5448:5478  Round(start, end, metadataURI) */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sweetspot.sol\":5461:5464  end */\n      dup4\n        /* \"contracts/sweetspot.sol\":5448:5478  Round(start, end, metadataURI) */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sweetspot.sol\":5466:5477  metadataURI */\n      dup3\n        /* \"contracts/sweetspot.sol\":5448:5478  Round(start, end, metadataURI) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/sweetspot.sol\":5433:5445  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":5433:5478  currentRound = Round(start, end, metadataURI) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x08)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/sweetspot.sol\":5494:5531  RoundUpdated(start, end, metadataURI) */\n      0x09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13\n        /* \"contracts/sweetspot.sol\":5507:5512  start */\n      dup4\n        /* \"contracts/sweetspot.sol\":5514:5517  end */\n      dup4\n        /* \"contracts/sweetspot.sol\":5519:5530  metadataURI */\n      dup4\n        /* \"contracts/sweetspot.sol\":5494:5531  RoundUpdated(start, end, metadataURI) */\n      mload(0x40)\n      tag_193\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sweetspot.sol\":5261:5539  function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":1097:1166  mapping(address => mapping(address => uint256)) public allowedAmounts */\n    tag_75:\n      mstore(0x20, 0x36)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":999:1047  mapping(address => uint256) public totalBalances */\n    tag_80:\n      mstore(0x20, 0x35)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":4135:4396  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n    tag_86:\n        /* \"contracts/sweetspot.sol\":1725:1731  scorer */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":1725:1739  scorer.isAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24d7806c\n        /* \"contracts/sweetspot.sol\":1740:1750  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":1725:1751  scorer.isAdmin(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_196:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_199:\n        /* \"contracts/sweetspot.sol\":1717:1778  require(scorer.isAdmin(msg.sender), \"Caller is not an admin\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_186\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/sweetspot.sol\":4260:4261  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":4244:4262  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":4244:4248  user */\n      dup4\n        /* \"contracts/sweetspot.sol\":4244:4262  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":4236:4284  require(user != address(0), \"Zero address user\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/sweetspot.sol\":4325:4331  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":4295:4309  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":4295:4315  allowedAmounts[user] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4310:4314  user */\n      dup6\n        /* \"contracts/sweetspot.sol\":4295:4315  allowedAmounts[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4295:4322  allowedAmounts[user][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4316:4321  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":4295:4322  allowedAmounts[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4295:4331  allowedAmounts[user][token] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":4374:4379  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":4347:4388  AllowedAmountUpdated(user, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":4368:4372  user */\n      dup4\n        /* \"contracts/sweetspot.sol\":4347:4388  AllowedAmountUpdated(user, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2\n        /* \"contracts/sweetspot.sol\":4381:4387  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":4347:4388  AllowedAmountUpdated(user, token, amount) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":4135:4396  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":4495:5012  function bulkSetAllowedAmount(... */\n    tag_91:\n        /* \"contracts/sweetspot.sol\":1725:1731  scorer */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":1725:1739  scorer.isAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24d7806c\n        /* \"contracts/sweetspot.sol\":1740:1750  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":1725:1751  scorer.isAdmin(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_208:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_211\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_211:\n        /* \"contracts/sweetspot.sol\":1717:1778  require(scorer.isAdmin(msg.sender), \"Caller is not an admin\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_186\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/sweetspot.sol\":4682:4689  amounts */\n      dup2\n      dup2\n        /* \"contracts/sweetspot.sol\":4682:4696  amounts.length */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":4666:4671  users */\n      dup5\n      dup5\n        /* \"contracts/sweetspot.sol\":4666:4678  users.length */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":4666:4696  users.length == amounts.length */\n      eq\n        /* \"contracts/sweetspot.sol\":4658:4725  require(users.length == amounts.length, \"Mismatched array lengths\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/sweetspot.sol\":4741:4750  uint256 i */\n      0x00\n        /* \"contracts/sweetspot.sol\":4736:5005  for (uint256 i = 0; i < users.length; i++) {... */\n    tag_218:\n        /* \"contracts/sweetspot.sol\":4760:4765  users */\n      dup5\n      dup5\n        /* \"contracts/sweetspot.sol\":4760:4772  users.length */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":4756:4757  i */\n      dup2\n        /* \"contracts/sweetspot.sol\":4756:4772  i < users.length */\n      lt\n        /* \"contracts/sweetspot.sol\":4736:5005  for (uint256 i = 0; i < users.length; i++) {... */\n      iszero\n      tag_219\n      jumpi\n        /* \"contracts/sweetspot.sol\":4914:4921  amounts */\n      dup3\n      dup3\n        /* \"contracts/sweetspot.sol\":4922:4923  i */\n      dup3\n        /* \"contracts/sweetspot.sol\":4914:4924  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_221\n      jumpi\n      tag_222\n      tag_223\n      jump\t// in\n    tag_222:\n    tag_221:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/sweetspot.sol\":4880:4894  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":4880:4904  allowedAmounts[users[i]] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4895:4900  users */\n      dup8\n      dup8\n        /* \"contracts/sweetspot.sol\":4901:4902  i */\n      dup6\n        /* \"contracts/sweetspot.sol\":4895:4903  users[i] */\n      dup2\n      dup2\n      lt\n      tag_224\n      jumpi\n      tag_225\n      tag_223\n      jump\t// in\n    tag_225:\n    tag_224:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_226\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_226:\n        /* \"contracts/sweetspot.sol\":4880:4904  allowedAmounts[users[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4880:4911  allowedAmounts[users[i]][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4905:4910  token */\n      dup9\n        /* \"contracts/sweetspot.sol\":4880:4911  allowedAmounts[users[i]][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4880:4924  allowedAmounts[users[i]][token] = amounts[i] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":4975:4980  token */\n      dup6\n        /* \"contracts/sweetspot.sol\":4944:4993  AllowedAmountUpdated(users[i], token, amounts[i]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":4965:4970  users */\n      dup6\n      dup6\n        /* \"contracts/sweetspot.sol\":4971:4972  i */\n      dup4\n        /* \"contracts/sweetspot.sol\":4965:4973  users[i] */\n      dup2\n      dup2\n      lt\n      tag_227\n      jumpi\n      tag_228\n      tag_223\n      jump\t// in\n    tag_228:\n    tag_227:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_229\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_229:\n        /* \"contracts/sweetspot.sol\":4944:4993  AllowedAmountUpdated(users[i], token, amounts[i]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2\n        /* \"contracts/sweetspot.sol\":4982:4989  amounts */\n      dup6\n      dup6\n        /* \"contracts/sweetspot.sol\":4990:4991  i */\n      dup6\n        /* \"contracts/sweetspot.sol\":4982:4992  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_230\n      jumpi\n      tag_231\n      tag_223\n      jump\t// in\n    tag_231:\n    tag_230:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/sweetspot.sol\":4944:4993  AllowedAmountUpdated(users[i], token, amounts[i]) */\n      mload(0x40)\n      tag_232\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":4774:4777  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/sweetspot.sol\":4736:5005  for (uint256 i = 0; i < users.length; i++) {... */\n      jump(tag_218)\n    tag_219:\n      pop\n        /* \"contracts/sweetspot.sol\":4495:5012  function bulkSetAllowedAmount(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":5744:6322  function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/sweetspot.sol\":5854:5855  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":5845:5851  amount */\n      dup2\n        /* \"contracts/sweetspot.sol\":5845:5855  amount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":5837:5903  require(amount > 0, \"Withdrawal amount must be greater than zero\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"contracts/sweetspot.sol\":5946:5952  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":5922:5935  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":5922:5942  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":5936:5941  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":5922:5942  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":5922:5952  totalBalances[token] >= amount */\n      lt\n      iszero\n        /* \"contracts/sweetspot.sol\":5914:5975  require(totalBalances[token] >= amount, \"Insufficient funds\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"contracts/sweetspot.sol\":6012:6018  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":5988:6001  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":5988:6008  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":6002:6007  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":5988:6008  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":5988:6018  totalBalances[token] -= amount */\n      dup3\n      dup3\n      sload\n      tag_250\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_250:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":6035:6056  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":6035:6040  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":6035:6056  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":6031:6267  if (token == NATIVE_TOKEN) {... */\n      tag_251\n      jumpi\n        /* \"contracts/sweetspot.sol\":6074:6086  bool success */\n      0x00\n        /* \"contracts/sweetspot.sol\":6092:6099  owner() */\n      tag_252\n        /* \"contracts/sweetspot.sol\":6092:6097  owner */\n      tag_65\n        /* \"contracts/sweetspot.sol\":6092:6099  owner() */\n      jump\t// in\n    tag_252:\n        /* \"contracts/sweetspot.sol\":6092:6104  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":6112:6118  amount */\n      dup3\n        /* \"contracts/sweetspot.sol\":6092:6123  owner().call{value: amount}(\"\") */\n      mload(0x40)\n      tag_253\n      swap1\n      tag_118\n      jump\t// in\n    tag_253:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_256\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_255)\n    tag_256:\n      0x60\n      swap2\n      pop\n    tag_255:\n      pop\n        /* \"contracts/sweetspot.sol\":6073:6123  (bool success, ) = owner().call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":6146:6153  success */\n      dup1\n        /* \"contracts/sweetspot.sol\":6138:6179  require(success, \"Ether transfer failed\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_124\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"contracts/sweetspot.sol\":6058:6191  {... */\n      pop\n        /* \"contracts/sweetspot.sol\":6031:6267  if (token == NATIVE_TOKEN) {... */\n      jump(tag_259)\n    tag_251:\n        /* \"contracts/sweetspot.sol\":6212:6255  IERC20(token).safeTransfer(owner(), amount) */\n      tag_260\n        /* \"contracts/sweetspot.sol\":6239:6246  owner() */\n      tag_261\n        /* \"contracts/sweetspot.sol\":6239:6244  owner */\n      tag_65\n        /* \"contracts/sweetspot.sol\":6239:6246  owner() */\n      jump\t// in\n    tag_261:\n        /* \"contracts/sweetspot.sol\":6248:6254  amount */\n      dup3\n        /* \"contracts/sweetspot.sol\":6219:6224  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":6212:6238  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_127\n      swap1\n        /* \"contracts/sweetspot.sol\":6212:6255  IERC20(token).safeTransfer(owner(), amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_260:\n        /* \"contracts/sweetspot.sol\":6031:6267  if (token == NATIVE_TOKEN) {... */\n    tag_259:\n        /* \"contracts/sweetspot.sol\":6300:6305  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":6282:6314  Withdraw(owner(), token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":6291:6298  owner() */\n      tag_262\n        /* \"contracts/sweetspot.sol\":6291:6296  owner */\n      tag_65\n        /* \"contracts/sweetspot.sol\":6291:6298  owner() */\n      jump\t// in\n    tag_262:\n        /* \"contracts/sweetspot.sol\":6282:6314  Withdraw(owner(), token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb\n        /* \"contracts/sweetspot.sol\":6307:6313  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":6282:6314  Withdraw(owner(), token, amount) */\n      mload(0x40)\n      tag_263\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_264:\n        /* \"contracts/sweetspot.sol\":5744:6322  function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2740  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2752  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2725:2788  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2870  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2881  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_271\n      swap3\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3081  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3096  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1817  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1833:1837  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1841  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1843:1848  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_277\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_281\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_287\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1991  __ReentrancyGuard_init_unchained */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_292\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_293\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_296\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_293\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_299\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_304)\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_282:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_308\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_312\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_290:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_318\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2093  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2108  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_322\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_323:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_324:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x11\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:467   */\n    tag_24:\n        /* \"#utility.yul\":316:319   */\n      0x00\n        /* \"#utility.yul\":335:355   */\n      tag_419\n        /* \"#utility.yul\":353:354   */\n      dup3\n        /* \"#utility.yul\":335:355   */\n      tag_323\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":330:355   */\n      swap2\n      pop\n        /* \"#utility.yul\":369:389   */\n      tag_420\n        /* \"#utility.yul\":387:388   */\n      dup4\n        /* \"#utility.yul\":369:389   */\n      tag_323\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":364:389   */\n      swap3\n      pop\n        /* \"#utility.yul\":412:413   */\n      dup3\n        /* \"#utility.yul\":409:410   */\n      dup3\n        /* \"#utility.yul\":405:414   */\n      add\n        /* \"#utility.yul\":398:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:436   */\n      dup1\n        /* \"#utility.yul\":430:431   */\n      dup3\n        /* \"#utility.yul\":427:437   */\n      gt\n        /* \"#utility.yul\":424:460   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":440:458   */\n      tag_422\n      tag_324\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":424:460   */\n    tag_421:\n        /* \"#utility.yul\":276:467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":473:591   */\n    tag_325:\n        /* \"#utility.yul\":560:584   */\n      tag_424\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":560:584   */\n      tag_323\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":555:558   */\n      dup3\n        /* \"#utility.yul\":548:585   */\n      mstore\n        /* \"#utility.yul\":473:591   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":597:819   */\n    tag_26:\n        /* \"#utility.yul\":690:694   */\n      0x00\n        /* \"#utility.yul\":728:730   */\n      0x20\n        /* \"#utility.yul\":717:726   */\n      dup3\n        /* \"#utility.yul\":713:731   */\n      add\n        /* \"#utility.yul\":705:731   */\n      swap1\n      pop\n        /* \"#utility.yul\":741:812   */\n      tag_426\n        /* \"#utility.yul\":809:810   */\n      0x00\n        /* \"#utility.yul\":798:807   */\n      dup4\n        /* \"#utility.yul\":794:811   */\n      add\n        /* \"#utility.yul\":785:791   */\n      dup5\n        /* \"#utility.yul\":741:812   */\n      tag_325\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":597:819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":825:994   */\n    tag_326:\n        /* \"#utility.yul\":909:920   */\n      0x00\n        /* \"#utility.yul\":943:949   */\n      dup3\n        /* \"#utility.yul\":938:941   */\n      dup3\n        /* \"#utility.yul\":931:950   */\n      mstore\n        /* \"#utility.yul\":983:987   */\n      0x20\n        /* \"#utility.yul\":978:981   */\n      dup3\n        /* \"#utility.yul\":974:988   */\n      add\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":825:994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1000:1174   */\n    tag_327:\n        /* \"#utility.yul\":1140:1166   */\n      0x537765657473706f743a20757365206465706f73697428290000000000000000\n        /* \"#utility.yul\":1136:1137   */\n      0x00\n        /* \"#utility.yul\":1128:1134   */\n      dup3\n        /* \"#utility.yul\":1124:1138   */\n      add\n        /* \"#utility.yul\":1117:1167   */\n      mstore\n        /* \"#utility.yul\":1000:1174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1180:1546   */\n    tag_328:\n        /* \"#utility.yul\":1322:1325   */\n      0x00\n        /* \"#utility.yul\":1343:1410   */\n      tag_430\n        /* \"#utility.yul\":1407:1409   */\n      0x18\n        /* \"#utility.yul\":1402:1405   */\n      dup4\n        /* \"#utility.yul\":1343:1410   */\n      tag_326\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":1336:1410   */\n      swap2\n      pop\n        /* \"#utility.yul\":1419:1512   */\n      tag_431\n        /* \"#utility.yul\":1508:1511   */\n      dup3\n        /* \"#utility.yul\":1419:1512   */\n      tag_327\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":1537:1539   */\n      0x20\n        /* \"#utility.yul\":1532:1535   */\n      dup3\n        /* \"#utility.yul\":1528:1540   */\n      add\n        /* \"#utility.yul\":1521:1540   */\n      swap1\n      pop\n        /* \"#utility.yul\":1180:1546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1552:1971   */\n    tag_30:\n        /* \"#utility.yul\":1718:1722   */\n      0x00\n        /* \"#utility.yul\":1756:1758   */\n      0x20\n        /* \"#utility.yul\":1745:1754   */\n      dup3\n        /* \"#utility.yul\":1741:1759   */\n      add\n        /* \"#utility.yul\":1733:1759   */\n      swap1\n      pop\n        /* \"#utility.yul\":1805:1814   */\n      dup2\n        /* \"#utility.yul\":1799:1803   */\n      dup2\n        /* \"#utility.yul\":1795:1815   */\n      sub\n        /* \"#utility.yul\":1791:1792   */\n      0x00\n        /* \"#utility.yul\":1780:1789   */\n      dup4\n        /* \"#utility.yul\":1776:1793   */\n      add\n        /* \"#utility.yul\":1769:1816   */\n      mstore\n        /* \"#utility.yul\":1833:1964   */\n      tag_433\n        /* \"#utility.yul\":1959:1963   */\n      dup2\n        /* \"#utility.yul\":1833:1964   */\n      tag_328\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":1825:1964   */\n      swap1\n      pop\n        /* \"#utility.yul\":1552:1971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1977:2052   */\n    tag_329:\n        /* \"#utility.yul\":2010:2016   */\n      0x00\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2037:2046   */\n      mload\n        /* \"#utility.yul\":2027:2046   */\n      swap1\n      pop\n        /* \"#utility.yul\":1977:2052   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2058:2175   */\n    tag_330:\n        /* \"#utility.yul\":2167:2168   */\n      0x00\n        /* \"#utility.yul\":2164:2165   */\n      dup1\n        /* \"#utility.yul\":2157:2169   */\n      revert\n        /* \"#utility.yul\":2181:2298   */\n    tag_331:\n        /* \"#utility.yul\":2290:2291   */\n      0x00\n        /* \"#utility.yul\":2287:2288   */\n      dup1\n        /* \"#utility.yul\":2280:2292   */\n      revert\n        /* \"#utility.yul\":2304:2430   */\n    tag_332:\n        /* \"#utility.yul\":2341:2348   */\n      0x00\n        /* \"#utility.yul\":2381:2423   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2374:2379   */\n      dup3\n        /* \"#utility.yul\":2370:2424   */\n      and\n        /* \"#utility.yul\":2359:2424   */\n      swap1\n      pop\n        /* \"#utility.yul\":2304:2430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2436:2532   */\n    tag_333:\n        /* \"#utility.yul\":2473:2480   */\n      0x00\n        /* \"#utility.yul\":2502:2526   */\n      tag_439\n        /* \"#utility.yul\":2520:2525   */\n      dup3\n        /* \"#utility.yul\":2502:2526   */\n      tag_332\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":2491:2526   */\n      swap1\n      pop\n        /* \"#utility.yul\":2436:2532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2538:2660   */\n    tag_334:\n        /* \"#utility.yul\":2611:2635   */\n      tag_441\n        /* \"#utility.yul\":2629:2634   */\n      dup2\n        /* \"#utility.yul\":2611:2635   */\n      tag_333\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":2604:2609   */\n      dup2\n        /* \"#utility.yul\":2601:2636   */\n      eq\n        /* \"#utility.yul\":2591:2654   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":2650:2651   */\n      0x00\n        /* \"#utility.yul\":2647:2648   */\n      dup1\n        /* \"#utility.yul\":2640:2652   */\n      revert\n        /* \"#utility.yul\":2591:2654   */\n    tag_442:\n        /* \"#utility.yul\":2538:2660   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2666:2805   */\n    tag_335:\n        /* \"#utility.yul\":2712:2717   */\n      0x00\n        /* \"#utility.yul\":2750:2756   */\n      dup2\n        /* \"#utility.yul\":2737:2757   */\n      calldataload\n        /* \"#utility.yul\":2728:2757   */\n      swap1\n      pop\n        /* \"#utility.yul\":2766:2799   */\n      tag_444\n        /* \"#utility.yul\":2793:2798   */\n      dup2\n        /* \"#utility.yul\":2766:2799   */\n      tag_334\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":2666:2805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2811:3140   */\n    tag_34:\n        /* \"#utility.yul\":2870:2876   */\n      0x00\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2907:2916   */\n      dup3\n        /* \"#utility.yul\":2898:2905   */\n      dup5\n        /* \"#utility.yul\":2894:2917   */\n      sub\n        /* \"#utility.yul\":2890:2922   */\n      slt\n        /* \"#utility.yul\":2887:3006   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":2925:3004   */\n      tag_447\n      tag_330\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":2887:3006   */\n    tag_446:\n        /* \"#utility.yul\":3045:3046   */\n      0x00\n        /* \"#utility.yul\":3070:3123   */\n      tag_448\n        /* \"#utility.yul\":3115:3122   */\n      dup5\n        /* \"#utility.yul\":3106:3112   */\n      dup3\n        /* \"#utility.yul\":3095:3104   */\n      dup6\n        /* \"#utility.yul\":3091:3113   */\n      add\n        /* \"#utility.yul\":3070:3123   */\n      tag_335\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":3060:3123   */\n      swap2\n      pop\n        /* \"#utility.yul\":3016:3133   */\n      pop\n        /* \"#utility.yul\":2811:3140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3146:3264   */\n    tag_336:\n        /* \"#utility.yul\":3233:3257   */\n      tag_450\n        /* \"#utility.yul\":3251:3256   */\n      dup2\n        /* \"#utility.yul\":3233:3257   */\n      tag_333\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3228:3231   */\n      dup3\n        /* \"#utility.yul\":3221:3258   */\n      mstore\n        /* \"#utility.yul\":3146:3264   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3270:3492   */\n    tag_40:\n        /* \"#utility.yul\":3363:3367   */\n      0x00\n        /* \"#utility.yul\":3401:3403   */\n      0x20\n        /* \"#utility.yul\":3390:3399   */\n      dup3\n        /* \"#utility.yul\":3386:3404   */\n      add\n        /* \"#utility.yul\":3378:3404   */\n      swap1\n      pop\n        /* \"#utility.yul\":3414:3485   */\n      tag_452\n        /* \"#utility.yul\":3482:3483   */\n      0x00\n        /* \"#utility.yul\":3471:3480   */\n      dup4\n        /* \"#utility.yul\":3467:3484   */\n      add\n        /* \"#utility.yul\":3458:3464   */\n      dup5\n        /* \"#utility.yul\":3414:3485   */\n      tag_336\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":3270:3492   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3498:3620   */\n    tag_337:\n        /* \"#utility.yul\":3571:3595   */\n      tag_454\n        /* \"#utility.yul\":3589:3594   */\n      dup2\n        /* \"#utility.yul\":3571:3595   */\n      tag_323\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":3564:3569   */\n      dup2\n        /* \"#utility.yul\":3561:3596   */\n      eq\n        /* \"#utility.yul\":3551:3614   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":3610:3611   */\n      0x00\n        /* \"#utility.yul\":3607:3608   */\n      dup1\n        /* \"#utility.yul\":3600:3612   */\n      revert\n        /* \"#utility.yul\":3551:3614   */\n    tag_455:\n        /* \"#utility.yul\":3498:3620   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3626:3765   */\n    tag_338:\n        /* \"#utility.yul\":3672:3677   */\n      0x00\n        /* \"#utility.yul\":3710:3716   */\n      dup2\n        /* \"#utility.yul\":3697:3717   */\n      calldataload\n        /* \"#utility.yul\":3688:3717   */\n      swap1\n      pop\n        /* \"#utility.yul\":3726:3759   */\n      tag_457\n        /* \"#utility.yul\":3753:3758   */\n      dup2\n        /* \"#utility.yul\":3726:3759   */\n      tag_337\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":3626:3765   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3771:4245   */\n    tag_43:\n        /* \"#utility.yul\":3839:3845   */\n      0x00\n        /* \"#utility.yul\":3847:3853   */\n      dup1\n        /* \"#utility.yul\":3896:3898   */\n      0x40\n        /* \"#utility.yul\":3884:3893   */\n      dup4\n        /* \"#utility.yul\":3875:3882   */\n      dup6\n        /* \"#utility.yul\":3871:3894   */\n      sub\n        /* \"#utility.yul\":3867:3899   */\n      slt\n        /* \"#utility.yul\":3864:3983   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":3902:3981   */\n      tag_460\n      tag_330\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3864:3983   */\n    tag_459:\n        /* \"#utility.yul\":4022:4023   */\n      0x00\n        /* \"#utility.yul\":4047:4100   */\n      tag_461\n        /* \"#utility.yul\":4092:4099   */\n      dup6\n        /* \"#utility.yul\":4083:4089   */\n      dup3\n        /* \"#utility.yul\":4072:4081   */\n      dup7\n        /* \"#utility.yul\":4068:4090   */\n      add\n        /* \"#utility.yul\":4047:4100   */\n      tag_335\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":4037:4100   */\n      swap3\n      pop\n        /* \"#utility.yul\":3993:4110   */\n      pop\n        /* \"#utility.yul\":4149:4151   */\n      0x20\n        /* \"#utility.yul\":4175:4228   */\n      tag_462\n        /* \"#utility.yul\":4220:4227   */\n      dup6\n        /* \"#utility.yul\":4211:4217   */\n      dup3\n        /* \"#utility.yul\":4200:4209   */\n      dup7\n        /* \"#utility.yul\":4196:4218   */\n      add\n        /* \"#utility.yul\":4175:4228   */\n      tag_338\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":4165:4228   */\n      swap2\n      pop\n        /* \"#utility.yul\":4120:4238   */\n      pop\n        /* \"#utility.yul\":3771:4245   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4251:4725   */\n    tag_48:\n        /* \"#utility.yul\":4319:4325   */\n      0x00\n        /* \"#utility.yul\":4327:4333   */\n      dup1\n        /* \"#utility.yul\":4376:4378   */\n      0x40\n        /* \"#utility.yul\":4364:4373   */\n      dup4\n        /* \"#utility.yul\":4355:4362   */\n      dup6\n        /* \"#utility.yul\":4351:4374   */\n      sub\n        /* \"#utility.yul\":4347:4379   */\n      slt\n        /* \"#utility.yul\":4344:4463   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":4382:4461   */\n      tag_465\n      tag_330\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4344:4463   */\n    tag_464:\n        /* \"#utility.yul\":4502:4503   */\n      0x00\n        /* \"#utility.yul\":4527:4580   */\n      tag_466\n        /* \"#utility.yul\":4572:4579   */\n      dup6\n        /* \"#utility.yul\":4563:4569   */\n      dup3\n        /* \"#utility.yul\":4552:4561   */\n      dup7\n        /* \"#utility.yul\":4548:4570   */\n      add\n        /* \"#utility.yul\":4527:4580   */\n      tag_335\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":4517:4580   */\n      swap3\n      pop\n        /* \"#utility.yul\":4473:4590   */\n      pop\n        /* \"#utility.yul\":4629:4631   */\n      0x20\n        /* \"#utility.yul\":4655:4708   */\n      tag_467\n        /* \"#utility.yul\":4700:4707   */\n      dup6\n        /* \"#utility.yul\":4691:4697   */\n      dup3\n        /* \"#utility.yul\":4680:4689   */\n      dup7\n        /* \"#utility.yul\":4676:4698   */\n      add\n        /* \"#utility.yul\":4655:4708   */\n      tag_335\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":4645:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4600:4718   */\n      pop\n        /* \"#utility.yul\":4251:4725   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4731:4791   */\n    tag_339:\n        /* \"#utility.yul\":4759:4762   */\n      0x00\n        /* \"#utility.yul\":4780:4785   */\n      dup2\n        /* \"#utility.yul\":4773:4785   */\n      swap1\n      pop\n        /* \"#utility.yul\":4731:4791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4797:4939   */\n    tag_340:\n        /* \"#utility.yul\":4847:4856   */\n      0x00\n        /* \"#utility.yul\":4880:4933   */\n      tag_470\n        /* \"#utility.yul\":4898:4932   */\n      tag_471\n        /* \"#utility.yul\":4907:4931   */\n      tag_472\n        /* \"#utility.yul\":4925:4930   */\n      dup5\n        /* \"#utility.yul\":4907:4931   */\n      tag_332\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":4898:4932   */\n      tag_339\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4880:4933   */\n      tag_332\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":4867:4933   */\n      swap1\n      pop\n        /* \"#utility.yul\":4797:4939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4945:5071   */\n    tag_341:\n        /* \"#utility.yul\":4995:5004   */\n      0x00\n        /* \"#utility.yul\":5028:5065   */\n      tag_474\n        /* \"#utility.yul\":5059:5064   */\n      dup3\n        /* \"#utility.yul\":5028:5065   */\n      tag_340\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5015:5065   */\n      swap1\n      pop\n        /* \"#utility.yul\":4945:5071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5077:5219   */\n    tag_342:\n        /* \"#utility.yul\":5143:5152   */\n      0x00\n        /* \"#utility.yul\":5176:5213   */\n      tag_476\n        /* \"#utility.yul\":5207:5212   */\n      dup3\n        /* \"#utility.yul\":5176:5213   */\n      tag_341\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":5163:5213   */\n      swap1\n      pop\n        /* \"#utility.yul\":5077:5219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5225:5388   */\n    tag_343:\n        /* \"#utility.yul\":5328:5381   */\n      tag_478\n        /* \"#utility.yul\":5375:5380   */\n      dup2\n        /* \"#utility.yul\":5328:5381   */\n      tag_342\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":5323:5326   */\n      dup3\n        /* \"#utility.yul\":5316:5382   */\n      mstore\n        /* \"#utility.yul\":5225:5388   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5394:5648   */\n    tag_57:\n        /* \"#utility.yul\":5503:5507   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5530:5539   */\n      dup3\n        /* \"#utility.yul\":5526:5544   */\n      add\n        /* \"#utility.yul\":5518:5544   */\n      swap1\n      pop\n        /* \"#utility.yul\":5554:5641   */\n      tag_480\n        /* \"#utility.yul\":5638:5639   */\n      0x00\n        /* \"#utility.yul\":5627:5636   */\n      dup4\n        /* \"#utility.yul\":5623:5640   */\n      add\n        /* \"#utility.yul\":5614:5620   */\n      dup5\n        /* \"#utility.yul\":5554:5641   */\n      tag_343\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":5394:5648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5654:5755   */\n    tag_344:\n        /* \"#utility.yul\":5690:5697   */\n      0x00\n        /* \"#utility.yul\":5730:5748   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5723:5728   */\n      dup3\n        /* \"#utility.yul\":5719:5749   */\n      and\n        /* \"#utility.yul\":5708:5749   */\n      swap1\n      pop\n        /* \"#utility.yul\":5654:5755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5761:5876   */\n    tag_345:\n        /* \"#utility.yul\":5846:5869   */\n      tag_483\n        /* \"#utility.yul\":5863:5868   */\n      dup2\n        /* \"#utility.yul\":5846:5869   */\n      tag_344\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":5841:5844   */\n      dup3\n        /* \"#utility.yul\":5834:5870   */\n      mstore\n        /* \"#utility.yul\":5761:5876   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5882:5981   */\n    tag_346:\n        /* \"#utility.yul\":5934:5940   */\n      0x00\n        /* \"#utility.yul\":5968:5973   */\n      dup2\n        /* \"#utility.yul\":5962:5974   */\n      mload\n        /* \"#utility.yul\":5952:5974   */\n      swap1\n      pop\n        /* \"#utility.yul\":5882:5981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5987:6126   */\n    tag_347:\n        /* \"#utility.yul\":6076:6082   */\n      dup3\n        /* \"#utility.yul\":6071:6074   */\n      dup2\n        /* \"#utility.yul\":6066:6069   */\n      dup4\n        /* \"#utility.yul\":6060:6083   */\n      mcopy\n        /* \"#utility.yul\":6117:6118   */\n      0x00\n        /* \"#utility.yul\":6108:6114   */\n      dup4\n        /* \"#utility.yul\":6103:6106   */\n      dup4\n        /* \"#utility.yul\":6099:6115   */\n      add\n        /* \"#utility.yul\":6092:6119   */\n      mstore\n        /* \"#utility.yul\":5987:6126   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6132:6234   */\n    tag_348:\n        /* \"#utility.yul\":6173:6179   */\n      0x00\n        /* \"#utility.yul\":6224:6226   */\n      0x1f\n        /* \"#utility.yul\":6220:6227   */\n      not\n        /* \"#utility.yul\":6215:6217   */\n      0x1f\n        /* \"#utility.yul\":6208:6213   */\n      dup4\n        /* \"#utility.yul\":6204:6218   */\n      add\n        /* \"#utility.yul\":6200:6228   */\n      and\n        /* \"#utility.yul\":6190:6228   */\n      swap1\n      pop\n        /* \"#utility.yul\":6132:6234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6240:6617   */\n    tag_349:\n        /* \"#utility.yul\":6328:6331   */\n      0x00\n        /* \"#utility.yul\":6356:6395   */\n      tag_488\n        /* \"#utility.yul\":6389:6394   */\n      dup3\n        /* \"#utility.yul\":6356:6395   */\n      tag_346\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":6411:6482   */\n      tag_489\n        /* \"#utility.yul\":6475:6481   */\n      dup2\n        /* \"#utility.yul\":6470:6473   */\n      dup6\n        /* \"#utility.yul\":6411:6482   */\n      tag_326\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":6404:6482   */\n      swap4\n      pop\n        /* \"#utility.yul\":6491:6556   */\n      tag_490\n        /* \"#utility.yul\":6549:6555   */\n      dup2\n        /* \"#utility.yul\":6544:6547   */\n      dup6\n        /* \"#utility.yul\":6537:6541   */\n      0x20\n        /* \"#utility.yul\":6530:6535   */\n      dup7\n        /* \"#utility.yul\":6526:6542   */\n      add\n        /* \"#utility.yul\":6491:6556   */\n      tag_347\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":6581:6610   */\n      tag_491\n        /* \"#utility.yul\":6603:6609   */\n      dup2\n        /* \"#utility.yul\":6581:6610   */\n      tag_348\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":6576:6579   */\n      dup5\n        /* \"#utility.yul\":6572:6611   */\n      add\n        /* \"#utility.yul\":6565:6611   */\n      swap2\n      pop\n        /* \"#utility.yul\":6332:6617   */\n      pop\n        /* \"#utility.yul\":6240:6617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6623:7148   */\n    tag_62:\n        /* \"#utility.yul\":6788:6792   */\n      0x00\n        /* \"#utility.yul\":6826:6828   */\n      0x60\n        /* \"#utility.yul\":6815:6824   */\n      dup3\n        /* \"#utility.yul\":6811:6829   */\n      add\n        /* \"#utility.yul\":6803:6829   */\n      swap1\n      pop\n        /* \"#utility.yul\":6839:6908   */\n      tag_493\n        /* \"#utility.yul\":6905:6906   */\n      0x00\n        /* \"#utility.yul\":6894:6903   */\n      dup4\n        /* \"#utility.yul\":6890:6907   */\n      add\n        /* \"#utility.yul\":6881:6887   */\n      dup7\n        /* \"#utility.yul\":6839:6908   */\n      tag_345\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":6918:6988   */\n      tag_494\n        /* \"#utility.yul\":6984:6986   */\n      0x20\n        /* \"#utility.yul\":6973:6982   */\n      dup4\n        /* \"#utility.yul\":6969:6987   */\n      add\n        /* \"#utility.yul\":6960:6966   */\n      dup6\n        /* \"#utility.yul\":6918:6988   */\n      tag_345\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":7035:7044   */\n      dup2\n        /* \"#utility.yul\":7029:7033   */\n      dup2\n        /* \"#utility.yul\":7025:7045   */\n      sub\n        /* \"#utility.yul\":7020:7022   */\n      0x40\n        /* \"#utility.yul\":7009:7018   */\n      dup4\n        /* \"#utility.yul\":7005:7023   */\n      add\n        /* \"#utility.yul\":6998:7046   */\n      mstore\n        /* \"#utility.yul\":7063:7141   */\n      tag_495\n        /* \"#utility.yul\":7136:7140   */\n      dup2\n        /* \"#utility.yul\":7127:7133   */\n      dup5\n        /* \"#utility.yul\":7063:7141   */\n      tag_349\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":7055:7141   */\n      swap1\n      pop\n        /* \"#utility.yul\":6623:7148   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7154:7274   */\n    tag_350:\n        /* \"#utility.yul\":7226:7249   */\n      tag_497\n        /* \"#utility.yul\":7243:7248   */\n      dup2\n        /* \"#utility.yul\":7226:7249   */\n      tag_344\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":7219:7224   */\n      dup2\n        /* \"#utility.yul\":7216:7250   */\n      eq\n        /* \"#utility.yul\":7206:7268   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":7264:7265   */\n      0x00\n        /* \"#utility.yul\":7261:7262   */\n      dup1\n        /* \"#utility.yul\":7254:7266   */\n      revert\n        /* \"#utility.yul\":7206:7268   */\n    tag_498:\n        /* \"#utility.yul\":7154:7274   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7280:7417   */\n    tag_351:\n        /* \"#utility.yul\":7325:7330   */\n      0x00\n        /* \"#utility.yul\":7363:7369   */\n      dup2\n        /* \"#utility.yul\":7350:7370   */\n      calldataload\n        /* \"#utility.yul\":7341:7370   */\n      swap1\n      pop\n        /* \"#utility.yul\":7379:7411   */\n      tag_500\n        /* \"#utility.yul\":7405:7410   */\n      dup2\n        /* \"#utility.yul\":7379:7411   */\n      tag_350\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":7280:7417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7423:7540   */\n    tag_352:\n        /* \"#utility.yul\":7532:7533   */\n      0x00\n        /* \"#utility.yul\":7529:7530   */\n      dup1\n        /* \"#utility.yul\":7522:7534   */\n      revert\n        /* \"#utility.yul\":7546:7663   */\n    tag_353:\n        /* \"#utility.yul\":7655:7656   */\n      0x00\n        /* \"#utility.yul\":7652:7653   */\n      dup1\n        /* \"#utility.yul\":7645:7657   */\n      revert\n        /* \"#utility.yul\":7669:7849   */\n    tag_354:\n        /* \"#utility.yul\":7717:7794   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7714:7715   */\n      0x00\n        /* \"#utility.yul\":7707:7795   */\n      mstore\n        /* \"#utility.yul\":7814:7818   */\n      0x41\n        /* \"#utility.yul\":7811:7812   */\n      0x04\n        /* \"#utility.yul\":7804:7819   */\n      mstore\n        /* \"#utility.yul\":7838:7842   */\n      0x24\n        /* \"#utility.yul\":7835:7836   */\n      0x00\n        /* \"#utility.yul\":7828:7843   */\n      revert\n        /* \"#utility.yul\":7855:8136   */\n    tag_355:\n        /* \"#utility.yul\":7938:7965   */\n      tag_505\n        /* \"#utility.yul\":7960:7964   */\n      dup3\n        /* \"#utility.yul\":7938:7965   */\n      tag_348\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":7930:7936   */\n      dup2\n        /* \"#utility.yul\":7926:7966   */\n      add\n        /* \"#utility.yul\":8068:8074   */\n      dup2\n        /* \"#utility.yul\":8056:8066   */\n      dup2\n        /* \"#utility.yul\":8053:8075   */\n      lt\n        /* \"#utility.yul\":8032:8050   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8020:8030   */\n      dup3\n        /* \"#utility.yul\":8017:8051   */\n      gt\n        /* \"#utility.yul\":8014:8076   */\n      or\n        /* \"#utility.yul\":8011:8099   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":8079:8097   */\n      tag_507\n      tag_354\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":8011:8099   */\n    tag_506:\n        /* \"#utility.yul\":8119:8129   */\n      dup1\n        /* \"#utility.yul\":8115:8117   */\n      0x40\n        /* \"#utility.yul\":8108:8130   */\n      mstore\n        /* \"#utility.yul\":7898:8136   */\n      pop\n        /* \"#utility.yul\":7855:8136   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8142:8271   */\n    tag_356:\n        /* \"#utility.yul\":8176:8182   */\n      0x00\n        /* \"#utility.yul\":8203:8223   */\n      tag_509\n      tag_329\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":8193:8223   */\n      swap1\n      pop\n        /* \"#utility.yul\":8232:8265   */\n      tag_510\n        /* \"#utility.yul\":8260:8264   */\n      dup3\n        /* \"#utility.yul\":8252:8258   */\n      dup3\n        /* \"#utility.yul\":8232:8265   */\n      tag_355\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":8142:8271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8277:8585   */\n    tag_357:\n        /* \"#utility.yul\":8339:8343   */\n      0x00\n        /* \"#utility.yul\":8429:8447   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8421:8427   */\n      dup3\n        /* \"#utility.yul\":8418:8448   */\n      gt\n        /* \"#utility.yul\":8415:8471   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":8451:8469   */\n      tag_513\n      tag_354\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":8415:8471   */\n    tag_512:\n        /* \"#utility.yul\":8489:8518   */\n      tag_514\n        /* \"#utility.yul\":8511:8517   */\n      dup3\n        /* \"#utility.yul\":8489:8518   */\n      tag_348\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":8481:8518   */\n      swap1\n      pop\n        /* \"#utility.yul\":8573:8577   */\n      0x20\n        /* \"#utility.yul\":8567:8571   */\n      dup2\n        /* \"#utility.yul\":8563:8578   */\n      add\n        /* \"#utility.yul\":8555:8578   */\n      swap1\n      pop\n        /* \"#utility.yul\":8277:8585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8591:8739   */\n    tag_358:\n        /* \"#utility.yul\":8689:8695   */\n      dup3\n        /* \"#utility.yul\":8684:8687   */\n      dup2\n        /* \"#utility.yul\":8679:8682   */\n      dup4\n        /* \"#utility.yul\":8666:8696   */\n      calldatacopy\n        /* \"#utility.yul\":8730:8731   */\n      0x00\n        /* \"#utility.yul\":8721:8727   */\n      dup4\n        /* \"#utility.yul\":8716:8719   */\n      dup4\n        /* \"#utility.yul\":8712:8728   */\n      add\n        /* \"#utility.yul\":8705:8732   */\n      mstore\n        /* \"#utility.yul\":8591:8739   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8745:9170   */\n    tag_359:\n        /* \"#utility.yul\":8823:8828   */\n      0x00\n        /* \"#utility.yul\":8848:8914   */\n      tag_517\n        /* \"#utility.yul\":8864:8913   */\n      tag_518\n        /* \"#utility.yul\":8906:8912   */\n      dup5\n        /* \"#utility.yul\":8864:8913   */\n      tag_357\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":8848:8914   */\n      tag_356\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":8839:8914   */\n      swap1\n      pop\n        /* \"#utility.yul\":8937:8943   */\n      dup3\n        /* \"#utility.yul\":8930:8935   */\n      dup2\n        /* \"#utility.yul\":8923:8944   */\n      mstore\n        /* \"#utility.yul\":8975:8979   */\n      0x20\n        /* \"#utility.yul\":8968:8973   */\n      dup2\n        /* \"#utility.yul\":8964:8980   */\n      add\n        /* \"#utility.yul\":9013:9016   */\n      dup5\n        /* \"#utility.yul\":9004:9010   */\n      dup5\n        /* \"#utility.yul\":8999:9002   */\n      dup5\n        /* \"#utility.yul\":8995:9011   */\n      add\n        /* \"#utility.yul\":8992:9017   */\n      gt\n        /* \"#utility.yul\":8989:9101   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":9020:9099   */\n      tag_520\n      tag_353\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":8989:9101   */\n    tag_519:\n        /* \"#utility.yul\":9110:9164   */\n      tag_521\n        /* \"#utility.yul\":9157:9163   */\n      dup5\n        /* \"#utility.yul\":9152:9155   */\n      dup3\n        /* \"#utility.yul\":9147:9150   */\n      dup6\n        /* \"#utility.yul\":9110:9164   */\n      tag_358\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":8829:9170   */\n      pop\n        /* \"#utility.yul\":8745:9170   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9190:9530   */\n    tag_360:\n        /* \"#utility.yul\":9246:9251   */\n      0x00\n        /* \"#utility.yul\":9295:9298   */\n      dup3\n        /* \"#utility.yul\":9288:9292   */\n      0x1f\n        /* \"#utility.yul\":9280:9286   */\n      dup4\n        /* \"#utility.yul\":9276:9293   */\n      add\n        /* \"#utility.yul\":9272:9299   */\n      slt\n        /* \"#utility.yul\":9262:9384   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":9303:9382   */\n      tag_524\n      tag_352\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":9262:9384   */\n    tag_523:\n        /* \"#utility.yul\":9420:9426   */\n      dup2\n        /* \"#utility.yul\":9407:9427   */\n      calldataload\n        /* \"#utility.yul\":9445:9524   */\n      tag_525\n        /* \"#utility.yul\":9520:9523   */\n      dup5\n        /* \"#utility.yul\":9512:9518   */\n      dup3\n        /* \"#utility.yul\":9505:9509   */\n      0x20\n        /* \"#utility.yul\":9497:9503   */\n      dup7\n        /* \"#utility.yul\":9493:9510   */\n      add\n        /* \"#utility.yul\":9445:9524   */\n      tag_359\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":9436:9524   */\n      swap2\n      pop\n        /* \"#utility.yul\":9252:9530   */\n      pop\n        /* \"#utility.yul\":9190:9530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9536:10331   */\n    tag_70:\n        /* \"#utility.yul\":9621:9627   */\n      0x00\n        /* \"#utility.yul\":9629:9635   */\n      dup1\n        /* \"#utility.yul\":9637:9643   */\n      0x00\n        /* \"#utility.yul\":9686:9688   */\n      0x60\n        /* \"#utility.yul\":9674:9683   */\n      dup5\n        /* \"#utility.yul\":9665:9672   */\n      dup7\n        /* \"#utility.yul\":9661:9684   */\n      sub\n        /* \"#utility.yul\":9657:9689   */\n      slt\n        /* \"#utility.yul\":9654:9773   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":9692:9771   */\n      tag_528\n      tag_330\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":9654:9773   */\n    tag_527:\n        /* \"#utility.yul\":9812:9813   */\n      0x00\n        /* \"#utility.yul\":9837:9889   */\n      tag_529\n        /* \"#utility.yul\":9881:9888   */\n      dup7\n        /* \"#utility.yul\":9872:9878   */\n      dup3\n        /* \"#utility.yul\":9861:9870   */\n      dup8\n        /* \"#utility.yul\":9857:9879   */\n      add\n        /* \"#utility.yul\":9837:9889   */\n      tag_351\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":9827:9889   */\n      swap4\n      pop\n        /* \"#utility.yul\":9783:9899   */\n      pop\n        /* \"#utility.yul\":9938:9940   */\n      0x20\n        /* \"#utility.yul\":9964:10016   */\n      tag_530\n        /* \"#utility.yul\":10008:10015   */\n      dup7\n        /* \"#utility.yul\":9999:10005   */\n      dup3\n        /* \"#utility.yul\":9988:9997   */\n      dup8\n        /* \"#utility.yul\":9984:10006   */\n      add\n        /* \"#utility.yul\":9964:10016   */\n      tag_351\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":9954:10016   */\n      swap3\n      pop\n        /* \"#utility.yul\":9909:10026   */\n      pop\n        /* \"#utility.yul\":10093:10095   */\n      0x40\n        /* \"#utility.yul\":10082:10091   */\n      dup5\n        /* \"#utility.yul\":10078:10096   */\n      add\n        /* \"#utility.yul\":10065:10097   */\n      calldataload\n        /* \"#utility.yul\":10124:10142   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10116:10122   */\n      dup2\n        /* \"#utility.yul\":10113:10143   */\n      gt\n        /* \"#utility.yul\":10110:10227   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":10146:10225   */\n      tag_532\n      tag_331\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":10110:10227   */\n    tag_531:\n        /* \"#utility.yul\":10251:10314   */\n      tag_533\n        /* \"#utility.yul\":10306:10313   */\n      dup7\n        /* \"#utility.yul\":10297:10303   */\n      dup3\n        /* \"#utility.yul\":10286:10295   */\n      dup8\n        /* \"#utility.yul\":10282:10304   */\n      add\n        /* \"#utility.yul\":10251:10314   */\n      tag_360\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":10241:10314   */\n      swap2\n      pop\n        /* \"#utility.yul\":10036:10324   */\n      pop\n        /* \"#utility.yul\":9536:10331   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10337:10956   */\n    tag_85:\n        /* \"#utility.yul\":10414:10420   */\n      0x00\n        /* \"#utility.yul\":10422:10428   */\n      dup1\n        /* \"#utility.yul\":10430:10436   */\n      0x00\n        /* \"#utility.yul\":10479:10481   */\n      0x60\n        /* \"#utility.yul\":10467:10476   */\n      dup5\n        /* \"#utility.yul\":10458:10465   */\n      dup7\n        /* \"#utility.yul\":10454:10477   */\n      sub\n        /* \"#utility.yul\":10450:10482   */\n      slt\n        /* \"#utility.yul\":10447:10566   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":10485:10564   */\n      tag_536\n      tag_330\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":10447:10566   */\n    tag_535:\n        /* \"#utility.yul\":10605:10606   */\n      0x00\n        /* \"#utility.yul\":10630:10683   */\n      tag_537\n        /* \"#utility.yul\":10675:10682   */\n      dup7\n        /* \"#utility.yul\":10666:10672   */\n      dup3\n        /* \"#utility.yul\":10655:10664   */\n      dup8\n        /* \"#utility.yul\":10651:10673   */\n      add\n        /* \"#utility.yul\":10630:10683   */\n      tag_335\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":10620:10683   */\n      swap4\n      pop\n        /* \"#utility.yul\":10576:10693   */\n      pop\n        /* \"#utility.yul\":10732:10734   */\n      0x20\n        /* \"#utility.yul\":10758:10811   */\n      tag_538\n        /* \"#utility.yul\":10803:10810   */\n      dup7\n        /* \"#utility.yul\":10794:10800   */\n      dup3\n        /* \"#utility.yul\":10783:10792   */\n      dup8\n        /* \"#utility.yul\":10779:10801   */\n      add\n        /* \"#utility.yul\":10758:10811   */\n      tag_335\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":10748:10811   */\n      swap3\n      pop\n        /* \"#utility.yul\":10703:10821   */\n      pop\n        /* \"#utility.yul\":10860:10862   */\n      0x40\n        /* \"#utility.yul\":10886:10939   */\n      tag_539\n        /* \"#utility.yul\":10931:10938   */\n      dup7\n        /* \"#utility.yul\":10922:10928   */\n      dup3\n        /* \"#utility.yul\":10911:10920   */\n      dup8\n        /* \"#utility.yul\":10907:10929   */\n      add\n        /* \"#utility.yul\":10886:10939   */\n      tag_338\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":10876:10939   */\n      swap2\n      pop\n        /* \"#utility.yul\":10831:10949   */\n      pop\n        /* \"#utility.yul\":10337:10956   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10962:11079   */\n    tag_361:\n        /* \"#utility.yul\":11071:11072   */\n      0x00\n        /* \"#utility.yul\":11068:11069   */\n      dup1\n        /* \"#utility.yul\":11061:11073   */\n      revert\n        /* \"#utility.yul\":11085:11202   */\n    tag_362:\n        /* \"#utility.yul\":11194:11195   */\n      0x00\n        /* \"#utility.yul\":11191:11192   */\n      dup1\n        /* \"#utility.yul\":11184:11196   */\n      revert\n        /* \"#utility.yul\":11225:11793   */\n    tag_363:\n        /* \"#utility.yul\":11298:11306   */\n      0x00\n        /* \"#utility.yul\":11308:11314   */\n      dup1\n        /* \"#utility.yul\":11358:11361   */\n      dup4\n        /* \"#utility.yul\":11351:11355   */\n      0x1f\n        /* \"#utility.yul\":11343:11349   */\n      dup5\n        /* \"#utility.yul\":11339:11356   */\n      add\n        /* \"#utility.yul\":11335:11362   */\n      slt\n        /* \"#utility.yul\":11325:11447   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":11366:11445   */\n      tag_544\n      tag_352\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":11325:11447   */\n    tag_543:\n        /* \"#utility.yul\":11479:11485   */\n      dup3\n        /* \"#utility.yul\":11466:11486   */\n      calldataload\n        /* \"#utility.yul\":11456:11486   */\n      swap1\n      pop\n        /* \"#utility.yul\":11509:11527   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11501:11507   */\n      dup2\n        /* \"#utility.yul\":11498:11528   */\n      gt\n        /* \"#utility.yul\":11495:11612   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":11531:11610   */\n      tag_546\n      tag_361\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":11495:11612   */\n    tag_545:\n        /* \"#utility.yul\":11645:11649   */\n      0x20\n        /* \"#utility.yul\":11637:11643   */\n      dup4\n        /* \"#utility.yul\":11633:11650   */\n      add\n        /* \"#utility.yul\":11621:11650   */\n      swap2\n      pop\n        /* \"#utility.yul\":11699:11702   */\n      dup4\n        /* \"#utility.yul\":11691:11695   */\n      0x20\n        /* \"#utility.yul\":11683:11689   */\n      dup3\n        /* \"#utility.yul\":11679:11696   */\n      mul\n        /* \"#utility.yul\":11669:11677   */\n      dup4\n        /* \"#utility.yul\":11665:11697   */\n      add\n        /* \"#utility.yul\":11662:11703   */\n      gt\n        /* \"#utility.yul\":11659:11787   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":11706:11785   */\n      tag_548\n      tag_362\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":11659:11787   */\n    tag_547:\n        /* \"#utility.yul\":11225:11793   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11816:12384   */\n    tag_364:\n        /* \"#utility.yul\":11889:11897   */\n      0x00\n        /* \"#utility.yul\":11899:11905   */\n      dup1\n        /* \"#utility.yul\":11949:11952   */\n      dup4\n        /* \"#utility.yul\":11942:11946   */\n      0x1f\n        /* \"#utility.yul\":11934:11940   */\n      dup5\n        /* \"#utility.yul\":11930:11947   */\n      add\n        /* \"#utility.yul\":11926:11953   */\n      slt\n        /* \"#utility.yul\":11916:12038   */\n      tag_550\n      jumpi\n        /* \"#utility.yul\":11957:12036   */\n      tag_551\n      tag_352\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":11916:12038   */\n    tag_550:\n        /* \"#utility.yul\":12070:12076   */\n      dup3\n        /* \"#utility.yul\":12057:12077   */\n      calldataload\n        /* \"#utility.yul\":12047:12077   */\n      swap1\n      pop\n        /* \"#utility.yul\":12100:12118   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12092:12098   */\n      dup2\n        /* \"#utility.yul\":12089:12119   */\n      gt\n        /* \"#utility.yul\":12086:12203   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":12122:12201   */\n      tag_553\n      tag_361\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":12086:12203   */\n    tag_552:\n        /* \"#utility.yul\":12236:12240   */\n      0x20\n        /* \"#utility.yul\":12228:12234   */\n      dup4\n        /* \"#utility.yul\":12224:12241   */\n      add\n        /* \"#utility.yul\":12212:12241   */\n      swap2\n      pop\n        /* \"#utility.yul\":12290:12293   */\n      dup4\n        /* \"#utility.yul\":12282:12286   */\n      0x20\n        /* \"#utility.yul\":12274:12280   */\n      dup3\n        /* \"#utility.yul\":12270:12287   */\n      mul\n        /* \"#utility.yul\":12260:12268   */\n      dup4\n        /* \"#utility.yul\":12256:12288   */\n      add\n        /* \"#utility.yul\":12253:12294   */\n      gt\n        /* \"#utility.yul\":12250:12378   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":12297:12376   */\n      tag_555\n      tag_362\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":12250:12378   */\n    tag_554:\n        /* \"#utility.yul\":11816:12384   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12390:13469   */\n    tag_90:\n        /* \"#utility.yul\":12521:12527   */\n      0x00\n        /* \"#utility.yul\":12529:12535   */\n      dup1\n        /* \"#utility.yul\":12537:12543   */\n      0x00\n        /* \"#utility.yul\":12545:12551   */\n      dup1\n        /* \"#utility.yul\":12553:12559   */\n      0x00\n        /* \"#utility.yul\":12602:12604   */\n      0x60\n        /* \"#utility.yul\":12590:12599   */\n      dup7\n        /* \"#utility.yul\":12581:12588   */\n      dup9\n        /* \"#utility.yul\":12577:12600   */\n      sub\n        /* \"#utility.yul\":12573:12605   */\n      slt\n        /* \"#utility.yul\":12570:12689   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":12608:12687   */\n      tag_558\n      tag_330\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":12570:12689   */\n    tag_557:\n        /* \"#utility.yul\":12728:12729   */\n      0x00\n        /* \"#utility.yul\":12753:12806   */\n      tag_559\n        /* \"#utility.yul\":12798:12805   */\n      dup9\n        /* \"#utility.yul\":12789:12795   */\n      dup3\n        /* \"#utility.yul\":12778:12787   */\n      dup10\n        /* \"#utility.yul\":12774:12796   */\n      add\n        /* \"#utility.yul\":12753:12806   */\n      tag_335\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":12743:12806   */\n      swap6\n      pop\n        /* \"#utility.yul\":12699:12816   */\n      pop\n        /* \"#utility.yul\":12883:12885   */\n      0x20\n        /* \"#utility.yul\":12872:12881   */\n      dup7\n        /* \"#utility.yul\":12868:12886   */\n      add\n        /* \"#utility.yul\":12855:12887   */\n      calldataload\n        /* \"#utility.yul\":12914:12932   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12906:12912   */\n      dup2\n        /* \"#utility.yul\":12903:12933   */\n      gt\n        /* \"#utility.yul\":12900:13017   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":12936:13015   */\n      tag_561\n      tag_331\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":12900:13017   */\n    tag_560:\n        /* \"#utility.yul\":13049:13129   */\n      tag_562\n        /* \"#utility.yul\":13121:13128   */\n      dup9\n        /* \"#utility.yul\":13112:13118   */\n      dup3\n        /* \"#utility.yul\":13101:13110   */\n      dup10\n        /* \"#utility.yul\":13097:13119   */\n      add\n        /* \"#utility.yul\":13049:13129   */\n      tag_363\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":13031:13129   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":12826:13139   */\n      pop\n        /* \"#utility.yul\":13206:13208   */\n      0x40\n        /* \"#utility.yul\":13195:13204   */\n      dup7\n        /* \"#utility.yul\":13191:13209   */\n      add\n        /* \"#utility.yul\":13178:13210   */\n      calldataload\n        /* \"#utility.yul\":13237:13255   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13229:13235   */\n      dup2\n        /* \"#utility.yul\":13226:13256   */\n      gt\n        /* \"#utility.yul\":13223:13340   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":13259:13338   */\n      tag_564\n      tag_331\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":13223:13340   */\n    tag_563:\n        /* \"#utility.yul\":13372:13452   */\n      tag_565\n        /* \"#utility.yul\":13444:13451   */\n      dup9\n        /* \"#utility.yul\":13435:13441   */\n      dup3\n        /* \"#utility.yul\":13424:13433   */\n      dup10\n        /* \"#utility.yul\":13420:13442   */\n      add\n        /* \"#utility.yul\":13372:13452   */\n      tag_364\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":13354:13452   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":13149:13462   */\n      pop\n        /* \"#utility.yul\":12390:13469   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13475:13615   */\n    tag_365:\n        /* \"#utility.yul\":13524:13533   */\n      0x00\n        /* \"#utility.yul\":13557:13609   */\n      tag_567\n        /* \"#utility.yul\":13575:13608   */\n      tag_568\n        /* \"#utility.yul\":13584:13607   */\n      tag_569\n        /* \"#utility.yul\":13601:13606   */\n      dup5\n        /* \"#utility.yul\":13584:13607   */\n      tag_344\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":13575:13608   */\n      tag_339\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":13557:13609   */\n      tag_323\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":13544:13609   */\n      swap1\n      pop\n        /* \"#utility.yul\":13475:13615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13621:13750   */\n    tag_366:\n        /* \"#utility.yul\":13707:13743   */\n      tag_571\n        /* \"#utility.yul\":13737:13742   */\n      dup2\n        /* \"#utility.yul\":13707:13743   */\n      tag_365\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":13702:13705   */\n      dup3\n        /* \"#utility.yul\":13695:13744   */\n      mstore\n        /* \"#utility.yul\":13621:13750   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13756:14194   */\n    tag_107:\n        /* \"#utility.yul\":13903:13907   */\n      0x00\n        /* \"#utility.yul\":13941:13943   */\n      0x60\n        /* \"#utility.yul\":13930:13939   */\n      dup3\n        /* \"#utility.yul\":13926:13944   */\n      add\n        /* \"#utility.yul\":13918:13944   */\n      swap1\n      pop\n        /* \"#utility.yul\":13954:14025   */\n      tag_573\n        /* \"#utility.yul\":14022:14023   */\n      0x00\n        /* \"#utility.yul\":14011:14020   */\n      dup4\n        /* \"#utility.yul\":14007:14024   */\n      add\n        /* \"#utility.yul\":13998:14004   */\n      dup7\n        /* \"#utility.yul\":13954:14025   */\n      tag_325\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":14035:14106   */\n      tag_574\n        /* \"#utility.yul\":14102:14104   */\n      0x20\n        /* \"#utility.yul\":14091:14100   */\n      dup4\n        /* \"#utility.yul\":14087:14105   */\n      add\n        /* \"#utility.yul\":14078:14084   */\n      dup6\n        /* \"#utility.yul\":14035:14106   */\n      tag_366\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":14116:14187   */\n      tag_575\n        /* \"#utility.yul\":14183:14185   */\n      0x40\n        /* \"#utility.yul\":14172:14181   */\n      dup4\n        /* \"#utility.yul\":14168:14186   */\n      add\n        /* \"#utility.yul\":14159:14165   */\n      dup5\n        /* \"#utility.yul\":14116:14187   */\n      tag_366\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":13756:14194   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14200:14369   */\n    tag_367:\n        /* \"#utility.yul\":14340:14361   */\n      0x4e6f20636c61696d61626c6520616d6f756e7400000000000000000000000000\n        /* \"#utility.yul\":14336:14337   */\n      0x00\n        /* \"#utility.yul\":14328:14334   */\n      dup3\n        /* \"#utility.yul\":14324:14338   */\n      add\n        /* \"#utility.yul\":14317:14362   */\n      mstore\n        /* \"#utility.yul\":14200:14369   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14375:14741   */\n    tag_368:\n        /* \"#utility.yul\":14517:14520   */\n      0x00\n        /* \"#utility.yul\":14538:14605   */\n      tag_578\n        /* \"#utility.yul\":14602:14604   */\n      0x13\n        /* \"#utility.yul\":14597:14600   */\n      dup4\n        /* \"#utility.yul\":14538:14605   */\n      tag_326\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":14531:14605   */\n      swap2\n      pop\n        /* \"#utility.yul\":14614:14707   */\n      tag_579\n        /* \"#utility.yul\":14703:14706   */\n      dup3\n        /* \"#utility.yul\":14614:14707   */\n      tag_367\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":14732:14734   */\n      0x20\n        /* \"#utility.yul\":14727:14730   */\n      dup3\n        /* \"#utility.yul\":14723:14735   */\n      add\n        /* \"#utility.yul\":14716:14735   */\n      swap1\n      pop\n        /* \"#utility.yul\":14375:14741   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14747:15166   */\n    tag_110:\n        /* \"#utility.yul\":14913:14917   */\n      0x00\n        /* \"#utility.yul\":14951:14953   */\n      0x20\n        /* \"#utility.yul\":14940:14949   */\n      dup3\n        /* \"#utility.yul\":14936:14954   */\n      add\n        /* \"#utility.yul\":14928:14954   */\n      swap1\n      pop\n        /* \"#utility.yul\":15000:15009   */\n      dup2\n        /* \"#utility.yul\":14994:14998   */\n      dup2\n        /* \"#utility.yul\":14990:15010   */\n      sub\n        /* \"#utility.yul\":14986:14987   */\n      0x00\n        /* \"#utility.yul\":14975:14984   */\n      dup4\n        /* \"#utility.yul\":14971:14988   */\n      add\n        /* \"#utility.yul\":14964:15011   */\n      mstore\n        /* \"#utility.yul\":15028:15159   */\n      tag_581\n        /* \"#utility.yul\":15154:15158   */\n      dup2\n        /* \"#utility.yul\":15028:15159   */\n      tag_368\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":15020:15159   */\n      swap1\n      pop\n        /* \"#utility.yul\":14747:15166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15172:15347   */\n    tag_369:\n        /* \"#utility.yul\":15312:15339   */\n      0x496e73756666696369656e742066756e647320696e206a617200000000000000\n        /* \"#utility.yul\":15308:15309   */\n      0x00\n        /* \"#utility.yul\":15300:15306   */\n      dup3\n        /* \"#utility.yul\":15296:15310   */\n      add\n        /* \"#utility.yul\":15289:15340   */\n      mstore\n        /* \"#utility.yul\":15172:15347   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15353:15719   */\n    tag_370:\n        /* \"#utility.yul\":15495:15498   */\n      0x00\n        /* \"#utility.yul\":15516:15583   */\n      tag_584\n        /* \"#utility.yul\":15580:15582   */\n      0x19\n        /* \"#utility.yul\":15575:15578   */\n      dup4\n        /* \"#utility.yul\":15516:15583   */\n      tag_326\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":15509:15583   */\n      swap2\n      pop\n        /* \"#utility.yul\":15592:15685   */\n      tag_585\n        /* \"#utility.yul\":15681:15684   */\n      dup3\n        /* \"#utility.yul\":15592:15685   */\n      tag_369\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":15710:15712   */\n      0x20\n        /* \"#utility.yul\":15705:15708   */\n      dup3\n        /* \"#utility.yul\":15701:15713   */\n      add\n        /* \"#utility.yul\":15694:15713   */\n      swap1\n      pop\n        /* \"#utility.yul\":15353:15719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15725:16144   */\n    tag_113:\n        /* \"#utility.yul\":15891:15895   */\n      0x00\n        /* \"#utility.yul\":15929:15931   */\n      0x20\n        /* \"#utility.yul\":15918:15927   */\n      dup3\n        /* \"#utility.yul\":15914:15932   */\n      add\n        /* \"#utility.yul\":15906:15932   */\n      swap1\n      pop\n        /* \"#utility.yul\":15978:15987   */\n      dup2\n        /* \"#utility.yul\":15972:15976   */\n      dup2\n        /* \"#utility.yul\":15968:15988   */\n      sub\n        /* \"#utility.yul\":15964:15965   */\n      0x00\n        /* \"#utility.yul\":15953:15962   */\n      dup4\n        /* \"#utility.yul\":15949:15966   */\n      add\n        /* \"#utility.yul\":15942:15989   */\n      mstore\n        /* \"#utility.yul\":16006:16137   */\n      tag_587\n        /* \"#utility.yul\":16132:16136   */\n      dup2\n        /* \"#utility.yul\":16006:16137   */\n      tag_370\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":15998:16137   */\n      swap1\n      pop\n        /* \"#utility.yul\":15725:16144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16150:16344   */\n    tag_115:\n        /* \"#utility.yul\":16190:16194   */\n      0x00\n        /* \"#utility.yul\":16210:16230   */\n      tag_589\n        /* \"#utility.yul\":16228:16229   */\n      dup3\n        /* \"#utility.yul\":16210:16230   */\n      tag_323\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":16205:16230   */\n      swap2\n      pop\n        /* \"#utility.yul\":16244:16264   */\n      tag_590\n        /* \"#utility.yul\":16262:16263   */\n      dup4\n        /* \"#utility.yul\":16244:16264   */\n      tag_323\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":16239:16264   */\n      swap3\n      pop\n        /* \"#utility.yul\":16288:16289   */\n      dup3\n        /* \"#utility.yul\":16285:16286   */\n      dup3\n        /* \"#utility.yul\":16281:16290   */\n      sub\n        /* \"#utility.yul\":16273:16290   */\n      swap1\n      pop\n        /* \"#utility.yul\":16312:16313   */\n      dup2\n        /* \"#utility.yul\":16306:16310   */\n      dup2\n        /* \"#utility.yul\":16303:16314   */\n      gt\n        /* \"#utility.yul\":16300:16337   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":16317:16335   */\n      tag_592\n      tag_324\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":16300:16337   */\n    tag_591:\n        /* \"#utility.yul\":16150:16344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16350:16497   */\n    tag_371:\n        /* \"#utility.yul\":16451:16462   */\n      0x00\n        /* \"#utility.yul\":16488:16491   */\n      dup2\n        /* \"#utility.yul\":16473:16491   */\n      swap1\n      pop\n        /* \"#utility.yul\":16350:16497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16503:16617   */\n    tag_372:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16623:17021   */\n    tag_373:\n        /* \"#utility.yul\":16782:16785   */\n      0x00\n        /* \"#utility.yul\":16803:16886   */\n      tag_596\n        /* \"#utility.yul\":16884:16885   */\n      0x00\n        /* \"#utility.yul\":16879:16882   */\n      dup4\n        /* \"#utility.yul\":16803:16886   */\n      tag_371\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":16796:16886   */\n      swap2\n      pop\n        /* \"#utility.yul\":16895:16988   */\n      tag_597\n        /* \"#utility.yul\":16984:16987   */\n      dup3\n        /* \"#utility.yul\":16895:16988   */\n      tag_372\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":17013:17014   */\n      0x00\n        /* \"#utility.yul\":17008:17011   */\n      dup3\n        /* \"#utility.yul\":17004:17015   */\n      add\n        /* \"#utility.yul\":16997:17015   */\n      swap1\n      pop\n        /* \"#utility.yul\":16623:17021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17027:17406   */\n    tag_118:\n        /* \"#utility.yul\":17211:17214   */\n      0x00\n        /* \"#utility.yul\":17233:17380   */\n      tag_599\n        /* \"#utility.yul\":17376:17379   */\n      dup3\n        /* \"#utility.yul\":17233:17380   */\n      tag_373\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":17226:17380   */\n      swap2\n      pop\n        /* \"#utility.yul\":17397:17400   */\n      dup2\n        /* \"#utility.yul\":17390:17400   */\n      swap1\n      pop\n        /* \"#utility.yul\":17027:17406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17412:17583   */\n    tag_374:\n        /* \"#utility.yul\":17552:17575   */\n      0x4574686572207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":17548:17549   */\n      0x00\n        /* \"#utility.yul\":17540:17546   */\n      dup3\n        /* \"#utility.yul\":17536:17550   */\n      add\n        /* \"#utility.yul\":17529:17576   */\n      mstore\n        /* \"#utility.yul\":17412:17583   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17589:17955   */\n    tag_375:\n        /* \"#utility.yul\":17731:17734   */\n      0x00\n        /* \"#utility.yul\":17752:17819   */\n      tag_602\n        /* \"#utility.yul\":17816:17818   */\n      0x15\n        /* \"#utility.yul\":17811:17814   */\n      dup4\n        /* \"#utility.yul\":17752:17819   */\n      tag_326\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":17745:17819   */\n      swap2\n      pop\n        /* \"#utility.yul\":17828:17921   */\n      tag_603\n        /* \"#utility.yul\":17917:17920   */\n      dup3\n        /* \"#utility.yul\":17828:17921   */\n      tag_374\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":17946:17948   */\n      0x20\n        /* \"#utility.yul\":17941:17944   */\n      dup3\n        /* \"#utility.yul\":17937:17949   */\n      add\n        /* \"#utility.yul\":17930:17949   */\n      swap1\n      pop\n        /* \"#utility.yul\":17589:17955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17961:18380   */\n    tag_124:\n        /* \"#utility.yul\":18127:18131   */\n      0x00\n        /* \"#utility.yul\":18165:18167   */\n      0x20\n        /* \"#utility.yul\":18154:18163   */\n      dup3\n        /* \"#utility.yul\":18150:18168   */\n      add\n        /* \"#utility.yul\":18142:18168   */\n      swap1\n      pop\n        /* \"#utility.yul\":18214:18223   */\n      dup2\n        /* \"#utility.yul\":18208:18212   */\n      dup2\n        /* \"#utility.yul\":18204:18224   */\n      sub\n        /* \"#utility.yul\":18200:18201   */\n      0x00\n        /* \"#utility.yul\":18189:18198   */\n      dup4\n        /* \"#utility.yul\":18185:18202   */\n      add\n        /* \"#utility.yul\":18178:18225   */\n      mstore\n        /* \"#utility.yul\":18242:18373   */\n      tag_605\n        /* \"#utility.yul\":18368:18372   */\n      dup2\n        /* \"#utility.yul\":18242:18373   */\n      tag_375\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":18234:18373   */\n      swap1\n      pop\n        /* \"#utility.yul\":17961:18380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18386:18558   */\n    tag_376:\n        /* \"#utility.yul\":18526:18550   */\n      0x496e636f727265637420457468657220616d6f756e7400000000000000000000\n        /* \"#utility.yul\":18522:18523   */\n      0x00\n        /* \"#utility.yul\":18514:18520   */\n      dup3\n        /* \"#utility.yul\":18510:18524   */\n      add\n        /* \"#utility.yul\":18503:18551   */\n      mstore\n        /* \"#utility.yul\":18386:18558   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18564:18930   */\n    tag_377:\n        /* \"#utility.yul\":18706:18709   */\n      0x00\n        /* \"#utility.yul\":18727:18794   */\n      tag_608\n        /* \"#utility.yul\":18791:18793   */\n      0x16\n        /* \"#utility.yul\":18786:18789   */\n      dup4\n        /* \"#utility.yul\":18727:18794   */\n      tag_326\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":18720:18794   */\n      swap2\n      pop\n        /* \"#utility.yul\":18803:18896   */\n      tag_609\n        /* \"#utility.yul\":18892:18895   */\n      dup3\n        /* \"#utility.yul\":18803:18896   */\n      tag_376\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":18921:18923   */\n      0x20\n        /* \"#utility.yul\":18916:18919   */\n      dup3\n        /* \"#utility.yul\":18912:18924   */\n      add\n        /* \"#utility.yul\":18905:18924   */\n      swap1\n      pop\n        /* \"#utility.yul\":18564:18930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18936:19355   */\n    tag_137:\n        /* \"#utility.yul\":19102:19106   */\n      0x00\n        /* \"#utility.yul\":19140:19142   */\n      0x20\n        /* \"#utility.yul\":19129:19138   */\n      dup3\n        /* \"#utility.yul\":19125:19143   */\n      add\n        /* \"#utility.yul\":19117:19143   */\n      swap1\n      pop\n        /* \"#utility.yul\":19189:19198   */\n      dup2\n        /* \"#utility.yul\":19183:19187   */\n      dup2\n        /* \"#utility.yul\":19179:19199   */\n      sub\n        /* \"#utility.yul\":19175:19176   */\n      0x00\n        /* \"#utility.yul\":19164:19173   */\n      dup4\n        /* \"#utility.yul\":19160:19177   */\n      add\n        /* \"#utility.yul\":19153:19200   */\n      mstore\n        /* \"#utility.yul\":19217:19348   */\n      tag_611\n        /* \"#utility.yul\":19343:19347   */\n      dup2\n        /* \"#utility.yul\":19217:19348   */\n      tag_377\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":19209:19348   */\n      swap1\n      pop\n        /* \"#utility.yul\":18936:19355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19361:19588   */\n    tag_378:\n        /* \"#utility.yul\":19501:19535   */\n      0x4465706f73697420616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":19497:19498   */\n      0x00\n        /* \"#utility.yul\":19489:19495   */\n      dup3\n        /* \"#utility.yul\":19485:19499   */\n      add\n        /* \"#utility.yul\":19478:19536   */\n      mstore\n        /* \"#utility.yul\":19570:19580   */\n      0x68616e207a65726f000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19565:19567   */\n      0x20\n        /* \"#utility.yul\":19557:19563   */\n      dup3\n        /* \"#utility.yul\":19553:19568   */\n      add\n        /* \"#utility.yul\":19546:19581   */\n      mstore\n        /* \"#utility.yul\":19361:19588   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19594:19960   */\n    tag_379:\n        /* \"#utility.yul\":19736:19739   */\n      0x00\n        /* \"#utility.yul\":19757:19824   */\n      tag_614\n        /* \"#utility.yul\":19821:19823   */\n      0x28\n        /* \"#utility.yul\":19816:19819   */\n      dup4\n        /* \"#utility.yul\":19757:19824   */\n      tag_326\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":19750:19824   */\n      swap2\n      pop\n        /* \"#utility.yul\":19833:19926   */\n      tag_615\n        /* \"#utility.yul\":19922:19925   */\n      dup3\n        /* \"#utility.yul\":19833:19926   */\n      tag_378\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":19951:19953   */\n      0x40\n        /* \"#utility.yul\":19946:19949   */\n      dup3\n        /* \"#utility.yul\":19942:19954   */\n      add\n        /* \"#utility.yul\":19935:19954   */\n      swap1\n      pop\n        /* \"#utility.yul\":19594:19960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19966:20385   */\n    tag_141:\n        /* \"#utility.yul\":20132:20136   */\n      0x00\n        /* \"#utility.yul\":20170:20172   */\n      0x20\n        /* \"#utility.yul\":20159:20168   */\n      dup3\n        /* \"#utility.yul\":20155:20173   */\n      add\n        /* \"#utility.yul\":20147:20173   */\n      swap1\n      pop\n        /* \"#utility.yul\":20219:20228   */\n      dup2\n        /* \"#utility.yul\":20213:20217   */\n      dup2\n        /* \"#utility.yul\":20209:20229   */\n      sub\n        /* \"#utility.yul\":20205:20206   */\n      0x00\n        /* \"#utility.yul\":20194:20203   */\n      dup4\n        /* \"#utility.yul\":20190:20207   */\n      add\n        /* \"#utility.yul\":20183:20230   */\n      mstore\n        /* \"#utility.yul\":20247:20378   */\n      tag_617\n        /* \"#utility.yul\":20373:20377   */\n      dup2\n        /* \"#utility.yul\":20247:20378   */\n      tag_379\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":20239:20378   */\n      swap1\n      pop\n        /* \"#utility.yul\":19966:20385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20391:20476   */\n    tag_380:\n        /* \"#utility.yul\":20436:20443   */\n      0x00\n        /* \"#utility.yul\":20465:20470   */\n      dup2\n        /* \"#utility.yul\":20454:20470   */\n      swap1\n      pop\n        /* \"#utility.yul\":20391:20476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20482:20638   */\n    tag_381:\n        /* \"#utility.yul\":20539:20548   */\n      0x00\n        /* \"#utility.yul\":20572:20632   */\n      tag_620\n        /* \"#utility.yul\":20589:20631   */\n      tag_621\n        /* \"#utility.yul\":20598:20630   */\n      tag_622\n        /* \"#utility.yul\":20624:20629   */\n      dup5\n        /* \"#utility.yul\":20598:20630   */\n      tag_380\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":20589:20631   */\n      tag_339\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":20572:20632   */\n      tag_344\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":20559:20632   */\n      swap1\n      pop\n        /* \"#utility.yul\":20482:20638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20644:20789   */\n    tag_382:\n        /* \"#utility.yul\":20738:20782   */\n      tag_624\n        /* \"#utility.yul\":20776:20781   */\n      dup2\n        /* \"#utility.yul\":20738:20782   */\n      tag_381\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":20733:20736   */\n      dup3\n        /* \"#utility.yul\":20726:20783   */\n      mstore\n        /* \"#utility.yul\":20644:20789   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20795:21031   */\n    tag_162:\n        /* \"#utility.yul\":20895:20899   */\n      0x00\n        /* \"#utility.yul\":20933:20935   */\n      0x20\n        /* \"#utility.yul\":20922:20931   */\n      dup3\n        /* \"#utility.yul\":20918:20936   */\n      add\n        /* \"#utility.yul\":20910:20936   */\n      swap1\n      pop\n        /* \"#utility.yul\":20946:21024   */\n      tag_626\n        /* \"#utility.yul\":21021:21022   */\n      0x00\n        /* \"#utility.yul\":21010:21019   */\n      dup4\n        /* \"#utility.yul\":21006:21023   */\n      add\n        /* \"#utility.yul\":20997:21003   */\n      dup5\n        /* \"#utility.yul\":20946:21024   */\n      tag_382\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":20795:21031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21037:21217   */\n    tag_383:\n        /* \"#utility.yul\":21085:21162   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21082:21083   */\n      0x00\n        /* \"#utility.yul\":21075:21163   */\n      mstore\n        /* \"#utility.yul\":21182:21186   */\n      0x22\n        /* \"#utility.yul\":21179:21180   */\n      0x04\n        /* \"#utility.yul\":21172:21187   */\n      mstore\n        /* \"#utility.yul\":21206:21210   */\n      0x24\n        /* \"#utility.yul\":21203:21204   */\n      0x00\n        /* \"#utility.yul\":21196:21211   */\n      revert\n        /* \"#utility.yul\":21223:21543   */\n    tag_170:\n        /* \"#utility.yul\":21267:21273   */\n      0x00\n        /* \"#utility.yul\":21304:21305   */\n      0x02\n        /* \"#utility.yul\":21298:21302   */\n      dup3\n        /* \"#utility.yul\":21294:21306   */\n      div\n        /* \"#utility.yul\":21284:21306   */\n      swap1\n      pop\n        /* \"#utility.yul\":21351:21352   */\n      0x01\n        /* \"#utility.yul\":21345:21349   */\n      dup3\n        /* \"#utility.yul\":21341:21353   */\n      and\n        /* \"#utility.yul\":21372:21390   */\n      dup1\n        /* \"#utility.yul\":21362:21443   */\n      tag_629\n      jumpi\n        /* \"#utility.yul\":21428:21432   */\n      0x7f\n        /* \"#utility.yul\":21420:21426   */\n      dup3\n        /* \"#utility.yul\":21416:21433   */\n      and\n        /* \"#utility.yul\":21406:21433   */\n      swap2\n      pop\n        /* \"#utility.yul\":21362:21443   */\n    tag_629:\n        /* \"#utility.yul\":21490:21492   */\n      0x20\n        /* \"#utility.yul\":21482:21488   */\n      dup3\n        /* \"#utility.yul\":21479:21493   */\n      lt\n        /* \"#utility.yul\":21459:21477   */\n      dup2\n        /* \"#utility.yul\":21456:21494   */\n      sub\n        /* \"#utility.yul\":21453:21537   */\n      tag_630\n      jumpi\n        /* \"#utility.yul\":21509:21527   */\n      tag_631\n      tag_383\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":21453:21537   */\n    tag_630:\n        /* \"#utility.yul\":21274:21543   */\n      pop\n        /* \"#utility.yul\":21223:21543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21549:21639   */\n    tag_384:\n        /* \"#utility.yul\":21583:21590   */\n      0x00\n        /* \"#utility.yul\":21626:21631   */\n      dup2\n        /* \"#utility.yul\":21619:21632   */\n      iszero\n        /* \"#utility.yul\":21612:21633   */\n      iszero\n        /* \"#utility.yul\":21601:21633   */\n      swap1\n      pop\n        /* \"#utility.yul\":21549:21639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21645:21761   */\n    tag_385:\n        /* \"#utility.yul\":21715:21736   */\n      tag_634\n        /* \"#utility.yul\":21730:21735   */\n      dup2\n        /* \"#utility.yul\":21715:21736   */\n      tag_384\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":21708:21713   */\n      dup2\n        /* \"#utility.yul\":21705:21737   */\n      eq\n        /* \"#utility.yul\":21695:21755   */\n      tag_635\n      jumpi\n        /* \"#utility.yul\":21751:21752   */\n      0x00\n        /* \"#utility.yul\":21748:21749   */\n      dup1\n        /* \"#utility.yul\":21741:21753   */\n      revert\n        /* \"#utility.yul\":21695:21755   */\n    tag_635:\n        /* \"#utility.yul\":21645:21761   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21767:21904   */\n    tag_386:\n        /* \"#utility.yul\":21821:21826   */\n      0x00\n        /* \"#utility.yul\":21852:21858   */\n      dup2\n        /* \"#utility.yul\":21846:21859   */\n      mload\n        /* \"#utility.yul\":21837:21859   */\n      swap1\n      pop\n        /* \"#utility.yul\":21868:21898   */\n      tag_637\n        /* \"#utility.yul\":21892:21897   */\n      dup2\n        /* \"#utility.yul\":21868:21898   */\n      tag_385\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":21767:21904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21910:22255   */\n    tag_183:\n        /* \"#utility.yul\":21977:21983   */\n      0x00\n        /* \"#utility.yul\":22026:22028   */\n      0x20\n        /* \"#utility.yul\":22014:22023   */\n      dup3\n        /* \"#utility.yul\":22005:22012   */\n      dup5\n        /* \"#utility.yul\":22001:22024   */\n      sub\n        /* \"#utility.yul\":21997:22029   */\n      slt\n        /* \"#utility.yul\":21994:22113   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":22032:22111   */\n      tag_640\n      tag_330\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":21994:22113   */\n    tag_639:\n        /* \"#utility.yul\":22152:22153   */\n      0x00\n        /* \"#utility.yul\":22177:22238   */\n      tag_641\n        /* \"#utility.yul\":22230:22237   */\n      dup5\n        /* \"#utility.yul\":22221:22227   */\n      dup3\n        /* \"#utility.yul\":22210:22219   */\n      dup6\n        /* \"#utility.yul\":22206:22228   */\n      add\n        /* \"#utility.yul\":22177:22238   */\n      tag_386\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":22167:22238   */\n      swap2\n      pop\n        /* \"#utility.yul\":22123:22248   */\n      pop\n        /* \"#utility.yul\":21910:22255   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22261:22433   */\n    tag_387:\n        /* \"#utility.yul\":22401:22425   */\n      0x43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000\n        /* \"#utility.yul\":22397:22398   */\n      0x00\n        /* \"#utility.yul\":22389:22395   */\n      dup3\n        /* \"#utility.yul\":22385:22399   */\n      add\n        /* \"#utility.yul\":22378:22426   */\n      mstore\n        /* \"#utility.yul\":22261:22433   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22439:22805   */\n    tag_388:\n        /* \"#utility.yul\":22581:22584   */\n      0x00\n        /* \"#utility.yul\":22602:22669   */\n      tag_644\n        /* \"#utility.yul\":22666:22668   */\n      0x16\n        /* \"#utility.yul\":22661:22664   */\n      dup4\n        /* \"#utility.yul\":22602:22669   */\n      tag_326\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":22595:22669   */\n      swap2\n      pop\n        /* \"#utility.yul\":22678:22771   */\n      tag_645\n        /* \"#utility.yul\":22767:22770   */\n      dup3\n        /* \"#utility.yul\":22678:22771   */\n      tag_387\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":22796:22798   */\n      0x20\n        /* \"#utility.yul\":22791:22794   */\n      dup3\n        /* \"#utility.yul\":22787:22799   */\n      add\n        /* \"#utility.yul\":22780:22799   */\n      swap1\n      pop\n        /* \"#utility.yul\":22439:22805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22811:23230   */\n    tag_186:\n        /* \"#utility.yul\":22977:22981   */\n      0x00\n        /* \"#utility.yul\":23015:23017   */\n      0x20\n        /* \"#utility.yul\":23004:23013   */\n      dup3\n        /* \"#utility.yul\":23000:23018   */\n      add\n        /* \"#utility.yul\":22992:23018   */\n      swap1\n      pop\n        /* \"#utility.yul\":23064:23073   */\n      dup2\n        /* \"#utility.yul\":23058:23062   */\n      dup2\n        /* \"#utility.yul\":23054:23074   */\n      sub\n        /* \"#utility.yul\":23050:23051   */\n      0x00\n        /* \"#utility.yul\":23039:23048   */\n      dup4\n        /* \"#utility.yul\":23035:23052   */\n      add\n        /* \"#utility.yul\":23028:23075   */\n      mstore\n        /* \"#utility.yul\":23092:23223   */\n      tag_647\n        /* \"#utility.yul\":23218:23222   */\n      dup2\n        /* \"#utility.yul\":23092:23223   */\n      tag_388\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":23084:23223   */\n      swap1\n      pop\n        /* \"#utility.yul\":22811:23230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23236:23457   */\n    tag_389:\n        /* \"#utility.yul\":23376:23410   */\n      0x53746172742074696d65206d757374206265206265666f726520656e64207469\n        /* \"#utility.yul\":23372:23373   */\n      0x00\n        /* \"#utility.yul\":23364:23370   */\n      dup3\n        /* \"#utility.yul\":23360:23374   */\n      add\n        /* \"#utility.yul\":23353:23411   */\n      mstore\n        /* \"#utility.yul\":23445:23449   */\n      0x6d65000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23440:23442   */\n      0x20\n        /* \"#utility.yul\":23432:23438   */\n      dup3\n        /* \"#utility.yul\":23428:23443   */\n      add\n        /* \"#utility.yul\":23421:23450   */\n      mstore\n        /* \"#utility.yul\":23236:23457   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23463:23829   */\n    tag_390:\n        /* \"#utility.yul\":23605:23608   */\n      0x00\n        /* \"#utility.yul\":23626:23693   */\n      tag_650\n        /* \"#utility.yul\":23690:23692   */\n      0x22\n        /* \"#utility.yul\":23685:23688   */\n      dup4\n        /* \"#utility.yul\":23626:23693   */\n      tag_326\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":23619:23693   */\n      swap2\n      pop\n        /* \"#utility.yul\":23702:23795   */\n      tag_651\n        /* \"#utility.yul\":23791:23794   */\n      dup3\n        /* \"#utility.yul\":23702:23795   */\n      tag_389\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":23820:23822   */\n      0x40\n        /* \"#utility.yul\":23815:23818   */\n      dup3\n        /* \"#utility.yul\":23811:23823   */\n      add\n        /* \"#utility.yul\":23804:23823   */\n      swap1\n      pop\n        /* \"#utility.yul\":23463:23829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23835:24254   */\n    tag_190:\n        /* \"#utility.yul\":24001:24005   */\n      0x00\n        /* \"#utility.yul\":24039:24041   */\n      0x20\n        /* \"#utility.yul\":24028:24037   */\n      dup3\n        /* \"#utility.yul\":24024:24042   */\n      add\n        /* \"#utility.yul\":24016:24042   */\n      swap1\n      pop\n        /* \"#utility.yul\":24088:24097   */\n      dup2\n        /* \"#utility.yul\":24082:24086   */\n      dup2\n        /* \"#utility.yul\":24078:24098   */\n      sub\n        /* \"#utility.yul\":24074:24075   */\n      0x00\n        /* \"#utility.yul\":24063:24072   */\n      dup4\n        /* \"#utility.yul\":24059:24076   */\n      add\n        /* \"#utility.yul\":24052:24099   */\n      mstore\n        /* \"#utility.yul\":24116:24247   */\n      tag_653\n        /* \"#utility.yul\":24242:24246   */\n      dup2\n        /* \"#utility.yul\":24116:24247   */\n      tag_390\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":24108:24247   */\n      swap1\n      pop\n        /* \"#utility.yul\":23835:24254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24260:24401   */\n    tag_391:\n        /* \"#utility.yul\":24309:24313   */\n      0x00\n        /* \"#utility.yul\":24332:24335   */\n      dup2\n        /* \"#utility.yul\":24324:24335   */\n      swap1\n      pop\n        /* \"#utility.yul\":24355:24358   */\n      dup2\n        /* \"#utility.yul\":24352:24353   */\n      0x00\n        /* \"#utility.yul\":24345:24359   */\n      mstore\n        /* \"#utility.yul\":24389:24393   */\n      0x20\n        /* \"#utility.yul\":24386:24387   */\n      0x00\n        /* \"#utility.yul\":24376:24394   */\n      keccak256\n        /* \"#utility.yul\":24368:24394   */\n      swap1\n      pop\n        /* \"#utility.yul\":24260:24401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24407:24500   */\n    tag_392:\n        /* \"#utility.yul\":24444:24450   */\n      0x00\n        /* \"#utility.yul\":24491:24493   */\n      0x20\n        /* \"#utility.yul\":24486:24488   */\n      0x1f\n        /* \"#utility.yul\":24479:24484   */\n      dup4\n        /* \"#utility.yul\":24475:24489   */\n      add\n        /* \"#utility.yul\":24471:24494   */\n      div\n        /* \"#utility.yul\":24461:24494   */\n      swap1\n      pop\n        /* \"#utility.yul\":24407:24500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24506:24613   */\n    tag_393:\n        /* \"#utility.yul\":24550:24558   */\n      0x00\n        /* \"#utility.yul\":24600:24605   */\n      dup3\n        /* \"#utility.yul\":24594:24598   */\n      dup3\n        /* \"#utility.yul\":24590:24606   */\n      shl\n        /* \"#utility.yul\":24569:24606   */\n      swap1\n      pop\n        /* \"#utility.yul\":24506:24613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24619:25012   */\n    tag_394:\n        /* \"#utility.yul\":24688:24694   */\n      0x00\n        /* \"#utility.yul\":24738:24739   */\n      0x08\n        /* \"#utility.yul\":24726:24736   */\n      dup4\n        /* \"#utility.yul\":24722:24740   */\n      mul\n        /* \"#utility.yul\":24761:24858   */\n      tag_658\n        /* \"#utility.yul\":24791:24857   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24780:24789   */\n      dup3\n        /* \"#utility.yul\":24761:24858   */\n      tag_393\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":24879:24918   */\n      tag_659\n        /* \"#utility.yul\":24909:24917   */\n      dup7\n        /* \"#utility.yul\":24898:24907   */\n      dup4\n        /* \"#utility.yul\":24879:24918   */\n      tag_393\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":24867:24918   */\n      swap6\n      pop\n        /* \"#utility.yul\":24951:24955   */\n      dup1\n        /* \"#utility.yul\":24947:24956   */\n      not\n        /* \"#utility.yul\":24940:24945   */\n      dup5\n        /* \"#utility.yul\":24936:24957   */\n      and\n        /* \"#utility.yul\":24927:24957   */\n      swap4\n      pop\n        /* \"#utility.yul\":25000:25004   */\n      dup1\n        /* \"#utility.yul\":24990:24998   */\n      dup7\n        /* \"#utility.yul\":24986:25005   */\n      and\n        /* \"#utility.yul\":24979:24984   */\n      dup5\n        /* \"#utility.yul\":24976:25006   */\n      or\n        /* \"#utility.yul\":24966:25006   */\n      swap3\n      pop\n        /* \"#utility.yul\":24695:25012   */\n      pop\n      pop\n        /* \"#utility.yul\":24619:25012   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25018:25160   */\n    tag_395:\n        /* \"#utility.yul\":25068:25077   */\n      0x00\n        /* \"#utility.yul\":25101:25154   */\n      tag_661\n        /* \"#utility.yul\":25119:25153   */\n      tag_662\n        /* \"#utility.yul\":25128:25152   */\n      tag_663\n        /* \"#utility.yul\":25146:25151   */\n      dup5\n        /* \"#utility.yul\":25128:25152   */\n      tag_323\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":25119:25153   */\n      tag_339\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":25101:25154   */\n      tag_323\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":25088:25154   */\n      swap1\n      pop\n        /* \"#utility.yul\":25018:25160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25166:25241   */\n    tag_396:\n        /* \"#utility.yul\":25209:25212   */\n      0x00\n        /* \"#utility.yul\":25230:25235   */\n      dup2\n        /* \"#utility.yul\":25223:25235   */\n      swap1\n      pop\n        /* \"#utility.yul\":25166:25241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25247:25516   */\n    tag_397:\n        /* \"#utility.yul\":25357:25396   */\n      tag_666\n        /* \"#utility.yul\":25388:25395   */\n      dup4\n        /* \"#utility.yul\":25357:25396   */\n      tag_395\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":25418:25509   */\n      tag_667\n        /* \"#utility.yul\":25467:25508   */\n      tag_668\n        /* \"#utility.yul\":25491:25507   */\n      dup3\n        /* \"#utility.yul\":25467:25508   */\n      tag_396\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":25459:25465   */\n      dup5\n        /* \"#utility.yul\":25452:25456   */\n      dup5\n        /* \"#utility.yul\":25446:25457   */\n      sload\n        /* \"#utility.yul\":25418:25509   */\n      tag_394\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":25412:25416   */\n      dup3\n        /* \"#utility.yul\":25405:25510   */\n      sstore\n        /* \"#utility.yul\":25323:25516   */\n      pop\n        /* \"#utility.yul\":25247:25516   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25522:25595   */\n    tag_398:\n        /* \"#utility.yul\":25567:25570   */\n      0x00\n        /* \"#utility.yul\":25522:25595   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":25601:25790   */\n    tag_399:\n        /* \"#utility.yul\":25678:25710   */\n      tag_671\n      tag_398\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":25719:25784   */\n      tag_672\n        /* \"#utility.yul\":25777:25783   */\n      dup2\n        /* \"#utility.yul\":25769:25775   */\n      dup5\n        /* \"#utility.yul\":25763:25767   */\n      dup5\n        /* \"#utility.yul\":25719:25784   */\n      tag_397\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":25654:25790   */\n      pop\n        /* \"#utility.yul\":25601:25790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25796:25982   */\n    tag_400:\n        /* \"#utility.yul\":25856:25976   */\n    tag_674:\n        /* \"#utility.yul\":25873:25876   */\n      dup2\n        /* \"#utility.yul\":25866:25871   */\n      dup2\n        /* \"#utility.yul\":25863:25877   */\n      lt\n        /* \"#utility.yul\":25856:25976   */\n      iszero\n      tag_676\n      jumpi\n        /* \"#utility.yul\":25927:25966   */\n      tag_677\n        /* \"#utility.yul\":25964:25965   */\n      0x00\n        /* \"#utility.yul\":25957:25962   */\n      dup3\n        /* \"#utility.yul\":25927:25966   */\n      tag_399\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":25900:25901   */\n      0x01\n        /* \"#utility.yul\":25893:25898   */\n      dup2\n        /* \"#utility.yul\":25889:25902   */\n      add\n        /* \"#utility.yul\":25880:25902   */\n      swap1\n      pop\n        /* \"#utility.yul\":25856:25976   */\n      jump(tag_674)\n    tag_676:\n        /* \"#utility.yul\":25796:25982   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25988:26531   */\n    tag_401:\n        /* \"#utility.yul\":26089:26091   */\n      0x1f\n        /* \"#utility.yul\":26084:26087   */\n      dup3\n        /* \"#utility.yul\":26081:26092   */\n      gt\n        /* \"#utility.yul\":26078:26524   */\n      iszero\n      tag_679\n      jumpi\n        /* \"#utility.yul\":26123:26161   */\n      tag_680\n        /* \"#utility.yul\":26155:26160   */\n      dup2\n        /* \"#utility.yul\":26123:26161   */\n      tag_391\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":26207:26236   */\n      tag_681\n        /* \"#utility.yul\":26225:26235   */\n      dup5\n        /* \"#utility.yul\":26207:26236   */\n      tag_392\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":26197:26205   */\n      dup2\n        /* \"#utility.yul\":26193:26237   */\n      add\n        /* \"#utility.yul\":26390:26392   */\n      0x20\n        /* \"#utility.yul\":26378:26388   */\n      dup6\n        /* \"#utility.yul\":26375:26393   */\n      lt\n        /* \"#utility.yul\":26372:26421   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":26411:26419   */\n      dup2\n        /* \"#utility.yul\":26396:26419   */\n      swap1\n      pop\n        /* \"#utility.yul\":26372:26421   */\n    tag_682:\n        /* \"#utility.yul\":26434:26514   */\n      tag_683\n        /* \"#utility.yul\":26490:26512   */\n      tag_684\n        /* \"#utility.yul\":26508:26511   */\n      dup6\n        /* \"#utility.yul\":26490:26512   */\n      tag_392\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":26480:26488   */\n      dup4\n        /* \"#utility.yul\":26476:26513   */\n      add\n        /* \"#utility.yul\":26463:26474   */\n      dup3\n        /* \"#utility.yul\":26434:26514   */\n      tag_400\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":26093:26524   */\n      pop\n      pop\n        /* \"#utility.yul\":26078:26524   */\n    tag_679:\n        /* \"#utility.yul\":25988:26531   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26537:26654   */\n    tag_402:\n        /* \"#utility.yul\":26591:26599   */\n      0x00\n        /* \"#utility.yul\":26641:26646   */\n      dup3\n        /* \"#utility.yul\":26635:26639   */\n      dup3\n        /* \"#utility.yul\":26631:26647   */\n      shr\n        /* \"#utility.yul\":26610:26647   */\n      swap1\n      pop\n        /* \"#utility.yul\":26537:26654   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26660:26829   */\n    tag_403:\n        /* \"#utility.yul\":26704:26710   */\n      0x00\n        /* \"#utility.yul\":26737:26788   */\n      tag_687\n        /* \"#utility.yul\":26785:26786   */\n      0x00\n        /* \"#utility.yul\":26781:26787   */\n      not\n        /* \"#utility.yul\":26773:26778   */\n      dup5\n        /* \"#utility.yul\":26770:26771   */\n      0x08\n        /* \"#utility.yul\":26766:26779   */\n      mul\n        /* \"#utility.yul\":26737:26788   */\n      tag_402\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":26733:26789   */\n      not\n        /* \"#utility.yul\":26818:26822   */\n      dup1\n        /* \"#utility.yul\":26812:26816   */\n      dup4\n        /* \"#utility.yul\":26808:26823   */\n      and\n        /* \"#utility.yul\":26798:26823   */\n      swap2\n      pop\n        /* \"#utility.yul\":26711:26829   */\n      pop\n        /* \"#utility.yul\":26660:26829   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26834:27129   */\n    tag_404:\n        /* \"#utility.yul\":26910:26914   */\n      0x00\n        /* \"#utility.yul\":27056:27085   */\n      tag_689\n        /* \"#utility.yul\":27081:27084   */\n      dup4\n        /* \"#utility.yul\":27075:27079   */\n      dup4\n        /* \"#utility.yul\":27056:27085   */\n      tag_403\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":27048:27085   */\n      swap2\n      pop\n        /* \"#utility.yul\":27118:27121   */\n      dup3\n        /* \"#utility.yul\":27115:27116   */\n      0x02\n        /* \"#utility.yul\":27111:27122   */\n      mul\n        /* \"#utility.yul\":27105:27109   */\n      dup3\n        /* \"#utility.yul\":27102:27123   */\n      or\n        /* \"#utility.yul\":27094:27123   */\n      swap1\n      pop\n        /* \"#utility.yul\":26834:27129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27134:28529   */\n    tag_192:\n        /* \"#utility.yul\":27251:27288   */\n      tag_691\n        /* \"#utility.yul\":27284:27287   */\n      dup3\n        /* \"#utility.yul\":27251:27288   */\n      tag_346\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":27353:27371   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":27345:27351   */\n      dup2\n        /* \"#utility.yul\":27342:27372   */\n      gt\n        /* \"#utility.yul\":27339:27395   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":27375:27393   */\n      tag_693\n      tag_354\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":27339:27395   */\n    tag_692:\n        /* \"#utility.yul\":27419:27457   */\n      tag_694\n        /* \"#utility.yul\":27451:27455   */\n      dup3\n        /* \"#utility.yul\":27445:27456   */\n      sload\n        /* \"#utility.yul\":27419:27457   */\n      tag_170\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":27504:27571   */\n      tag_695\n        /* \"#utility.yul\":27564:27570   */\n      dup3\n        /* \"#utility.yul\":27556:27562   */\n      dup3\n        /* \"#utility.yul\":27550:27554   */\n      dup6\n        /* \"#utility.yul\":27504:27571   */\n      tag_401\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":27598:27599   */\n      0x00\n        /* \"#utility.yul\":27622:27626   */\n      0x20\n        /* \"#utility.yul\":27609:27626   */\n      swap1\n      pop\n        /* \"#utility.yul\":27654:27656   */\n      0x1f\n        /* \"#utility.yul\":27646:27652   */\n      dup4\n        /* \"#utility.yul\":27643:27657   */\n      gt\n        /* \"#utility.yul\":27671:27672   */\n      0x01\n        /* \"#utility.yul\":27666:28284   */\n      dup2\n      eq\n      tag_697\n      jumpi\n        /* \"#utility.yul\":28328:28329   */\n      0x00\n        /* \"#utility.yul\":28345:28351   */\n      dup5\n        /* \"#utility.yul\":28342:28419   */\n      iszero\n      tag_698\n      jumpi\n        /* \"#utility.yul\":28394:28403   */\n      dup3\n        /* \"#utility.yul\":28389:28392   */\n      dup8\n        /* \"#utility.yul\":28385:28404   */\n      add\n        /* \"#utility.yul\":28379:28405   */\n      mload\n        /* \"#utility.yul\":28370:28405   */\n      swap1\n      pop\n        /* \"#utility.yul\":28342:28419   */\n    tag_698:\n        /* \"#utility.yul\":28445:28512   */\n      tag_699\n        /* \"#utility.yul\":28505:28511   */\n      dup6\n        /* \"#utility.yul\":28498:28503   */\n      dup3\n        /* \"#utility.yul\":28445:28512   */\n      tag_404\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":28439:28443   */\n      dup7\n        /* \"#utility.yul\":28432:28513   */\n      sstore\n        /* \"#utility.yul\":28301:28523   */\n      pop\n        /* \"#utility.yul\":27636:28523   */\n      jump(tag_696)\n        /* \"#utility.yul\":27666:28284   */\n    tag_697:\n        /* \"#utility.yul\":27718:27722   */\n      0x1f\n        /* \"#utility.yul\":27714:27723   */\n      not\n        /* \"#utility.yul\":27706:27712   */\n      dup5\n        /* \"#utility.yul\":27702:27724   */\n      and\n        /* \"#utility.yul\":27752:27789   */\n      tag_700\n        /* \"#utility.yul\":27784:27788   */\n      dup7\n        /* \"#utility.yul\":27752:27789   */\n      tag_391\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":27811:27812   */\n      0x00\n        /* \"#utility.yul\":27825:28033   */\n    tag_701:\n        /* \"#utility.yul\":27839:27846   */\n      dup3\n        /* \"#utility.yul\":27836:27837   */\n      dup2\n        /* \"#utility.yul\":27833:27847   */\n      lt\n        /* \"#utility.yul\":27825:28033   */\n      iszero\n      tag_703\n      jumpi\n        /* \"#utility.yul\":27918:27927   */\n      dup5\n        /* \"#utility.yul\":27913:27916   */\n      dup10\n        /* \"#utility.yul\":27909:27928   */\n      add\n        /* \"#utility.yul\":27903:27929   */\n      mload\n        /* \"#utility.yul\":27895:27901   */\n      dup3\n        /* \"#utility.yul\":27888:27930   */\n      sstore\n        /* \"#utility.yul\":27969:27970   */\n      0x01\n        /* \"#utility.yul\":27961:27967   */\n      dup3\n        /* \"#utility.yul\":27957:27971   */\n      add\n        /* \"#utility.yul\":27947:27971   */\n      swap2\n      pop\n        /* \"#utility.yul\":28016:28018   */\n      0x20\n        /* \"#utility.yul\":28005:28014   */\n      dup6\n        /* \"#utility.yul\":28001:28019   */\n      add\n        /* \"#utility.yul\":27988:28019   */\n      swap5\n      pop\n        /* \"#utility.yul\":27862:27866   */\n      0x20\n        /* \"#utility.yul\":27859:27860   */\n      dup2\n        /* \"#utility.yul\":27855:27867   */\n      add\n        /* \"#utility.yul\":27850:27867   */\n      swap1\n      pop\n        /* \"#utility.yul\":27825:28033   */\n      jump(tag_701)\n    tag_703:\n        /* \"#utility.yul\":28061:28067   */\n      dup7\n        /* \"#utility.yul\":28052:28059   */\n      dup4\n        /* \"#utility.yul\":28049:28068   */\n      lt\n        /* \"#utility.yul\":28046:28225   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":28119:28128   */\n      dup5\n        /* \"#utility.yul\":28114:28117   */\n      dup10\n        /* \"#utility.yul\":28110:28129   */\n      add\n        /* \"#utility.yul\":28104:28130   */\n      mload\n        /* \"#utility.yul\":28162:28210   */\n      tag_705\n        /* \"#utility.yul\":28204:28208   */\n      0x1f\n        /* \"#utility.yul\":28196:28202   */\n      dup10\n        /* \"#utility.yul\":28192:28209   */\n      and\n        /* \"#utility.yul\":28181:28190   */\n      dup3\n        /* \"#utility.yul\":28162:28210   */\n      tag_403\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":28154:28160   */\n      dup4\n        /* \"#utility.yul\":28147:28211   */\n      sstore\n        /* \"#utility.yul\":28069:28225   */\n      pop\n        /* \"#utility.yul\":28046:28225   */\n    tag_704:\n        /* \"#utility.yul\":28271:28272   */\n      0x01\n        /* \"#utility.yul\":28267:28268   */\n      0x02\n        /* \"#utility.yul\":28259:28265   */\n      dup9\n        /* \"#utility.yul\":28255:28269   */\n      mul\n        /* \"#utility.yul\":28251:28273   */\n      add\n        /* \"#utility.yul\":28245:28249   */\n      dup9\n        /* \"#utility.yul\":28238:28274   */\n      sstore\n        /* \"#utility.yul\":27673:28284   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":27636:28523   */\n    tag_696:\n      pop\n        /* \"#utility.yul\":27226:28529   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":27134:28529   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28535:29064   */\n    tag_194:\n        /* \"#utility.yul\":28702:28706   */\n      0x00\n        /* \"#utility.yul\":28740:28742   */\n      0x60\n        /* \"#utility.yul\":28729:28738   */\n      dup3\n        /* \"#utility.yul\":28725:28743   */\n      add\n        /* \"#utility.yul\":28717:28743   */\n      swap1\n      pop\n        /* \"#utility.yul\":28753:28823   */\n      tag_707\n        /* \"#utility.yul\":28820:28821   */\n      0x00\n        /* \"#utility.yul\":28809:28818   */\n      dup4\n        /* \"#utility.yul\":28805:28822   */\n      add\n        /* \"#utility.yul\":28796:28802   */\n      dup7\n        /* \"#utility.yul\":28753:28823   */\n      tag_366\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":28833:28904   */\n      tag_708\n        /* \"#utility.yul\":28900:28902   */\n      0x20\n        /* \"#utility.yul\":28889:28898   */\n      dup4\n        /* \"#utility.yul\":28885:28903   */\n      add\n        /* \"#utility.yul\":28876:28882   */\n      dup6\n        /* \"#utility.yul\":28833:28904   */\n      tag_366\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":28951:28960   */\n      dup2\n        /* \"#utility.yul\":28945:28949   */\n      dup2\n        /* \"#utility.yul\":28941:28961   */\n      sub\n        /* \"#utility.yul\":28936:28938   */\n      0x40\n        /* \"#utility.yul\":28925:28934   */\n      dup4\n        /* \"#utility.yul\":28921:28939   */\n      add\n        /* \"#utility.yul\":28914:28962   */\n      mstore\n        /* \"#utility.yul\":28979:29057   */\n      tag_709\n        /* \"#utility.yul\":29052:29056   */\n      dup2\n        /* \"#utility.yul\":29043:29049   */\n      dup5\n        /* \"#utility.yul\":28979:29057   */\n      tag_349\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":28971:29057   */\n      swap1\n      pop\n        /* \"#utility.yul\":28535:29064   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29070:29237   */\n    tag_405:\n        /* \"#utility.yul\":29210:29229   */\n      0x5a65726f20616464726573732075736572000000000000000000000000000000\n        /* \"#utility.yul\":29206:29207   */\n      0x00\n        /* \"#utility.yul\":29198:29204   */\n      dup3\n        /* \"#utility.yul\":29194:29208   */\n      add\n        /* \"#utility.yul\":29187:29230   */\n      mstore\n        /* \"#utility.yul\":29070:29237   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29243:29609   */\n    tag_406:\n        /* \"#utility.yul\":29385:29388   */\n      0x00\n        /* \"#utility.yul\":29406:29473   */\n      tag_712\n        /* \"#utility.yul\":29470:29472   */\n      0x11\n        /* \"#utility.yul\":29465:29468   */\n      dup4\n        /* \"#utility.yul\":29406:29473   */\n      tag_326\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":29399:29473   */\n      swap2\n      pop\n        /* \"#utility.yul\":29482:29575   */\n      tag_713\n        /* \"#utility.yul\":29571:29574   */\n      dup3\n        /* \"#utility.yul\":29482:29575   */\n      tag_405\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":29600:29602   */\n      0x20\n        /* \"#utility.yul\":29595:29598   */\n      dup3\n        /* \"#utility.yul\":29591:29603   */\n      add\n        /* \"#utility.yul\":29584:29603   */\n      swap1\n      pop\n        /* \"#utility.yul\":29243:29609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29615:30034   */\n    tag_205:\n        /* \"#utility.yul\":29781:29785   */\n      0x00\n        /* \"#utility.yul\":29819:29821   */\n      0x20\n        /* \"#utility.yul\":29808:29817   */\n      dup3\n        /* \"#utility.yul\":29804:29822   */\n      add\n        /* \"#utility.yul\":29796:29822   */\n      swap1\n      pop\n        /* \"#utility.yul\":29868:29877   */\n      dup2\n        /* \"#utility.yul\":29862:29866   */\n      dup2\n        /* \"#utility.yul\":29858:29878   */\n      sub\n        /* \"#utility.yul\":29854:29855   */\n      0x00\n        /* \"#utility.yul\":29843:29852   */\n      dup4\n        /* \"#utility.yul\":29839:29856   */\n      add\n        /* \"#utility.yul\":29832:29879   */\n      mstore\n        /* \"#utility.yul\":29896:30027   */\n      tag_715\n        /* \"#utility.yul\":30022:30026   */\n      dup2\n        /* \"#utility.yul\":29896:30027   */\n      tag_406\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":29888:30027   */\n      swap1\n      pop\n        /* \"#utility.yul\":29615:30034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30040:30214   */\n    tag_407:\n        /* \"#utility.yul\":30180:30206   */\n      0x4d69736d617463686564206172726179206c656e677468730000000000000000\n        /* \"#utility.yul\":30176:30177   */\n      0x00\n        /* \"#utility.yul\":30168:30174   */\n      dup3\n        /* \"#utility.yul\":30164:30178   */\n      add\n        /* \"#utility.yul\":30157:30207   */\n      mstore\n        /* \"#utility.yul\":30040:30214   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30220:30586   */\n    tag_408:\n        /* \"#utility.yul\":30362:30365   */\n      0x00\n        /* \"#utility.yul\":30383:30450   */\n      tag_718\n        /* \"#utility.yul\":30447:30449   */\n      0x18\n        /* \"#utility.yul\":30442:30445   */\n      dup4\n        /* \"#utility.yul\":30383:30450   */\n      tag_326\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":30376:30450   */\n      swap2\n      pop\n        /* \"#utility.yul\":30459:30552   */\n      tag_719\n        /* \"#utility.yul\":30548:30551   */\n      dup3\n        /* \"#utility.yul\":30459:30552   */\n      tag_407\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":30577:30579   */\n      0x20\n        /* \"#utility.yul\":30572:30575   */\n      dup3\n        /* \"#utility.yul\":30568:30580   */\n      add\n        /* \"#utility.yul\":30561:30580   */\n      swap1\n      pop\n        /* \"#utility.yul\":30220:30586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30592:31011   */\n    tag_217:\n        /* \"#utility.yul\":30758:30762   */\n      0x00\n        /* \"#utility.yul\":30796:30798   */\n      0x20\n        /* \"#utility.yul\":30785:30794   */\n      dup3\n        /* \"#utility.yul\":30781:30799   */\n      add\n        /* \"#utility.yul\":30773:30799   */\n      swap1\n      pop\n        /* \"#utility.yul\":30845:30854   */\n      dup2\n        /* \"#utility.yul\":30839:30843   */\n      dup2\n        /* \"#utility.yul\":30835:30855   */\n      sub\n        /* \"#utility.yul\":30831:30832   */\n      0x00\n        /* \"#utility.yul\":30820:30829   */\n      dup4\n        /* \"#utility.yul\":30816:30833   */\n      add\n        /* \"#utility.yul\":30809:30856   */\n      mstore\n        /* \"#utility.yul\":30873:31004   */\n      tag_721\n        /* \"#utility.yul\":30999:31003   */\n      dup2\n        /* \"#utility.yul\":30873:31004   */\n      tag_408\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":30865:31004   */\n      swap1\n      pop\n        /* \"#utility.yul\":30592:31011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31017:31197   */\n    tag_223:\n        /* \"#utility.yul\":31065:31142   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31062:31063   */\n      0x00\n        /* \"#utility.yul\":31055:31143   */\n      mstore\n        /* \"#utility.yul\":31162:31166   */\n      0x32\n        /* \"#utility.yul\":31159:31160   */\n      0x04\n        /* \"#utility.yul\":31152:31167   */\n      mstore\n        /* \"#utility.yul\":31186:31190   */\n      0x24\n        /* \"#utility.yul\":31183:31184   */\n      0x00\n        /* \"#utility.yul\":31176:31191   */\n      revert\n        /* \"#utility.yul\":31203:31433   */\n    tag_409:\n        /* \"#utility.yul\":31343:31377   */\n      0x5769746864726177616c20616d6f756e74206d75737420626520677265617465\n        /* \"#utility.yul\":31339:31340   */\n      0x00\n        /* \"#utility.yul\":31331:31337   */\n      dup3\n        /* \"#utility.yul\":31327:31341   */\n      add\n        /* \"#utility.yul\":31320:31378   */\n      mstore\n        /* \"#utility.yul\":31412:31425   */\n      0x72207468616e207a65726f000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31407:31409   */\n      0x20\n        /* \"#utility.yul\":31399:31405   */\n      dup3\n        /* \"#utility.yul\":31395:31410   */\n      add\n        /* \"#utility.yul\":31388:31426   */\n      mstore\n        /* \"#utility.yul\":31203:31433   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31439:31805   */\n    tag_410:\n        /* \"#utility.yul\":31581:31584   */\n      0x00\n        /* \"#utility.yul\":31602:31669   */\n      tag_725\n        /* \"#utility.yul\":31666:31668   */\n      0x2b\n        /* \"#utility.yul\":31661:31664   */\n      dup4\n        /* \"#utility.yul\":31602:31669   */\n      tag_326\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":31595:31669   */\n      swap2\n      pop\n        /* \"#utility.yul\":31678:31771   */\n      tag_726\n        /* \"#utility.yul\":31767:31770   */\n      dup3\n        /* \"#utility.yul\":31678:31771   */\n      tag_409\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":31796:31798   */\n      0x40\n        /* \"#utility.yul\":31791:31794   */\n      dup3\n        /* \"#utility.yul\":31787:31799   */\n      add\n        /* \"#utility.yul\":31780:31799   */\n      swap1\n      pop\n        /* \"#utility.yul\":31439:31805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31811:32230   */\n    tag_246:\n        /* \"#utility.yul\":31977:31981   */\n      0x00\n        /* \"#utility.yul\":32015:32017   */\n      0x20\n        /* \"#utility.yul\":32004:32013   */\n      dup3\n        /* \"#utility.yul\":32000:32018   */\n      add\n        /* \"#utility.yul\":31992:32018   */\n      swap1\n      pop\n        /* \"#utility.yul\":32064:32073   */\n      dup2\n        /* \"#utility.yul\":32058:32062   */\n      dup2\n        /* \"#utility.yul\":32054:32074   */\n      sub\n        /* \"#utility.yul\":32050:32051   */\n      0x00\n        /* \"#utility.yul\":32039:32048   */\n      dup4\n        /* \"#utility.yul\":32035:32052   */\n      add\n        /* \"#utility.yul\":32028:32075   */\n      mstore\n        /* \"#utility.yul\":32092:32223   */\n      tag_728\n        /* \"#utility.yul\":32218:32222   */\n      dup2\n        /* \"#utility.yul\":32092:32223   */\n      tag_410\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":32084:32223   */\n      swap1\n      pop\n        /* \"#utility.yul\":31811:32230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32236:32404   */\n    tag_411:\n        /* \"#utility.yul\":32376:32396   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":32372:32373   */\n      0x00\n        /* \"#utility.yul\":32364:32370   */\n      dup3\n        /* \"#utility.yul\":32360:32374   */\n      add\n        /* \"#utility.yul\":32353:32397   */\n      mstore\n        /* \"#utility.yul\":32236:32404   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32410:32776   */\n    tag_412:\n        /* \"#utility.yul\":32552:32555   */\n      0x00\n        /* \"#utility.yul\":32573:32640   */\n      tag_731\n        /* \"#utility.yul\":32637:32639   */\n      0x12\n        /* \"#utility.yul\":32632:32635   */\n      dup4\n        /* \"#utility.yul\":32573:32640   */\n      tag_326\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":32566:32640   */\n      swap2\n      pop\n        /* \"#utility.yul\":32649:32742   */\n      tag_732\n        /* \"#utility.yul\":32738:32741   */\n      dup3\n        /* \"#utility.yul\":32649:32742   */\n      tag_411\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":32767:32769   */\n      0x20\n        /* \"#utility.yul\":32762:32765   */\n      dup3\n        /* \"#utility.yul\":32758:32770   */\n      add\n        /* \"#utility.yul\":32751:32770   */\n      swap1\n      pop\n        /* \"#utility.yul\":32410:32776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32782:33201   */\n    tag_249:\n        /* \"#utility.yul\":32948:32952   */\n      0x00\n        /* \"#utility.yul\":32986:32988   */\n      0x20\n        /* \"#utility.yul\":32975:32984   */\n      dup3\n        /* \"#utility.yul\":32971:32989   */\n      add\n        /* \"#utility.yul\":32963:32989   */\n      swap1\n      pop\n        /* \"#utility.yul\":33035:33044   */\n      dup2\n        /* \"#utility.yul\":33029:33033   */\n      dup2\n        /* \"#utility.yul\":33025:33045   */\n      sub\n        /* \"#utility.yul\":33021:33022   */\n      0x00\n        /* \"#utility.yul\":33010:33019   */\n      dup4\n        /* \"#utility.yul\":33006:33023   */\n      add\n        /* \"#utility.yul\":32999:33046   */\n      mstore\n        /* \"#utility.yul\":33063:33194   */\n      tag_734\n        /* \"#utility.yul\":33189:33193   */\n      dup2\n        /* \"#utility.yul\":33063:33194   */\n      tag_412\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":33055:33194   */\n      swap1\n      pop\n        /* \"#utility.yul\":32782:33201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33207:33388   */\n    tag_413:\n        /* \"#utility.yul\":33347:33380   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":33343:33344   */\n      0x00\n        /* \"#utility.yul\":33335:33341   */\n      dup3\n        /* \"#utility.yul\":33331:33345   */\n      add\n        /* \"#utility.yul\":33324:33381   */\n      mstore\n        /* \"#utility.yul\":33207:33388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33394:33760   */\n    tag_414:\n        /* \"#utility.yul\":33536:33539   */\n      0x00\n        /* \"#utility.yul\":33557:33624   */\n      tag_737\n        /* \"#utility.yul\":33621:33623   */\n      0x1f\n        /* \"#utility.yul\":33616:33619   */\n      dup4\n        /* \"#utility.yul\":33557:33624   */\n      tag_326\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":33550:33624   */\n      swap2\n      pop\n        /* \"#utility.yul\":33633:33726   */\n      tag_738\n        /* \"#utility.yul\":33722:33725   */\n      dup3\n        /* \"#utility.yul\":33633:33726   */\n      tag_413\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":33751:33753   */\n      0x20\n        /* \"#utility.yul\":33746:33749   */\n      dup3\n        /* \"#utility.yul\":33742:33754   */\n      add\n        /* \"#utility.yul\":33735:33754   */\n      swap1\n      pop\n        /* \"#utility.yul\":33394:33760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33766:34185   */\n    tag_268:\n        /* \"#utility.yul\":33932:33936   */\n      0x00\n        /* \"#utility.yul\":33970:33972   */\n      0x20\n        /* \"#utility.yul\":33959:33968   */\n      dup3\n        /* \"#utility.yul\":33955:33973   */\n      add\n        /* \"#utility.yul\":33947:33973   */\n      swap1\n      pop\n        /* \"#utility.yul\":34019:34028   */\n      dup2\n        /* \"#utility.yul\":34013:34017   */\n      dup2\n        /* \"#utility.yul\":34009:34029   */\n      sub\n        /* \"#utility.yul\":34005:34006   */\n      0x00\n        /* \"#utility.yul\":33994:34003   */\n      dup4\n        /* \"#utility.yul\":33990:34007   */\n      add\n        /* \"#utility.yul\":33983:34030   */\n      mstore\n        /* \"#utility.yul\":34047:34178   */\n      tag_740\n        /* \"#utility.yul\":34173:34177   */\n      dup2\n        /* \"#utility.yul\":34047:34178   */\n      tag_414\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":34039:34178   */\n      swap1\n      pop\n        /* \"#utility.yul\":33766:34185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34191:34523   */\n    tag_272:\n        /* \"#utility.yul\":34312:34316   */\n      0x00\n        /* \"#utility.yul\":34350:34352   */\n      0x40\n        /* \"#utility.yul\":34339:34348   */\n      dup3\n        /* \"#utility.yul\":34335:34353   */\n      add\n        /* \"#utility.yul\":34327:34353   */\n      swap1\n      pop\n        /* \"#utility.yul\":34363:34434   */\n      tag_742\n        /* \"#utility.yul\":34431:34432   */\n      0x00\n        /* \"#utility.yul\":34420:34429   */\n      dup4\n        /* \"#utility.yul\":34416:34433   */\n      add\n        /* \"#utility.yul\":34407:34413   */\n      dup6\n        /* \"#utility.yul\":34363:34434   */\n      tag_336\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":34444:34516   */\n      tag_743\n        /* \"#utility.yul\":34512:34514   */\n      0x20\n        /* \"#utility.yul\":34501:34510   */\n      dup4\n        /* \"#utility.yul\":34497:34515   */\n      add\n        /* \"#utility.yul\":34488:34494   */\n      dup5\n        /* \"#utility.yul\":34444:34516   */\n      tag_325\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":34191:34523   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34529:34971   */\n    tag_278:\n        /* \"#utility.yul\":34678:34682   */\n      0x00\n        /* \"#utility.yul\":34716:34718   */\n      0x60\n        /* \"#utility.yul\":34705:34714   */\n      dup3\n        /* \"#utility.yul\":34701:34719   */\n      add\n        /* \"#utility.yul\":34693:34719   */\n      swap1\n      pop\n        /* \"#utility.yul\":34729:34800   */\n      tag_745\n        /* \"#utility.yul\":34797:34798   */\n      0x00\n        /* \"#utility.yul\":34786:34795   */\n      dup4\n        /* \"#utility.yul\":34782:34799   */\n      add\n        /* \"#utility.yul\":34773:34779   */\n      dup7\n        /* \"#utility.yul\":34729:34800   */\n      tag_336\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":34810:34882   */\n      tag_746\n        /* \"#utility.yul\":34878:34880   */\n      0x20\n        /* \"#utility.yul\":34867:34876   */\n      dup4\n        /* \"#utility.yul\":34863:34881   */\n      add\n        /* \"#utility.yul\":34854:34860   */\n      dup6\n        /* \"#utility.yul\":34810:34882   */\n      tag_336\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":34892:34964   */\n      tag_747\n        /* \"#utility.yul\":34960:34962   */\n      0x40\n        /* \"#utility.yul\":34949:34958   */\n      dup4\n        /* \"#utility.yul\":34945:34963   */\n      add\n        /* \"#utility.yul\":34936:34942   */\n      dup5\n        /* \"#utility.yul\":34892:34964   */\n      tag_325\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":34529:34971   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208523ef908c51dcee6fa87df007e6a606ded81ab694063b67e7b2bc736656fecd64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DF6 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xB807A3C4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB807A3C4 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xE3E7C1F9 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x429 JUMPI PUSH2 0x1AA JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xA9012C89 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xA9590E8A EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xAEE9C872 EQ PUSH2 0x375 JUMPI PUSH2 0x1AA JUMP JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0x2BB JUMPI PUSH2 0x1AA JUMP JUMPDEST DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x237 JUMPI PUSH2 0x1AA JUMP JUMPDEST CALLDATASIZE PUSH2 0x1AA JUMPI CALLVALUE PUSH1 0x35 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x221 PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0xA64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0xC2E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FB PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST PUSH2 0xD5E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x22CD JUMP JUMPDEST PUSH2 0x11D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1476 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x14FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x459 PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x33 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x4A9 JUMPI POP PUSH1 0x33 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x51E JUMPI TIMESTAMP PUSH1 0x33 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xFA7410D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x238E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x36 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x240D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x653 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x36 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x2493 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x80D JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x784 SWAP1 PUSH2 0x24F3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x839 JUMP JUMPDEST PUSH2 0x838 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17FF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP4 PUSH1 0x40 MLOAD PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x8A7 PUSH2 0x187E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x8B6 PUSH2 0x17B2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x930 JUMPI DUP1 CALLVALUE EQ PUSH2 0x92B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x969 SWAP1 PUSH2 0x2647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x99F CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1887 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA60 PUSH2 0x187E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA6D PUSH2 0x1909 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAB5 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAE8 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xAF6 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xB7A JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xB83 DUP7 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0xB8B PUSH2 0x1944 JUMP JUMPDEST DUP7 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC25 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC1C SWAP2 SWAP1 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC36 PUSH2 0x1956 JUMP JUMPDEST PUSH2 0xC3F PUSH0 PUSH2 0x19DD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x33 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xCA8 SWAP1 PUSH2 0x26E4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCD4 SWAP1 PUSH2 0x26E4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCF6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD33 PUSH2 0x1AAE JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x2749 JUMP JUMPDEST PUSH2 0xE36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2D SWAP1 PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xE8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE83 SWAP1 PUSH2 0x284C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x33 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xF2C SWAP2 SWAP1 PUSH2 0x29FE JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF63 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x101A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x103E SWAP2 SWAP1 PUSH2 0x2749 JUMP JUMPDEST PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1074 SWAP1 PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E2 SWAP1 PUSH2 0x2B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x36 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11C5 SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122C SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1247 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x126B SWAP2 SWAP1 PUSH2 0x2749 JUMP JUMPDEST PUSH2 0x12AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A1 SWAP1 PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x12F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E9 SWAP1 PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x146E JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x1312 JUMPI PUSH2 0x1311 PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x36 PUSH0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x132F JUMPI PUSH2 0x132E PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1344 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x13E6 JUMPI PUSH2 0x13E5 PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13FB SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1445 JUMPI PUSH2 0x1444 PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x1459 SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x12F4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x147E PUSH2 0x1956 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14EE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F7 DUP2 PUSH2 0x19DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1502 PUSH2 0x1956 JUMP JUMPDEST PUSH2 0x150A PUSH2 0x17B2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x154C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1543 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x15CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C3 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1618 SWAP2 SWAP1 PUSH2 0x2493 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1707 JUMPI PUSH0 PUSH2 0x165B PUSH2 0xD29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x167E SWAP1 PUSH2 0x24F3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x16B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1701 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F8 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x173A JUMP JUMPDEST PUSH2 0x1739 PUSH2 0x1712 PUSH2 0xD29 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17FF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1759 PUSH2 0xD29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x179E SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17AE PUSH2 0x187E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x17F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17ED SWAP1 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1879 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1832 SWAP3 SWAP2 SWAP1 PUSH2 0x2D64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1AD5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1903 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x18BC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1AD5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1938 PUSH2 0x1B70 JUMP JUMPDEST PUSH2 0x1941 DUP2 PUSH2 0x1BB0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x194C PUSH2 0x1B70 JUMP JUMPDEST PUSH2 0x1954 PUSH2 0x1C34 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x195E PUSH2 0x1C45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x197C PUSH2 0xD29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19DB JUMPI PUSH2 0x199F PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D2 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x19E6 PUSH2 0x1AAE JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1AF4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1B0D JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1B28 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1B6A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B61 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1B78 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x1BAE JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1BB8 PUSH2 0x1B70 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C28 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1F SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C31 DUP2 PUSH2 0x19DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C3C PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1C55 PUSH2 0x1909 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CAA DUP3 PUSH2 0x1C6A JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB5 DUP4 PUSH2 0x1C6A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CCD JUMPI PUSH2 0x1CCC PUSH2 0x1C73 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CDC DUP2 PUSH2 0x1C6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537765657473706F743A20757365206465706F73697428290000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3F PUSH1 0x18 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4A DUP3 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D6C DUP2 PUSH2 0x1D33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAD DUP3 PUSH2 0x1D84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DBD DUP2 PUSH2 0x1DA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DC7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DD8 DUP2 PUSH2 0x1DB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF3 JUMPI PUSH2 0x1DF2 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E00 DUP5 DUP3 DUP6 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E12 DUP2 PUSH2 0x1DA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E2B PUSH0 DUP4 ADD DUP5 PUSH2 0x1E09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E3A DUP2 PUSH2 0x1C6A JUMP JUMPDEST DUP2 EQ PUSH2 0x1E44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E55 DUP2 PUSH2 0x1E31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E71 JUMPI PUSH2 0x1E70 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E7E DUP6 DUP3 DUP7 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E8F DUP6 DUP3 DUP7 ADD PUSH2 0x1E47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAF JUMPI PUSH2 0x1EAE PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EBC DUP6 DUP3 DUP7 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ECD DUP6 DUP3 DUP7 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EFA PUSH2 0x1EF5 PUSH2 0x1EF0 DUP5 PUSH2 0x1D84 JUMP JUMPDEST PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x1D84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0B DUP3 PUSH2 0x1EE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F1C DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2C DUP2 PUSH2 0x1F12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F45 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F67 DUP2 PUSH2 0x1F4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9F DUP3 PUSH2 0x1F6D JUMP JUMPDEST PUSH2 0x1FA9 DUP2 DUP6 PUSH2 0x1CFB JUMP JUMPDEST SWAP4 POP PUSH2 0x1FB9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x1FC2 DUP2 PUSH2 0x1F85 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FE0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x1FED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F5E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1FFF DUP2 DUP5 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2012 DUP2 PUSH2 0x1F4B JUMP JUMPDEST DUP2 EQ PUSH2 0x201C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x202D DUP2 PUSH2 0x2009 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2071 DUP3 PUSH2 0x1F85 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2090 JUMPI PUSH2 0x208F PUSH2 0x203B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20A2 PUSH2 0x1D73 JUMP JUMPDEST SWAP1 POP PUSH2 0x20AE DUP3 DUP3 PUSH2 0x2068 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20CD JUMPI PUSH2 0x20CC PUSH2 0x203B JUMP JUMPDEST JUMPDEST PUSH2 0x20D6 DUP3 PUSH2 0x1F85 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2103 PUSH2 0x20FE DUP5 PUSH2 0x20B3 JUMP JUMPDEST PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x211F JUMPI PUSH2 0x211E PUSH2 0x2037 JUMP JUMPDEST JUMPDEST PUSH2 0x212A DUP5 DUP3 DUP6 PUSH2 0x20E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2146 JUMPI PUSH2 0x2145 PUSH2 0x2033 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2156 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2176 JUMPI PUSH2 0x2175 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2183 DUP7 DUP3 DUP8 ADD PUSH2 0x201F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2194 DUP7 DUP3 DUP8 ADD PUSH2 0x201F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21B5 JUMPI PUSH2 0x21B4 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH2 0x21C1 DUP7 DUP3 DUP8 ADD PUSH2 0x2132 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21E2 JUMPI PUSH2 0x21E1 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21EF DUP7 DUP3 DUP8 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2200 DUP7 DUP3 DUP8 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2211 DUP7 DUP3 DUP8 ADD PUSH2 0x1E47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2238 JUMPI PUSH2 0x2237 PUSH2 0x2033 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2255 JUMPI PUSH2 0x2254 PUSH2 0x221B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2271 JUMPI PUSH2 0x2270 PUSH2 0x221F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x228D JUMPI PUSH2 0x228C PUSH2 0x2033 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22AA JUMPI PUSH2 0x22A9 PUSH2 0x221B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x22C6 JUMPI PUSH2 0x22C5 PUSH2 0x221F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22E6 JUMPI PUSH2 0x22E5 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22F3 DUP9 DUP3 DUP10 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2314 JUMPI PUSH2 0x2313 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH2 0x2320 DUP9 DUP3 DUP10 ADD PUSH2 0x2223 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2343 JUMPI PUSH2 0x2342 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH2 0x234F DUP9 DUP3 DUP10 ADD PUSH2 0x2278 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x2378 PUSH2 0x2373 PUSH2 0x236E DUP5 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x1C6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2388 DUP2 PUSH2 0x235E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23A1 PUSH0 DUP4 ADD DUP7 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0x23AE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x237F JUMP JUMPDEST PUSH2 0x23BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x237F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23F7 PUSH1 0x13 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2402 DUP3 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2424 DUP2 PUSH2 0x23EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x245F PUSH1 0x19 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x246A DUP3 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x248C DUP2 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x249D DUP3 PUSH2 0x1C6A JUMP JUMPDEST SWAP2 POP PUSH2 0x24A8 DUP4 PUSH2 0x1C6A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x24C0 JUMPI PUSH2 0x24BF PUSH2 0x1C73 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x24DE PUSH0 DUP4 PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 DUP3 PUSH2 0x24D0 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24FD DUP3 PUSH2 0x24D3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x253B PUSH1 0x15 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2546 DUP3 PUSH2 0x2507 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2568 DUP2 PUSH2 0x252F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420457468657220616D6F756E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25A3 PUSH1 0x16 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x25AE DUP3 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25D0 DUP2 PUSH2 0x2597 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2631 PUSH1 0x28 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x263C DUP3 PUSH2 0x25D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x265E DUP2 PUSH2 0x2625 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2688 PUSH2 0x2683 PUSH2 0x267E DUP5 PUSH2 0x2665 JUMP JUMPDEST PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x1F4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2698 DUP2 PUSH2 0x266E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26B1 PUSH0 DUP4 ADD DUP5 PUSH2 0x268F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x26FB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x270E JUMPI PUSH2 0x270D PUSH2 0x26B7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2728 DUP2 PUSH2 0x2714 JUMP JUMPDEST DUP2 EQ PUSH2 0x2732 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2743 DUP2 PUSH2 0x271F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x275E JUMPI PUSH2 0x275D PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x276B DUP5 DUP3 DUP6 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27A8 PUSH1 0x16 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x27B3 DUP3 PUSH2 0x2774 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27D5 DUP2 PUSH2 0x279C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2836 PUSH1 0x22 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2841 DUP3 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2863 DUP2 PUSH2 0x282A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x28C6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x288B JUMP JUMPDEST PUSH2 0x28D0 DUP7 DUP4 PUSH2 0x288B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2902 PUSH2 0x28FD PUSH2 0x28F8 DUP5 PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x1C6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x291B DUP4 PUSH2 0x28E8 JUMP JUMPDEST PUSH2 0x292F PUSH2 0x2927 DUP3 PUSH2 0x2909 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2897 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2943 PUSH2 0x2937 JUMP JUMPDEST PUSH2 0x294E DUP2 DUP5 DUP5 PUSH2 0x2912 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2971 JUMPI PUSH2 0x2966 PUSH0 DUP3 PUSH2 0x293B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2954 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x29B6 JUMPI PUSH2 0x2987 DUP2 PUSH2 0x286A JUMP JUMPDEST PUSH2 0x2990 DUP5 PUSH2 0x287C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x299F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x29B3 PUSH2 0x29AB DUP6 PUSH2 0x287C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2953 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29D6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x29BB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29EE DUP4 DUP4 PUSH2 0x29C7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A07 DUP3 PUSH2 0x1F6D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A20 JUMPI PUSH2 0x2A1F PUSH2 0x203B JUMP JUMPDEST JUMPDEST PUSH2 0x2A2A DUP3 SLOAD PUSH2 0x26E4 JUMP JUMPDEST PUSH2 0x2A35 DUP3 DUP3 DUP6 PUSH2 0x2975 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2A66 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2A54 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2A5E DUP6 DUP3 PUSH2 0x29E3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2AC5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2A74 DUP7 PUSH2 0x286A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2A9B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A76 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2AB8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2AB4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x29C7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2AE0 PUSH0 DUP4 ADD DUP7 PUSH2 0x237F JUMP JUMPDEST PUSH2 0x2AED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x237F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2AFF DUP2 DUP5 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F20616464726573732075736572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B3D PUSH1 0x11 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2B48 DUP3 PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B6A DUP2 PUSH2 0x2B31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BA5 PUSH1 0x18 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2BB0 DUP3 PUSH2 0x2B71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BD2 DUP2 PUSH2 0x2B99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C60 PUSH1 0x2B DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2C6B DUP3 PUSH2 0x2C06 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C8D DUP2 PUSH2 0x2C54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CC8 PUSH1 0x12 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD3 DUP3 PUSH2 0x2C94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CF5 DUP2 PUSH2 0x2CBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D30 PUSH1 0x1F DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2D3B DUP3 PUSH2 0x2CFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D5D DUP2 PUSH2 0x2D24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D77 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x2D84 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CD3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D9E PUSH0 DUP4 ADD DUP7 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x2DAB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x2DB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CD3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0x23 0xEF SWAP1 DUP13 MLOAD 0xDC 0xEE PUSH16 0xA87DF007E6A606DED81AB694063B67E7 0xB2 0xBC PUSH20 0x6656FECD64736F6C634300081A00330000000000 ",
							"sourceMap": "454:6250:13:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NATIVE_TOKEN_1495": {
									"entryPoint": 2218,
									"id": 1495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1991": {
									"entryPoint": null,
									"id": 1991,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1999": {
									"entryPoint": null,
									"id": 1999,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 6448,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 7088,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_472": {
									"entryPoint": 6468,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_482": {
									"entryPoint": 7220,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1116": {
									"entryPoint": 6869,
									"id": 1116,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 7024,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 6486,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 6409,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 6830,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 7244,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_561": {
									"entryPoint": 7237,
									"id": 561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_516": {
									"entryPoint": 6270,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_508": {
									"entryPoint": 6066,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 6621,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowedAmounts_1518": {
									"entryPoint": 3952,
									"id": 1518,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bulkSetAllowedAmount_1865": {
									"entryPoint": 4562,
									"id": 1865,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@claim_1769": {
									"entryPoint": 1105,
									"id": 1769,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentRound_1508": {
									"entryPoint": 3174,
									"id": 1508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1661": {
									"entryPoint": 2222,
									"id": 1661,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@initialize_1603": {
									"entryPoint": 2660,
									"id": 1603,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 3369,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 3118,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_821": {
									"entryPoint": 6279,
									"id": 821,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_794": {
									"entryPoint": 6143,
									"id": 794,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@scorer_1498": {
									"entryPoint": 3137,
									"id": 1498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAllowedAmount_1806": {
									"entryPoint": 4005,
									"id": 1806,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setRound_1899": {
									"entryPoint": 3422,
									"id": 1899,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@totalBalances_1512": {
									"entryPoint": 3984,
									"id": 1512,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 5238,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1971": {
									"entryPoint": 5370,
									"id": 1971,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8433,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 8739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 8824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64": {
									"entryPoint": 8223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 8909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64t_uint64t_string_memory_ptr": {
									"entryPoint": 8543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack": {
									"entryPoint": 7971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 9871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint256_fromStack": {
									"entryPoint": 9087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 8030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11659,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11620,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IScorer_$1472__to_t_address__fromStack_reversed": {
									"entryPoint": 7986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 9886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint64_t_uint64__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9102,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10957,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint64_t_uint64_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8141,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7539,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 10346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10613,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 9829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IScorer_$1472_to_t_address": {
									"entryPoint": 7954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 9838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint64_to_t_uint256": {
									"entryPoint": 9054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8419,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8055,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 10364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9911,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11225,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8251,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 8731,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8243,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8247,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7548,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 10379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf": {
									"entryPoint": 9155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f": {
									"entryPoint": 10204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f": {
									"entryPoint": 7435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be": {
									"entryPoint": 9479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 11412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375": {
									"entryPoint": 9583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d": {
									"entryPoint": 9259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085": {
									"entryPoint": 11121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226": {
									"entryPoint": 10100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 9424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d": {
									"entryPoint": 11017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71": {
									"entryPoint": 9687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76": {
									"entryPoint": 11270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 11516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 10391,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 10514,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 8201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10551,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:34974:14",
										"nodeType": "YulBlock",
										"src": "0:34974:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:14",
													"nodeType": "YulBlock",
													"src": "52:32:14",
													"statements": [
														{
															"nativeSrc": "62:16:14",
															"nodeType": "YulAssignment",
															"src": "62:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:14",
																"nodeType": "YulIdentifier",
																"src": "73:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:14",
														"nodeType": "YulTypedName",
														"src": "34:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:14",
														"nodeType": "YulTypedName",
														"src": "44:7:14",
														"type": ""
													}
												],
												"src": "7:77:14"
											},
											{
												"body": {
													"nativeSrc": "118:152:14",
													"nodeType": "YulBlock",
													"src": "118:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "135:1:14",
																		"nodeType": "YulLiteral",
																		"src": "135:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "138:77:14",
																		"nodeType": "YulLiteral",
																		"src": "138:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "128:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:14"
																},
																"nativeSrc": "128:88:14",
																"nodeType": "YulFunctionCall",
																"src": "128:88:14"
															},
															"nativeSrc": "128:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "128:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "232:1:14",
																		"nodeType": "YulLiteral",
																		"src": "232:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "235:4:14",
																		"nodeType": "YulLiteral",
																		"src": "235:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "225:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:14"
																},
																"nativeSrc": "225:15:14",
																"nodeType": "YulFunctionCall",
																"src": "225:15:14"
															},
															"nativeSrc": "225:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "225:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:14",
																		"nodeType": "YulLiteral",
																		"src": "256:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "259:4:14",
																		"nodeType": "YulLiteral",
																		"src": "259:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "249:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:14"
																},
																"nativeSrc": "249:15:14",
																"nodeType": "YulFunctionCall",
																"src": "249:15:14"
															},
															"nativeSrc": "249:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "249:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "90:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:14"
											},
											{
												"body": {
													"nativeSrc": "320:147:14",
													"nodeType": "YulBlock",
													"src": "320:147:14",
													"statements": [
														{
															"nativeSrc": "330:25:14",
															"nodeType": "YulAssignment",
															"src": "330:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "353:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "335:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:14"
																},
																"nativeSrc": "335:20:14",
																"nodeType": "YulFunctionCall",
																"src": "335:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "330:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:14"
																}
															]
														},
														{
															"nativeSrc": "364:25:14",
															"nodeType": "YulAssignment",
															"src": "364:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "387:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "369:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:14"
																},
																"nativeSrc": "369:20:14",
																"nodeType": "YulFunctionCall",
																"src": "369:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "364:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:14"
																}
															]
														},
														{
															"nativeSrc": "398:16:14",
															"nodeType": "YulAssignment",
															"src": "398:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "409:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "412:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "405:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:14"
																},
																"nativeSrc": "405:9:14",
																"nodeType": "YulFunctionCall",
																"src": "405:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "398:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "438:22:14",
																"nodeType": "YulBlock",
																"src": "438:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "440:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:14"
																			},
																			"nativeSrc": "440:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:14"
																		},
																		"nativeSrc": "440:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "430:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "433:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "427:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:14"
																},
																"nativeSrc": "427:10:14",
																"nodeType": "YulFunctionCall",
																"src": "427:10:14"
															},
															"nativeSrc": "424:36:14",
															"nodeType": "YulIf",
															"src": "424:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "276:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "307:1:14",
														"nodeType": "YulTypedName",
														"src": "307:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "310:1:14",
														"nodeType": "YulTypedName",
														"src": "310:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "316:3:14",
														"nodeType": "YulTypedName",
														"src": "316:3:14",
														"type": ""
													}
												],
												"src": "276:191:14"
											},
											{
												"body": {
													"nativeSrc": "538:53:14",
													"nodeType": "YulBlock",
													"src": "538:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "555:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "578:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "578:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "560:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "560:17:14"
																		},
																		"nativeSrc": "560:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "560:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "548:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:14"
																},
																"nativeSrc": "548:37:14",
																"nodeType": "YulFunctionCall",
																"src": "548:37:14"
															},
															"nativeSrc": "548:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "548:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "473:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "526:5:14",
														"nodeType": "YulTypedName",
														"src": "526:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "533:3:14",
														"nodeType": "YulTypedName",
														"src": "533:3:14",
														"type": ""
													}
												],
												"src": "473:118:14"
											},
											{
												"body": {
													"nativeSrc": "695:124:14",
													"nodeType": "YulBlock",
													"src": "695:124:14",
													"statements": [
														{
															"nativeSrc": "705:26:14",
															"nodeType": "YulAssignment",
															"src": "705:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "717:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "717:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "728:2:14",
																		"nodeType": "YulLiteral",
																		"src": "728:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "713:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "713:3:14"
																},
																"nativeSrc": "713:18:14",
																"nodeType": "YulFunctionCall",
																"src": "713:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "705:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "705:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "785:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "798:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "798:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "809:1:14",
																				"nodeType": "YulLiteral",
																				"src": "809:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:14"
																		},
																		"nativeSrc": "794:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "794:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "741:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "741:43:14"
																},
																"nativeSrc": "741:71:14",
																"nodeType": "YulFunctionCall",
																"src": "741:71:14"
															},
															"nativeSrc": "741:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "741:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "597:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "667:9:14",
														"nodeType": "YulTypedName",
														"src": "667:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "679:6:14",
														"nodeType": "YulTypedName",
														"src": "679:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "690:4:14",
														"nodeType": "YulTypedName",
														"src": "690:4:14",
														"type": ""
													}
												],
												"src": "597:222:14"
											},
											{
												"body": {
													"nativeSrc": "921:73:14",
													"nodeType": "YulBlock",
													"src": "921:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "938:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "943:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "931:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "931:6:14"
																},
																"nativeSrc": "931:19:14",
																"nodeType": "YulFunctionCall",
																"src": "931:19:14"
															},
															"nativeSrc": "931:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "931:19:14"
														},
														{
															"nativeSrc": "959:29:14",
															"nodeType": "YulAssignment",
															"src": "959:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "978:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "978:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "983:4:14",
																		"nodeType": "YulLiteral",
																		"src": "983:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "974:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:14"
																},
																"nativeSrc": "974:14:14",
																"nodeType": "YulFunctionCall",
																"src": "974:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "959:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "959:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "825:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "893:3:14",
														"nodeType": "YulTypedName",
														"src": "893:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "898:6:14",
														"nodeType": "YulTypedName",
														"src": "898:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "909:11:14",
														"nodeType": "YulTypedName",
														"src": "909:11:14",
														"type": ""
													}
												],
												"src": "825:169:14"
											},
											{
												"body": {
													"nativeSrc": "1106:68:14",
													"nodeType": "YulBlock",
													"src": "1106:68:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1128:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1128:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1136:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1136:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1124:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:14"
																		},
																		"nativeSrc": "1124:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1124:14:14"
																	},
																	{
																		"hexValue": "537765657473706f743a20757365206465706f7369742829",
																		"kind": "string",
																		"nativeSrc": "1140:26:14",
																		"nodeType": "YulLiteral",
																		"src": "1140:26:14",
																		"type": "",
																		"value": "Sweetspot: use deposit()"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1117:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:14"
																},
																"nativeSrc": "1117:50:14",
																"nodeType": "YulFunctionCall",
																"src": "1117:50:14"
															},
															"nativeSrc": "1117:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "1117:50:14"
														}
													]
												},
												"name": "store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f",
												"nativeSrc": "1000:174:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1098:6:14",
														"nodeType": "YulTypedName",
														"src": "1098:6:14",
														"type": ""
													}
												],
												"src": "1000:174:14"
											},
											{
												"body": {
													"nativeSrc": "1326:220:14",
													"nodeType": "YulBlock",
													"src": "1326:220:14",
													"statements": [
														{
															"nativeSrc": "1336:74:14",
															"nodeType": "YulAssignment",
															"src": "1336:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1402:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1402:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1407:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1407:2:14",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1343:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "1343:58:14"
																},
																"nativeSrc": "1343:67:14",
																"nodeType": "YulFunctionCall",
																"src": "1343:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1336:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1336:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1508:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1508:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f",
																	"nativeSrc": "1419:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "1419:88:14"
																},
																"nativeSrc": "1419:93:14",
																"nodeType": "YulFunctionCall",
																"src": "1419:93:14"
															},
															"nativeSrc": "1419:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "1419:93:14"
														},
														{
															"nativeSrc": "1521:19:14",
															"nodeType": "YulAssignment",
															"src": "1521:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1532:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1532:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1537:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1537:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1528:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1528:3:14"
																},
																"nativeSrc": "1528:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1528:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1521:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1521:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1180:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1314:3:14",
														"nodeType": "YulTypedName",
														"src": "1314:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1322:3:14",
														"nodeType": "YulTypedName",
														"src": "1322:3:14",
														"type": ""
													}
												],
												"src": "1180:366:14"
											},
											{
												"body": {
													"nativeSrc": "1723:248:14",
													"nodeType": "YulBlock",
													"src": "1723:248:14",
													"statements": [
														{
															"nativeSrc": "1733:26:14",
															"nodeType": "YulAssignment",
															"src": "1733:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1745:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1745:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1756:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1756:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1741:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1741:3:14"
																},
																"nativeSrc": "1741:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1741:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1733:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1733:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1780:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1780:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1791:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1791:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1776:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1776:3:14"
																		},
																		"nativeSrc": "1776:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1776:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1799:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1799:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1805:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1805:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1795:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1795:3:14"
																		},
																		"nativeSrc": "1795:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1795:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1769:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1769:6:14"
																},
																"nativeSrc": "1769:47:14",
																"nodeType": "YulFunctionCall",
																"src": "1769:47:14"
															},
															"nativeSrc": "1769:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "1769:47:14"
														},
														{
															"nativeSrc": "1825:139:14",
															"nodeType": "YulAssignment",
															"src": "1825:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1959:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1959:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1833:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "1833:124:14"
																},
																"nativeSrc": "1833:131:14",
																"nodeType": "YulFunctionCall",
																"src": "1833:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1825:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1825:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1552:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1703:9:14",
														"nodeType": "YulTypedName",
														"src": "1703:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1718:4:14",
														"nodeType": "YulTypedName",
														"src": "1718:4:14",
														"type": ""
													}
												],
												"src": "1552:419:14"
											},
											{
												"body": {
													"nativeSrc": "2017:35:14",
													"nodeType": "YulBlock",
													"src": "2017:35:14",
													"statements": [
														{
															"nativeSrc": "2027:19:14",
															"nodeType": "YulAssignment",
															"src": "2027:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2043:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2037:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2037:5:14"
																},
																"nativeSrc": "2037:9:14",
																"nodeType": "YulFunctionCall",
																"src": "2037:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2027:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2027:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1977:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2010:6:14",
														"nodeType": "YulTypedName",
														"src": "2010:6:14",
														"type": ""
													}
												],
												"src": "1977:75:14"
											},
											{
												"body": {
													"nativeSrc": "2147:28:14",
													"nodeType": "YulBlock",
													"src": "2147:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2164:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2164:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2167:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2167:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2157:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2157:6:14"
																},
																"nativeSrc": "2157:12:14",
																"nodeType": "YulFunctionCall",
																"src": "2157:12:14"
															},
															"nativeSrc": "2157:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "2157:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2058:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2058:117:14"
											},
											{
												"body": {
													"nativeSrc": "2270:28:14",
													"nodeType": "YulBlock",
													"src": "2270:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2290:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2280:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2280:6:14"
																},
																"nativeSrc": "2280:12:14",
																"nodeType": "YulFunctionCall",
																"src": "2280:12:14"
															},
															"nativeSrc": "2280:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "2280:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2181:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2181:117:14"
											},
											{
												"body": {
													"nativeSrc": "2349:81:14",
													"nodeType": "YulBlock",
													"src": "2349:81:14",
													"statements": [
														{
															"nativeSrc": "2359:65:14",
															"nodeType": "YulAssignment",
															"src": "2359:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2374:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2374:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2381:42:14",
																		"nodeType": "YulLiteral",
																		"src": "2381:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2370:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:14"
																},
																"nativeSrc": "2370:54:14",
																"nodeType": "YulFunctionCall",
																"src": "2370:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2359:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2359:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2304:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2331:5:14",
														"nodeType": "YulTypedName",
														"src": "2331:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2341:7:14",
														"nodeType": "YulTypedName",
														"src": "2341:7:14",
														"type": ""
													}
												],
												"src": "2304:126:14"
											},
											{
												"body": {
													"nativeSrc": "2481:51:14",
													"nodeType": "YulBlock",
													"src": "2481:51:14",
													"statements": [
														{
															"nativeSrc": "2491:35:14",
															"nodeType": "YulAssignment",
															"src": "2491:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2520:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2520:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2502:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "2502:17:14"
																},
																"nativeSrc": "2502:24:14",
																"nodeType": "YulFunctionCall",
																"src": "2502:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2491:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2491:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2436:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2463:5:14",
														"nodeType": "YulTypedName",
														"src": "2463:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2473:7:14",
														"nodeType": "YulTypedName",
														"src": "2473:7:14",
														"type": ""
													}
												],
												"src": "2436:96:14"
											},
											{
												"body": {
													"nativeSrc": "2581:79:14",
													"nodeType": "YulBlock",
													"src": "2581:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2638:16:14",
																"nodeType": "YulBlock",
																"src": "2638:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2647:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2647:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2650:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2650:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2640:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2640:6:14"
																			},
																			"nativeSrc": "2640:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2640:12:14"
																		},
																		"nativeSrc": "2640:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2640:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2604:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2604:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2629:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2629:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2611:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2611:17:14"
																				},
																				"nativeSrc": "2611:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2611:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2601:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2601:2:14"
																		},
																		"nativeSrc": "2601:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2601:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2594:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:14"
																},
																"nativeSrc": "2594:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2594:43:14"
															},
															"nativeSrc": "2591:63:14",
															"nodeType": "YulIf",
															"src": "2591:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2538:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2574:5:14",
														"nodeType": "YulTypedName",
														"src": "2574:5:14",
														"type": ""
													}
												],
												"src": "2538:122:14"
											},
											{
												"body": {
													"nativeSrc": "2718:87:14",
													"nodeType": "YulBlock",
													"src": "2718:87:14",
													"statements": [
														{
															"nativeSrc": "2728:29:14",
															"nodeType": "YulAssignment",
															"src": "2728:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2750:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2750:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2737:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2737:12:14"
																},
																"nativeSrc": "2737:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2737:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2728:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2728:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2793:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2793:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2766:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2766:26:14"
																},
																"nativeSrc": "2766:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2766:33:14"
															},
															"nativeSrc": "2766:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2766:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2666:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2696:6:14",
														"nodeType": "YulTypedName",
														"src": "2696:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2704:3:14",
														"nodeType": "YulTypedName",
														"src": "2704:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2712:5:14",
														"nodeType": "YulTypedName",
														"src": "2712:5:14",
														"type": ""
													}
												],
												"src": "2666:139:14"
											},
											{
												"body": {
													"nativeSrc": "2877:263:14",
													"nodeType": "YulBlock",
													"src": "2877:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2923:83:14",
																"nodeType": "YulBlock",
																"src": "2923:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2925:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2925:77:14"
																			},
																			"nativeSrc": "2925:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2925:79:14"
																		},
																		"nativeSrc": "2925:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2925:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2898:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2898:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2907:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2907:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2894:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2894:3:14"
																		},
																		"nativeSrc": "2894:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2894:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2919:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2890:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2890:3:14"
																},
																"nativeSrc": "2890:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2890:32:14"
															},
															"nativeSrc": "2887:119:14",
															"nodeType": "YulIf",
															"src": "2887:119:14"
														},
														{
															"nativeSrc": "3016:117:14",
															"nodeType": "YulBlock",
															"src": "3016:117:14",
															"statements": [
																{
																	"nativeSrc": "3031:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3031:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3045:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3045:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3035:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3035:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3060:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3060:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3095:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3095:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3106:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3106:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3091:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3091:3:14"
																				},
																				"nativeSrc": "3091:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3091:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3115:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3115:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3070:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3070:20:14"
																		},
																		"nativeSrc": "3070:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3070:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3060:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3060:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2811:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2847:9:14",
														"nodeType": "YulTypedName",
														"src": "2847:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2858:7:14",
														"nodeType": "YulTypedName",
														"src": "2858:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2870:6:14",
														"nodeType": "YulTypedName",
														"src": "2870:6:14",
														"type": ""
													}
												],
												"src": "2811:329:14"
											},
											{
												"body": {
													"nativeSrc": "3211:53:14",
													"nodeType": "YulBlock",
													"src": "3211:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3228:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3228:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3251:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3251:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3233:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3233:17:14"
																		},
																		"nativeSrc": "3233:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3233:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3221:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:14"
																},
																"nativeSrc": "3221:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3221:37:14"
															},
															"nativeSrc": "3221:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3221:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3146:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3199:5:14",
														"nodeType": "YulTypedName",
														"src": "3199:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3206:3:14",
														"nodeType": "YulTypedName",
														"src": "3206:3:14",
														"type": ""
													}
												],
												"src": "3146:118:14"
											},
											{
												"body": {
													"nativeSrc": "3368:124:14",
													"nodeType": "YulBlock",
													"src": "3368:124:14",
													"statements": [
														{
															"nativeSrc": "3378:26:14",
															"nodeType": "YulAssignment",
															"src": "3378:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3390:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3401:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3386:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3386:3:14"
																},
																"nativeSrc": "3386:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3386:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3378:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3378:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3458:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3458:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3471:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3471:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3482:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3482:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3467:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3467:3:14"
																		},
																		"nativeSrc": "3467:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3467:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3414:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "3414:43:14"
																},
																"nativeSrc": "3414:71:14",
																"nodeType": "YulFunctionCall",
																"src": "3414:71:14"
															},
															"nativeSrc": "3414:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "3414:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3270:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3340:9:14",
														"nodeType": "YulTypedName",
														"src": "3340:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3352:6:14",
														"nodeType": "YulTypedName",
														"src": "3352:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3363:4:14",
														"nodeType": "YulTypedName",
														"src": "3363:4:14",
														"type": ""
													}
												],
												"src": "3270:222:14"
											},
											{
												"body": {
													"nativeSrc": "3541:79:14",
													"nodeType": "YulBlock",
													"src": "3541:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3598:16:14",
																"nodeType": "YulBlock",
																"src": "3598:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3607:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3607:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3610:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3610:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3600:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3600:6:14"
																			},
																			"nativeSrc": "3600:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3600:12:14"
																		},
																		"nativeSrc": "3600:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3600:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3564:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3564:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3589:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3589:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3571:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "3571:17:14"
																				},
																				"nativeSrc": "3571:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3571:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3561:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3561:2:14"
																		},
																		"nativeSrc": "3561:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3561:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3554:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3554:6:14"
																},
																"nativeSrc": "3554:43:14",
																"nodeType": "YulFunctionCall",
																"src": "3554:43:14"
															},
															"nativeSrc": "3551:63:14",
															"nodeType": "YulIf",
															"src": "3551:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3498:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3534:5:14",
														"nodeType": "YulTypedName",
														"src": "3534:5:14",
														"type": ""
													}
												],
												"src": "3498:122:14"
											},
											{
												"body": {
													"nativeSrc": "3678:87:14",
													"nodeType": "YulBlock",
													"src": "3678:87:14",
													"statements": [
														{
															"nativeSrc": "3688:29:14",
															"nodeType": "YulAssignment",
															"src": "3688:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3710:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3710:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3697:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3697:12:14"
																},
																"nativeSrc": "3697:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3697:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3688:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3688:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3753:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3753:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3726:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "3726:26:14"
																},
																"nativeSrc": "3726:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3726:33:14"
															},
															"nativeSrc": "3726:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "3726:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3626:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3656:6:14",
														"nodeType": "YulTypedName",
														"src": "3656:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3664:3:14",
														"nodeType": "YulTypedName",
														"src": "3664:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3672:5:14",
														"nodeType": "YulTypedName",
														"src": "3672:5:14",
														"type": ""
													}
												],
												"src": "3626:139:14"
											},
											{
												"body": {
													"nativeSrc": "3854:391:14",
													"nodeType": "YulBlock",
													"src": "3854:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3900:83:14",
																"nodeType": "YulBlock",
																"src": "3900:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3902:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3902:77:14"
																			},
																			"nativeSrc": "3902:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3902:79:14"
																		},
																		"nativeSrc": "3902:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3902:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3875:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3875:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3884:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3884:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3871:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3871:3:14"
																		},
																		"nativeSrc": "3871:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3871:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3896:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3896:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3867:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3867:3:14"
																},
																"nativeSrc": "3867:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3867:32:14"
															},
															"nativeSrc": "3864:119:14",
															"nodeType": "YulIf",
															"src": "3864:119:14"
														},
														{
															"nativeSrc": "3993:117:14",
															"nodeType": "YulBlock",
															"src": "3993:117:14",
															"statements": [
																{
																	"nativeSrc": "4008:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4008:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4022:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4022:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4012:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4012:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4037:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4037:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4072:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4072:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4083:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4083:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4068:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4068:3:14"
																				},
																				"nativeSrc": "4068:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4068:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4092:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4092:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4047:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4047:20:14"
																		},
																		"nativeSrc": "4047:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4047:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4037:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4037:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4120:118:14",
															"nodeType": "YulBlock",
															"src": "4120:118:14",
															"statements": [
																{
																	"nativeSrc": "4135:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4135:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4149:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4149:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4139:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4139:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4165:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4165:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4200:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4200:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4211:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4211:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4196:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4196:3:14"
																				},
																				"nativeSrc": "4196:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4196:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4220:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4220:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4175:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4175:20:14"
																		},
																		"nativeSrc": "4175:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4175:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4165:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4165:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3771:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3816:9:14",
														"nodeType": "YulTypedName",
														"src": "3816:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3827:7:14",
														"nodeType": "YulTypedName",
														"src": "3827:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3839:6:14",
														"nodeType": "YulTypedName",
														"src": "3839:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3847:6:14",
														"nodeType": "YulTypedName",
														"src": "3847:6:14",
														"type": ""
													}
												],
												"src": "3771:474:14"
											},
											{
												"body": {
													"nativeSrc": "4334:391:14",
													"nodeType": "YulBlock",
													"src": "4334:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4380:83:14",
																"nodeType": "YulBlock",
																"src": "4380:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4382:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4382:77:14"
																			},
																			"nativeSrc": "4382:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4382:79:14"
																		},
																		"nativeSrc": "4382:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4382:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4355:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4355:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4364:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4364:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4351:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4351:3:14"
																		},
																		"nativeSrc": "4351:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4351:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4376:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4376:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4347:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4347:3:14"
																},
																"nativeSrc": "4347:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4347:32:14"
															},
															"nativeSrc": "4344:119:14",
															"nodeType": "YulIf",
															"src": "4344:119:14"
														},
														{
															"nativeSrc": "4473:117:14",
															"nodeType": "YulBlock",
															"src": "4473:117:14",
															"statements": [
																{
																	"nativeSrc": "4488:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4488:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4502:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4502:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4492:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4492:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4517:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4517:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4552:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4552:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4563:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4563:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4548:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4548:3:14"
																				},
																				"nativeSrc": "4548:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4548:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4572:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4572:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4527:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4527:20:14"
																		},
																		"nativeSrc": "4527:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4527:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4517:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4517:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4600:118:14",
															"nodeType": "YulBlock",
															"src": "4600:118:14",
															"statements": [
																{
																	"nativeSrc": "4615:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4615:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4629:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4629:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4619:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4619:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4645:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4645:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4680:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4680:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4691:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4691:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4676:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4676:3:14"
																				},
																				"nativeSrc": "4676:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4676:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4700:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4700:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4655:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4655:20:14"
																		},
																		"nativeSrc": "4655:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4655:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4645:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4645:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4251:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4296:9:14",
														"nodeType": "YulTypedName",
														"src": "4296:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4307:7:14",
														"nodeType": "YulTypedName",
														"src": "4307:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4319:6:14",
														"nodeType": "YulTypedName",
														"src": "4319:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4327:6:14",
														"nodeType": "YulTypedName",
														"src": "4327:6:14",
														"type": ""
													}
												],
												"src": "4251:474:14"
											},
											{
												"body": {
													"nativeSrc": "4763:28:14",
													"nodeType": "YulBlock",
													"src": "4763:28:14",
													"statements": [
														{
															"nativeSrc": "4773:12:14",
															"nodeType": "YulAssignment",
															"src": "4773:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "4780:5:14",
																"nodeType": "YulIdentifier",
																"src": "4780:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4773:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4731:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4749:5:14",
														"nodeType": "YulTypedName",
														"src": "4749:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4759:3:14",
														"nodeType": "YulTypedName",
														"src": "4759:3:14",
														"type": ""
													}
												],
												"src": "4731:60:14"
											},
											{
												"body": {
													"nativeSrc": "4857:82:14",
													"nodeType": "YulBlock",
													"src": "4857:82:14",
													"statements": [
														{
															"nativeSrc": "4867:66:14",
															"nodeType": "YulAssignment",
															"src": "4867:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4925:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4925:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4907:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "4907:17:14"
																				},
																				"nativeSrc": "4907:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4907:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4898:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "4898:8:14"
																		},
																		"nativeSrc": "4898:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4898:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4880:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "4880:17:14"
																},
																"nativeSrc": "4880:53:14",
																"nodeType": "YulFunctionCall",
																"src": "4880:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4867:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4867:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4797:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4837:5:14",
														"nodeType": "YulTypedName",
														"src": "4837:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4847:9:14",
														"nodeType": "YulTypedName",
														"src": "4847:9:14",
														"type": ""
													}
												],
												"src": "4797:142:14"
											},
											{
												"body": {
													"nativeSrc": "5005:66:14",
													"nodeType": "YulBlock",
													"src": "5005:66:14",
													"statements": [
														{
															"nativeSrc": "5015:50:14",
															"nodeType": "YulAssignment",
															"src": "5015:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5059:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5059:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5028:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5028:30:14"
																},
																"nativeSrc": "5028:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5028:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5015:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5015:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4945:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4985:5:14",
														"nodeType": "YulTypedName",
														"src": "4985:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4995:9:14",
														"nodeType": "YulTypedName",
														"src": "4995:9:14",
														"type": ""
													}
												],
												"src": "4945:126:14"
											},
											{
												"body": {
													"nativeSrc": "5153:66:14",
													"nodeType": "YulBlock",
													"src": "5153:66:14",
													"statements": [
														{
															"nativeSrc": "5163:50:14",
															"nodeType": "YulAssignment",
															"src": "5163:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5207:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5207:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5176:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5176:30:14"
																},
																"nativeSrc": "5176:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5176:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5163:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5163:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IScorer_$1472_to_t_address",
												"nativeSrc": "5077:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5133:5:14",
														"nodeType": "YulTypedName",
														"src": "5133:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5143:9:14",
														"nodeType": "YulTypedName",
														"src": "5143:9:14",
														"type": ""
													}
												],
												"src": "5077:142:14"
											},
											{
												"body": {
													"nativeSrc": "5306:82:14",
													"nodeType": "YulBlock",
													"src": "5306:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5323:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5323:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5375:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5375:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IScorer_$1472_to_t_address",
																			"nativeSrc": "5328:46:14",
																			"nodeType": "YulIdentifier",
																			"src": "5328:46:14"
																		},
																		"nativeSrc": "5328:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5328:53:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5316:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5316:6:14"
																},
																"nativeSrc": "5316:66:14",
																"nodeType": "YulFunctionCall",
																"src": "5316:66:14"
															},
															"nativeSrc": "5316:66:14",
															"nodeType": "YulExpressionStatement",
															"src": "5316:66:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack",
												"nativeSrc": "5225:163:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5294:5:14",
														"nodeType": "YulTypedName",
														"src": "5294:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5301:3:14",
														"nodeType": "YulTypedName",
														"src": "5301:3:14",
														"type": ""
													}
												],
												"src": "5225:163:14"
											},
											{
												"body": {
													"nativeSrc": "5508:140:14",
													"nodeType": "YulBlock",
													"src": "5508:140:14",
													"statements": [
														{
															"nativeSrc": "5518:26:14",
															"nodeType": "YulAssignment",
															"src": "5518:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5530:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5530:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5526:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5526:3:14"
																},
																"nativeSrc": "5526:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5526:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5518:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5518:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5614:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5627:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5638:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5638:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5623:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:14"
																		},
																		"nativeSrc": "5623:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5623:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack",
																	"nativeSrc": "5554:59:14",
																	"nodeType": "YulIdentifier",
																	"src": "5554:59:14"
																},
																"nativeSrc": "5554:87:14",
																"nodeType": "YulFunctionCall",
																"src": "5554:87:14"
															},
															"nativeSrc": "5554:87:14",
															"nodeType": "YulExpressionStatement",
															"src": "5554:87:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IScorer_$1472__to_t_address__fromStack_reversed",
												"nativeSrc": "5394:254:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5480:9:14",
														"nodeType": "YulTypedName",
														"src": "5480:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5492:6:14",
														"nodeType": "YulTypedName",
														"src": "5492:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5503:4:14",
														"nodeType": "YulTypedName",
														"src": "5503:4:14",
														"type": ""
													}
												],
												"src": "5394:254:14"
											},
											{
												"body": {
													"nativeSrc": "5698:57:14",
													"nodeType": "YulBlock",
													"src": "5698:57:14",
													"statements": [
														{
															"nativeSrc": "5708:41:14",
															"nodeType": "YulAssignment",
															"src": "5708:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5723:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5723:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:18:14",
																		"nodeType": "YulLiteral",
																		"src": "5730:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5719:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5719:3:14"
																},
																"nativeSrc": "5719:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5719:30:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5708:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5708:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "5654:101:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5680:5:14",
														"nodeType": "YulTypedName",
														"src": "5680:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5690:7:14",
														"nodeType": "YulTypedName",
														"src": "5690:7:14",
														"type": ""
													}
												],
												"src": "5654:101:14"
											},
											{
												"body": {
													"nativeSrc": "5824:52:14",
													"nodeType": "YulBlock",
													"src": "5824:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5841:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5841:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5863:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5863:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "5846:16:14",
																			"nodeType": "YulIdentifier",
																			"src": "5846:16:14"
																		},
																		"nativeSrc": "5846:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5846:23:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5834:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5834:6:14"
																},
																"nativeSrc": "5834:36:14",
																"nodeType": "YulFunctionCall",
																"src": "5834:36:14"
															},
															"nativeSrc": "5834:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "5834:36:14"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "5761:115:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5812:5:14",
														"nodeType": "YulTypedName",
														"src": "5812:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5819:3:14",
														"nodeType": "YulTypedName",
														"src": "5819:3:14",
														"type": ""
													}
												],
												"src": "5761:115:14"
											},
											{
												"body": {
													"nativeSrc": "5941:40:14",
													"nodeType": "YulBlock",
													"src": "5941:40:14",
													"statements": [
														{
															"nativeSrc": "5952:22:14",
															"nodeType": "YulAssignment",
															"src": "5952:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5968:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5968:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5962:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5962:5:14"
																},
																"nativeSrc": "5962:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5962:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5952:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5952:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5882:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5924:5:14",
														"nodeType": "YulTypedName",
														"src": "5924:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5934:6:14",
														"nodeType": "YulTypedName",
														"src": "5934:6:14",
														"type": ""
													}
												],
												"src": "5882:99:14"
											},
											{
												"body": {
													"nativeSrc": "6049:77:14",
													"nodeType": "YulBlock",
													"src": "6049:77:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6066:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6066:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6071:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6071:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6076:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6060:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "6060:5:14"
																},
																"nativeSrc": "6060:23:14",
																"nodeType": "YulFunctionCall",
																"src": "6060:23:14"
															},
															"nativeSrc": "6060:23:14",
															"nodeType": "YulExpressionStatement",
															"src": "6060:23:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6103:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6103:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6108:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6108:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6099:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6099:3:14"
																		},
																		"nativeSrc": "6099:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6099:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6117:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6117:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6092:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6092:6:14"
																},
																"nativeSrc": "6092:27:14",
																"nodeType": "YulFunctionCall",
																"src": "6092:27:14"
															},
															"nativeSrc": "6092:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "6092:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5987:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6031:3:14",
														"nodeType": "YulTypedName",
														"src": "6031:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6036:3:14",
														"nodeType": "YulTypedName",
														"src": "6036:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6041:6:14",
														"nodeType": "YulTypedName",
														"src": "6041:6:14",
														"type": ""
													}
												],
												"src": "5987:139:14"
											},
											{
												"body": {
													"nativeSrc": "6180:54:14",
													"nodeType": "YulBlock",
													"src": "6180:54:14",
													"statements": [
														{
															"nativeSrc": "6190:38:14",
															"nodeType": "YulAssignment",
															"src": "6190:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6208:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6208:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6215:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6215:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6204:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6204:3:14"
																		},
																		"nativeSrc": "6204:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6204:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6224:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6224:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6220:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6220:3:14"
																		},
																		"nativeSrc": "6220:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6220:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6200:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:14"
																},
																"nativeSrc": "6200:28:14",
																"nodeType": "YulFunctionCall",
																"src": "6200:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6190:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6190:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "6132:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6163:5:14",
														"nodeType": "YulTypedName",
														"src": "6163:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6173:6:14",
														"nodeType": "YulTypedName",
														"src": "6173:6:14",
														"type": ""
													}
												],
												"src": "6132:102:14"
											},
											{
												"body": {
													"nativeSrc": "6332:285:14",
													"nodeType": "YulBlock",
													"src": "6332:285:14",
													"statements": [
														{
															"nativeSrc": "6342:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6342:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6389:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6389:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6356:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "6356:32:14"
																},
																"nativeSrc": "6356:39:14",
																"nodeType": "YulFunctionCall",
																"src": "6356:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6346:6:14",
																	"nodeType": "YulTypedName",
																	"src": "6346:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6404:78:14",
															"nodeType": "YulAssignment",
															"src": "6404:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6470:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6470:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6475:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6475:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6411:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "6411:58:14"
																},
																"nativeSrc": "6411:71:14",
																"nodeType": "YulFunctionCall",
																"src": "6411:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6404:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6404:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6530:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6530:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6537:4:14",
																				"nodeType": "YulLiteral",
																				"src": "6537:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6526:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6526:3:14"
																		},
																		"nativeSrc": "6526:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6526:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6544:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6544:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6549:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6549:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6491:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "6491:34:14"
																},
																"nativeSrc": "6491:65:14",
																"nodeType": "YulFunctionCall",
																"src": "6491:65:14"
															},
															"nativeSrc": "6491:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "6491:65:14"
														},
														{
															"nativeSrc": "6565:46:14",
															"nodeType": "YulAssignment",
															"src": "6565:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6576:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6576:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6603:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6603:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6581:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "6581:21:14"
																		},
																		"nativeSrc": "6581:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6581:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6572:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6572:3:14"
																},
																"nativeSrc": "6572:39:14",
																"nodeType": "YulFunctionCall",
																"src": "6572:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6565:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6565:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6240:377:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6313:5:14",
														"nodeType": "YulTypedName",
														"src": "6313:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6320:3:14",
														"nodeType": "YulTypedName",
														"src": "6320:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6328:3:14",
														"nodeType": "YulTypedName",
														"src": "6328:3:14",
														"type": ""
													}
												],
												"src": "6240:377:14"
											},
											{
												"body": {
													"nativeSrc": "6793:355:14",
													"nodeType": "YulBlock",
													"src": "6793:355:14",
													"statements": [
														{
															"nativeSrc": "6803:26:14",
															"nodeType": "YulAssignment",
															"src": "6803:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6815:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6815:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6826:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6826:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6811:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6811:3:14"
																},
																"nativeSrc": "6811:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6811:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6803:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6803:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6881:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6881:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6894:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6894:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6905:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6905:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6890:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6890:3:14"
																		},
																		"nativeSrc": "6890:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6890:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "6839:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "6839:41:14"
																},
																"nativeSrc": "6839:69:14",
																"nodeType": "YulFunctionCall",
																"src": "6839:69:14"
															},
															"nativeSrc": "6839:69:14",
															"nodeType": "YulExpressionStatement",
															"src": "6839:69:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6960:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6960:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6973:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6973:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6984:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6984:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6969:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6969:3:14"
																		},
																		"nativeSrc": "6969:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6969:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "6918:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "6918:41:14"
																},
																"nativeSrc": "6918:70:14",
																"nodeType": "YulFunctionCall",
																"src": "6918:70:14"
															},
															"nativeSrc": "6918:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "6918:70:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7009:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7009:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7020:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7020:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7005:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7005:3:14"
																		},
																		"nativeSrc": "7005:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7005:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7029:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "7029:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7035:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7035:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7025:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7025:3:14"
																		},
																		"nativeSrc": "7025:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7025:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6998:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6998:6:14"
																},
																"nativeSrc": "6998:48:14",
																"nodeType": "YulFunctionCall",
																"src": "6998:48:14"
															},
															"nativeSrc": "6998:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "6998:48:14"
														},
														{
															"nativeSrc": "7055:86:14",
															"nodeType": "YulAssignment",
															"src": "7055:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7127:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7127:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7136:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7136:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7063:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "7063:63:14"
																},
																"nativeSrc": "7063:78:14",
																"nodeType": "YulFunctionCall",
																"src": "7063:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7055:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7055:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint64_t_uint64_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6623:525:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6749:9:14",
														"nodeType": "YulTypedName",
														"src": "6749:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6761:6:14",
														"nodeType": "YulTypedName",
														"src": "6761:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6769:6:14",
														"nodeType": "YulTypedName",
														"src": "6769:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6777:6:14",
														"nodeType": "YulTypedName",
														"src": "6777:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6788:4:14",
														"nodeType": "YulTypedName",
														"src": "6788:4:14",
														"type": ""
													}
												],
												"src": "6623:525:14"
											},
											{
												"body": {
													"nativeSrc": "7196:78:14",
													"nodeType": "YulBlock",
													"src": "7196:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7252:16:14",
																"nodeType": "YulBlock",
																"src": "7252:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7261:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7261:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7264:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7264:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7254:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7254:6:14"
																			},
																			"nativeSrc": "7254:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7254:12:14"
																		},
																		"nativeSrc": "7254:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7254:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7219:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7219:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7243:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "7243:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "7226:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "7226:16:14"
																				},
																				"nativeSrc": "7226:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7226:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7216:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "7216:2:14"
																		},
																		"nativeSrc": "7216:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7216:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7209:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7209:6:14"
																},
																"nativeSrc": "7209:42:14",
																"nodeType": "YulFunctionCall",
																"src": "7209:42:14"
															},
															"nativeSrc": "7206:62:14",
															"nodeType": "YulIf",
															"src": "7206:62:14"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nativeSrc": "7154:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7189:5:14",
														"nodeType": "YulTypedName",
														"src": "7189:5:14",
														"type": ""
													}
												],
												"src": "7154:120:14"
											},
											{
												"body": {
													"nativeSrc": "7331:86:14",
													"nodeType": "YulBlock",
													"src": "7331:86:14",
													"statements": [
														{
															"nativeSrc": "7341:29:14",
															"nodeType": "YulAssignment",
															"src": "7341:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7363:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7363:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7350:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7350:12:14"
																},
																"nativeSrc": "7350:20:14",
																"nodeType": "YulFunctionCall",
																"src": "7350:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7341:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7341:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7405:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7405:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nativeSrc": "7379:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "7379:25:14"
																},
																"nativeSrc": "7379:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7379:32:14"
															},
															"nativeSrc": "7379:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "7379:32:14"
														}
													]
												},
												"name": "abi_decode_t_uint64",
												"nativeSrc": "7280:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7309:6:14",
														"nodeType": "YulTypedName",
														"src": "7309:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7317:3:14",
														"nodeType": "YulTypedName",
														"src": "7317:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7325:5:14",
														"nodeType": "YulTypedName",
														"src": "7325:5:14",
														"type": ""
													}
												],
												"src": "7280:137:14"
											},
											{
												"body": {
													"nativeSrc": "7512:28:14",
													"nodeType": "YulBlock",
													"src": "7512:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7529:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7529:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7532:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7532:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7522:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7522:6:14"
																},
																"nativeSrc": "7522:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7522:12:14"
															},
															"nativeSrc": "7522:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "7522:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7423:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7423:117:14"
											},
											{
												"body": {
													"nativeSrc": "7635:28:14",
													"nodeType": "YulBlock",
													"src": "7635:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7652:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7652:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7655:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7655:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7645:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7645:6:14"
																},
																"nativeSrc": "7645:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7645:12:14"
															},
															"nativeSrc": "7645:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "7645:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7546:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7546:117:14"
											},
											{
												"body": {
													"nativeSrc": "7697:152:14",
													"nodeType": "YulBlock",
													"src": "7697:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7714:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7714:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7717:77:14",
																		"nodeType": "YulLiteral",
																		"src": "7717:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7707:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:14"
																},
																"nativeSrc": "7707:88:14",
																"nodeType": "YulFunctionCall",
																"src": "7707:88:14"
															},
															"nativeSrc": "7707:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "7707:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7811:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7811:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7814:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7814:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7804:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7804:6:14"
																},
																"nativeSrc": "7804:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7804:15:14"
															},
															"nativeSrc": "7804:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "7804:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7835:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7835:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7838:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7838:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7828:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7828:6:14"
																},
																"nativeSrc": "7828:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7828:15:14"
															},
															"nativeSrc": "7828:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "7828:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7669:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7669:180:14"
											},
											{
												"body": {
													"nativeSrc": "7898:238:14",
													"nodeType": "YulBlock",
													"src": "7898:238:14",
													"statements": [
														{
															"nativeSrc": "7908:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7908:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7930:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7930:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7960:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "7960:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7938:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "7938:21:14"
																		},
																		"nativeSrc": "7938:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7938:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7926:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7926:3:14"
																},
																"nativeSrc": "7926:40:14",
																"nodeType": "YulFunctionCall",
																"src": "7926:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7912:10:14",
																	"nodeType": "YulTypedName",
																	"src": "7912:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8077:22:14",
																"nodeType": "YulBlock",
																"src": "8077:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8079:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "8079:16:14"
																			},
																			"nativeSrc": "8079:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:18:14"
																		},
																		"nativeSrc": "8079:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8079:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8020:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "8020:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8032:18:14",
																				"nodeType": "YulLiteral",
																				"src": "8032:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8017:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8017:2:14"
																		},
																		"nativeSrc": "8017:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8017:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8056:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "8056:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8068:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8068:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8053:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8053:2:14"
																		},
																		"nativeSrc": "8053:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8053:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8014:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8014:2:14"
																},
																"nativeSrc": "8014:62:14",
																"nodeType": "YulFunctionCall",
																"src": "8014:62:14"
															},
															"nativeSrc": "8011:88:14",
															"nodeType": "YulIf",
															"src": "8011:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8115:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8115:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8119:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "8119:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8108:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8108:6:14"
																},
																"nativeSrc": "8108:22:14",
																"nodeType": "YulFunctionCall",
																"src": "8108:22:14"
															},
															"nativeSrc": "8108:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "8108:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7855:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7884:6:14",
														"nodeType": "YulTypedName",
														"src": "7884:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7892:4:14",
														"nodeType": "YulTypedName",
														"src": "7892:4:14",
														"type": ""
													}
												],
												"src": "7855:281:14"
											},
											{
												"body": {
													"nativeSrc": "8183:88:14",
													"nodeType": "YulBlock",
													"src": "8183:88:14",
													"statements": [
														{
															"nativeSrc": "8193:30:14",
															"nodeType": "YulAssignment",
															"src": "8193:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8203:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "8203:18:14"
																},
																"nativeSrc": "8203:20:14",
																"nodeType": "YulFunctionCall",
																"src": "8203:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8193:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8193:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8252:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8252:6:14"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8260:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8260:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8232:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "8232:19:14"
																},
																"nativeSrc": "8232:33:14",
																"nodeType": "YulFunctionCall",
																"src": "8232:33:14"
															},
															"nativeSrc": "8232:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "8232:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8142:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8167:4:14",
														"nodeType": "YulTypedName",
														"src": "8167:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8176:6:14",
														"nodeType": "YulTypedName",
														"src": "8176:6:14",
														"type": ""
													}
												],
												"src": "8142:129:14"
											},
											{
												"body": {
													"nativeSrc": "8344:241:14",
													"nodeType": "YulBlock",
													"src": "8344:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8449:22:14",
																"nodeType": "YulBlock",
																"src": "8449:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8451:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "8451:16:14"
																			},
																			"nativeSrc": "8451:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8451:18:14"
																		},
																		"nativeSrc": "8451:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8451:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8421:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8421:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8429:18:14",
																		"nodeType": "YulLiteral",
																		"src": "8429:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8418:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8418:2:14"
																},
																"nativeSrc": "8418:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8418:30:14"
															},
															"nativeSrc": "8415:56:14",
															"nodeType": "YulIf",
															"src": "8415:56:14"
														},
														{
															"nativeSrc": "8481:37:14",
															"nodeType": "YulAssignment",
															"src": "8481:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8511:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8511:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8489:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "8489:21:14"
																},
																"nativeSrc": "8489:29:14",
																"nodeType": "YulFunctionCall",
																"src": "8489:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8481:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8481:4:14"
																}
															]
														},
														{
															"nativeSrc": "8555:23:14",
															"nodeType": "YulAssignment",
															"src": "8555:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8567:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8567:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8573:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8573:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8563:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8563:3:14"
																},
																"nativeSrc": "8563:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8563:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8555:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8555:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "8277:308:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8328:6:14",
														"nodeType": "YulTypedName",
														"src": "8328:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8339:4:14",
														"nodeType": "YulTypedName",
														"src": "8339:4:14",
														"type": ""
													}
												],
												"src": "8277:308:14"
											},
											{
												"body": {
													"nativeSrc": "8655:84:14",
													"nodeType": "YulBlock",
													"src": "8655:84:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8679:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8679:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8684:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8684:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8689:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8689:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8666:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "8666:12:14"
																},
																"nativeSrc": "8666:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8666:30:14"
															},
															"nativeSrc": "8666:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8666:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8716:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8716:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8721:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8721:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8712:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8712:3:14"
																		},
																		"nativeSrc": "8712:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8712:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8730:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8730:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8705:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8705:6:14"
																},
																"nativeSrc": "8705:27:14",
																"nodeType": "YulFunctionCall",
																"src": "8705:27:14"
															},
															"nativeSrc": "8705:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "8705:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8591:148:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8637:3:14",
														"nodeType": "YulTypedName",
														"src": "8637:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8642:3:14",
														"nodeType": "YulTypedName",
														"src": "8642:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8647:6:14",
														"nodeType": "YulTypedName",
														"src": "8647:6:14",
														"type": ""
													}
												],
												"src": "8591:148:14"
											},
											{
												"body": {
													"nativeSrc": "8829:341:14",
													"nodeType": "YulBlock",
													"src": "8829:341:14",
													"statements": [
														{
															"nativeSrc": "8839:75:14",
															"nodeType": "YulAssignment",
															"src": "8839:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8906:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8906:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "8864:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "8864:41:14"
																		},
																		"nativeSrc": "8864:49:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8864:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8848:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "8848:15:14"
																},
																"nativeSrc": "8848:66:14",
																"nodeType": "YulFunctionCall",
																"src": "8848:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8839:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8839:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8930:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "8930:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8937:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8937:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8923:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8923:6:14"
																},
																"nativeSrc": "8923:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8923:21:14"
															},
															"nativeSrc": "8923:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8923:21:14"
														},
														{
															"nativeSrc": "8953:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8953:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8968:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "8968:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8975:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8975:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8964:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:14"
																},
																"nativeSrc": "8964:16:14",
																"nodeType": "YulFunctionCall",
																"src": "8964:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8957:3:14",
																	"nodeType": "YulTypedName",
																	"src": "8957:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9018:83:14",
																"nodeType": "YulBlock",
																"src": "9018:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9020:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9020:77:14"
																			},
																			"nativeSrc": "9020:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9020:79:14"
																		},
																		"nativeSrc": "9020:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9020:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8999:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8999:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9004:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9004:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8995:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8995:3:14"
																		},
																		"nativeSrc": "8995:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8995:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9013:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9013:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8992:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8992:2:14"
																},
																"nativeSrc": "8992:25:14",
																"nodeType": "YulFunctionCall",
																"src": "8992:25:14"
															},
															"nativeSrc": "8989:112:14",
															"nodeType": "YulIf",
															"src": "8989:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9147:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9147:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9152:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9152:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9157:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9157:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9110:36:14",
																	"nodeType": "YulIdentifier",
																	"src": "9110:36:14"
																},
																"nativeSrc": "9110:54:14",
																"nodeType": "YulFunctionCall",
																"src": "9110:54:14"
															},
															"nativeSrc": "9110:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "9110:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "8745:425:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8802:3:14",
														"nodeType": "YulTypedName",
														"src": "8802:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8807:6:14",
														"nodeType": "YulTypedName",
														"src": "8807:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8815:3:14",
														"nodeType": "YulTypedName",
														"src": "8815:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8823:5:14",
														"nodeType": "YulTypedName",
														"src": "8823:5:14",
														"type": ""
													}
												],
												"src": "8745:425:14"
											},
											{
												"body": {
													"nativeSrc": "9252:278:14",
													"nodeType": "YulBlock",
													"src": "9252:278:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9301:83:14",
																"nodeType": "YulBlock",
																"src": "9301:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9303:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9303:77:14"
																			},
																			"nativeSrc": "9303:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9303:79:14"
																		},
																		"nativeSrc": "9303:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9303:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9280:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9280:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9288:4:14",
																						"nodeType": "YulLiteral",
																						"src": "9288:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9276:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9276:3:14"
																				},
																				"nativeSrc": "9276:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9276:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9295:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "9295:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9272:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9272:3:14"
																		},
																		"nativeSrc": "9272:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9272:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9265:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9265:6:14"
																},
																"nativeSrc": "9265:35:14",
																"nodeType": "YulFunctionCall",
																"src": "9265:35:14"
															},
															"nativeSrc": "9262:122:14",
															"nodeType": "YulIf",
															"src": "9262:122:14"
														},
														{
															"nativeSrc": "9393:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9393:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9420:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9420:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9407:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "9407:12:14"
																},
																"nativeSrc": "9407:20:14",
																"nodeType": "YulFunctionCall",
																"src": "9407:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9397:6:14",
																	"nodeType": "YulTypedName",
																	"src": "9397:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9436:88:14",
															"nodeType": "YulAssignment",
															"src": "9436:88:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9497:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9497:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9505:4:14",
																				"nodeType": "YulLiteral",
																				"src": "9505:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9493:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9493:3:14"
																		},
																		"nativeSrc": "9493:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9493:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9512:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9512:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9520:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9520:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "9445:47:14",
																	"nodeType": "YulIdentifier",
																	"src": "9445:47:14"
																},
																"nativeSrc": "9445:79:14",
																"nodeType": "YulFunctionCall",
																"src": "9445:79:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9436:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9436:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "9190:340:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9230:6:14",
														"nodeType": "YulTypedName",
														"src": "9230:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9238:3:14",
														"nodeType": "YulTypedName",
														"src": "9238:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9246:5:14",
														"nodeType": "YulTypedName",
														"src": "9246:5:14",
														"type": ""
													}
												],
												"src": "9190:340:14"
											},
											{
												"body": {
													"nativeSrc": "9644:687:14",
													"nodeType": "YulBlock",
													"src": "9644:687:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9690:83:14",
																"nodeType": "YulBlock",
																"src": "9690:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9692:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9692:77:14"
																			},
																			"nativeSrc": "9692:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9692:79:14"
																		},
																		"nativeSrc": "9692:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9692:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9665:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9665:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9674:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9674:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9661:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9661:3:14"
																		},
																		"nativeSrc": "9661:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9661:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9686:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9686:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9657:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9657:3:14"
																},
																"nativeSrc": "9657:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9657:32:14"
															},
															"nativeSrc": "9654:119:14",
															"nodeType": "YulIf",
															"src": "9654:119:14"
														},
														{
															"nativeSrc": "9783:116:14",
															"nodeType": "YulBlock",
															"src": "9783:116:14",
															"statements": [
																{
																	"nativeSrc": "9798:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9798:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9812:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9812:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9802:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9802:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9827:62:14",
																	"nodeType": "YulAssignment",
																	"src": "9827:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9861:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9861:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9872:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9872:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9857:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9857:3:14"
																				},
																				"nativeSrc": "9857:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9857:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9881:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9881:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "9837:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "9837:19:14"
																		},
																		"nativeSrc": "9837:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9837:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9827:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9827:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9909:117:14",
															"nodeType": "YulBlock",
															"src": "9909:117:14",
															"statements": [
																{
																	"nativeSrc": "9924:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9924:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9938:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9938:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9928:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9928:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9954:62:14",
																	"nodeType": "YulAssignment",
																	"src": "9954:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9988:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9988:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9999:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9999:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9984:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9984:3:14"
																				},
																				"nativeSrc": "9984:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9984:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10008:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10008:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "9964:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "9964:19:14"
																		},
																		"nativeSrc": "9964:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9964:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9954:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9954:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10036:288:14",
															"nodeType": "YulBlock",
															"src": "10036:288:14",
															"statements": [
																{
																	"nativeSrc": "10051:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10051:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10082:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10082:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10093:2:14",
																						"nodeType": "YulLiteral",
																						"src": "10093:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10078:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10078:3:14"
																				},
																				"nativeSrc": "10078:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10078:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10065:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "10065:12:14"
																		},
																		"nativeSrc": "10065:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10065:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10055:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10055:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10144:83:14",
																		"nodeType": "YulBlock",
																		"src": "10144:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10146:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "10146:77:14"
																					},
																					"nativeSrc": "10146:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10146:79:14"
																				},
																				"nativeSrc": "10146:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "10146:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10116:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10116:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10124:18:14",
																				"nodeType": "YulLiteral",
																				"src": "10124:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10113:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10113:2:14"
																		},
																		"nativeSrc": "10113:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10113:30:14"
																	},
																	"nativeSrc": "10110:117:14",
																	"nodeType": "YulIf",
																	"src": "10110:117:14"
																},
																{
																	"nativeSrc": "10241:73:14",
																	"nodeType": "YulAssignment",
																	"src": "10241:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10286:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10286:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10297:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10297:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10282:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10282:3:14"
																				},
																				"nativeSrc": "10282:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10282:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10306:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10306:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "10251:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "10251:30:14"
																		},
																		"nativeSrc": "10251:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10251:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10241:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10241:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64t_uint64t_string_memory_ptr",
												"nativeSrc": "9536:795:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9598:9:14",
														"nodeType": "YulTypedName",
														"src": "9598:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9609:7:14",
														"nodeType": "YulTypedName",
														"src": "9609:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9621:6:14",
														"nodeType": "YulTypedName",
														"src": "9621:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9629:6:14",
														"nodeType": "YulTypedName",
														"src": "9629:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9637:6:14",
														"nodeType": "YulTypedName",
														"src": "9637:6:14",
														"type": ""
													}
												],
												"src": "9536:795:14"
											},
											{
												"body": {
													"nativeSrc": "10437:519:14",
													"nodeType": "YulBlock",
													"src": "10437:519:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10483:83:14",
																"nodeType": "YulBlock",
																"src": "10483:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10485:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "10485:77:14"
																			},
																			"nativeSrc": "10485:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10485:79:14"
																		},
																		"nativeSrc": "10485:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10485:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10458:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10458:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10467:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10467:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10454:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10454:3:14"
																		},
																		"nativeSrc": "10454:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10454:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10479:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10479:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10450:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10450:3:14"
																},
																"nativeSrc": "10450:32:14",
																"nodeType": "YulFunctionCall",
																"src": "10450:32:14"
															},
															"nativeSrc": "10447:119:14",
															"nodeType": "YulIf",
															"src": "10447:119:14"
														},
														{
															"nativeSrc": "10576:117:14",
															"nodeType": "YulBlock",
															"src": "10576:117:14",
															"statements": [
																{
																	"nativeSrc": "10591:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10591:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10605:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10605:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10595:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10595:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10620:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10620:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10655:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10655:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10666:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10666:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10651:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10651:3:14"
																				},
																				"nativeSrc": "10651:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10651:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10675:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10675:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10630:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10630:20:14"
																		},
																		"nativeSrc": "10630:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10630:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10620:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10620:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10703:118:14",
															"nodeType": "YulBlock",
															"src": "10703:118:14",
															"statements": [
																{
																	"nativeSrc": "10718:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10718:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10732:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10732:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10722:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10722:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10748:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10748:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10783:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10783:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10794:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10794:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10779:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10779:3:14"
																				},
																				"nativeSrc": "10779:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10779:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10803:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10803:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10758:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10758:20:14"
																		},
																		"nativeSrc": "10758:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10758:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10748:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10748:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10831:118:14",
															"nodeType": "YulBlock",
															"src": "10831:118:14",
															"statements": [
																{
																	"nativeSrc": "10846:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10846:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10860:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10860:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10850:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10850:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10876:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10876:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10911:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10911:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10922:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10922:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10907:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10907:3:14"
																				},
																				"nativeSrc": "10907:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10907:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10931:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10931:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10886:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10886:20:14"
																		},
																		"nativeSrc": "10886:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10886:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10876:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10876:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "10337:619:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10391:9:14",
														"nodeType": "YulTypedName",
														"src": "10391:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10402:7:14",
														"nodeType": "YulTypedName",
														"src": "10402:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10414:6:14",
														"nodeType": "YulTypedName",
														"src": "10414:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10422:6:14",
														"nodeType": "YulTypedName",
														"src": "10422:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10430:6:14",
														"nodeType": "YulTypedName",
														"src": "10430:6:14",
														"type": ""
													}
												],
												"src": "10337:619:14"
											},
											{
												"body": {
													"nativeSrc": "11051:28:14",
													"nodeType": "YulBlock",
													"src": "11051:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11068:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11068:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11071:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11071:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11061:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11061:6:14"
																},
																"nativeSrc": "11061:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11061:12:14"
															},
															"nativeSrc": "11061:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "11061:12:14"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "10962:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "10962:117:14"
											},
											{
												"body": {
													"nativeSrc": "11174:28:14",
													"nodeType": "YulBlock",
													"src": "11174:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11191:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11191:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11194:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11184:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11184:6:14"
																},
																"nativeSrc": "11184:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11184:12:14"
															},
															"nativeSrc": "11184:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "11184:12:14"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "11085:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "11085:117:14"
											},
											{
												"body": {
													"nativeSrc": "11315:478:14",
													"nodeType": "YulBlock",
													"src": "11315:478:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11364:83:14",
																"nodeType": "YulBlock",
																"src": "11364:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11366:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11366:77:14"
																			},
																			"nativeSrc": "11366:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11366:79:14"
																		},
																		"nativeSrc": "11366:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11366:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11343:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11343:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11351:4:14",
																						"nodeType": "YulLiteral",
																						"src": "11351:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11339:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11339:3:14"
																				},
																				"nativeSrc": "11339:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11339:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11358:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "11358:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11335:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11335:3:14"
																		},
																		"nativeSrc": "11335:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11335:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11328:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11328:6:14"
																},
																"nativeSrc": "11328:35:14",
																"nodeType": "YulFunctionCall",
																"src": "11328:35:14"
															},
															"nativeSrc": "11325:122:14",
															"nodeType": "YulIf",
															"src": "11325:122:14"
														},
														{
															"nativeSrc": "11456:30:14",
															"nodeType": "YulAssignment",
															"src": "11456:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11479:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11479:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11466:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "11466:12:14"
																},
																"nativeSrc": "11466:20:14",
																"nodeType": "YulFunctionCall",
																"src": "11466:20:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11456:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11456:6:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11529:83:14",
																"nodeType": "YulBlock",
																"src": "11529:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "11531:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11531:77:14"
																			},
																			"nativeSrc": "11531:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11531:79:14"
																		},
																		"nativeSrc": "11531:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11531:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11501:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11501:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11509:18:14",
																		"nodeType": "YulLiteral",
																		"src": "11509:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11498:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11498:2:14"
																},
																"nativeSrc": "11498:30:14",
																"nodeType": "YulFunctionCall",
																"src": "11498:30:14"
															},
															"nativeSrc": "11495:117:14",
															"nodeType": "YulIf",
															"src": "11495:117:14"
														},
														{
															"nativeSrc": "11621:29:14",
															"nodeType": "YulAssignment",
															"src": "11621:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11637:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11637:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11645:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11645:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11633:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11633:3:14"
																},
																"nativeSrc": "11633:17:14",
																"nodeType": "YulFunctionCall",
																"src": "11633:17:14"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "11621:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "11621:8:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11704:83:14",
																"nodeType": "YulBlock",
																"src": "11704:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "11706:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11706:77:14"
																			},
																			"nativeSrc": "11706:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11706:79:14"
																		},
																		"nativeSrc": "11706:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11706:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "11669:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "11669:8:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "11683:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11683:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11691:4:14",
																						"nodeType": "YulLiteral",
																						"src": "11691:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "11679:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11679:3:14"
																				},
																				"nativeSrc": "11679:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11679:17:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11665:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11665:3:14"
																		},
																		"nativeSrc": "11665:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11665:32:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11699:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11699:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11662:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11662:2:14"
																},
																"nativeSrc": "11662:41:14",
																"nodeType": "YulFunctionCall",
																"src": "11662:41:14"
															},
															"nativeSrc": "11659:128:14",
															"nodeType": "YulIf",
															"src": "11659:128:14"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "11225:568:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11282:6:14",
														"nodeType": "YulTypedName",
														"src": "11282:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11290:3:14",
														"nodeType": "YulTypedName",
														"src": "11290:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "11298:8:14",
														"nodeType": "YulTypedName",
														"src": "11298:8:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11308:6:14",
														"nodeType": "YulTypedName",
														"src": "11308:6:14",
														"type": ""
													}
												],
												"src": "11225:568:14"
											},
											{
												"body": {
													"nativeSrc": "11906:478:14",
													"nodeType": "YulBlock",
													"src": "11906:478:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11955:83:14",
																"nodeType": "YulBlock",
																"src": "11955:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11957:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11957:77:14"
																			},
																			"nativeSrc": "11957:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11957:79:14"
																		},
																		"nativeSrc": "11957:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11957:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11934:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11934:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11942:4:14",
																						"nodeType": "YulLiteral",
																						"src": "11942:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11930:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11930:3:14"
																				},
																				"nativeSrc": "11930:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11930:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11949:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "11949:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11926:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11926:3:14"
																		},
																		"nativeSrc": "11926:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11926:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11919:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11919:6:14"
																},
																"nativeSrc": "11919:35:14",
																"nodeType": "YulFunctionCall",
																"src": "11919:35:14"
															},
															"nativeSrc": "11916:122:14",
															"nodeType": "YulIf",
															"src": "11916:122:14"
														},
														{
															"nativeSrc": "12047:30:14",
															"nodeType": "YulAssignment",
															"src": "12047:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12070:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12070:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12057:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "12057:12:14"
																},
																"nativeSrc": "12057:20:14",
																"nodeType": "YulFunctionCall",
																"src": "12057:20:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12047:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12047:6:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12120:83:14",
																"nodeType": "YulBlock",
																"src": "12120:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "12122:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12122:77:14"
																			},
																			"nativeSrc": "12122:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12122:79:14"
																		},
																		"nativeSrc": "12122:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12122:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12092:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12092:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12100:18:14",
																		"nodeType": "YulLiteral",
																		"src": "12100:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12089:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12089:2:14"
																},
																"nativeSrc": "12089:30:14",
																"nodeType": "YulFunctionCall",
																"src": "12089:30:14"
															},
															"nativeSrc": "12086:117:14",
															"nodeType": "YulIf",
															"src": "12086:117:14"
														},
														{
															"nativeSrc": "12212:29:14",
															"nodeType": "YulAssignment",
															"src": "12212:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12228:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12228:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12236:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12236:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12224:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12224:3:14"
																},
																"nativeSrc": "12224:17:14",
																"nodeType": "YulFunctionCall",
																"src": "12224:17:14"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "12212:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "12212:8:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12295:83:14",
																"nodeType": "YulBlock",
																"src": "12295:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "12297:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12297:77:14"
																			},
																			"nativeSrc": "12297:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12297:79:14"
																		},
																		"nativeSrc": "12297:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12297:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "12260:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "12260:8:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "12274:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12274:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12282:4:14",
																						"nodeType": "YulLiteral",
																						"src": "12282:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "12270:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12270:3:14"
																				},
																				"nativeSrc": "12270:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12270:17:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12256:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12256:3:14"
																		},
																		"nativeSrc": "12256:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12256:32:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12290:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12290:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12253:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12253:2:14"
																},
																"nativeSrc": "12253:41:14",
																"nodeType": "YulFunctionCall",
																"src": "12253:41:14"
															},
															"nativeSrc": "12250:128:14",
															"nodeType": "YulIf",
															"src": "12250:128:14"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "11816:568:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11873:6:14",
														"nodeType": "YulTypedName",
														"src": "11873:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11881:3:14",
														"nodeType": "YulTypedName",
														"src": "11881:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "11889:8:14",
														"nodeType": "YulTypedName",
														"src": "11889:8:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11899:6:14",
														"nodeType": "YulTypedName",
														"src": "11899:6:14",
														"type": ""
													}
												],
												"src": "11816:568:14"
											},
											{
												"body": {
													"nativeSrc": "12560:909:14",
													"nodeType": "YulBlock",
													"src": "12560:909:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "12606:83:14",
																"nodeType": "YulBlock",
																"src": "12606:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12608:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12608:77:14"
																			},
																			"nativeSrc": "12608:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12608:79:14"
																		},
																		"nativeSrc": "12608:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12608:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12581:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12581:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12590:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12590:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12577:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12577:3:14"
																		},
																		"nativeSrc": "12577:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12577:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12602:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12602:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12573:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12573:3:14"
																},
																"nativeSrc": "12573:32:14",
																"nodeType": "YulFunctionCall",
																"src": "12573:32:14"
															},
															"nativeSrc": "12570:119:14",
															"nodeType": "YulIf",
															"src": "12570:119:14"
														},
														{
															"nativeSrc": "12699:117:14",
															"nodeType": "YulBlock",
															"src": "12699:117:14",
															"statements": [
																{
																	"nativeSrc": "12714:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12714:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12728:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12728:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12718:6:14",
																			"nodeType": "YulTypedName",
																			"src": "12718:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12743:63:14",
																	"nodeType": "YulAssignment",
																	"src": "12743:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12778:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12778:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12789:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12789:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12774:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12774:3:14"
																				},
																				"nativeSrc": "12774:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12774:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12798:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12798:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12753:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "12753:20:14"
																		},
																		"nativeSrc": "12753:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12753:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12743:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "12743:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12826:313:14",
															"nodeType": "YulBlock",
															"src": "12826:313:14",
															"statements": [
																{
																	"nativeSrc": "12841:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12841:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12872:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12872:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12883:2:14",
																						"nodeType": "YulLiteral",
																						"src": "12883:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12868:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12868:3:14"
																				},
																				"nativeSrc": "12868:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12868:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12855:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "12855:12:14"
																		},
																		"nativeSrc": "12855:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12855:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12845:6:14",
																			"nodeType": "YulTypedName",
																			"src": "12845:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12934:83:14",
																		"nodeType": "YulBlock",
																		"src": "12934:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12936:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "12936:77:14"
																					},
																					"nativeSrc": "12936:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "12936:79:14"
																				},
																				"nativeSrc": "12936:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "12936:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12906:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12906:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12914:18:14",
																				"nodeType": "YulLiteral",
																				"src": "12914:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12903:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "12903:2:14"
																		},
																		"nativeSrc": "12903:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12903:30:14"
																	},
																	"nativeSrc": "12900:117:14",
																	"nodeType": "YulIf",
																	"src": "12900:117:14"
																},
																{
																	"nativeSrc": "13031:98:14",
																	"nodeType": "YulAssignment",
																	"src": "13031:98:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13101:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13101:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13112:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13112:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13097:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13097:3:14"
																				},
																				"nativeSrc": "13097:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13097:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13121:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13121:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "13049:47:14",
																			"nodeType": "YulIdentifier",
																			"src": "13049:47:14"
																		},
																		"nativeSrc": "13049:80:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13049:80:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13031:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13031:6:14"
																		},
																		{
																			"name": "value2",
																			"nativeSrc": "13039:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13039:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13149:313:14",
															"nodeType": "YulBlock",
															"src": "13149:313:14",
															"statements": [
																{
																	"nativeSrc": "13164:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13164:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13195:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13195:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13206:2:14",
																						"nodeType": "YulLiteral",
																						"src": "13206:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13191:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13191:3:14"
																				},
																				"nativeSrc": "13191:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13191:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13178:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "13178:12:14"
																		},
																		"nativeSrc": "13178:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13178:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13168:6:14",
																			"nodeType": "YulTypedName",
																			"src": "13168:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13257:83:14",
																		"nodeType": "YulBlock",
																		"src": "13257:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13259:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "13259:77:14"
																					},
																					"nativeSrc": "13259:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13259:79:14"
																				},
																				"nativeSrc": "13259:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "13259:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13229:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13229:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13237:18:14",
																				"nodeType": "YulLiteral",
																				"src": "13237:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13226:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "13226:2:14"
																		},
																		"nativeSrc": "13226:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13226:30:14"
																	},
																	"nativeSrc": "13223:117:14",
																	"nodeType": "YulIf",
																	"src": "13223:117:14"
																},
																{
																	"nativeSrc": "13354:98:14",
																	"nodeType": "YulAssignment",
																	"src": "13354:98:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13424:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13424:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13435:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13435:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13420:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13420:3:14"
																				},
																				"nativeSrc": "13420:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13420:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13444:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13444:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "13372:47:14",
																			"nodeType": "YulIdentifier",
																			"src": "13372:47:14"
																		},
																		"nativeSrc": "13372:80:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13372:80:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "13354:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13354:6:14"
																		},
																		{
																			"name": "value4",
																			"nativeSrc": "13362:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13362:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "12390:1079:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12498:9:14",
														"nodeType": "YulTypedName",
														"src": "12498:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12509:7:14",
														"nodeType": "YulTypedName",
														"src": "12509:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12521:6:14",
														"nodeType": "YulTypedName",
														"src": "12521:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12529:6:14",
														"nodeType": "YulTypedName",
														"src": "12529:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12537:6:14",
														"nodeType": "YulTypedName",
														"src": "12537:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12545:6:14",
														"nodeType": "YulTypedName",
														"src": "12545:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12553:6:14",
														"nodeType": "YulTypedName",
														"src": "12553:6:14",
														"type": ""
													}
												],
												"src": "12390:1079:14"
											},
											{
												"body": {
													"nativeSrc": "13534:81:14",
													"nodeType": "YulBlock",
													"src": "13534:81:14",
													"statements": [
														{
															"nativeSrc": "13544:65:14",
															"nodeType": "YulAssignment",
															"src": "13544:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13601:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "13601:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "13584:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "13584:16:14"
																				},
																				"nativeSrc": "13584:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13584:23:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "13575:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "13575:8:14"
																		},
																		"nativeSrc": "13575:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13575:33:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13557:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "13557:17:14"
																},
																"nativeSrc": "13557:52:14",
																"nodeType": "YulFunctionCall",
																"src": "13557:52:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13544:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "13544:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint64_to_t_uint256",
												"nativeSrc": "13475:140:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13514:5:14",
														"nodeType": "YulTypedName",
														"src": "13514:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13524:9:14",
														"nodeType": "YulTypedName",
														"src": "13524:9:14",
														"type": ""
													}
												],
												"src": "13475:140:14"
											},
											{
												"body": {
													"nativeSrc": "13685:65:14",
													"nodeType": "YulBlock",
													"src": "13685:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13702:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13702:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13737:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "13737:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint64_to_t_uint256",
																			"nativeSrc": "13707:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "13707:29:14"
																		},
																		"nativeSrc": "13707:36:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13707:36:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13695:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13695:6:14"
																},
																"nativeSrc": "13695:49:14",
																"nodeType": "YulFunctionCall",
																"src": "13695:49:14"
															},
															"nativeSrc": "13695:49:14",
															"nodeType": "YulExpressionStatement",
															"src": "13695:49:14"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
												"nativeSrc": "13621:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13673:5:14",
														"nodeType": "YulTypedName",
														"src": "13673:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13680:3:14",
														"nodeType": "YulTypedName",
														"src": "13680:3:14",
														"type": ""
													}
												],
												"src": "13621:129:14"
											},
											{
												"body": {
													"nativeSrc": "13908:286:14",
													"nodeType": "YulBlock",
													"src": "13908:286:14",
													"statements": [
														{
															"nativeSrc": "13918:26:14",
															"nodeType": "YulAssignment",
															"src": "13918:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13930:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13930:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13941:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13941:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13926:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13926:3:14"
																},
																"nativeSrc": "13926:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13926:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13918:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13918:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13998:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13998:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14011:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14011:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14022:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14022:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14007:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14007:3:14"
																		},
																		"nativeSrc": "14007:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14007:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13954:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13954:43:14"
																},
																"nativeSrc": "13954:71:14",
																"nodeType": "YulFunctionCall",
																"src": "13954:71:14"
															},
															"nativeSrc": "13954:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "13954:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14078:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14078:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14091:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14091:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14102:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14102:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14087:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14087:3:14"
																		},
																		"nativeSrc": "14087:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14087:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "14035:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "14035:42:14"
																},
																"nativeSrc": "14035:71:14",
																"nodeType": "YulFunctionCall",
																"src": "14035:71:14"
															},
															"nativeSrc": "14035:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "14035:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14159:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14159:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14172:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14172:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14183:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14183:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14168:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14168:3:14"
																		},
																		"nativeSrc": "14168:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14168:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "14116:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "14116:42:14"
																},
																"nativeSrc": "14116:71:14",
																"nodeType": "YulFunctionCall",
																"src": "14116:71:14"
															},
															"nativeSrc": "14116:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "14116:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint64_t_uint64__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13756:438:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13864:9:14",
														"nodeType": "YulTypedName",
														"src": "13864:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13876:6:14",
														"nodeType": "YulTypedName",
														"src": "13876:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13884:6:14",
														"nodeType": "YulTypedName",
														"src": "13884:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13892:6:14",
														"nodeType": "YulTypedName",
														"src": "13892:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13903:4:14",
														"nodeType": "YulTypedName",
														"src": "13903:4:14",
														"type": ""
													}
												],
												"src": "13756:438:14"
											},
											{
												"body": {
													"nativeSrc": "14306:63:14",
													"nodeType": "YulBlock",
													"src": "14306:63:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14328:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14328:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14336:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14336:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14324:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14324:3:14"
																		},
																		"nativeSrc": "14324:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14324:14:14"
																	},
																	{
																		"hexValue": "4e6f20636c61696d61626c6520616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "14340:21:14",
																		"nodeType": "YulLiteral",
																		"src": "14340:21:14",
																		"type": "",
																		"value": "No claimable amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14317:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14317:6:14"
																},
																"nativeSrc": "14317:45:14",
																"nodeType": "YulFunctionCall",
																"src": "14317:45:14"
															},
															"nativeSrc": "14317:45:14",
															"nodeType": "YulExpressionStatement",
															"src": "14317:45:14"
														}
													]
												},
												"name": "store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
												"nativeSrc": "14200:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14298:6:14",
														"nodeType": "YulTypedName",
														"src": "14298:6:14",
														"type": ""
													}
												],
												"src": "14200:169:14"
											},
											{
												"body": {
													"nativeSrc": "14521:220:14",
													"nodeType": "YulBlock",
													"src": "14521:220:14",
													"statements": [
														{
															"nativeSrc": "14531:74:14",
															"nodeType": "YulAssignment",
															"src": "14531:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14597:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14597:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14602:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14602:2:14",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14538:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "14538:58:14"
																},
																"nativeSrc": "14538:67:14",
																"nodeType": "YulFunctionCall",
																"src": "14538:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14531:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14531:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14703:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14703:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																	"nativeSrc": "14614:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "14614:88:14"
																},
																"nativeSrc": "14614:93:14",
																"nodeType": "YulFunctionCall",
																"src": "14614:93:14"
															},
															"nativeSrc": "14614:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "14614:93:14"
														},
														{
															"nativeSrc": "14716:19:14",
															"nodeType": "YulAssignment",
															"src": "14716:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14727:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14727:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14732:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14732:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14723:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14723:3:14"
																},
																"nativeSrc": "14723:12:14",
																"nodeType": "YulFunctionCall",
																"src": "14723:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14716:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14716:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14375:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14509:3:14",
														"nodeType": "YulTypedName",
														"src": "14509:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14517:3:14",
														"nodeType": "YulTypedName",
														"src": "14517:3:14",
														"type": ""
													}
												],
												"src": "14375:366:14"
											},
											{
												"body": {
													"nativeSrc": "14918:248:14",
													"nodeType": "YulBlock",
													"src": "14918:248:14",
													"statements": [
														{
															"nativeSrc": "14928:26:14",
															"nodeType": "YulAssignment",
															"src": "14928:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14940:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14940:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14951:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14951:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14936:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14936:3:14"
																},
																"nativeSrc": "14936:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14936:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14928:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14928:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14975:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14975:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14986:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14986:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14971:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14971:3:14"
																		},
																		"nativeSrc": "14971:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14971:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14994:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "14994:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15000:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15000:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14990:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14990:3:14"
																		},
																		"nativeSrc": "14990:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14990:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14964:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14964:6:14"
																},
																"nativeSrc": "14964:47:14",
																"nodeType": "YulFunctionCall",
																"src": "14964:47:14"
															},
															"nativeSrc": "14964:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "14964:47:14"
														},
														{
															"nativeSrc": "15020:139:14",
															"nodeType": "YulAssignment",
															"src": "15020:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15154:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15154:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15028:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "15028:124:14"
																},
																"nativeSrc": "15028:131:14",
																"nodeType": "YulFunctionCall",
																"src": "15028:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15020:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15020:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14747:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14898:9:14",
														"nodeType": "YulTypedName",
														"src": "14898:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14913:4:14",
														"nodeType": "YulTypedName",
														"src": "14913:4:14",
														"type": ""
													}
												],
												"src": "14747:419:14"
											},
											{
												"body": {
													"nativeSrc": "15278:69:14",
													"nodeType": "YulBlock",
													"src": "15278:69:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15300:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15300:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15308:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15308:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15296:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15296:3:14"
																		},
																		"nativeSrc": "15296:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15296:14:14"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
																		"kind": "string",
																		"nativeSrc": "15312:27:14",
																		"nodeType": "YulLiteral",
																		"src": "15312:27:14",
																		"type": "",
																		"value": "Insufficient funds in jar"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15289:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15289:6:14"
																},
																"nativeSrc": "15289:51:14",
																"nodeType": "YulFunctionCall",
																"src": "15289:51:14"
															},
															"nativeSrc": "15289:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "15289:51:14"
														}
													]
												},
												"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
												"nativeSrc": "15172:175:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15270:6:14",
														"nodeType": "YulTypedName",
														"src": "15270:6:14",
														"type": ""
													}
												],
												"src": "15172:175:14"
											},
											{
												"body": {
													"nativeSrc": "15499:220:14",
													"nodeType": "YulBlock",
													"src": "15499:220:14",
													"statements": [
														{
															"nativeSrc": "15509:74:14",
															"nodeType": "YulAssignment",
															"src": "15509:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15575:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15575:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15580:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15580:2:14",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15516:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "15516:58:14"
																},
																"nativeSrc": "15516:67:14",
																"nodeType": "YulFunctionCall",
																"src": "15516:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15509:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15509:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15681:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15681:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																	"nativeSrc": "15592:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "15592:88:14"
																},
																"nativeSrc": "15592:93:14",
																"nodeType": "YulFunctionCall",
																"src": "15592:93:14"
															},
															"nativeSrc": "15592:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "15592:93:14"
														},
														{
															"nativeSrc": "15694:19:14",
															"nodeType": "YulAssignment",
															"src": "15694:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15705:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15705:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15710:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15710:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15701:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15701:3:14"
																},
																"nativeSrc": "15701:12:14",
																"nodeType": "YulFunctionCall",
																"src": "15701:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15694:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15694:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15353:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15487:3:14",
														"nodeType": "YulTypedName",
														"src": "15487:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15495:3:14",
														"nodeType": "YulTypedName",
														"src": "15495:3:14",
														"type": ""
													}
												],
												"src": "15353:366:14"
											},
											{
												"body": {
													"nativeSrc": "15896:248:14",
													"nodeType": "YulBlock",
													"src": "15896:248:14",
													"statements": [
														{
															"nativeSrc": "15906:26:14",
															"nodeType": "YulAssignment",
															"src": "15906:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15918:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15918:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15929:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15929:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15914:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15914:3:14"
																},
																"nativeSrc": "15914:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15914:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15906:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15906:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15953:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15953:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15964:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15964:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15949:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15949:3:14"
																		},
																		"nativeSrc": "15949:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15949:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15972:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "15972:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15978:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15978:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15968:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15968:3:14"
																		},
																		"nativeSrc": "15968:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15968:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15942:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15942:6:14"
																},
																"nativeSrc": "15942:47:14",
																"nodeType": "YulFunctionCall",
																"src": "15942:47:14"
															},
															"nativeSrc": "15942:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "15942:47:14"
														},
														{
															"nativeSrc": "15998:139:14",
															"nodeType": "YulAssignment",
															"src": "15998:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16132:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16132:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16006:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "16006:124:14"
																},
																"nativeSrc": "16006:131:14",
																"nodeType": "YulFunctionCall",
																"src": "16006:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15998:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15998:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15725:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15876:9:14",
														"nodeType": "YulTypedName",
														"src": "15876:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15891:4:14",
														"nodeType": "YulTypedName",
														"src": "15891:4:14",
														"type": ""
													}
												],
												"src": "15725:419:14"
											},
											{
												"body": {
													"nativeSrc": "16195:149:14",
													"nodeType": "YulBlock",
													"src": "16195:149:14",
													"statements": [
														{
															"nativeSrc": "16205:25:14",
															"nodeType": "YulAssignment",
															"src": "16205:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16228:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16228:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16210:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "16210:17:14"
																},
																"nativeSrc": "16210:20:14",
																"nodeType": "YulFunctionCall",
																"src": "16210:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16205:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "16205:1:14"
																}
															]
														},
														{
															"nativeSrc": "16239:25:14",
															"nodeType": "YulAssignment",
															"src": "16239:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16262:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16262:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16244:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "16244:17:14"
																},
																"nativeSrc": "16244:20:14",
																"nodeType": "YulFunctionCall",
																"src": "16244:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16239:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "16239:1:14"
																}
															]
														},
														{
															"nativeSrc": "16273:17:14",
															"nodeType": "YulAssignment",
															"src": "16273:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16285:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16285:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16288:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16288:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16281:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16281:3:14"
																},
																"nativeSrc": "16281:9:14",
																"nodeType": "YulFunctionCall",
																"src": "16281:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16273:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16273:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16315:22:14",
																"nodeType": "YulBlock",
																"src": "16315:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16317:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "16317:16:14"
																			},
																			"nativeSrc": "16317:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16317:18:14"
																		},
																		"nativeSrc": "16317:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "16317:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16306:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16306:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16312:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16312:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16303:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "16303:2:14"
																},
																"nativeSrc": "16303:11:14",
																"nodeType": "YulFunctionCall",
																"src": "16303:11:14"
															},
															"nativeSrc": "16300:37:14",
															"nodeType": "YulIf",
															"src": "16300:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16150:194:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16181:1:14",
														"nodeType": "YulTypedName",
														"src": "16181:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16184:1:14",
														"nodeType": "YulTypedName",
														"src": "16184:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16190:4:14",
														"nodeType": "YulTypedName",
														"src": "16190:4:14",
														"type": ""
													}
												],
												"src": "16150:194:14"
											},
											{
												"body": {
													"nativeSrc": "16463:34:14",
													"nodeType": "YulBlock",
													"src": "16463:34:14",
													"statements": [
														{
															"nativeSrc": "16473:18:14",
															"nodeType": "YulAssignment",
															"src": "16473:18:14",
															"value": {
																"name": "pos",
																"nativeSrc": "16488:3:14",
																"nodeType": "YulIdentifier",
																"src": "16488:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16473:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "16473:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16350:147:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16435:3:14",
														"nodeType": "YulTypedName",
														"src": "16435:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16440:6:14",
														"nodeType": "YulTypedName",
														"src": "16440:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16451:11:14",
														"nodeType": "YulTypedName",
														"src": "16451:11:14",
														"type": ""
													}
												],
												"src": "16350:147:14"
											},
											{
												"body": {
													"nativeSrc": "16609:8:14",
													"nodeType": "YulBlock",
													"src": "16609:8:14",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "16503:114:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16601:6:14",
														"nodeType": "YulTypedName",
														"src": "16601:6:14",
														"type": ""
													}
												],
												"src": "16503:114:14"
											},
											{
												"body": {
													"nativeSrc": "16786:235:14",
													"nodeType": "YulBlock",
													"src": "16786:235:14",
													"statements": [
														{
															"nativeSrc": "16796:90:14",
															"nodeType": "YulAssignment",
															"src": "16796:90:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16879:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16879:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16884:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16884:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16803:75:14",
																	"nodeType": "YulIdentifier",
																	"src": "16803:75:14"
																},
																"nativeSrc": "16803:83:14",
																"nodeType": "YulFunctionCall",
																"src": "16803:83:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16796:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16796:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16984:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16984:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "16895:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "16895:88:14"
																},
																"nativeSrc": "16895:93:14",
																"nodeType": "YulFunctionCall",
																"src": "16895:93:14"
															},
															"nativeSrc": "16895:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "16895:93:14"
														},
														{
															"nativeSrc": "16997:18:14",
															"nodeType": "YulAssignment",
															"src": "16997:18:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17008:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17008:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17013:1:14",
																		"nodeType": "YulLiteral",
																		"src": "17013:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17004:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17004:3:14"
																},
																"nativeSrc": "17004:11:14",
																"nodeType": "YulFunctionCall",
																"src": "17004:11:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16997:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16997:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16623:398:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16774:3:14",
														"nodeType": "YulTypedName",
														"src": "16774:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16782:3:14",
														"nodeType": "YulTypedName",
														"src": "16782:3:14",
														"type": ""
													}
												],
												"src": "16623:398:14"
											},
											{
												"body": {
													"nativeSrc": "17215:191:14",
													"nodeType": "YulBlock",
													"src": "17215:191:14",
													"statements": [
														{
															"nativeSrc": "17226:154:14",
															"nodeType": "YulAssignment",
															"src": "17226:154:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17376:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17376:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17233:141:14",
																	"nodeType": "YulIdentifier",
																	"src": "17233:141:14"
																},
																"nativeSrc": "17233:147:14",
																"nodeType": "YulFunctionCall",
																"src": "17233:147:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17226:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17226:3:14"
																}
															]
														},
														{
															"nativeSrc": "17390:10:14",
															"nodeType": "YulAssignment",
															"src": "17390:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "17397:3:14",
																"nodeType": "YulIdentifier",
																"src": "17397:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17390:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17390:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17027:379:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17202:3:14",
														"nodeType": "YulTypedName",
														"src": "17202:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17211:3:14",
														"nodeType": "YulTypedName",
														"src": "17211:3:14",
														"type": ""
													}
												],
												"src": "17027:379:14"
											},
											{
												"body": {
													"nativeSrc": "17518:65:14",
													"nodeType": "YulBlock",
													"src": "17518:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17540:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17540:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17548:1:14",
																				"nodeType": "YulLiteral",
																				"src": "17548:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17536:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17536:3:14"
																		},
																		"nativeSrc": "17536:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17536:14:14"
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "17552:23:14",
																		"nodeType": "YulLiteral",
																		"src": "17552:23:14",
																		"type": "",
																		"value": "Ether transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17529:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17529:6:14"
																},
																"nativeSrc": "17529:47:14",
																"nodeType": "YulFunctionCall",
																"src": "17529:47:14"
															},
															"nativeSrc": "17529:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "17529:47:14"
														}
													]
												},
												"name": "store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
												"nativeSrc": "17412:171:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17510:6:14",
														"nodeType": "YulTypedName",
														"src": "17510:6:14",
														"type": ""
													}
												],
												"src": "17412:171:14"
											},
											{
												"body": {
													"nativeSrc": "17735:220:14",
													"nodeType": "YulBlock",
													"src": "17735:220:14",
													"statements": [
														{
															"nativeSrc": "17745:74:14",
															"nodeType": "YulAssignment",
															"src": "17745:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17811:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17811:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17816:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17816:2:14",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17752:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "17752:58:14"
																},
																"nativeSrc": "17752:67:14",
																"nodeType": "YulFunctionCall",
																"src": "17752:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17745:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17745:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17917:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17917:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																	"nativeSrc": "17828:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "17828:88:14"
																},
																"nativeSrc": "17828:93:14",
																"nodeType": "YulFunctionCall",
																"src": "17828:93:14"
															},
															"nativeSrc": "17828:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "17828:93:14"
														},
														{
															"nativeSrc": "17930:19:14",
															"nodeType": "YulAssignment",
															"src": "17930:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17941:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17941:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17946:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17946:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17937:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17937:3:14"
																},
																"nativeSrc": "17937:12:14",
																"nodeType": "YulFunctionCall",
																"src": "17937:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17930:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17930:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17589:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17723:3:14",
														"nodeType": "YulTypedName",
														"src": "17723:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17731:3:14",
														"nodeType": "YulTypedName",
														"src": "17731:3:14",
														"type": ""
													}
												],
												"src": "17589:366:14"
											},
											{
												"body": {
													"nativeSrc": "18132:248:14",
													"nodeType": "YulBlock",
													"src": "18132:248:14",
													"statements": [
														{
															"nativeSrc": "18142:26:14",
															"nodeType": "YulAssignment",
															"src": "18142:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18154:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18154:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18165:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18165:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18150:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18150:3:14"
																},
																"nativeSrc": "18150:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18150:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18142:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18142:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18189:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18189:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18200:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18200:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18185:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18185:3:14"
																		},
																		"nativeSrc": "18185:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18185:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18208:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "18208:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18214:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18214:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18204:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18204:3:14"
																		},
																		"nativeSrc": "18204:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18204:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18178:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18178:6:14"
																},
																"nativeSrc": "18178:47:14",
																"nodeType": "YulFunctionCall",
																"src": "18178:47:14"
															},
															"nativeSrc": "18178:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "18178:47:14"
														},
														{
															"nativeSrc": "18234:139:14",
															"nodeType": "YulAssignment",
															"src": "18234:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18368:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18368:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18242:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "18242:124:14"
																},
																"nativeSrc": "18242:131:14",
																"nodeType": "YulFunctionCall",
																"src": "18242:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18234:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18234:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17961:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18112:9:14",
														"nodeType": "YulTypedName",
														"src": "18112:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18127:4:14",
														"nodeType": "YulTypedName",
														"src": "18127:4:14",
														"type": ""
													}
												],
												"src": "17961:419:14"
											},
											{
												"body": {
													"nativeSrc": "18492:66:14",
													"nodeType": "YulBlock",
													"src": "18492:66:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18514:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "18514:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18522:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18522:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18510:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18510:3:14"
																		},
																		"nativeSrc": "18510:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18510:14:14"
																	},
																	{
																		"hexValue": "496e636f727265637420457468657220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "18526:24:14",
																		"nodeType": "YulLiteral",
																		"src": "18526:24:14",
																		"type": "",
																		"value": "Incorrect Ether amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18503:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18503:6:14"
																},
																"nativeSrc": "18503:48:14",
																"nodeType": "YulFunctionCall",
																"src": "18503:48:14"
															},
															"nativeSrc": "18503:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "18503:48:14"
														}
													]
												},
												"name": "store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
												"nativeSrc": "18386:172:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18484:6:14",
														"nodeType": "YulTypedName",
														"src": "18484:6:14",
														"type": ""
													}
												],
												"src": "18386:172:14"
											},
											{
												"body": {
													"nativeSrc": "18710:220:14",
													"nodeType": "YulBlock",
													"src": "18710:220:14",
													"statements": [
														{
															"nativeSrc": "18720:74:14",
															"nodeType": "YulAssignment",
															"src": "18720:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18786:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18786:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18791:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18791:2:14",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18727:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "18727:58:14"
																},
																"nativeSrc": "18727:67:14",
																"nodeType": "YulFunctionCall",
																"src": "18727:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18720:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18720:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18892:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18892:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																	"nativeSrc": "18803:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "18803:88:14"
																},
																"nativeSrc": "18803:93:14",
																"nodeType": "YulFunctionCall",
																"src": "18803:93:14"
															},
															"nativeSrc": "18803:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "18803:93:14"
														},
														{
															"nativeSrc": "18905:19:14",
															"nodeType": "YulAssignment",
															"src": "18905:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18916:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18916:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18921:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18921:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18912:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18912:3:14"
																},
																"nativeSrc": "18912:12:14",
																"nodeType": "YulFunctionCall",
																"src": "18912:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18905:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18905:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18564:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18698:3:14",
														"nodeType": "YulTypedName",
														"src": "18698:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18706:3:14",
														"nodeType": "YulTypedName",
														"src": "18706:3:14",
														"type": ""
													}
												],
												"src": "18564:366:14"
											},
											{
												"body": {
													"nativeSrc": "19107:248:14",
													"nodeType": "YulBlock",
													"src": "19107:248:14",
													"statements": [
														{
															"nativeSrc": "19117:26:14",
															"nodeType": "YulAssignment",
															"src": "19117:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19129:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19129:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19140:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19140:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19125:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19125:3:14"
																},
																"nativeSrc": "19125:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19125:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19117:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19117:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19164:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19164:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19175:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19175:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19160:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19160:3:14"
																		},
																		"nativeSrc": "19160:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19160:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19183:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "19183:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19189:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19189:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19179:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19179:3:14"
																		},
																		"nativeSrc": "19179:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19179:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19153:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19153:6:14"
																},
																"nativeSrc": "19153:47:14",
																"nodeType": "YulFunctionCall",
																"src": "19153:47:14"
															},
															"nativeSrc": "19153:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "19153:47:14"
														},
														{
															"nativeSrc": "19209:139:14",
															"nodeType": "YulAssignment",
															"src": "19209:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19343:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "19343:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19217:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "19217:124:14"
																},
																"nativeSrc": "19217:131:14",
																"nodeType": "YulFunctionCall",
																"src": "19217:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19209:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19209:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18936:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19087:9:14",
														"nodeType": "YulTypedName",
														"src": "19087:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19102:4:14",
														"nodeType": "YulTypedName",
														"src": "19102:4:14",
														"type": ""
													}
												],
												"src": "18936:419:14"
											},
											{
												"body": {
													"nativeSrc": "19467:121:14",
													"nodeType": "YulBlock",
													"src": "19467:121:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19489:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19489:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19497:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19497:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19485:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19485:3:14"
																		},
																		"nativeSrc": "19485:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19485:14:14"
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "19501:34:14",
																		"nodeType": "YulLiteral",
																		"src": "19501:34:14",
																		"type": "",
																		"value": "Deposit amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19478:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19478:6:14"
																},
																"nativeSrc": "19478:58:14",
																"nodeType": "YulFunctionCall",
																"src": "19478:58:14"
															},
															"nativeSrc": "19478:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "19478:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19557:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19557:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19565:2:14",
																				"nodeType": "YulLiteral",
																				"src": "19565:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19553:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19553:3:14"
																		},
																		"nativeSrc": "19553:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19553:15:14"
																	},
																	{
																		"hexValue": "68616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "19570:10:14",
																		"nodeType": "YulLiteral",
																		"src": "19570:10:14",
																		"type": "",
																		"value": "han zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19546:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19546:6:14"
																},
																"nativeSrc": "19546:35:14",
																"nodeType": "YulFunctionCall",
																"src": "19546:35:14"
															},
															"nativeSrc": "19546:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "19546:35:14"
														}
													]
												},
												"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
												"nativeSrc": "19361:227:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19459:6:14",
														"nodeType": "YulTypedName",
														"src": "19459:6:14",
														"type": ""
													}
												],
												"src": "19361:227:14"
											},
											{
												"body": {
													"nativeSrc": "19740:220:14",
													"nodeType": "YulBlock",
													"src": "19740:220:14",
													"statements": [
														{
															"nativeSrc": "19750:74:14",
															"nodeType": "YulAssignment",
															"src": "19750:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19816:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19816:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19821:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19821:2:14",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19757:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "19757:58:14"
																},
																"nativeSrc": "19757:67:14",
																"nodeType": "YulFunctionCall",
																"src": "19757:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19750:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19750:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19922:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19922:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																	"nativeSrc": "19833:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "19833:88:14"
																},
																"nativeSrc": "19833:93:14",
																"nodeType": "YulFunctionCall",
																"src": "19833:93:14"
															},
															"nativeSrc": "19833:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "19833:93:14"
														},
														{
															"nativeSrc": "19935:19:14",
															"nodeType": "YulAssignment",
															"src": "19935:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19946:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19946:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19951:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19951:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19942:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19942:3:14"
																},
																"nativeSrc": "19942:12:14",
																"nodeType": "YulFunctionCall",
																"src": "19942:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19935:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19935:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19594:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19728:3:14",
														"nodeType": "YulTypedName",
														"src": "19728:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19736:3:14",
														"nodeType": "YulTypedName",
														"src": "19736:3:14",
														"type": ""
													}
												],
												"src": "19594:366:14"
											},
											{
												"body": {
													"nativeSrc": "20137:248:14",
													"nodeType": "YulBlock",
													"src": "20137:248:14",
													"statements": [
														{
															"nativeSrc": "20147:26:14",
															"nodeType": "YulAssignment",
															"src": "20147:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20159:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "20159:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20170:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20170:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20155:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20155:3:14"
																},
																"nativeSrc": "20155:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20155:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20147:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20147:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20194:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20194:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20205:1:14",
																				"nodeType": "YulLiteral",
																				"src": "20205:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20190:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20190:3:14"
																		},
																		"nativeSrc": "20190:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20190:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20213:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "20213:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20219:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20219:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20209:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20209:3:14"
																		},
																		"nativeSrc": "20209:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20209:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20183:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20183:6:14"
																},
																"nativeSrc": "20183:47:14",
																"nodeType": "YulFunctionCall",
																"src": "20183:47:14"
															},
															"nativeSrc": "20183:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "20183:47:14"
														},
														{
															"nativeSrc": "20239:139:14",
															"nodeType": "YulAssignment",
															"src": "20239:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20373:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "20373:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20247:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "20247:124:14"
																},
																"nativeSrc": "20247:131:14",
																"nodeType": "YulFunctionCall",
																"src": "20247:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20239:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20239:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19966:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20117:9:14",
														"nodeType": "YulTypedName",
														"src": "20117:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20132:4:14",
														"nodeType": "YulTypedName",
														"src": "20132:4:14",
														"type": ""
													}
												],
												"src": "19966:419:14"
											},
											{
												"body": {
													"nativeSrc": "20444:32:14",
													"nodeType": "YulBlock",
													"src": "20444:32:14",
													"statements": [
														{
															"nativeSrc": "20454:16:14",
															"nodeType": "YulAssignment",
															"src": "20454:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "20465:5:14",
																"nodeType": "YulIdentifier",
																"src": "20465:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "20454:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "20454:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "20391:85:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20426:5:14",
														"nodeType": "YulTypedName",
														"src": "20426:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "20436:7:14",
														"nodeType": "YulTypedName",
														"src": "20436:7:14",
														"type": ""
													}
												],
												"src": "20391:85:14"
											},
											{
												"body": {
													"nativeSrc": "20549:89:14",
													"nodeType": "YulBlock",
													"src": "20549:89:14",
													"statements": [
														{
															"nativeSrc": "20559:73:14",
															"nodeType": "YulAssignment",
															"src": "20559:73:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20624:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "20624:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "20598:25:14",
																					"nodeType": "YulIdentifier",
																					"src": "20598:25:14"
																				},
																				"nativeSrc": "20598:32:14",
																				"nodeType": "YulFunctionCall",
																				"src": "20598:32:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "20589:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "20589:8:14"
																		},
																		"nativeSrc": "20589:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20589:42:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "20572:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "20572:16:14"
																},
																"nativeSrc": "20572:60:14",
																"nodeType": "YulFunctionCall",
																"src": "20572:60:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "20559:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "20559:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "20482:156:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20529:5:14",
														"nodeType": "YulTypedName",
														"src": "20529:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "20539:9:14",
														"nodeType": "YulTypedName",
														"src": "20539:9:14",
														"type": ""
													}
												],
												"src": "20482:156:14"
											},
											{
												"body": {
													"nativeSrc": "20716:73:14",
													"nodeType": "YulBlock",
													"src": "20716:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20733:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "20733:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20776:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "20776:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "20738:37:14",
																			"nodeType": "YulIdentifier",
																			"src": "20738:37:14"
																		},
																		"nativeSrc": "20738:44:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20738:44:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20726:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20726:6:14"
																},
																"nativeSrc": "20726:57:14",
																"nodeType": "YulFunctionCall",
																"src": "20726:57:14"
															},
															"nativeSrc": "20726:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "20726:57:14"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "20644:145:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20704:5:14",
														"nodeType": "YulTypedName",
														"src": "20704:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20711:3:14",
														"nodeType": "YulTypedName",
														"src": "20711:3:14",
														"type": ""
													}
												],
												"src": "20644:145:14"
											},
											{
												"body": {
													"nativeSrc": "20900:131:14",
													"nodeType": "YulBlock",
													"src": "20900:131:14",
													"statements": [
														{
															"nativeSrc": "20910:26:14",
															"nodeType": "YulAssignment",
															"src": "20910:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20922:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "20922:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20933:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20933:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20918:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20918:3:14"
																},
																"nativeSrc": "20918:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20918:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20910:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20910:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20997:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "20997:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21010:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "21010:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21021:1:14",
																				"nodeType": "YulLiteral",
																				"src": "21021:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21006:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21006:3:14"
																		},
																		"nativeSrc": "21006:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21006:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "20946:50:14",
																	"nodeType": "YulIdentifier",
																	"src": "20946:50:14"
																},
																"nativeSrc": "20946:78:14",
																"nodeType": "YulFunctionCall",
																"src": "20946:78:14"
															},
															"nativeSrc": "20946:78:14",
															"nodeType": "YulExpressionStatement",
															"src": "20946:78:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "20795:236:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20872:9:14",
														"nodeType": "YulTypedName",
														"src": "20872:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20884:6:14",
														"nodeType": "YulTypedName",
														"src": "20884:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20895:4:14",
														"nodeType": "YulTypedName",
														"src": "20895:4:14",
														"type": ""
													}
												],
												"src": "20795:236:14"
											},
											{
												"body": {
													"nativeSrc": "21065:152:14",
													"nodeType": "YulBlock",
													"src": "21065:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21082:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21082:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21085:77:14",
																		"nodeType": "YulLiteral",
																		"src": "21085:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21075:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21075:6:14"
																},
																"nativeSrc": "21075:88:14",
																"nodeType": "YulFunctionCall",
																"src": "21075:88:14"
															},
															"nativeSrc": "21075:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "21075:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21179:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21179:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21182:4:14",
																		"nodeType": "YulLiteral",
																		"src": "21182:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21172:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21172:6:14"
																},
																"nativeSrc": "21172:15:14",
																"nodeType": "YulFunctionCall",
																"src": "21172:15:14"
															},
															"nativeSrc": "21172:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "21172:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21203:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21203:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21206:4:14",
																		"nodeType": "YulLiteral",
																		"src": "21206:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21196:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21196:6:14"
																},
																"nativeSrc": "21196:15:14",
																"nodeType": "YulFunctionCall",
																"src": "21196:15:14"
															},
															"nativeSrc": "21196:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "21196:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "21037:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "21037:180:14"
											},
											{
												"body": {
													"nativeSrc": "21274:269:14",
													"nodeType": "YulBlock",
													"src": "21274:269:14",
													"statements": [
														{
															"nativeSrc": "21284:22:14",
															"nodeType": "YulAssignment",
															"src": "21284:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21298:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "21298:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21304:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21304:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "21294:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21294:3:14"
																},
																"nativeSrc": "21294:12:14",
																"nodeType": "YulFunctionCall",
																"src": "21294:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21284:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21284:6:14"
																}
															]
														},
														{
															"nativeSrc": "21315:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "21315:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21345:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "21345:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21351:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21351:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21341:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21341:3:14"
																},
																"nativeSrc": "21341:12:14",
																"nodeType": "YulFunctionCall",
																"src": "21341:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "21319:18:14",
																	"nodeType": "YulTypedName",
																	"src": "21319:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21392:51:14",
																"nodeType": "YulBlock",
																"src": "21392:51:14",
																"statements": [
																	{
																		"nativeSrc": "21406:27:14",
																		"nodeType": "YulAssignment",
																		"src": "21406:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "21420:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "21420:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21428:4:14",
																					"nodeType": "YulLiteral",
																					"src": "21428:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "21416:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "21416:3:14"
																			},
																			"nativeSrc": "21416:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21416:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "21406:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21406:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "21372:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "21372:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21365:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21365:6:14"
																},
																"nativeSrc": "21365:26:14",
																"nodeType": "YulFunctionCall",
																"src": "21365:26:14"
															},
															"nativeSrc": "21362:81:14",
															"nodeType": "YulIf",
															"src": "21362:81:14"
														},
														{
															"body": {
																"nativeSrc": "21495:42:14",
																"nodeType": "YulBlock",
																"src": "21495:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "21509:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "21509:16:14"
																			},
																			"nativeSrc": "21509:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21509:18:14"
																		},
																		"nativeSrc": "21509:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "21509:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "21459:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "21459:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21482:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21482:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21490:2:14",
																				"nodeType": "YulLiteral",
																				"src": "21490:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "21479:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "21479:2:14"
																		},
																		"nativeSrc": "21479:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21479:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "21456:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "21456:2:14"
																},
																"nativeSrc": "21456:38:14",
																"nodeType": "YulFunctionCall",
																"src": "21456:38:14"
															},
															"nativeSrc": "21453:84:14",
															"nodeType": "YulIf",
															"src": "21453:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "21223:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21258:4:14",
														"nodeType": "YulTypedName",
														"src": "21258:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21267:6:14",
														"nodeType": "YulTypedName",
														"src": "21267:6:14",
														"type": ""
													}
												],
												"src": "21223:320:14"
											},
											{
												"body": {
													"nativeSrc": "21591:48:14",
													"nodeType": "YulBlock",
													"src": "21591:48:14",
													"statements": [
														{
															"nativeSrc": "21601:32:14",
															"nodeType": "YulAssignment",
															"src": "21601:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21626:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "21626:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "21619:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "21619:6:14"
																		},
																		"nativeSrc": "21619:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21619:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21612:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21612:6:14"
																},
																"nativeSrc": "21612:21:14",
																"nodeType": "YulFunctionCall",
																"src": "21612:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "21601:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "21601:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "21549:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21573:5:14",
														"nodeType": "YulTypedName",
														"src": "21573:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "21583:7:14",
														"nodeType": "YulTypedName",
														"src": "21583:7:14",
														"type": ""
													}
												],
												"src": "21549:90:14"
											},
											{
												"body": {
													"nativeSrc": "21685:76:14",
													"nodeType": "YulBlock",
													"src": "21685:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "21739:16:14",
																"nodeType": "YulBlock",
																"src": "21739:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "21748:1:14",
																					"nodeType": "YulLiteral",
																					"src": "21748:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21751:1:14",
																					"nodeType": "YulLiteral",
																					"src": "21751:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "21741:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21741:6:14"
																			},
																			"nativeSrc": "21741:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21741:12:14"
																		},
																		"nativeSrc": "21741:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "21741:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21708:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "21708:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21730:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "21730:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "21715:14:14",
																					"nodeType": "YulIdentifier",
																					"src": "21715:14:14"
																				},
																				"nativeSrc": "21715:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "21715:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "21705:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "21705:2:14"
																		},
																		"nativeSrc": "21705:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21705:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21698:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21698:6:14"
																},
																"nativeSrc": "21698:40:14",
																"nodeType": "YulFunctionCall",
																"src": "21698:40:14"
															},
															"nativeSrc": "21695:60:14",
															"nodeType": "YulIf",
															"src": "21695:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "21645:116:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21678:5:14",
														"nodeType": "YulTypedName",
														"src": "21678:5:14",
														"type": ""
													}
												],
												"src": "21645:116:14"
											},
											{
												"body": {
													"nativeSrc": "21827:77:14",
													"nodeType": "YulBlock",
													"src": "21827:77:14",
													"statements": [
														{
															"nativeSrc": "21837:22:14",
															"nodeType": "YulAssignment",
															"src": "21837:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21852:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "21852:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21846:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "21846:5:14"
																},
																"nativeSrc": "21846:13:14",
																"nodeType": "YulFunctionCall",
																"src": "21846:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21837:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "21837:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21892:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "21892:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "21868:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "21868:23:14"
																},
																"nativeSrc": "21868:30:14",
																"nodeType": "YulFunctionCall",
																"src": "21868:30:14"
															},
															"nativeSrc": "21868:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "21868:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "21767:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21805:6:14",
														"nodeType": "YulTypedName",
														"src": "21805:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21813:3:14",
														"nodeType": "YulTypedName",
														"src": "21813:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21821:5:14",
														"nodeType": "YulTypedName",
														"src": "21821:5:14",
														"type": ""
													}
												],
												"src": "21767:137:14"
											},
											{
												"body": {
													"nativeSrc": "21984:271:14",
													"nodeType": "YulBlock",
													"src": "21984:271:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "22030:83:14",
																"nodeType": "YulBlock",
																"src": "22030:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22032:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "22032:77:14"
																			},
																			"nativeSrc": "22032:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "22032:79:14"
																		},
																		"nativeSrc": "22032:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "22032:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22005:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "22005:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22014:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22014:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22001:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22001:3:14"
																		},
																		"nativeSrc": "22001:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22001:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22026:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22026:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21997:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21997:3:14"
																},
																"nativeSrc": "21997:32:14",
																"nodeType": "YulFunctionCall",
																"src": "21997:32:14"
															},
															"nativeSrc": "21994:119:14",
															"nodeType": "YulIf",
															"src": "21994:119:14"
														},
														{
															"nativeSrc": "22123:125:14",
															"nodeType": "YulBlock",
															"src": "22123:125:14",
															"statements": [
																{
																	"nativeSrc": "22138:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22138:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22152:1:14",
																		"nodeType": "YulLiteral",
																		"src": "22152:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22142:6:14",
																			"nodeType": "YulTypedName",
																			"src": "22142:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22167:71:14",
																	"nodeType": "YulAssignment",
																	"src": "22167:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22210:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "22210:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22221:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "22221:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22206:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "22206:3:14"
																				},
																				"nativeSrc": "22206:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "22206:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22230:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "22230:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "22177:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "22177:28:14"
																		},
																		"nativeSrc": "22177:61:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22177:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22167:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "22167:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "21910:345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21954:9:14",
														"nodeType": "YulTypedName",
														"src": "21954:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21965:7:14",
														"nodeType": "YulTypedName",
														"src": "21965:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21977:6:14",
														"nodeType": "YulTypedName",
														"src": "21977:6:14",
														"type": ""
													}
												],
												"src": "21910:345:14"
											},
											{
												"body": {
													"nativeSrc": "22367:66:14",
													"nodeType": "YulBlock",
													"src": "22367:66:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22389:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "22389:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22397:1:14",
																				"nodeType": "YulLiteral",
																				"src": "22397:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22385:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22385:3:14"
																		},
																		"nativeSrc": "22385:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22385:14:14"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
																		"kind": "string",
																		"nativeSrc": "22401:24:14",
																		"nodeType": "YulLiteral",
																		"src": "22401:24:14",
																		"type": "",
																		"value": "Caller is not an admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22378:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22378:6:14"
																},
																"nativeSrc": "22378:48:14",
																"nodeType": "YulFunctionCall",
																"src": "22378:48:14"
															},
															"nativeSrc": "22378:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "22378:48:14"
														}
													]
												},
												"name": "store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
												"nativeSrc": "22261:172:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22359:6:14",
														"nodeType": "YulTypedName",
														"src": "22359:6:14",
														"type": ""
													}
												],
												"src": "22261:172:14"
											},
											{
												"body": {
													"nativeSrc": "22585:220:14",
													"nodeType": "YulBlock",
													"src": "22585:220:14",
													"statements": [
														{
															"nativeSrc": "22595:74:14",
															"nodeType": "YulAssignment",
															"src": "22595:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22661:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22661:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22666:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22666:2:14",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22602:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "22602:58:14"
																},
																"nativeSrc": "22602:67:14",
																"nodeType": "YulFunctionCall",
																"src": "22602:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22595:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22595:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22767:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22767:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																	"nativeSrc": "22678:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "22678:88:14"
																},
																"nativeSrc": "22678:93:14",
																"nodeType": "YulFunctionCall",
																"src": "22678:93:14"
															},
															"nativeSrc": "22678:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "22678:93:14"
														},
														{
															"nativeSrc": "22780:19:14",
															"nodeType": "YulAssignment",
															"src": "22780:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22791:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22791:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22796:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22796:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22787:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22787:3:14"
																},
																"nativeSrc": "22787:12:14",
																"nodeType": "YulFunctionCall",
																"src": "22787:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22780:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22780:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22439:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22573:3:14",
														"nodeType": "YulTypedName",
														"src": "22573:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22581:3:14",
														"nodeType": "YulTypedName",
														"src": "22581:3:14",
														"type": ""
													}
												],
												"src": "22439:366:14"
											},
											{
												"body": {
													"nativeSrc": "22982:248:14",
													"nodeType": "YulBlock",
													"src": "22982:248:14",
													"statements": [
														{
															"nativeSrc": "22992:26:14",
															"nodeType": "YulAssignment",
															"src": "22992:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23004:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "23004:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23015:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23015:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23000:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23000:3:14"
																},
																"nativeSrc": "23000:18:14",
																"nodeType": "YulFunctionCall",
																"src": "23000:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22992:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "22992:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23039:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23039:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23050:1:14",
																				"nodeType": "YulLiteral",
																				"src": "23050:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23035:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23035:3:14"
																		},
																		"nativeSrc": "23035:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23035:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23058:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "23058:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23064:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23064:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23054:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23054:3:14"
																		},
																		"nativeSrc": "23054:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23054:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23028:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23028:6:14"
																},
																"nativeSrc": "23028:47:14",
																"nodeType": "YulFunctionCall",
																"src": "23028:47:14"
															},
															"nativeSrc": "23028:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "23028:47:14"
														},
														{
															"nativeSrc": "23084:139:14",
															"nodeType": "YulAssignment",
															"src": "23084:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23218:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "23218:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23092:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "23092:124:14"
																},
																"nativeSrc": "23092:131:14",
																"nodeType": "YulFunctionCall",
																"src": "23092:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23084:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23084:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22811:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22962:9:14",
														"nodeType": "YulTypedName",
														"src": "22962:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22977:4:14",
														"nodeType": "YulTypedName",
														"src": "22977:4:14",
														"type": ""
													}
												],
												"src": "22811:419:14"
											},
											{
												"body": {
													"nativeSrc": "23342:115:14",
													"nodeType": "YulBlock",
													"src": "23342:115:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23364:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "23364:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23372:1:14",
																				"nodeType": "YulLiteral",
																				"src": "23372:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23360:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23360:3:14"
																		},
																		"nativeSrc": "23360:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23360:14:14"
																	},
																	{
																		"hexValue": "53746172742074696d65206d757374206265206265666f726520656e64207469",
																		"kind": "string",
																		"nativeSrc": "23376:34:14",
																		"nodeType": "YulLiteral",
																		"src": "23376:34:14",
																		"type": "",
																		"value": "Start time must be before end ti"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23353:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23353:6:14"
																},
																"nativeSrc": "23353:58:14",
																"nodeType": "YulFunctionCall",
																"src": "23353:58:14"
															},
															"nativeSrc": "23353:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "23353:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23432:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "23432:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23440:2:14",
																				"nodeType": "YulLiteral",
																				"src": "23440:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23428:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23428:3:14"
																		},
																		"nativeSrc": "23428:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23428:15:14"
																	},
																	{
																		"hexValue": "6d65",
																		"kind": "string",
																		"nativeSrc": "23445:4:14",
																		"nodeType": "YulLiteral",
																		"src": "23445:4:14",
																		"type": "",
																		"value": "me"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23421:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23421:6:14"
																},
																"nativeSrc": "23421:29:14",
																"nodeType": "YulFunctionCall",
																"src": "23421:29:14"
															},
															"nativeSrc": "23421:29:14",
															"nodeType": "YulExpressionStatement",
															"src": "23421:29:14"
														}
													]
												},
												"name": "store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
												"nativeSrc": "23236:221:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23334:6:14",
														"nodeType": "YulTypedName",
														"src": "23334:6:14",
														"type": ""
													}
												],
												"src": "23236:221:14"
											},
											{
												"body": {
													"nativeSrc": "23609:220:14",
													"nodeType": "YulBlock",
													"src": "23609:220:14",
													"statements": [
														{
															"nativeSrc": "23619:74:14",
															"nodeType": "YulAssignment",
															"src": "23619:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23685:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23685:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23690:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23690:2:14",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23626:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "23626:58:14"
																},
																"nativeSrc": "23626:67:14",
																"nodeType": "YulFunctionCall",
																"src": "23626:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23619:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23619:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23791:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23791:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																	"nativeSrc": "23702:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "23702:88:14"
																},
																"nativeSrc": "23702:93:14",
																"nodeType": "YulFunctionCall",
																"src": "23702:93:14"
															},
															"nativeSrc": "23702:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "23702:93:14"
														},
														{
															"nativeSrc": "23804:19:14",
															"nodeType": "YulAssignment",
															"src": "23804:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23815:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23815:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23820:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23820:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23811:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23811:3:14"
																},
																"nativeSrc": "23811:12:14",
																"nodeType": "YulFunctionCall",
																"src": "23811:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23804:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23804:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23463:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23597:3:14",
														"nodeType": "YulTypedName",
														"src": "23597:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23605:3:14",
														"nodeType": "YulTypedName",
														"src": "23605:3:14",
														"type": ""
													}
												],
												"src": "23463:366:14"
											},
											{
												"body": {
													"nativeSrc": "24006:248:14",
													"nodeType": "YulBlock",
													"src": "24006:248:14",
													"statements": [
														{
															"nativeSrc": "24016:26:14",
															"nodeType": "YulAssignment",
															"src": "24016:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24028:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24028:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24039:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24039:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24024:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24024:3:14"
																},
																"nativeSrc": "24024:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24024:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24016:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24016:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24063:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24063:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24074:1:14",
																				"nodeType": "YulLiteral",
																				"src": "24074:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24059:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24059:3:14"
																		},
																		"nativeSrc": "24059:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24059:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24082:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "24082:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24088:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24088:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24078:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24078:3:14"
																		},
																		"nativeSrc": "24078:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24078:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24052:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24052:6:14"
																},
																"nativeSrc": "24052:47:14",
																"nodeType": "YulFunctionCall",
																"src": "24052:47:14"
															},
															"nativeSrc": "24052:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "24052:47:14"
														},
														{
															"nativeSrc": "24108:139:14",
															"nodeType": "YulAssignment",
															"src": "24108:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24242:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "24242:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24116:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "24116:124:14"
																},
																"nativeSrc": "24116:131:14",
																"nodeType": "YulFunctionCall",
																"src": "24116:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24108:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24108:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23835:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23986:9:14",
														"nodeType": "YulTypedName",
														"src": "23986:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24001:4:14",
														"nodeType": "YulTypedName",
														"src": "24001:4:14",
														"type": ""
													}
												],
												"src": "23835:419:14"
											},
											{
												"body": {
													"nativeSrc": "24314:87:14",
													"nodeType": "YulBlock",
													"src": "24314:87:14",
													"statements": [
														{
															"nativeSrc": "24324:11:14",
															"nodeType": "YulAssignment",
															"src": "24324:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "24332:3:14",
																"nodeType": "YulIdentifier",
																"src": "24332:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24324:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24324:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24352:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24352:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "24355:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24355:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24345:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24345:6:14"
																},
																"nativeSrc": "24345:14:14",
																"nodeType": "YulFunctionCall",
																"src": "24345:14:14"
															},
															"nativeSrc": "24345:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "24345:14:14"
														},
														{
															"nativeSrc": "24368:26:14",
															"nodeType": "YulAssignment",
															"src": "24368:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24386:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24386:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24389:4:14",
																		"nodeType": "YulLiteral",
																		"src": "24389:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "24376:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "24376:9:14"
																},
																"nativeSrc": "24376:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24376:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24368:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24368:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "24260:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "24301:3:14",
														"nodeType": "YulTypedName",
														"src": "24301:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "24309:4:14",
														"nodeType": "YulTypedName",
														"src": "24309:4:14",
														"type": ""
													}
												],
												"src": "24260:141:14"
											},
											{
												"body": {
													"nativeSrc": "24451:49:14",
													"nodeType": "YulBlock",
													"src": "24451:49:14",
													"statements": [
														{
															"nativeSrc": "24461:33:14",
															"nodeType": "YulAssignment",
															"src": "24461:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24479:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "24479:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24486:2:14",
																				"nodeType": "YulLiteral",
																				"src": "24486:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24475:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24475:3:14"
																		},
																		"nativeSrc": "24475:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24475:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24491:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24491:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "24471:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24471:3:14"
																},
																"nativeSrc": "24471:23:14",
																"nodeType": "YulFunctionCall",
																"src": "24471:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24461:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24461:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "24407:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24434:5:14",
														"nodeType": "YulTypedName",
														"src": "24434:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24444:6:14",
														"nodeType": "YulTypedName",
														"src": "24444:6:14",
														"type": ""
													}
												],
												"src": "24407:93:14"
											},
											{
												"body": {
													"nativeSrc": "24559:54:14",
													"nodeType": "YulBlock",
													"src": "24559:54:14",
													"statements": [
														{
															"nativeSrc": "24569:37:14",
															"nodeType": "YulAssignment",
															"src": "24569:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "24594:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "24594:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "24600:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "24600:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "24590:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24590:3:14"
																},
																"nativeSrc": "24590:16:14",
																"nodeType": "YulFunctionCall",
																"src": "24590:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "24569:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "24569:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "24506:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "24534:4:14",
														"nodeType": "YulTypedName",
														"src": "24534:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "24540:5:14",
														"nodeType": "YulTypedName",
														"src": "24540:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "24550:8:14",
														"nodeType": "YulTypedName",
														"src": "24550:8:14",
														"type": ""
													}
												],
												"src": "24506:107:14"
											},
											{
												"body": {
													"nativeSrc": "24695:317:14",
													"nodeType": "YulBlock",
													"src": "24695:317:14",
													"statements": [
														{
															"nativeSrc": "24705:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "24705:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "24726:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "24726:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24738:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24738:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "24722:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24722:3:14"
																},
																"nativeSrc": "24722:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24722:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "24709:9:14",
																	"nodeType": "YulTypedName",
																	"src": "24709:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24749:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "24749:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "24780:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24780:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24791:66:14",
																		"nodeType": "YulLiteral",
																		"src": "24791:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "24761:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "24761:18:14"
																},
																"nativeSrc": "24761:97:14",
																"nodeType": "YulFunctionCall",
																"src": "24761:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "24753:4:14",
																	"nodeType": "YulTypedName",
																	"src": "24753:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24867:51:14",
															"nodeType": "YulAssignment",
															"src": "24867:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "24898:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24898:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "24909:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "24909:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "24879:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "24879:18:14"
																},
																"nativeSrc": "24879:39:14",
																"nodeType": "YulFunctionCall",
																"src": "24879:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "24867:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "24867:8:14"
																}
															]
														},
														{
															"nativeSrc": "24927:30:14",
															"nodeType": "YulAssignment",
															"src": "24927:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24940:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "24940:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "24951:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "24951:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "24947:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24947:3:14"
																		},
																		"nativeSrc": "24947:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24947:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24936:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24936:3:14"
																},
																"nativeSrc": "24936:21:14",
																"nodeType": "YulFunctionCall",
																"src": "24936:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24927:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "24927:5:14"
																}
															]
														},
														{
															"nativeSrc": "24966:40:14",
															"nodeType": "YulAssignment",
															"src": "24966:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24979:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "24979:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "24990:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "24990:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "25000:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "25000:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "24986:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24986:3:14"
																		},
																		"nativeSrc": "24986:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24986:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "24976:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "24976:2:14"
																},
																"nativeSrc": "24976:30:14",
																"nodeType": "YulFunctionCall",
																"src": "24976:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24966:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24966:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "24619:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24656:5:14",
														"nodeType": "YulTypedName",
														"src": "24656:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "24663:10:14",
														"nodeType": "YulTypedName",
														"src": "24663:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "24675:8:14",
														"nodeType": "YulTypedName",
														"src": "24675:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24688:6:14",
														"nodeType": "YulTypedName",
														"src": "24688:6:14",
														"type": ""
													}
												],
												"src": "24619:393:14"
											},
											{
												"body": {
													"nativeSrc": "25078:82:14",
													"nodeType": "YulBlock",
													"src": "25078:82:14",
													"statements": [
														{
															"nativeSrc": "25088:66:14",
															"nodeType": "YulAssignment",
															"src": "25088:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "25146:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "25146:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "25128:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "25128:17:14"
																				},
																				"nativeSrc": "25128:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25128:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "25119:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "25119:8:14"
																		},
																		"nativeSrc": "25119:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25119:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25101:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "25101:17:14"
																},
																"nativeSrc": "25101:53:14",
																"nodeType": "YulFunctionCall",
																"src": "25101:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "25088:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "25088:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "25018:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25058:5:14",
														"nodeType": "YulTypedName",
														"src": "25058:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "25068:9:14",
														"nodeType": "YulTypedName",
														"src": "25068:9:14",
														"type": ""
													}
												],
												"src": "25018:142:14"
											},
											{
												"body": {
													"nativeSrc": "25213:28:14",
													"nodeType": "YulBlock",
													"src": "25213:28:14",
													"statements": [
														{
															"nativeSrc": "25223:12:14",
															"nodeType": "YulAssignment",
															"src": "25223:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "25230:5:14",
																"nodeType": "YulIdentifier",
																"src": "25230:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "25223:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25223:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "25166:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25199:5:14",
														"nodeType": "YulTypedName",
														"src": "25199:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "25209:3:14",
														"nodeType": "YulTypedName",
														"src": "25209:3:14",
														"type": ""
													}
												],
												"src": "25166:75:14"
											},
											{
												"body": {
													"nativeSrc": "25323:193:14",
													"nodeType": "YulBlock",
													"src": "25323:193:14",
													"statements": [
														{
															"nativeSrc": "25333:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "25333:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "25388:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "25388:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "25357:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "25357:30:14"
																},
																"nativeSrc": "25357:39:14",
																"nodeType": "YulFunctionCall",
																"src": "25357:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "25337:16:14",
																	"nodeType": "YulTypedName",
																	"src": "25337:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25412:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "25412:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "25452:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "25452:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "25446:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "25446:5:14"
																				},
																				"nativeSrc": "25446:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25446:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "25459:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "25459:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "25491:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "25491:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "25467:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "25467:23:14"
																				},
																				"nativeSrc": "25467:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25467:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "25418:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "25418:27:14"
																		},
																		"nativeSrc": "25418:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25418:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "25405:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "25405:6:14"
																},
																"nativeSrc": "25405:105:14",
																"nodeType": "YulFunctionCall",
																"src": "25405:105:14"
															},
															"nativeSrc": "25405:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "25405:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "25247:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25300:4:14",
														"nodeType": "YulTypedName",
														"src": "25300:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "25306:6:14",
														"nodeType": "YulTypedName",
														"src": "25306:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "25314:7:14",
														"nodeType": "YulTypedName",
														"src": "25314:7:14",
														"type": ""
													}
												],
												"src": "25247:269:14"
											},
											{
												"body": {
													"nativeSrc": "25571:24:14",
													"nodeType": "YulBlock",
													"src": "25571:24:14",
													"statements": [
														{
															"nativeSrc": "25581:8:14",
															"nodeType": "YulAssignment",
															"src": "25581:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "25588:1:14",
																"nodeType": "YulLiteral",
																"src": "25588:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "25581:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25581:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "25522:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "25567:3:14",
														"nodeType": "YulTypedName",
														"src": "25567:3:14",
														"type": ""
													}
												],
												"src": "25522:73:14"
											},
											{
												"body": {
													"nativeSrc": "25654:136:14",
													"nodeType": "YulBlock",
													"src": "25654:136:14",
													"statements": [
														{
															"nativeSrc": "25664:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "25664:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "25678:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "25678:30:14"
																},
																"nativeSrc": "25678:32:14",
																"nodeType": "YulFunctionCall",
																"src": "25678:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "25668:6:14",
																	"nodeType": "YulTypedName",
																	"src": "25668:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25763:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "25763:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "25769:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25769:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "25777:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25777:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "25719:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "25719:43:14"
																},
																"nativeSrc": "25719:65:14",
																"nodeType": "YulFunctionCall",
																"src": "25719:65:14"
															},
															"nativeSrc": "25719:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "25719:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "25601:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25640:4:14",
														"nodeType": "YulTypedName",
														"src": "25640:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "25646:6:14",
														"nodeType": "YulTypedName",
														"src": "25646:6:14",
														"type": ""
													}
												],
												"src": "25601:189:14"
											},
											{
												"body": {
													"nativeSrc": "25846:136:14",
													"nodeType": "YulBlock",
													"src": "25846:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "25913:63:14",
																"nodeType": "YulBlock",
																"src": "25913:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "25957:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "25957:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "25964:1:14",
																					"nodeType": "YulLiteral",
																					"src": "25964:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "25927:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "25927:29:14"
																			},
																			"nativeSrc": "25927:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "25927:39:14"
																		},
																		"nativeSrc": "25927:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "25927:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "25866:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "25866:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "25873:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "25873:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "25863:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "25863:2:14"
																},
																"nativeSrc": "25863:14:14",
																"nodeType": "YulFunctionCall",
																"src": "25863:14:14"
															},
															"nativeSrc": "25856:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "25878:26:14",
																"nodeType": "YulBlock",
																"src": "25878:26:14",
																"statements": [
																	{
																		"nativeSrc": "25880:22:14",
																		"nodeType": "YulAssignment",
																		"src": "25880:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "25893:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "25893:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "25900:1:14",
																					"nodeType": "YulLiteral",
																					"src": "25900:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "25889:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "25889:3:14"
																			},
																			"nativeSrc": "25889:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "25889:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "25880:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "25880:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "25860:2:14",
																"nodeType": "YulBlock",
																"src": "25860:2:14",
																"statements": []
															},
															"src": "25856:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "25796:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "25834:5:14",
														"nodeType": "YulTypedName",
														"src": "25834:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "25841:3:14",
														"nodeType": "YulTypedName",
														"src": "25841:3:14",
														"type": ""
													}
												],
												"src": "25796:186:14"
											},
											{
												"body": {
													"nativeSrc": "26067:464:14",
													"nodeType": "YulBlock",
													"src": "26067:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "26093:431:14",
																"nodeType": "YulBlock",
																"src": "26093:431:14",
																"statements": [
																	{
																		"nativeSrc": "26107:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "26107:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "26155:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "26155:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "26123:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "26123:31:14"
																			},
																			"nativeSrc": "26123:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26123:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "26111:8:14",
																				"nodeType": "YulTypedName",
																				"src": "26111:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "26174:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "26174:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "26197:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "26197:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "26225:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "26225:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "26207:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "26207:17:14"
																					},
																					"nativeSrc": "26207:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "26207:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "26193:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "26193:3:14"
																			},
																			"nativeSrc": "26193:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26193:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "26178:11:14",
																				"nodeType": "YulTypedName",
																				"src": "26178:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "26394:27:14",
																			"nodeType": "YulBlock",
																			"src": "26394:27:14",
																			"statements": [
																				{
																					"nativeSrc": "26396:23:14",
																					"nodeType": "YulAssignment",
																					"src": "26396:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "26411:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "26411:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "26396:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "26396:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "26378:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "26378:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26390:2:14",
																					"nodeType": "YulLiteral",
																					"src": "26390:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "26375:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "26375:2:14"
																			},
																			"nativeSrc": "26375:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26375:18:14"
																		},
																		"nativeSrc": "26372:49:14",
																		"nodeType": "YulIf",
																		"src": "26372:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "26463:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "26463:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "26480:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "26480:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "26508:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "26508:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "26490:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "26490:17:14"
																							},
																							"nativeSrc": "26490:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "26490:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "26476:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "26476:3:14"
																					},
																					"nativeSrc": "26476:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "26476:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "26434:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "26434:28:14"
																			},
																			"nativeSrc": "26434:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26434:80:14"
																		},
																		"nativeSrc": "26434:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "26434:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "26084:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "26084:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26089:2:14",
																		"nodeType": "YulLiteral",
																		"src": "26089:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26081:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "26081:2:14"
																},
																"nativeSrc": "26081:11:14",
																"nodeType": "YulFunctionCall",
																"src": "26081:11:14"
															},
															"nativeSrc": "26078:446:14",
															"nodeType": "YulIf",
															"src": "26078:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "25988:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "26043:5:14",
														"nodeType": "YulTypedName",
														"src": "26043:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "26050:3:14",
														"nodeType": "YulTypedName",
														"src": "26050:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "26055:10:14",
														"nodeType": "YulTypedName",
														"src": "26055:10:14",
														"type": ""
													}
												],
												"src": "25988:543:14"
											},
											{
												"body": {
													"nativeSrc": "26600:54:14",
													"nodeType": "YulBlock",
													"src": "26600:54:14",
													"statements": [
														{
															"nativeSrc": "26610:37:14",
															"nodeType": "YulAssignment",
															"src": "26610:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "26635:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26635:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "26641:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "26641:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "26631:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26631:3:14"
																},
																"nativeSrc": "26631:16:14",
																"nodeType": "YulFunctionCall",
																"src": "26631:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "26610:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "26610:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "26537:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "26575:4:14",
														"nodeType": "YulTypedName",
														"src": "26575:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "26581:5:14",
														"nodeType": "YulTypedName",
														"src": "26581:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "26591:8:14",
														"nodeType": "YulTypedName",
														"src": "26591:8:14",
														"type": ""
													}
												],
												"src": "26537:117:14"
											},
											{
												"body": {
													"nativeSrc": "26711:118:14",
													"nodeType": "YulBlock",
													"src": "26711:118:14",
													"statements": [
														{
															"nativeSrc": "26721:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "26721:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "26770:1:14",
																						"nodeType": "YulLiteral",
																						"src": "26770:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "26773:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "26773:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "26766:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "26766:3:14"
																				},
																				"nativeSrc": "26766:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "26766:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "26785:1:14",
																						"nodeType": "YulLiteral",
																						"src": "26785:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "26781:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "26781:3:14"
																				},
																				"nativeSrc": "26781:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "26781:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "26737:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "26737:28:14"
																		},
																		"nativeSrc": "26737:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26737:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "26733:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26733:3:14"
																},
																"nativeSrc": "26733:56:14",
																"nodeType": "YulFunctionCall",
																"src": "26733:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "26725:4:14",
																	"nodeType": "YulTypedName",
																	"src": "26725:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26798:25:14",
															"nodeType": "YulAssignment",
															"src": "26798:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "26812:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26812:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "26818:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26818:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "26808:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26808:3:14"
																},
																"nativeSrc": "26808:15:14",
																"nodeType": "YulFunctionCall",
																"src": "26808:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "26798:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "26798:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "26660:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "26688:4:14",
														"nodeType": "YulTypedName",
														"src": "26688:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "26694:5:14",
														"nodeType": "YulTypedName",
														"src": "26694:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "26704:6:14",
														"nodeType": "YulTypedName",
														"src": "26704:6:14",
														"type": ""
													}
												],
												"src": "26660:169:14"
											},
											{
												"body": {
													"nativeSrc": "26915:214:14",
													"nodeType": "YulBlock",
													"src": "26915:214:14",
													"statements": [
														{
															"nativeSrc": "27048:37:14",
															"nodeType": "YulAssignment",
															"src": "27048:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "27075:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27075:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "27081:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "27081:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "27056:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "27056:18:14"
																},
																"nativeSrc": "27056:29:14",
																"nodeType": "YulFunctionCall",
																"src": "27056:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "27048:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "27048:4:14"
																}
															]
														},
														{
															"nativeSrc": "27094:29:14",
															"nodeType": "YulAssignment",
															"src": "27094:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "27105:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27105:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "27115:1:14",
																				"nodeType": "YulLiteral",
																				"src": "27115:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "27118:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "27118:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "27111:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "27111:3:14"
																		},
																		"nativeSrc": "27111:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "27111:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "27102:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "27102:2:14"
																},
																"nativeSrc": "27102:21:14",
																"nodeType": "YulFunctionCall",
																"src": "27102:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "27094:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "27094:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "26834:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "26896:4:14",
														"nodeType": "YulTypedName",
														"src": "26896:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "26902:3:14",
														"nodeType": "YulTypedName",
														"src": "26902:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "26910:4:14",
														"nodeType": "YulTypedName",
														"src": "26910:4:14",
														"type": ""
													}
												],
												"src": "26834:295:14"
											},
											{
												"body": {
													"nativeSrc": "27226:1303:14",
													"nodeType": "YulBlock",
													"src": "27226:1303:14",
													"statements": [
														{
															"nativeSrc": "27237:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27237:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "27284:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "27284:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "27251:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "27251:32:14"
																},
																"nativeSrc": "27251:37:14",
																"nodeType": "YulFunctionCall",
																"src": "27251:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "27241:6:14",
																	"nodeType": "YulTypedName",
																	"src": "27241:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "27373:22:14",
																"nodeType": "YulBlock",
																"src": "27373:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "27375:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "27375:16:14"
																			},
																			"nativeSrc": "27375:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "27375:18:14"
																		},
																		"nativeSrc": "27375:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "27375:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "27345:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27345:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27353:18:14",
																		"nodeType": "YulLiteral",
																		"src": "27353:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27342:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "27342:2:14"
																},
																"nativeSrc": "27342:30:14",
																"nodeType": "YulFunctionCall",
																"src": "27342:30:14"
															},
															"nativeSrc": "27339:56:14",
															"nodeType": "YulIf",
															"src": "27339:56:14"
														},
														{
															"nativeSrc": "27405:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27405:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "27451:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "27451:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "27445:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "27445:5:14"
																		},
																		"nativeSrc": "27445:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "27445:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "27419:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "27419:25:14"
																},
																"nativeSrc": "27419:38:14",
																"nodeType": "YulFunctionCall",
																"src": "27419:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "27409:6:14",
																	"nodeType": "YulTypedName",
																	"src": "27409:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "27550:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27550:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "27556:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27556:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "27564:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27564:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "27504:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "27504:45:14"
																},
																"nativeSrc": "27504:67:14",
																"nodeType": "YulFunctionCall",
																"src": "27504:67:14"
															},
															"nativeSrc": "27504:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "27504:67:14"
														},
														{
															"nativeSrc": "27581:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27581:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "27598:1:14",
																"nodeType": "YulLiteral",
																"src": "27598:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "27585:9:14",
																	"nodeType": "YulTypedName",
																	"src": "27585:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27609:17:14",
															"nodeType": "YulAssignment",
															"src": "27609:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "27622:4:14",
																"nodeType": "YulLiteral",
																"src": "27622:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "27609:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "27609:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "27673:611:14",
																		"nodeType": "YulBlock",
																		"src": "27673:611:14",
																		"statements": [
																			{
																				"nativeSrc": "27687:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27687:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "27706:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "27706:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "27718:4:14",
																									"nodeType": "YulLiteral",
																									"src": "27718:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "27714:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "27714:3:14"
																							},
																							"nativeSrc": "27714:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "27714:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "27702:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "27702:3:14"
																					},
																					"nativeSrc": "27702:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27702:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "27691:7:14",
																						"nodeType": "YulTypedName",
																						"src": "27691:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "27738:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27738:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "27784:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "27784:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "27752:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "27752:31:14"
																					},
																					"nativeSrc": "27752:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27752:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "27742:6:14",
																						"nodeType": "YulTypedName",
																						"src": "27742:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "27802:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27802:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "27811:1:14",
																					"nodeType": "YulLiteral",
																					"src": "27811:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "27806:1:14",
																						"nodeType": "YulTypedName",
																						"src": "27806:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "27870:163:14",
																					"nodeType": "YulBlock",
																					"src": "27870:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "27895:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "27895:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "27913:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "27913:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "27918:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "27918:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "27909:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "27909:3:14"
																												},
																												"nativeSrc": "27909:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "27909:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "27903:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "27903:5:14"
																										},
																										"nativeSrc": "27903:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "27903:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "27888:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "27888:6:14"
																								},
																								"nativeSrc": "27888:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27888:42:14"
																							},
																							"nativeSrc": "27888:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "27888:42:14"
																						},
																						{
																							"nativeSrc": "27947:24:14",
																							"nodeType": "YulAssignment",
																							"src": "27947:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "27961:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "27961:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "27969:1:14",
																										"nodeType": "YulLiteral",
																										"src": "27969:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "27957:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "27957:3:14"
																								},
																								"nativeSrc": "27957:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27957:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "27947:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "27947:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "27988:31:14",
																							"nodeType": "YulAssignment",
																							"src": "27988:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "28005:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "28005:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "28016:2:14",
																										"nodeType": "YulLiteral",
																										"src": "28016:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "28001:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "28001:3:14"
																								},
																								"nativeSrc": "28001:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28001:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "27988:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "27988:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "27836:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "27836:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "27839:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "27839:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "27833:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "27833:2:14"
																					},
																					"nativeSrc": "27833:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27833:14:14"
																				},
																				"nativeSrc": "27825:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "27848:21:14",
																					"nodeType": "YulBlock",
																					"src": "27848:21:14",
																					"statements": [
																						{
																							"nativeSrc": "27850:17:14",
																							"nodeType": "YulAssignment",
																							"src": "27850:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "27859:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "27859:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "27862:4:14",
																										"nodeType": "YulLiteral",
																										"src": "27862:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "27855:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "27855:3:14"
																								},
																								"nativeSrc": "27855:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27855:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "27850:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "27850:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "27829:3:14",
																					"nodeType": "YulBlock",
																					"src": "27829:3:14",
																					"statements": []
																				},
																				"src": "27825:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "28069:156:14",
																					"nodeType": "YulBlock",
																					"src": "28069:156:14",
																					"statements": [
																						{
																							"nativeSrc": "28087:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "28087:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "28114:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "28114:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "28119:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "28119:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "28110:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "28110:3:14"
																										},
																										"nativeSrc": "28110:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28110:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "28104:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28104:5:14"
																								},
																								"nativeSrc": "28104:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28104:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "28091:9:14",
																									"nodeType": "YulTypedName",
																									"src": "28091:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "28154:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "28154:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "28181:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "28181:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "28196:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "28196:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "28204:4:14",
																														"nodeType": "YulLiteral",
																														"src": "28204:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "28192:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "28192:3:14"
																												},
																												"nativeSrc": "28192:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "28192:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "28162:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "28162:18:14"
																										},
																										"nativeSrc": "28162:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28162:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "28147:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "28147:6:14"
																								},
																								"nativeSrc": "28147:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28147:64:14"
																							},
																							"nativeSrc": "28147:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "28147:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "28052:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "28052:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "28061:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "28061:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "28049:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "28049:2:14"
																					},
																					"nativeSrc": "28049:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28049:19:14"
																				},
																				"nativeSrc": "28046:179:14",
																				"nodeType": "YulIf",
																				"src": "28046:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28245:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "28245:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "28259:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "28259:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "28267:1:14",
																											"nodeType": "YulLiteral",
																											"src": "28267:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "28255:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "28255:3:14"
																									},
																									"nativeSrc": "28255:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "28255:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "28271:1:14",
																									"nodeType": "YulLiteral",
																									"src": "28271:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "28251:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "28251:3:14"
																							},
																							"nativeSrc": "28251:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "28251:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "28238:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "28238:6:14"
																					},
																					"nativeSrc": "28238:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28238:36:14"
																				},
																				"nativeSrc": "28238:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "28238:36:14"
																			}
																		]
																	},
																	"nativeSrc": "27666:618:14",
																	"nodeType": "YulCase",
																	"src": "27666:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27671:1:14",
																		"nodeType": "YulLiteral",
																		"src": "27671:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "28301:222:14",
																		"nodeType": "YulBlock",
																		"src": "28301:222:14",
																		"statements": [
																			{
																				"nativeSrc": "28315:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28315:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "28328:1:14",
																					"nodeType": "YulLiteral",
																					"src": "28328:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "28319:5:14",
																						"nodeType": "YulTypedName",
																						"src": "28319:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "28352:67:14",
																					"nodeType": "YulBlock",
																					"src": "28352:67:14",
																					"statements": [
																						{
																							"nativeSrc": "28370:35:14",
																							"nodeType": "YulAssignment",
																							"src": "28370:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "28389:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "28389:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "28394:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "28394:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "28385:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "28385:3:14"
																										},
																										"nativeSrc": "28385:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28385:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "28379:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28379:5:14"
																								},
																								"nativeSrc": "28379:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28379:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "28370:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28370:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "28345:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "28345:6:14"
																				},
																				"nativeSrc": "28342:77:14",
																				"nodeType": "YulIf",
																				"src": "28342:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28439:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "28439:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "28498:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28498:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "28505:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "28505:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "28445:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "28445:52:14"
																							},
																							"nativeSrc": "28445:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "28445:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "28432:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "28432:6:14"
																					},
																					"nativeSrc": "28432:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28432:81:14"
																				},
																				"nativeSrc": "28432:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "28432:81:14"
																			}
																		]
																	},
																	"nativeSrc": "28293:230:14",
																	"nodeType": "YulCase",
																	"src": "28293:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "27646:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27646:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27654:2:14",
																		"nodeType": "YulLiteral",
																		"src": "27654:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27643:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "27643:2:14"
																},
																"nativeSrc": "27643:14:14",
																"nodeType": "YulFunctionCall",
																"src": "27643:14:14"
															},
															"nativeSrc": "27636:887:14",
															"nodeType": "YulSwitch",
															"src": "27636:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "27134:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "27215:4:14",
														"nodeType": "YulTypedName",
														"src": "27215:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "27221:3:14",
														"nodeType": "YulTypedName",
														"src": "27221:3:14",
														"type": ""
													}
												],
												"src": "27134:1395:14"
											},
											{
												"body": {
													"nativeSrc": "28707:357:14",
													"nodeType": "YulBlock",
													"src": "28707:357:14",
													"statements": [
														{
															"nativeSrc": "28717:26:14",
															"nodeType": "YulAssignment",
															"src": "28717:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28729:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "28729:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28740:2:14",
																		"nodeType": "YulLiteral",
																		"src": "28740:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28725:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "28725:3:14"
																},
																"nativeSrc": "28725:18:14",
																"nodeType": "YulFunctionCall",
																"src": "28725:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28717:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "28717:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28796:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "28796:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28809:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28809:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28820:1:14",
																				"nodeType": "YulLiteral",
																				"src": "28820:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28805:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28805:3:14"
																		},
																		"nativeSrc": "28805:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28805:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "28753:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "28753:42:14"
																},
																"nativeSrc": "28753:70:14",
																"nodeType": "YulFunctionCall",
																"src": "28753:70:14"
															},
															"nativeSrc": "28753:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "28753:70:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28876:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "28876:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28889:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28889:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28900:2:14",
																				"nodeType": "YulLiteral",
																				"src": "28900:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28885:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28885:3:14"
																		},
																		"nativeSrc": "28885:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28885:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "28833:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "28833:42:14"
																},
																"nativeSrc": "28833:71:14",
																"nodeType": "YulFunctionCall",
																"src": "28833:71:14"
															},
															"nativeSrc": "28833:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "28833:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28925:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28925:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28936:2:14",
																				"nodeType": "YulLiteral",
																				"src": "28936:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28921:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28921:3:14"
																		},
																		"nativeSrc": "28921:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28921:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28945:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "28945:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28951:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28951:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28941:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28941:3:14"
																		},
																		"nativeSrc": "28941:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28941:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28914:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "28914:6:14"
																},
																"nativeSrc": "28914:48:14",
																"nodeType": "YulFunctionCall",
																"src": "28914:48:14"
															},
															"nativeSrc": "28914:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "28914:48:14"
														},
														{
															"nativeSrc": "28971:86:14",
															"nodeType": "YulAssignment",
															"src": "28971:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "29043:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "29043:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "29052:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "29052:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28979:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "28979:63:14"
																},
																"nativeSrc": "28979:78:14",
																"nodeType": "YulFunctionCall",
																"src": "28979:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28971:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "28971:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28535:529:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28663:9:14",
														"nodeType": "YulTypedName",
														"src": "28663:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "28675:6:14",
														"nodeType": "YulTypedName",
														"src": "28675:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28683:6:14",
														"nodeType": "YulTypedName",
														"src": "28683:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28691:6:14",
														"nodeType": "YulTypedName",
														"src": "28691:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28702:4:14",
														"nodeType": "YulTypedName",
														"src": "28702:4:14",
														"type": ""
													}
												],
												"src": "28535:529:14"
											},
											{
												"body": {
													"nativeSrc": "29176:61:14",
													"nodeType": "YulBlock",
													"src": "29176:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29198:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "29198:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29206:1:14",
																				"nodeType": "YulLiteral",
																				"src": "29206:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29194:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29194:3:14"
																		},
																		"nativeSrc": "29194:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29194:14:14"
																	},
																	{
																		"hexValue": "5a65726f20616464726573732075736572",
																		"kind": "string",
																		"nativeSrc": "29210:19:14",
																		"nodeType": "YulLiteral",
																		"src": "29210:19:14",
																		"type": "",
																		"value": "Zero address user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29187:6:14"
																},
																"nativeSrc": "29187:43:14",
																"nodeType": "YulFunctionCall",
																"src": "29187:43:14"
															},
															"nativeSrc": "29187:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "29187:43:14"
														}
													]
												},
												"name": "store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
												"nativeSrc": "29070:167:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29168:6:14",
														"nodeType": "YulTypedName",
														"src": "29168:6:14",
														"type": ""
													}
												],
												"src": "29070:167:14"
											},
											{
												"body": {
													"nativeSrc": "29389:220:14",
													"nodeType": "YulBlock",
													"src": "29389:220:14",
													"statements": [
														{
															"nativeSrc": "29399:74:14",
															"nodeType": "YulAssignment",
															"src": "29399:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29465:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29465:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29470:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29470:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29406:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "29406:58:14"
																},
																"nativeSrc": "29406:67:14",
																"nodeType": "YulFunctionCall",
																"src": "29406:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29399:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29399:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29571:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29571:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
																	"nativeSrc": "29482:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "29482:88:14"
																},
																"nativeSrc": "29482:93:14",
																"nodeType": "YulFunctionCall",
																"src": "29482:93:14"
															},
															"nativeSrc": "29482:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "29482:93:14"
														},
														{
															"nativeSrc": "29584:19:14",
															"nodeType": "YulAssignment",
															"src": "29584:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29595:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29595:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29600:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29600:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29591:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29591:3:14"
																},
																"nativeSrc": "29591:12:14",
																"nodeType": "YulFunctionCall",
																"src": "29591:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29584:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29584:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29243:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29377:3:14",
														"nodeType": "YulTypedName",
														"src": "29377:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29385:3:14",
														"nodeType": "YulTypedName",
														"src": "29385:3:14",
														"type": ""
													}
												],
												"src": "29243:366:14"
											},
											{
												"body": {
													"nativeSrc": "29786:248:14",
													"nodeType": "YulBlock",
													"src": "29786:248:14",
													"statements": [
														{
															"nativeSrc": "29796:26:14",
															"nodeType": "YulAssignment",
															"src": "29796:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29808:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "29808:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29819:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29819:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29804:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29804:3:14"
																},
																"nativeSrc": "29804:18:14",
																"nodeType": "YulFunctionCall",
																"src": "29804:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29796:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29796:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29843:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29843:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29854:1:14",
																				"nodeType": "YulLiteral",
																				"src": "29854:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29839:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29839:3:14"
																		},
																		"nativeSrc": "29839:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29839:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29862:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "29862:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29868:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29868:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29858:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29858:3:14"
																		},
																		"nativeSrc": "29858:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29858:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29832:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29832:6:14"
																},
																"nativeSrc": "29832:47:14",
																"nodeType": "YulFunctionCall",
																"src": "29832:47:14"
															},
															"nativeSrc": "29832:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "29832:47:14"
														},
														{
															"nativeSrc": "29888:139:14",
															"nodeType": "YulAssignment",
															"src": "29888:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30022:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "30022:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29896:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "29896:124:14"
																},
																"nativeSrc": "29896:131:14",
																"nodeType": "YulFunctionCall",
																"src": "29896:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29888:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29888:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29615:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29766:9:14",
														"nodeType": "YulTypedName",
														"src": "29766:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29781:4:14",
														"nodeType": "YulTypedName",
														"src": "29781:4:14",
														"type": ""
													}
												],
												"src": "29615:419:14"
											},
											{
												"body": {
													"nativeSrc": "30146:68:14",
													"nodeType": "YulBlock",
													"src": "30146:68:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "30168:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "30168:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30176:1:14",
																				"nodeType": "YulLiteral",
																				"src": "30176:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30164:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30164:3:14"
																		},
																		"nativeSrc": "30164:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30164:14:14"
																	},
																	{
																		"hexValue": "4d69736d617463686564206172726179206c656e67746873",
																		"kind": "string",
																		"nativeSrc": "30180:26:14",
																		"nodeType": "YulLiteral",
																		"src": "30180:26:14",
																		"type": "",
																		"value": "Mismatched array lengths"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30157:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "30157:6:14"
																},
																"nativeSrc": "30157:50:14",
																"nodeType": "YulFunctionCall",
																"src": "30157:50:14"
															},
															"nativeSrc": "30157:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "30157:50:14"
														}
													]
												},
												"name": "store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
												"nativeSrc": "30040:174:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "30138:6:14",
														"nodeType": "YulTypedName",
														"src": "30138:6:14",
														"type": ""
													}
												],
												"src": "30040:174:14"
											},
											{
												"body": {
													"nativeSrc": "30366:220:14",
													"nodeType": "YulBlock",
													"src": "30366:220:14",
													"statements": [
														{
															"nativeSrc": "30376:74:14",
															"nodeType": "YulAssignment",
															"src": "30376:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30442:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "30442:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30447:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30447:2:14",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30383:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "30383:58:14"
																},
																"nativeSrc": "30383:67:14",
																"nodeType": "YulFunctionCall",
																"src": "30383:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30376:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30376:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30548:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "30548:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
																	"nativeSrc": "30459:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "30459:88:14"
																},
																"nativeSrc": "30459:93:14",
																"nodeType": "YulFunctionCall",
																"src": "30459:93:14"
															},
															"nativeSrc": "30459:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "30459:93:14"
														},
														{
															"nativeSrc": "30561:19:14",
															"nodeType": "YulAssignment",
															"src": "30561:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30572:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "30572:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30577:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30577:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30568:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30568:3:14"
																},
																"nativeSrc": "30568:12:14",
																"nodeType": "YulFunctionCall",
																"src": "30568:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30561:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30561:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "30220:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30354:3:14",
														"nodeType": "YulTypedName",
														"src": "30354:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30362:3:14",
														"nodeType": "YulTypedName",
														"src": "30362:3:14",
														"type": ""
													}
												],
												"src": "30220:366:14"
											},
											{
												"body": {
													"nativeSrc": "30763:248:14",
													"nodeType": "YulBlock",
													"src": "30763:248:14",
													"statements": [
														{
															"nativeSrc": "30773:26:14",
															"nodeType": "YulAssignment",
															"src": "30773:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30785:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "30785:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30796:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30796:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30781:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30781:3:14"
																},
																"nativeSrc": "30781:18:14",
																"nodeType": "YulFunctionCall",
																"src": "30781:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30773:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "30773:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30820:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30820:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30831:1:14",
																				"nodeType": "YulLiteral",
																				"src": "30831:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30816:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30816:3:14"
																		},
																		"nativeSrc": "30816:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30816:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30839:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "30839:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30845:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30845:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30835:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30835:3:14"
																		},
																		"nativeSrc": "30835:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30835:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30809:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "30809:6:14"
																},
																"nativeSrc": "30809:47:14",
																"nodeType": "YulFunctionCall",
																"src": "30809:47:14"
															},
															"nativeSrc": "30809:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "30809:47:14"
														},
														{
															"nativeSrc": "30865:139:14",
															"nodeType": "YulAssignment",
															"src": "30865:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30999:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "30999:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30873:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "30873:124:14"
																},
																"nativeSrc": "30873:131:14",
																"nodeType": "YulFunctionCall",
																"src": "30873:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30865:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "30865:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "30592:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30743:9:14",
														"nodeType": "YulTypedName",
														"src": "30743:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30758:4:14",
														"nodeType": "YulTypedName",
														"src": "30758:4:14",
														"type": ""
													}
												],
												"src": "30592:419:14"
											},
											{
												"body": {
													"nativeSrc": "31045:152:14",
													"nodeType": "YulBlock",
													"src": "31045:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31062:1:14",
																		"nodeType": "YulLiteral",
																		"src": "31062:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31065:77:14",
																		"nodeType": "YulLiteral",
																		"src": "31065:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31055:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31055:6:14"
																},
																"nativeSrc": "31055:88:14",
																"nodeType": "YulFunctionCall",
																"src": "31055:88:14"
															},
															"nativeSrc": "31055:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "31055:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31159:1:14",
																		"nodeType": "YulLiteral",
																		"src": "31159:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31162:4:14",
																		"nodeType": "YulLiteral",
																		"src": "31162:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31152:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31152:6:14"
																},
																"nativeSrc": "31152:15:14",
																"nodeType": "YulFunctionCall",
																"src": "31152:15:14"
															},
															"nativeSrc": "31152:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "31152:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31183:1:14",
																		"nodeType": "YulLiteral",
																		"src": "31183:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31186:4:14",
																		"nodeType": "YulLiteral",
																		"src": "31186:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "31176:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31176:6:14"
																},
																"nativeSrc": "31176:15:14",
																"nodeType": "YulFunctionCall",
																"src": "31176:15:14"
															},
															"nativeSrc": "31176:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "31176:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "31017:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "31017:180:14"
											},
											{
												"body": {
													"nativeSrc": "31309:124:14",
													"nodeType": "YulBlock",
													"src": "31309:124:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31331:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "31331:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31339:1:14",
																				"nodeType": "YulLiteral",
																				"src": "31339:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31327:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31327:3:14"
																		},
																		"nativeSrc": "31327:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31327:14:14"
																	},
																	{
																		"hexValue": "5769746864726177616c20616d6f756e74206d75737420626520677265617465",
																		"kind": "string",
																		"nativeSrc": "31343:34:14",
																		"nodeType": "YulLiteral",
																		"src": "31343:34:14",
																		"type": "",
																		"value": "Withdrawal amount must be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31320:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31320:6:14"
																},
																"nativeSrc": "31320:58:14",
																"nodeType": "YulFunctionCall",
																"src": "31320:58:14"
															},
															"nativeSrc": "31320:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "31320:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31399:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "31399:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31407:2:14",
																				"nodeType": "YulLiteral",
																				"src": "31407:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31395:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31395:3:14"
																		},
																		"nativeSrc": "31395:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31395:15:14"
																	},
																	{
																		"hexValue": "72207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "31412:13:14",
																		"nodeType": "YulLiteral",
																		"src": "31412:13:14",
																		"type": "",
																		"value": "r than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31388:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31388:6:14"
																},
																"nativeSrc": "31388:38:14",
																"nodeType": "YulFunctionCall",
																"src": "31388:38:14"
															},
															"nativeSrc": "31388:38:14",
															"nodeType": "YulExpressionStatement",
															"src": "31388:38:14"
														}
													]
												},
												"name": "store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
												"nativeSrc": "31203:230:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "31301:6:14",
														"nodeType": "YulTypedName",
														"src": "31301:6:14",
														"type": ""
													}
												],
												"src": "31203:230:14"
											},
											{
												"body": {
													"nativeSrc": "31585:220:14",
													"nodeType": "YulBlock",
													"src": "31585:220:14",
													"statements": [
														{
															"nativeSrc": "31595:74:14",
															"nodeType": "YulAssignment",
															"src": "31595:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31661:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "31661:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31666:2:14",
																		"nodeType": "YulLiteral",
																		"src": "31666:2:14",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31602:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "31602:58:14"
																},
																"nativeSrc": "31602:67:14",
																"nodeType": "YulFunctionCall",
																"src": "31602:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31595:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31595:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31767:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "31767:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																	"nativeSrc": "31678:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "31678:88:14"
																},
																"nativeSrc": "31678:93:14",
																"nodeType": "YulFunctionCall",
																"src": "31678:93:14"
															},
															"nativeSrc": "31678:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "31678:93:14"
														},
														{
															"nativeSrc": "31780:19:14",
															"nodeType": "YulAssignment",
															"src": "31780:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31791:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "31791:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31796:2:14",
																		"nodeType": "YulLiteral",
																		"src": "31796:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31787:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31787:3:14"
																},
																"nativeSrc": "31787:12:14",
																"nodeType": "YulFunctionCall",
																"src": "31787:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "31780:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31780:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "31439:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "31573:3:14",
														"nodeType": "YulTypedName",
														"src": "31573:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31581:3:14",
														"nodeType": "YulTypedName",
														"src": "31581:3:14",
														"type": ""
													}
												],
												"src": "31439:366:14"
											},
											{
												"body": {
													"nativeSrc": "31982:248:14",
													"nodeType": "YulBlock",
													"src": "31982:248:14",
													"statements": [
														{
															"nativeSrc": "31992:26:14",
															"nodeType": "YulAssignment",
															"src": "31992:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32004:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "32004:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32015:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32015:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32000:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32000:3:14"
																},
																"nativeSrc": "32000:18:14",
																"nodeType": "YulFunctionCall",
																"src": "32000:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31992:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "31992:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32039:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "32039:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32050:1:14",
																				"nodeType": "YulLiteral",
																				"src": "32050:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32035:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32035:3:14"
																		},
																		"nativeSrc": "32035:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32035:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "32058:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "32058:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "32064:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "32064:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "32054:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32054:3:14"
																		},
																		"nativeSrc": "32054:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32054:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32028:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "32028:6:14"
																},
																"nativeSrc": "32028:47:14",
																"nodeType": "YulFunctionCall",
																"src": "32028:47:14"
															},
															"nativeSrc": "32028:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "32028:47:14"
														},
														{
															"nativeSrc": "32084:139:14",
															"nodeType": "YulAssignment",
															"src": "32084:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "32218:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "32218:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32092:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "32092:124:14"
																},
																"nativeSrc": "32092:131:14",
																"nodeType": "YulFunctionCall",
																"src": "32092:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32084:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "32084:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "31811:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31962:9:14",
														"nodeType": "YulTypedName",
														"src": "31962:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31977:4:14",
														"nodeType": "YulTypedName",
														"src": "31977:4:14",
														"type": ""
													}
												],
												"src": "31811:419:14"
											},
											{
												"body": {
													"nativeSrc": "32342:62:14",
													"nodeType": "YulBlock",
													"src": "32342:62:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "32364:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "32364:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32372:1:14",
																				"nodeType": "YulLiteral",
																				"src": "32372:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32360:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32360:3:14"
																		},
																		"nativeSrc": "32360:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32360:14:14"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "32376:20:14",
																		"nodeType": "YulLiteral",
																		"src": "32376:20:14",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32353:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "32353:6:14"
																},
																"nativeSrc": "32353:44:14",
																"nodeType": "YulFunctionCall",
																"src": "32353:44:14"
															},
															"nativeSrc": "32353:44:14",
															"nodeType": "YulExpressionStatement",
															"src": "32353:44:14"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "32236:168:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "32334:6:14",
														"nodeType": "YulTypedName",
														"src": "32334:6:14",
														"type": ""
													}
												],
												"src": "32236:168:14"
											},
											{
												"body": {
													"nativeSrc": "32556:220:14",
													"nodeType": "YulBlock",
													"src": "32556:220:14",
													"statements": [
														{
															"nativeSrc": "32566:74:14",
															"nodeType": "YulAssignment",
															"src": "32566:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32632:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32632:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32637:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32637:2:14",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32573:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "32573:58:14"
																},
																"nativeSrc": "32573:67:14",
																"nodeType": "YulFunctionCall",
																"src": "32573:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "32566:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32566:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32738:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32738:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "32649:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "32649:88:14"
																},
																"nativeSrc": "32649:93:14",
																"nodeType": "YulFunctionCall",
																"src": "32649:93:14"
															},
															"nativeSrc": "32649:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "32649:93:14"
														},
														{
															"nativeSrc": "32751:19:14",
															"nodeType": "YulAssignment",
															"src": "32751:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32762:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32762:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32767:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32767:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32758:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32758:3:14"
																},
																"nativeSrc": "32758:12:14",
																"nodeType": "YulFunctionCall",
																"src": "32758:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "32751:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32751:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "32410:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "32544:3:14",
														"nodeType": "YulTypedName",
														"src": "32544:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "32552:3:14",
														"nodeType": "YulTypedName",
														"src": "32552:3:14",
														"type": ""
													}
												],
												"src": "32410:366:14"
											},
											{
												"body": {
													"nativeSrc": "32953:248:14",
													"nodeType": "YulBlock",
													"src": "32953:248:14",
													"statements": [
														{
															"nativeSrc": "32963:26:14",
															"nodeType": "YulAssignment",
															"src": "32963:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32975:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "32975:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32986:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32986:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32971:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32971:3:14"
																},
																"nativeSrc": "32971:18:14",
																"nodeType": "YulFunctionCall",
																"src": "32971:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32963:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "32963:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33010:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "33010:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33021:1:14",
																				"nodeType": "YulLiteral",
																				"src": "33021:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33006:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33006:3:14"
																		},
																		"nativeSrc": "33006:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33006:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "33029:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "33029:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "33035:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "33035:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "33025:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33025:3:14"
																		},
																		"nativeSrc": "33025:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33025:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32999:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "32999:6:14"
																},
																"nativeSrc": "32999:47:14",
																"nodeType": "YulFunctionCall",
																"src": "32999:47:14"
															},
															"nativeSrc": "32999:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "32999:47:14"
														},
														{
															"nativeSrc": "33055:139:14",
															"nodeType": "YulAssignment",
															"src": "33055:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "33189:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "33189:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "33063:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "33063:124:14"
																},
																"nativeSrc": "33063:131:14",
																"nodeType": "YulFunctionCall",
																"src": "33063:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33055:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "33055:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "32782:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "32933:9:14",
														"nodeType": "YulTypedName",
														"src": "32933:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "32948:4:14",
														"nodeType": "YulTypedName",
														"src": "32948:4:14",
														"type": ""
													}
												],
												"src": "32782:419:14"
											},
											{
												"body": {
													"nativeSrc": "33313:75:14",
													"nodeType": "YulBlock",
													"src": "33313:75:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "33335:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "33335:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33343:1:14",
																				"nodeType": "YulLiteral",
																				"src": "33343:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33331:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33331:3:14"
																		},
																		"nativeSrc": "33331:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33331:14:14"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "33347:33:14",
																		"nodeType": "YulLiteral",
																		"src": "33347:33:14",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33324:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "33324:6:14"
																},
																"nativeSrc": "33324:57:14",
																"nodeType": "YulFunctionCall",
																"src": "33324:57:14"
															},
															"nativeSrc": "33324:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "33324:57:14"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "33207:181:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "33305:6:14",
														"nodeType": "YulTypedName",
														"src": "33305:6:14",
														"type": ""
													}
												],
												"src": "33207:181:14"
											},
											{
												"body": {
													"nativeSrc": "33540:220:14",
													"nodeType": "YulBlock",
													"src": "33540:220:14",
													"statements": [
														{
															"nativeSrc": "33550:74:14",
															"nodeType": "YulAssignment",
															"src": "33550:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33616:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "33616:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33621:2:14",
																		"nodeType": "YulLiteral",
																		"src": "33621:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "33557:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "33557:58:14"
																},
																"nativeSrc": "33557:67:14",
																"nodeType": "YulFunctionCall",
																"src": "33557:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "33550:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33550:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33722:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "33722:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "33633:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "33633:88:14"
																},
																"nativeSrc": "33633:93:14",
																"nodeType": "YulFunctionCall",
																"src": "33633:93:14"
															},
															"nativeSrc": "33633:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "33633:93:14"
														},
														{
															"nativeSrc": "33735:19:14",
															"nodeType": "YulAssignment",
															"src": "33735:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33746:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "33746:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33751:2:14",
																		"nodeType": "YulLiteral",
																		"src": "33751:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33742:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33742:3:14"
																},
																"nativeSrc": "33742:12:14",
																"nodeType": "YulFunctionCall",
																"src": "33742:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "33735:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33735:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "33394:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "33528:3:14",
														"nodeType": "YulTypedName",
														"src": "33528:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "33536:3:14",
														"nodeType": "YulTypedName",
														"src": "33536:3:14",
														"type": ""
													}
												],
												"src": "33394:366:14"
											},
											{
												"body": {
													"nativeSrc": "33937:248:14",
													"nodeType": "YulBlock",
													"src": "33937:248:14",
													"statements": [
														{
															"nativeSrc": "33947:26:14",
															"nodeType": "YulAssignment",
															"src": "33947:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "33959:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "33959:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33970:2:14",
																		"nodeType": "YulLiteral",
																		"src": "33970:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33955:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33955:3:14"
																},
																"nativeSrc": "33955:18:14",
																"nodeType": "YulFunctionCall",
																"src": "33955:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33947:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "33947:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33994:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "33994:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34005:1:14",
																				"nodeType": "YulLiteral",
																				"src": "34005:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33990:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33990:3:14"
																		},
																		"nativeSrc": "33990:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33990:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "34013:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "34013:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "34019:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34019:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "34009:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34009:3:14"
																		},
																		"nativeSrc": "34009:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34009:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33983:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "33983:6:14"
																},
																"nativeSrc": "33983:47:14",
																"nodeType": "YulFunctionCall",
																"src": "33983:47:14"
															},
															"nativeSrc": "33983:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "33983:47:14"
														},
														{
															"nativeSrc": "34039:139:14",
															"nodeType": "YulAssignment",
															"src": "34039:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "34173:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "34173:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "34047:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "34047:124:14"
																},
																"nativeSrc": "34047:131:14",
																"nodeType": "YulFunctionCall",
																"src": "34047:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "34039:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "34039:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "33766:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "33917:9:14",
														"nodeType": "YulTypedName",
														"src": "33917:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "33932:4:14",
														"nodeType": "YulTypedName",
														"src": "33932:4:14",
														"type": ""
													}
												],
												"src": "33766:419:14"
											},
											{
												"body": {
													"nativeSrc": "34317:206:14",
													"nodeType": "YulBlock",
													"src": "34317:206:14",
													"statements": [
														{
															"nativeSrc": "34327:26:14",
															"nodeType": "YulAssignment",
															"src": "34327:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "34339:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "34339:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "34350:2:14",
																		"nodeType": "YulLiteral",
																		"src": "34350:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "34335:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "34335:3:14"
																},
																"nativeSrc": "34335:18:14",
																"nodeType": "YulFunctionCall",
																"src": "34335:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "34327:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "34327:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "34407:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "34407:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34420:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34420:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34431:1:14",
																				"nodeType": "YulLiteral",
																				"src": "34431:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34416:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34416:3:14"
																		},
																		"nativeSrc": "34416:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34416:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "34363:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "34363:43:14"
																},
																"nativeSrc": "34363:71:14",
																"nodeType": "YulFunctionCall",
																"src": "34363:71:14"
															},
															"nativeSrc": "34363:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "34363:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "34488:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "34488:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34501:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34501:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34512:2:14",
																				"nodeType": "YulLiteral",
																				"src": "34512:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34497:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34497:3:14"
																		},
																		"nativeSrc": "34497:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34497:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "34444:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "34444:43:14"
																},
																"nativeSrc": "34444:72:14",
																"nodeType": "YulFunctionCall",
																"src": "34444:72:14"
															},
															"nativeSrc": "34444:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "34444:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "34191:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "34281:9:14",
														"nodeType": "YulTypedName",
														"src": "34281:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "34293:6:14",
														"nodeType": "YulTypedName",
														"src": "34293:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "34301:6:14",
														"nodeType": "YulTypedName",
														"src": "34301:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "34312:4:14",
														"nodeType": "YulTypedName",
														"src": "34312:4:14",
														"type": ""
													}
												],
												"src": "34191:332:14"
											},
											{
												"body": {
													"nativeSrc": "34683:288:14",
													"nodeType": "YulBlock",
													"src": "34683:288:14",
													"statements": [
														{
															"nativeSrc": "34693:26:14",
															"nodeType": "YulAssignment",
															"src": "34693:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "34705:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "34705:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "34716:2:14",
																		"nodeType": "YulLiteral",
																		"src": "34716:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "34701:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "34701:3:14"
																},
																"nativeSrc": "34701:18:14",
																"nodeType": "YulFunctionCall",
																"src": "34701:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "34693:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "34693:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "34773:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "34773:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34786:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34786:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34797:1:14",
																				"nodeType": "YulLiteral",
																				"src": "34797:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34782:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34782:3:14"
																		},
																		"nativeSrc": "34782:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34782:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "34729:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "34729:43:14"
																},
																"nativeSrc": "34729:71:14",
																"nodeType": "YulFunctionCall",
																"src": "34729:71:14"
															},
															"nativeSrc": "34729:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "34729:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "34854:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "34854:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34867:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34867:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34878:2:14",
																				"nodeType": "YulLiteral",
																				"src": "34878:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34863:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34863:3:14"
																		},
																		"nativeSrc": "34863:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34863:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "34810:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "34810:43:14"
																},
																"nativeSrc": "34810:72:14",
																"nodeType": "YulFunctionCall",
																"src": "34810:72:14"
															},
															"nativeSrc": "34810:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "34810:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "34936:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "34936:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34949:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34949:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34960:2:14",
																				"nodeType": "YulLiteral",
																				"src": "34960:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34945:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34945:3:14"
																		},
																		"nativeSrc": "34945:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34945:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "34892:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "34892:43:14"
																},
																"nativeSrc": "34892:72:14",
																"nodeType": "YulFunctionCall",
																"src": "34892:72:14"
															},
															"nativeSrc": "34892:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "34892:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "34529:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "34639:9:14",
														"nodeType": "YulTypedName",
														"src": "34639:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "34651:6:14",
														"nodeType": "YulTypedName",
														"src": "34651:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "34659:6:14",
														"nodeType": "YulTypedName",
														"src": "34659:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "34667:6:14",
														"nodeType": "YulTypedName",
														"src": "34667:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "34678:4:14",
														"nodeType": "YulTypedName",
														"src": "34678:4:14",
														"type": ""
													}
												],
												"src": "34529:442:14"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sweetspot: use deposit()\")\n\n    }\n\n    function abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IScorer_$1472_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IScorer_$1472_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IScorer_$1472__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint64_t_uint64_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint64t_uint64t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_uint64_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint64(value)))\n    }\n\n    function abi_encode_t_uint64_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint64_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint64_t_uint64__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf(memPtr) {\n\n        mstore(add(memPtr, 0), \"No claimable amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds in jar\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ether transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect Ether amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit amount must be greater t\")\n\n        mstore(add(memPtr, 32), \"han zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not an admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start time must be before end ti\")\n\n        mstore(add(memPtr, 32), \"me\")\n\n    }\n\n    function abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero address user\")\n\n    }\n\n    function abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085(memPtr) {\n\n        mstore(add(memPtr, 0), \"Mismatched array lengths\")\n\n    }\n\n    function abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal amount must be greate\")\n\n        mstore(add(memPtr, 32), \"r than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100eb575f3560e01c80638da5cb5b11610089578063b807a3c411610058578063b807a3c4146103b1578063e3e7c1f9146103d9578063f2fde38b14610401578063f3fef3a314610429576101aa565b80638da5cb5b146102e7578063a9012c8914610311578063a9590e8a14610339578063aee9c87214610375576101aa565b8063485cc955116100c5578063485cc95514610253578063715018a61461027b57806385c758f7146102915780638a19c8bc146102bb576101aa565b80631e83409a146101e557806331f7d9641461020d57806347e7ef2414610237576101aa565b366101aa573460355f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461013c9190611ca0565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62346040516101a09190611ce2565b60405180910390a3005b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101dc90611d55565b60405180910390fd5b3480156101f0575f80fd5b5061020b60048036038101906102069190611dde565b610451565b005b348015610218575f80fd5b506102216108aa565b60405161022e9190611e18565b60405180910390f35b610251600480360381019061024c9190611e5b565b6108ae565b005b34801561025e575f80fd5b5061027960048036038101906102749190611e99565b610a64565b005b348015610286575f80fd5b5061028f610c2e565b005b34801561029c575f80fd5b506102a5610c41565b6040516102b29190611f32565b60405180910390f35b3480156102c6575f80fd5b506102cf610c66565b6040516102de93929190611fcd565b60405180910390f35b3480156102f2575f80fd5b506102fb610d29565b6040516103089190611e18565b60405180910390f35b34801561031c575f80fd5b506103376004803603810190610332919061215f565b610d5e565b005b348015610344575f80fd5b5061035f600480360381019061035a9190611e99565b610f70565b60405161036c9190611ce2565b60405180910390f35b348015610380575f80fd5b5061039b60048036038101906103969190611dde565b610f90565b6040516103a89190611ce2565b60405180910390f35b3480156103bc575f80fd5b506103d760048036038101906103d291906121cb565b610fa5565b005b3480156103e4575f80fd5b506103ff60048036038101906103fa91906122cd565b6111d2565b005b34801561040c575f80fd5b5061042760048036038101906104229190611dde565b611476565b005b348015610434575f80fd5b5061044f600480360381019061044a9190611e5b565b6114fa565b005b6104596117b2565b60335f015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff164210806104a9575060335f0160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1642115b1561051e574260335f015f9054906101000a900467ffffffffffffffff1660335f0160089054906101000a900467ffffffffffffffff166040517ffa7410d40000000000000000000000000000000000000000000000000000000081526004016105159392919061238e565b60405180910390fd5b5f60365f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d39061240d565b60405180910390fd5b8060355f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561065c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065390612475565b60405180910390fd5b5f60365f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060355f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107259190612493565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361080d575f3373ffffffffffffffffffffffffffffffffffffffff1682604051610784906124f3565b5f6040518083038185875af1925050503d805f81146107be576040519150601f19603f3d011682016040523d82523d5f602084013e6107c3565b606091505b5050905080610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe90612551565b60405180910390fd5b50610839565b61083833828473ffffffffffffffffffffffffffffffffffffffff166117ff9092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683836040516108969190611ce2565b60405180910390a3506108a761187e565b50565b5f81565b6108b66117b2565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109305780341461092b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610922906125b9565b60405180910390fd5b6109a0565b5f8111610972576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096990612647565b60405180910390fd5b61099f3330838573ffffffffffffffffffffffffffffffffffffffff16611887909392919063ffffffff16565b5b8060355f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109ec9190611ca0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6283604051610a509190611ce2565b60405180910390a3610a6061187e565b5050565b5f610a6d611909565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610ab55750825b90505f60018367ffffffffffffffff16148015610ae857505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610af6575080155b15610b2d576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610b7a576001855f0160086101000a81548160ff0219169083151502179055505b610b8386611930565b610b8b611944565b8660325f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610c25575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c1c919061269e565b60405180910390a15b50505050505050565b610c36611956565b610c3f5f6119dd565b565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6033805f015f9054906101000a900467ffffffffffffffff1690805f0160089054906101000a900467ffffffffffffffff1690806001018054610ca8906126e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd4906126e4565b8015610d1f5780601f10610cf657610100808354040283529160200191610d1f565b820191905f5260205f20905b815481529060010190602001808311610d0257829003601f168201915b5050505050905083565b5f80610d33611aae565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b8152600401610db89190611e18565b602060405180830381865afa158015610dd3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610df79190612749565b610e36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2d906127be565b60405180910390fd5b8167ffffffffffffffff168367ffffffffffffffff1610610e8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e839061284c565b60405180910390fd5b60405180606001604052808467ffffffffffffffff1681526020018367ffffffffffffffff1681526020018281525060335f820151815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506020820151815f0160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001019081610f2c91906129fe565b509050507f09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13838383604051610f6393929190612acd565b60405180910390a1505050565b6036602052815f5260405f20602052805f5260405f205f91509150505481565b6035602052805f5260405f205f915090505481565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b8152600401610fff9190611e18565b602060405180830381865afa15801561101a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061103e9190612749565b61107d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611074906127be565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e290612b53565b60405180910390fd5b8060365f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2836040516111c59190611ce2565b60405180910390a3505050565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b815260040161122c9190611e18565b602060405180830381865afa158015611247573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061126b9190612749565b6112aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a1906127be565b60405180910390fd5b8181905084849050146112f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e990612bbb565b60405180910390fd5b5f5b8484905081101561146e5782828281811061131257611311612bd9565b5b9050602002013560365f87878581811061132f5761132e612bd9565b5b90506020020160208101906113449190611dde565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508573ffffffffffffffffffffffffffffffffffffffff168585838181106113e6576113e5612bd9565b5b90506020020160208101906113fb9190611dde565b73ffffffffffffffffffffffffffffffffffffffff167f3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc285858581811061144557611444612bd9565b5b905060200201356040516114599190611ce2565b60405180910390a380806001019150506112f4565b505050505050565b61147e611956565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114ee575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114e59190611e18565b60405180910390fd5b6114f7816119dd565b50565b611502611956565b61150a6117b2565b5f811161154c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154390612c76565b60405180910390fd5b8060355f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156115cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c390612cde565b60405180910390fd5b8060355f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546116189190612493565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611707575f61165b610d29565b73ffffffffffffffffffffffffffffffffffffffff168260405161167e906124f3565b5f6040518083038185875af1925050503d805f81146116b8576040519150601f19603f3d011682016040523d82523d5f602084013e6116bd565b606091505b5050905080611701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f890612551565b60405180910390fd5b5061173a565b611739611712610d29565b828473ffffffffffffffffffffffffffffffffffffffff166117ff9092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff16611759610d29565b73ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb8360405161179e9190611ce2565b60405180910390a36117ae61187e565b5050565b60025f54036117f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ed90612d46565b60405180910390fd5b60025f81905550565b611879838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611832929190612d64565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ad5565b505050565b60015f81905550565b611903848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016118bc93929190612d8b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ad5565b50505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611938611b70565b61194181611bb0565b50565b61194c611b70565b611954611c34565b565b61195e611c45565b73ffffffffffffffffffffffffffffffffffffffff1661197c610d29565b73ffffffffffffffffffffffffffffffffffffffff16146119db5761199f611c45565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016119d29190611e18565b60405180910390fd5b565b5f6119e6611aae565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f8060205f8451602086015f885af180611af4576040513d5f823e3d81fd5b3d92505f519150505f8214611b0d576001811415611b28565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611b6a57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611b619190611e18565b60405180910390fd5b50505050565b611b78611c4c565b611bae576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611bb8611b70565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611c28575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611c1f9190611e18565b60405180910390fd5b611c31816119dd565b50565b611c3c611b70565b60015f81905550565b5f33905090565b5f611c55611909565b5f0160089054906101000a900460ff16905090565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611caa82611c6a565b9150611cb583611c6a565b9250828201905080821115611ccd57611ccc611c73565b5b92915050565b611cdc81611c6a565b82525050565b5f602082019050611cf55f830184611cd3565b92915050565b5f82825260208201905092915050565b7f537765657473706f743a20757365206465706f736974282900000000000000005f82015250565b5f611d3f601883611cfb565b9150611d4a82611d0b565b602082019050919050565b5f6020820190508181035f830152611d6c81611d33565b9050919050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611dad82611d84565b9050919050565b611dbd81611da3565b8114611dc7575f80fd5b50565b5f81359050611dd881611db4565b92915050565b5f60208284031215611df357611df2611d7c565b5b5f611e0084828501611dca565b91505092915050565b611e1281611da3565b82525050565b5f602082019050611e2b5f830184611e09565b92915050565b611e3a81611c6a565b8114611e44575f80fd5b50565b5f81359050611e5581611e31565b92915050565b5f8060408385031215611e7157611e70611d7c565b5b5f611e7e85828601611dca565b9250506020611e8f85828601611e47565b9150509250929050565b5f8060408385031215611eaf57611eae611d7c565b5b5f611ebc85828601611dca565b9250506020611ecd85828601611dca565b9150509250929050565b5f819050919050565b5f611efa611ef5611ef084611d84565b611ed7565b611d84565b9050919050565b5f611f0b82611ee0565b9050919050565b5f611f1c82611f01565b9050919050565b611f2c81611f12565b82525050565b5f602082019050611f455f830184611f23565b92915050565b5f67ffffffffffffffff82169050919050565b611f6781611f4b565b82525050565b5f81519050919050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611f9f82611f6d565b611fa98185611cfb565b9350611fb9818560208601611f77565b611fc281611f85565b840191505092915050565b5f606082019050611fe05f830186611f5e565b611fed6020830185611f5e565b8181036040830152611fff8184611f95565b9050949350505050565b61201281611f4b565b811461201c575f80fd5b50565b5f8135905061202d81612009565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61207182611f85565b810181811067ffffffffffffffff821117156120905761208f61203b565b5b80604052505050565b5f6120a2611d73565b90506120ae8282612068565b919050565b5f67ffffffffffffffff8211156120cd576120cc61203b565b5b6120d682611f85565b9050602081019050919050565b828183375f83830152505050565b5f6121036120fe846120b3565b612099565b90508281526020810184848401111561211f5761211e612037565b5b61212a8482856120e3565b509392505050565b5f82601f83011261214657612145612033565b5b81356121568482602086016120f1565b91505092915050565b5f805f6060848603121561217657612175611d7c565b5b5f6121838682870161201f565b93505060206121948682870161201f565b925050604084013567ffffffffffffffff8111156121b5576121b4611d80565b5b6121c186828701612132565b9150509250925092565b5f805f606084860312156121e2576121e1611d7c565b5b5f6121ef86828701611dca565b935050602061220086828701611dca565b925050604061221186828701611e47565b9150509250925092565b5f80fd5b5f80fd5b5f8083601f84011261223857612237612033565b5b8235905067ffffffffffffffff8111156122555761225461221b565b5b6020830191508360208202830111156122715761227061221f565b5b9250929050565b5f8083601f84011261228d5761228c612033565b5b8235905067ffffffffffffffff8111156122aa576122a961221b565b5b6020830191508360208202830111156122c6576122c561221f565b5b9250929050565b5f805f805f606086880312156122e6576122e5611d7c565b5b5f6122f388828901611dca565b955050602086013567ffffffffffffffff81111561231457612313611d80565b5b61232088828901612223565b9450945050604086013567ffffffffffffffff81111561234357612342611d80565b5b61234f88828901612278565b92509250509295509295909350565b5f61237861237361236e84611f4b565b611ed7565b611c6a565b9050919050565b6123888161235e565b82525050565b5f6060820190506123a15f830186611cd3565b6123ae602083018561237f565b6123bb604083018461237f565b949350505050565b7f4e6f20636c61696d61626c6520616d6f756e74000000000000000000000000005f82015250565b5f6123f7601383611cfb565b9150612402826123c3565b602082019050919050565b5f6020820190508181035f830152612424816123eb565b9050919050565b7f496e73756666696369656e742066756e647320696e206a6172000000000000005f82015250565b5f61245f601983611cfb565b915061246a8261242b565b602082019050919050565b5f6020820190508181035f83015261248c81612453565b9050919050565b5f61249d82611c6a565b91506124a883611c6a565b92508282039050818111156124c0576124bf611c73565b5b92915050565b5f81905092915050565b50565b5f6124de5f836124c6565b91506124e9826124d0565b5f82019050919050565b5f6124fd826124d3565b9150819050919050565b7f4574686572207472616e73666572206661696c656400000000000000000000005f82015250565b5f61253b601583611cfb565b915061254682612507565b602082019050919050565b5f6020820190508181035f8301526125688161252f565b9050919050565b7f496e636f727265637420457468657220616d6f756e74000000000000000000005f82015250565b5f6125a3601683611cfb565b91506125ae8261256f565b602082019050919050565b5f6020820190508181035f8301526125d081612597565b9050919050565b7f4465706f73697420616d6f756e74206d757374206265206772656174657220745f8201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b5f612631602883611cfb565b915061263c826125d7565b604082019050919050565b5f6020820190508181035f83015261265e81612625565b9050919050565b5f819050919050565b5f61268861268361267e84612665565b611ed7565b611f4b565b9050919050565b6126988161266e565b82525050565b5f6020820190506126b15f83018461268f565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806126fb57607f821691505b60208210810361270e5761270d6126b7565b5b50919050565b5f8115159050919050565b61272881612714565b8114612732575f80fd5b50565b5f815190506127438161271f565b92915050565b5f6020828403121561275e5761275d611d7c565b5b5f61276b84828501612735565b91505092915050565b7f43616c6c6572206973206e6f7420616e2061646d696e000000000000000000005f82015250565b5f6127a8601683611cfb565b91506127b382612774565b602082019050919050565b5f6020820190508181035f8301526127d58161279c565b9050919050565b7f53746172742074696d65206d757374206265206265666f726520656e642074695f8201527f6d65000000000000000000000000000000000000000000000000000000000000602082015250565b5f612836602283611cfb565b9150612841826127dc565b604082019050919050565b5f6020820190508181035f8301526128638161282a565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026128c67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261288b565b6128d0868361288b565b95508019841693508086168417925050509392505050565b5f6129026128fd6128f884611c6a565b611ed7565b611c6a565b9050919050565b5f819050919050565b61291b836128e8565b61292f61292782612909565b848454612897565b825550505050565b5f90565b612943612937565b61294e818484612912565b505050565b5b81811015612971576129665f8261293b565b600181019050612954565b5050565b601f8211156129b6576129878161286a565b6129908461287c565b8101602085101561299f578190505b6129b36129ab8561287c565b830182612953565b50505b505050565b5f82821c905092915050565b5f6129d65f19846008026129bb565b1980831691505092915050565b5f6129ee83836129c7565b9150826002028217905092915050565b612a0782611f6d565b67ffffffffffffffff811115612a2057612a1f61203b565b5b612a2a82546126e4565b612a35828285612975565b5f60209050601f831160018114612a66575f8415612a54578287015190505b612a5e85826129e3565b865550612ac5565b601f198416612a748661286a565b5f5b82811015612a9b57848901518255600182019150602085019450602081019050612a76565b86831015612ab85784890151612ab4601f8916826129c7565b8355505b6001600288020188555050505b505050505050565b5f606082019050612ae05f83018661237f565b612aed602083018561237f565b8181036040830152612aff8184611f95565b9050949350505050565b7f5a65726f206164647265737320757365720000000000000000000000000000005f82015250565b5f612b3d601183611cfb565b9150612b4882612b09565b602082019050919050565b5f6020820190508181035f830152612b6a81612b31565b9050919050565b7f4d69736d617463686564206172726179206c656e6774687300000000000000005f82015250565b5f612ba5601883611cfb565b9150612bb082612b71565b602082019050919050565b5f6020820190508181035f830152612bd281612b99565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5769746864726177616c20616d6f756e74206d757374206265206772656174655f8201527f72207468616e207a65726f000000000000000000000000000000000000000000602082015250565b5f612c60602b83611cfb565b9150612c6b82612c06565b604082019050919050565b5f6020820190508181035f830152612c8d81612c54565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f612cc8601283611cfb565b9150612cd382612c94565b602082019050919050565b5f6020820190508181035f830152612cf581612cbc565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612d30601f83611cfb565b9150612d3b82612cfc565b602082019050919050565b5f6020820190508181035f830152612d5d81612d24565b9050919050565b5f604082019050612d775f830185611e09565b612d846020830184611cd3565b9392505050565b5f606082019050612d9e5f830186611e09565b612dab6020830185611e09565b612db86040830184611cd3565b94935050505056fea26469706673582212208523ef908c51dcee6fa87df007e6a606ded81ab694063b67e7b2bc736656fecd64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xB807A3C4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB807A3C4 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xE3E7C1F9 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x429 JUMPI PUSH2 0x1AA JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xA9012C89 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xA9590E8A EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xAEE9C872 EQ PUSH2 0x375 JUMPI PUSH2 0x1AA JUMP JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0x2BB JUMPI PUSH2 0x1AA JUMP JUMPDEST DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x237 JUMPI PUSH2 0x1AA JUMP JUMPDEST CALLDATASIZE PUSH2 0x1AA JUMPI CALLVALUE PUSH1 0x35 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x221 PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0xA64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0xC2E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FB PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST PUSH2 0xD5E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x22CD JUMP JUMPDEST PUSH2 0x11D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1476 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x14FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x459 PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x33 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x4A9 JUMPI POP PUSH1 0x33 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x51E JUMPI TIMESTAMP PUSH1 0x33 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xFA7410D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x238E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x36 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x240D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x653 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x36 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x2493 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x80D JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x784 SWAP1 PUSH2 0x24F3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x839 JUMP JUMPDEST PUSH2 0x838 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17FF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP4 PUSH1 0x40 MLOAD PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x8A7 PUSH2 0x187E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x8B6 PUSH2 0x17B2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x930 JUMPI DUP1 CALLVALUE EQ PUSH2 0x92B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x969 SWAP1 PUSH2 0x2647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x99F CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1887 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA60 PUSH2 0x187E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA6D PUSH2 0x1909 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAB5 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAE8 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xAF6 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xB7A JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xB83 DUP7 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0xB8B PUSH2 0x1944 JUMP JUMPDEST DUP7 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC25 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC1C SWAP2 SWAP1 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC36 PUSH2 0x1956 JUMP JUMPDEST PUSH2 0xC3F PUSH0 PUSH2 0x19DD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x33 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xCA8 SWAP1 PUSH2 0x26E4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCD4 SWAP1 PUSH2 0x26E4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCF6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD33 PUSH2 0x1AAE JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x2749 JUMP JUMPDEST PUSH2 0xE36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2D SWAP1 PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xE8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE83 SWAP1 PUSH2 0x284C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x33 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xF2C SWAP2 SWAP1 PUSH2 0x29FE JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF63 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x101A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x103E SWAP2 SWAP1 PUSH2 0x2749 JUMP JUMPDEST PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1074 SWAP1 PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E2 SWAP1 PUSH2 0x2B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x36 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11C5 SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122C SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1247 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x126B SWAP2 SWAP1 PUSH2 0x2749 JUMP JUMPDEST PUSH2 0x12AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A1 SWAP1 PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x12F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E9 SWAP1 PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x146E JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x1312 JUMPI PUSH2 0x1311 PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x36 PUSH0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x132F JUMPI PUSH2 0x132E PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1344 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x13E6 JUMPI PUSH2 0x13E5 PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13FB SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1445 JUMPI PUSH2 0x1444 PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x1459 SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x12F4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x147E PUSH2 0x1956 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14EE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F7 DUP2 PUSH2 0x19DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1502 PUSH2 0x1956 JUMP JUMPDEST PUSH2 0x150A PUSH2 0x17B2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x154C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1543 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x15CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C3 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1618 SWAP2 SWAP1 PUSH2 0x2493 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1707 JUMPI PUSH0 PUSH2 0x165B PUSH2 0xD29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x167E SWAP1 PUSH2 0x24F3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x16B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1701 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F8 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x173A JUMP JUMPDEST PUSH2 0x1739 PUSH2 0x1712 PUSH2 0xD29 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17FF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1759 PUSH2 0xD29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x179E SWAP2 SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17AE PUSH2 0x187E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x17F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17ED SWAP1 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1879 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1832 SWAP3 SWAP2 SWAP1 PUSH2 0x2D64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1AD5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1903 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x18BC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1AD5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1938 PUSH2 0x1B70 JUMP JUMPDEST PUSH2 0x1941 DUP2 PUSH2 0x1BB0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x194C PUSH2 0x1B70 JUMP JUMPDEST PUSH2 0x1954 PUSH2 0x1C34 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x195E PUSH2 0x1C45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x197C PUSH2 0xD29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19DB JUMPI PUSH2 0x199F PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D2 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x19E6 PUSH2 0x1AAE JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1AF4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1B0D JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1B28 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1B6A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B61 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1B78 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x1BAE JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1BB8 PUSH2 0x1B70 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C28 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1F SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C31 DUP2 PUSH2 0x19DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C3C PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1C55 PUSH2 0x1909 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CAA DUP3 PUSH2 0x1C6A JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB5 DUP4 PUSH2 0x1C6A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CCD JUMPI PUSH2 0x1CCC PUSH2 0x1C73 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CDC DUP2 PUSH2 0x1C6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537765657473706F743A20757365206465706F73697428290000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3F PUSH1 0x18 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4A DUP3 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D6C DUP2 PUSH2 0x1D33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAD DUP3 PUSH2 0x1D84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DBD DUP2 PUSH2 0x1DA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DC7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DD8 DUP2 PUSH2 0x1DB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF3 JUMPI PUSH2 0x1DF2 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E00 DUP5 DUP3 DUP6 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E12 DUP2 PUSH2 0x1DA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E2B PUSH0 DUP4 ADD DUP5 PUSH2 0x1E09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E3A DUP2 PUSH2 0x1C6A JUMP JUMPDEST DUP2 EQ PUSH2 0x1E44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E55 DUP2 PUSH2 0x1E31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E71 JUMPI PUSH2 0x1E70 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E7E DUP6 DUP3 DUP7 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E8F DUP6 DUP3 DUP7 ADD PUSH2 0x1E47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAF JUMPI PUSH2 0x1EAE PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EBC DUP6 DUP3 DUP7 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ECD DUP6 DUP3 DUP7 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EFA PUSH2 0x1EF5 PUSH2 0x1EF0 DUP5 PUSH2 0x1D84 JUMP JUMPDEST PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x1D84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0B DUP3 PUSH2 0x1EE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F1C DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2C DUP2 PUSH2 0x1F12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F45 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F67 DUP2 PUSH2 0x1F4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9F DUP3 PUSH2 0x1F6D JUMP JUMPDEST PUSH2 0x1FA9 DUP2 DUP6 PUSH2 0x1CFB JUMP JUMPDEST SWAP4 POP PUSH2 0x1FB9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x1FC2 DUP2 PUSH2 0x1F85 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FE0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x1FED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F5E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1FFF DUP2 DUP5 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2012 DUP2 PUSH2 0x1F4B JUMP JUMPDEST DUP2 EQ PUSH2 0x201C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x202D DUP2 PUSH2 0x2009 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2071 DUP3 PUSH2 0x1F85 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2090 JUMPI PUSH2 0x208F PUSH2 0x203B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20A2 PUSH2 0x1D73 JUMP JUMPDEST SWAP1 POP PUSH2 0x20AE DUP3 DUP3 PUSH2 0x2068 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20CD JUMPI PUSH2 0x20CC PUSH2 0x203B JUMP JUMPDEST JUMPDEST PUSH2 0x20D6 DUP3 PUSH2 0x1F85 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2103 PUSH2 0x20FE DUP5 PUSH2 0x20B3 JUMP JUMPDEST PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x211F JUMPI PUSH2 0x211E PUSH2 0x2037 JUMP JUMPDEST JUMPDEST PUSH2 0x212A DUP5 DUP3 DUP6 PUSH2 0x20E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2146 JUMPI PUSH2 0x2145 PUSH2 0x2033 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2156 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2176 JUMPI PUSH2 0x2175 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2183 DUP7 DUP3 DUP8 ADD PUSH2 0x201F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2194 DUP7 DUP3 DUP8 ADD PUSH2 0x201F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21B5 JUMPI PUSH2 0x21B4 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH2 0x21C1 DUP7 DUP3 DUP8 ADD PUSH2 0x2132 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21E2 JUMPI PUSH2 0x21E1 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21EF DUP7 DUP3 DUP8 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2200 DUP7 DUP3 DUP8 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2211 DUP7 DUP3 DUP8 ADD PUSH2 0x1E47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2238 JUMPI PUSH2 0x2237 PUSH2 0x2033 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2255 JUMPI PUSH2 0x2254 PUSH2 0x221B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2271 JUMPI PUSH2 0x2270 PUSH2 0x221F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x228D JUMPI PUSH2 0x228C PUSH2 0x2033 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22AA JUMPI PUSH2 0x22A9 PUSH2 0x221B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x22C6 JUMPI PUSH2 0x22C5 PUSH2 0x221F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22E6 JUMPI PUSH2 0x22E5 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22F3 DUP9 DUP3 DUP10 ADD PUSH2 0x1DCA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2314 JUMPI PUSH2 0x2313 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH2 0x2320 DUP9 DUP3 DUP10 ADD PUSH2 0x2223 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2343 JUMPI PUSH2 0x2342 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH2 0x234F DUP9 DUP3 DUP10 ADD PUSH2 0x2278 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x2378 PUSH2 0x2373 PUSH2 0x236E DUP5 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x1C6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2388 DUP2 PUSH2 0x235E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23A1 PUSH0 DUP4 ADD DUP7 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0x23AE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x237F JUMP JUMPDEST PUSH2 0x23BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x237F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23F7 PUSH1 0x13 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2402 DUP3 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2424 DUP2 PUSH2 0x23EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x245F PUSH1 0x19 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x246A DUP3 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x248C DUP2 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x249D DUP3 PUSH2 0x1C6A JUMP JUMPDEST SWAP2 POP PUSH2 0x24A8 DUP4 PUSH2 0x1C6A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x24C0 JUMPI PUSH2 0x24BF PUSH2 0x1C73 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x24DE PUSH0 DUP4 PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 DUP3 PUSH2 0x24D0 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24FD DUP3 PUSH2 0x24D3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x253B PUSH1 0x15 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2546 DUP3 PUSH2 0x2507 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2568 DUP2 PUSH2 0x252F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420457468657220616D6F756E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25A3 PUSH1 0x16 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x25AE DUP3 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25D0 DUP2 PUSH2 0x2597 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2631 PUSH1 0x28 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x263C DUP3 PUSH2 0x25D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x265E DUP2 PUSH2 0x2625 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2688 PUSH2 0x2683 PUSH2 0x267E DUP5 PUSH2 0x2665 JUMP JUMPDEST PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x1F4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2698 DUP2 PUSH2 0x266E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26B1 PUSH0 DUP4 ADD DUP5 PUSH2 0x268F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x26FB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x270E JUMPI PUSH2 0x270D PUSH2 0x26B7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2728 DUP2 PUSH2 0x2714 JUMP JUMPDEST DUP2 EQ PUSH2 0x2732 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2743 DUP2 PUSH2 0x271F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x275E JUMPI PUSH2 0x275D PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x276B DUP5 DUP3 DUP6 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27A8 PUSH1 0x16 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x27B3 DUP3 PUSH2 0x2774 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27D5 DUP2 PUSH2 0x279C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2836 PUSH1 0x22 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2841 DUP3 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2863 DUP2 PUSH2 0x282A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x28C6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x288B JUMP JUMPDEST PUSH2 0x28D0 DUP7 DUP4 PUSH2 0x288B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2902 PUSH2 0x28FD PUSH2 0x28F8 DUP5 PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x1C6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x291B DUP4 PUSH2 0x28E8 JUMP JUMPDEST PUSH2 0x292F PUSH2 0x2927 DUP3 PUSH2 0x2909 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2897 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2943 PUSH2 0x2937 JUMP JUMPDEST PUSH2 0x294E DUP2 DUP5 DUP5 PUSH2 0x2912 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2971 JUMPI PUSH2 0x2966 PUSH0 DUP3 PUSH2 0x293B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2954 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x29B6 JUMPI PUSH2 0x2987 DUP2 PUSH2 0x286A JUMP JUMPDEST PUSH2 0x2990 DUP5 PUSH2 0x287C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x299F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x29B3 PUSH2 0x29AB DUP6 PUSH2 0x287C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2953 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29D6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x29BB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29EE DUP4 DUP4 PUSH2 0x29C7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A07 DUP3 PUSH2 0x1F6D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A20 JUMPI PUSH2 0x2A1F PUSH2 0x203B JUMP JUMPDEST JUMPDEST PUSH2 0x2A2A DUP3 SLOAD PUSH2 0x26E4 JUMP JUMPDEST PUSH2 0x2A35 DUP3 DUP3 DUP6 PUSH2 0x2975 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2A66 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2A54 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2A5E DUP6 DUP3 PUSH2 0x29E3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2AC5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2A74 DUP7 PUSH2 0x286A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2A9B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A76 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2AB8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2AB4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x29C7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2AE0 PUSH0 DUP4 ADD DUP7 PUSH2 0x237F JUMP JUMPDEST PUSH2 0x2AED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x237F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2AFF DUP2 DUP5 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F20616464726573732075736572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B3D PUSH1 0x11 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2B48 DUP3 PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B6A DUP2 PUSH2 0x2B31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BA5 PUSH1 0x18 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2BB0 DUP3 PUSH2 0x2B71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BD2 DUP2 PUSH2 0x2B99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C60 PUSH1 0x2B DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2C6B DUP3 PUSH2 0x2C06 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C8D DUP2 PUSH2 0x2C54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CC8 PUSH1 0x12 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD3 DUP3 PUSH2 0x2C94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CF5 DUP2 PUSH2 0x2CBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D30 PUSH1 0x1F DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2D3B DUP3 PUSH2 0x2CFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D5D DUP2 PUSH2 0x2D24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D77 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x2D84 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CD3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D9E PUSH0 DUP4 ADD DUP7 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x2DAB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x2DB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CD3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0x23 0xEF SWAP1 DUP13 MLOAD 0xDC 0xEE PUSH16 0xA87DF007E6A606DED81AB694063B67E7 0xB2 0xBC PUSH20 0x6656FECD64736F6C634300081A00330000000000 ",
							"sourceMap": "454:6250:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6470:9;6439:13;:27;613:1;6439:27;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;613:1;6495:44;;6503:10;6495:44;;;6529:9;6495:44;;;;;;:::i;:::-;;;;;;;;454:6250;;6659:34;;;;;;;;;;:::i;:::-;;;;;;;;2971:932;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;566:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2412:474;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1977:217;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;622:21:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;883:25;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5261:278:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1097:69;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;999:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4135:261;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4495:517;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5744:578:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2971:932;2526:21:2;:19;:21::i;:::-;3066:12:13::1;:18;;;;;;;;;;;;3048:36;;:15;:36;:74;;;;3106:12;:16;;;;;;;;;;;;3088:34;;:15;:34;3048:74;3044:183;;;3161:15;3178:12;:18;;;;;;;;;;;;3198:12;:16;;;;;;;;;;;;3146:69;;;;;;;;;;;;;:::i;:::-;;;;;;;;3044:183;3239:25;3267:14;:26;3282:10;3267:26;;;;;;;;;;;;;;;:33;3294:5;3267:33;;;;;;;;;;;;;;;;3239:61;;3339:1;3319:17;:21;3311:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3407:17;3383:13;:20;3397:5;3383:20;;;;;;;;;;;;;;;;:41;;3375:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3503:1;3467:14;:26;3482:10;3467:26;;;;;;;;;;;;;;;:33;3494:5;3467:33;;;;;;;;;;;;;;;:37;;;;3539:17;3515:13;:20;3529:5;3515:20;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;613:1;3573:21;;:5;:21;;::::0;3569:264:::1;;3612:12;3630:10;:15;;3653:17;3630:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3611:64;;;3698:7;3690:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3596:147;3569:264;;;3764:57;3791:10;3803:17;3771:5;3764:26;;;;:57;;;;;:::i;:::-;3569:264;3870:5;3850:45;;3858:10;3850:45;;;3877:17;3850:45;;;;;;:::i;:::-;;;;;;;;3023:880;2568:20:2::0;:18;:20::i;:::-;2971:932:13;:::o;566:49::-;613:1;566:49;:::o;2412:474::-;2526:21:2;:19;:21::i;:::-;613:1:13::1;2506:21;;:5;:21;;::::0;2502:284:::1;;2565:6;2552:9;:19;2544:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2502:284;;;2648:1;2639:6;:10;2631:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2709:65;2740:10;2760:4;2767:6;2716:5;2709:30;;;;:65;;;;;;:::i;:::-;2502:284;2822:6;2798:13;:20;2812:5;2798:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;2864:5;2844:34;;2852:10;2844:34;;;2871:6;2844:34;;;;;;:::i;:::-;;;;;;;;2568:20:2::0;:18;:20::i;:::-;2412:474:13;;:::o;1977:217::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;2061:21:13::1;2076:5;2061:14;:21::i;:::-;2126:24;:22;:24::i;:::-;2178:7;2161:6;;:25;;;;;;;;;;;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1977:217:13;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;622:21:13:-;;;;;;;;;;;;;:::o;883:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;5261:278:13:-;1725:6;;;;;;;;;;;:14;;;1740:10;1725:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5380:3:::1;5372:11;;:5;:11;;;5364:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;5448:30;;;;;;;;5454:5;5448:30;;;;;;5461:3;5448:30;;;;;;5466:11;5448:30;;::::0;5433:12:::1;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;5494:37;5507:5;5514:3;5519:11;5494:37;;;;;;;;:::i;:::-;;;;;;;;5261:278:::0;;;:::o;1097:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;999:48::-;;;;;;;;;;;;;;;;;:::o;4135:261::-;1725:6;;;;;;;;;;;:14;;;1740:10;1725:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4260:1:::1;4244:18;;:4;:18;;::::0;4236:48:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4325:6;4295:14;:20;4310:4;4295:20;;;;;;;;;;;;;;;:27;4316:5;4295:27;;;;;;;;;;;;;;;:36;;;;4374:5;4347:41;;4368:4;4347:41;;;4381:6;4347:41;;;;;;:::i;:::-;;;;;;;;4135:261:::0;;;:::o;4495:517::-;1725:6;;;;;;;;;;;:14;;;1740:10;1725:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4682:7:::1;;:14;;4666:5;;:12;;:30;4658:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4741:9;4736:269;4760:5;;:12;;4756:1;:16;4736:269;;;4914:7;;4922:1;4914:10;;;;;;;:::i;:::-;;;;;;;;4880:14;:24;4895:5;;4901:1;4895:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4880:24;;;;;;;;;;;;;;;:31;4905:5;4880:31;;;;;;;;;;;;;;;:44;;;;4975:5;4944:49;;4965:5;;4971:1;4965:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4944:49;;;4982:7;;4990:1;4982:10;;;;;;;:::i;:::-;;;;;;;;4944:49;;;;;;:::i;:::-;;;;;;;;4774:3;;;;;;;4736:269;;;;4495:517:::0;;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;5744:578:13:-;2334:13:0;:11;:13::i;:::-;2526:21:2::1;:19;:21::i;:::-;5854:1:13::2;5845:6;:10;5837:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5946:6;5922:13;:20;5936:5;5922:20;;;;;;;;;;;;;;;;:30;;5914:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;6012:6;5988:13;:20;6002:5;5988:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;613:1;6035:21;;:5;:21;;::::0;6031:236:::2;;6074:12;6092:7;:5;:7::i;:::-;:12;;6112:6;6092:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6073:50;;;6146:7;6138:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;6058:133;6031:236;;;6212:43;6239:7;:5;:7::i;:::-;6248:6;6219:5;6212:26;;;;:43;;;;;:::i;:::-;6031:236;6300:5;6282:32;;6291:7;:5;:7::i;:::-;6282:32;;;6307:6;6282:32;;;;;;:::i;:::-;;;;;;;;2568:20:2::1;:18;:20::i;:::-;5744:578:13::0;;:::o;2601:287:2:-;1851:1;2733:7;;:19;2725:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1851:1;2863:7;:18;;;;2601:287::o;1271:160:8:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;2894:209:2:-;1808:1;3074:7;:22;;;;2894:209::o;1670:188:8:-;1770:81;1790:5;1812;:18;;;1833:4;1839:2;1843:5;1797:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1889:111:2:-;6931:20:1;:18;:20::i;:::-;1959:34:2::1;:32;:34::i;:::-;1889:111::o:0;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;7738:720:8:-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;2006:109:2:-;6931:20:1;:18;:20::i;:::-;1808:1:2::1;2086:7;:22;;;;2006:109::o:0;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;7:77:14:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;473:118::-;560:24;578:5;560:24;:::i;:::-;555:3;548:37;473:118;;:::o;597:222::-;690:4;728:2;717:9;713:18;705:26;;741:71;809:1;798:9;794:17;785:6;741:71;:::i;:::-;597:222;;;;:::o;825:169::-;909:11;943:6;938:3;931:19;983:4;978:3;974:14;959:29;;825:169;;;;:::o;1000:174::-;1140:26;1136:1;1128:6;1124:14;1117:50;1000:174;:::o;1180:366::-;1322:3;1343:67;1407:2;1402:3;1343:67;:::i;:::-;1336:74;;1419:93;1508:3;1419:93;:::i;:::-;1537:2;1532:3;1528:12;1521:19;;1180:366;;;:::o;1552:419::-;1718:4;1756:2;1745:9;1741:18;1733:26;;1805:9;1799:4;1795:20;1791:1;1780:9;1776:17;1769:47;1833:131;1959:4;1833:131;:::i;:::-;1825:139;;1552:419;;;:::o;1977:75::-;2010:6;2043:2;2037:9;2027:19;;1977:75;:::o;2058:117::-;2167:1;2164;2157:12;2181:117;2290:1;2287;2280:12;2304:126;2341:7;2381:42;2374:5;2370:54;2359:65;;2304:126;;;:::o;2436:96::-;2473:7;2502:24;2520:5;2502:24;:::i;:::-;2491:35;;2436:96;;;:::o;2538:122::-;2611:24;2629:5;2611:24;:::i;:::-;2604:5;2601:35;2591:63;;2650:1;2647;2640:12;2591:63;2538:122;:::o;2666:139::-;2712:5;2750:6;2737:20;2728:29;;2766:33;2793:5;2766:33;:::i;:::-;2666:139;;;;:::o;2811:329::-;2870:6;2919:2;2907:9;2898:7;2894:23;2890:32;2887:119;;;2925:79;;:::i;:::-;2887:119;3045:1;3070:53;3115:7;3106:6;3095:9;3091:22;3070:53;:::i;:::-;3060:63;;3016:117;2811:329;;;;:::o;3146:118::-;3233:24;3251:5;3233:24;:::i;:::-;3228:3;3221:37;3146:118;;:::o;3270:222::-;3363:4;3401:2;3390:9;3386:18;3378:26;;3414:71;3482:1;3471:9;3467:17;3458:6;3414:71;:::i;:::-;3270:222;;;;:::o;3498:122::-;3571:24;3589:5;3571:24;:::i;:::-;3564:5;3561:35;3551:63;;3610:1;3607;3600:12;3551:63;3498:122;:::o;3626:139::-;3672:5;3710:6;3697:20;3688:29;;3726:33;3753:5;3726:33;:::i;:::-;3626:139;;;;:::o;3771:474::-;3839:6;3847;3896:2;3884:9;3875:7;3871:23;3867:32;3864:119;;;3902:79;;:::i;:::-;3864:119;4022:1;4047:53;4092:7;4083:6;4072:9;4068:22;4047:53;:::i;:::-;4037:63;;3993:117;4149:2;4175:53;4220:7;4211:6;4200:9;4196:22;4175:53;:::i;:::-;4165:63;;4120:118;3771:474;;;;;:::o;4251:::-;4319:6;4327;4376:2;4364:9;4355:7;4351:23;4347:32;4344:119;;;4382:79;;:::i;:::-;4344:119;4502:1;4527:53;4572:7;4563:6;4552:9;4548:22;4527:53;:::i;:::-;4517:63;;4473:117;4629:2;4655:53;4700:7;4691:6;4680:9;4676:22;4655:53;:::i;:::-;4645:63;;4600:118;4251:474;;;;;:::o;4731:60::-;4759:3;4780:5;4773:12;;4731:60;;;:::o;4797:142::-;4847:9;4880:53;4898:34;4907:24;4925:5;4907:24;:::i;:::-;4898:34;:::i;:::-;4880:53;:::i;:::-;4867:66;;4797:142;;;:::o;4945:126::-;4995:9;5028:37;5059:5;5028:37;:::i;:::-;5015:50;;4945:126;;;:::o;5077:142::-;5143:9;5176:37;5207:5;5176:37;:::i;:::-;5163:50;;5077:142;;;:::o;5225:163::-;5328:53;5375:5;5328:53;:::i;:::-;5323:3;5316:66;5225:163;;:::o;5394:254::-;5503:4;5541:2;5530:9;5526:18;5518:26;;5554:87;5638:1;5627:9;5623:17;5614:6;5554:87;:::i;:::-;5394:254;;;;:::o;5654:101::-;5690:7;5730:18;5723:5;5719:30;5708:41;;5654:101;;;:::o;5761:115::-;5846:23;5863:5;5846:23;:::i;:::-;5841:3;5834:36;5761:115;;:::o;5882:99::-;5934:6;5968:5;5962:12;5952:22;;5882:99;;;:::o;5987:139::-;6076:6;6071:3;6066;6060:23;6117:1;6108:6;6103:3;6099:16;6092:27;5987:139;;;:::o;6132:102::-;6173:6;6224:2;6220:7;6215:2;6208:5;6204:14;6200:28;6190:38;;6132:102;;;:::o;6240:377::-;6328:3;6356:39;6389:5;6356:39;:::i;:::-;6411:71;6475:6;6470:3;6411:71;:::i;:::-;6404:78;;6491:65;6549:6;6544:3;6537:4;6530:5;6526:16;6491:65;:::i;:::-;6581:29;6603:6;6581:29;:::i;:::-;6576:3;6572:39;6565:46;;6332:285;6240:377;;;;:::o;6623:525::-;6788:4;6826:2;6815:9;6811:18;6803:26;;6839:69;6905:1;6894:9;6890:17;6881:6;6839:69;:::i;:::-;6918:70;6984:2;6973:9;6969:18;6960:6;6918:70;:::i;:::-;7035:9;7029:4;7025:20;7020:2;7009:9;7005:18;6998:48;7063:78;7136:4;7127:6;7063:78;:::i;:::-;7055:86;;6623:525;;;;;;:::o;7154:120::-;7226:23;7243:5;7226:23;:::i;:::-;7219:5;7216:34;7206:62;;7264:1;7261;7254:12;7206:62;7154:120;:::o;7280:137::-;7325:5;7363:6;7350:20;7341:29;;7379:32;7405:5;7379:32;:::i;:::-;7280:137;;;;:::o;7423:117::-;7532:1;7529;7522:12;7546:117;7655:1;7652;7645:12;7669:180;7717:77;7714:1;7707:88;7814:4;7811:1;7804:15;7838:4;7835:1;7828:15;7855:281;7938:27;7960:4;7938:27;:::i;:::-;7930:6;7926:40;8068:6;8056:10;8053:22;8032:18;8020:10;8017:34;8014:62;8011:88;;;8079:18;;:::i;:::-;8011:88;8119:10;8115:2;8108:22;7898:238;7855:281;;:::o;8142:129::-;8176:6;8203:20;;:::i;:::-;8193:30;;8232:33;8260:4;8252:6;8232:33;:::i;:::-;8142:129;;;:::o;8277:308::-;8339:4;8429:18;8421:6;8418:30;8415:56;;;8451:18;;:::i;:::-;8415:56;8489:29;8511:6;8489:29;:::i;:::-;8481:37;;8573:4;8567;8563:15;8555:23;;8277:308;;;:::o;8591:148::-;8689:6;8684:3;8679;8666:30;8730:1;8721:6;8716:3;8712:16;8705:27;8591:148;;;:::o;8745:425::-;8823:5;8848:66;8864:49;8906:6;8864:49;:::i;:::-;8848:66;:::i;:::-;8839:75;;8937:6;8930:5;8923:21;8975:4;8968:5;8964:16;9013:3;9004:6;8999:3;8995:16;8992:25;8989:112;;;9020:79;;:::i;:::-;8989:112;9110:54;9157:6;9152:3;9147;9110:54;:::i;:::-;8829:341;8745:425;;;;;:::o;9190:340::-;9246:5;9295:3;9288:4;9280:6;9276:17;9272:27;9262:122;;9303:79;;:::i;:::-;9262:122;9420:6;9407:20;9445:79;9520:3;9512:6;9505:4;9497:6;9493:17;9445:79;:::i;:::-;9436:88;;9252:278;9190:340;;;;:::o;9536:795::-;9621:6;9629;9637;9686:2;9674:9;9665:7;9661:23;9657:32;9654:119;;;9692:79;;:::i;:::-;9654:119;9812:1;9837:52;9881:7;9872:6;9861:9;9857:22;9837:52;:::i;:::-;9827:62;;9783:116;9938:2;9964:52;10008:7;9999:6;9988:9;9984:22;9964:52;:::i;:::-;9954:62;;9909:117;10093:2;10082:9;10078:18;10065:32;10124:18;10116:6;10113:30;10110:117;;;10146:79;;:::i;:::-;10110:117;10251:63;10306:7;10297:6;10286:9;10282:22;10251:63;:::i;:::-;10241:73;;10036:288;9536:795;;;;;:::o;10337:619::-;10414:6;10422;10430;10479:2;10467:9;10458:7;10454:23;10450:32;10447:119;;;10485:79;;:::i;:::-;10447:119;10605:1;10630:53;10675:7;10666:6;10655:9;10651:22;10630:53;:::i;:::-;10620:63;;10576:117;10732:2;10758:53;10803:7;10794:6;10783:9;10779:22;10758:53;:::i;:::-;10748:63;;10703:118;10860:2;10886:53;10931:7;10922:6;10911:9;10907:22;10886:53;:::i;:::-;10876:63;;10831:118;10337:619;;;;;:::o;10962:117::-;11071:1;11068;11061:12;11085:117;11194:1;11191;11184:12;11225:568;11298:8;11308:6;11358:3;11351:4;11343:6;11339:17;11335:27;11325:122;;11366:79;;:::i;:::-;11325:122;11479:6;11466:20;11456:30;;11509:18;11501:6;11498:30;11495:117;;;11531:79;;:::i;:::-;11495:117;11645:4;11637:6;11633:17;11621:29;;11699:3;11691:4;11683:6;11679:17;11669:8;11665:32;11662:41;11659:128;;;11706:79;;:::i;:::-;11659:128;11225:568;;;;;:::o;11816:::-;11889:8;11899:6;11949:3;11942:4;11934:6;11930:17;11926:27;11916:122;;11957:79;;:::i;:::-;11916:122;12070:6;12057:20;12047:30;;12100:18;12092:6;12089:30;12086:117;;;12122:79;;:::i;:::-;12086:117;12236:4;12228:6;12224:17;12212:29;;12290:3;12282:4;12274:6;12270:17;12260:8;12256:32;12253:41;12250:128;;;12297:79;;:::i;:::-;12250:128;11816:568;;;;;:::o;12390:1079::-;12521:6;12529;12537;12545;12553;12602:2;12590:9;12581:7;12577:23;12573:32;12570:119;;;12608:79;;:::i;:::-;12570:119;12728:1;12753:53;12798:7;12789:6;12778:9;12774:22;12753:53;:::i;:::-;12743:63;;12699:117;12883:2;12872:9;12868:18;12855:32;12914:18;12906:6;12903:30;12900:117;;;12936:79;;:::i;:::-;12900:117;13049:80;13121:7;13112:6;13101:9;13097:22;13049:80;:::i;:::-;13031:98;;;;12826:313;13206:2;13195:9;13191:18;13178:32;13237:18;13229:6;13226:30;13223:117;;;13259:79;;:::i;:::-;13223:117;13372:80;13444:7;13435:6;13424:9;13420:22;13372:80;:::i;:::-;13354:98;;;;13149:313;12390:1079;;;;;;;;:::o;13475:140::-;13524:9;13557:52;13575:33;13584:23;13601:5;13584:23;:::i;:::-;13575:33;:::i;:::-;13557:52;:::i;:::-;13544:65;;13475:140;;;:::o;13621:129::-;13707:36;13737:5;13707:36;:::i;:::-;13702:3;13695:49;13621:129;;:::o;13756:438::-;13903:4;13941:2;13930:9;13926:18;13918:26;;13954:71;14022:1;14011:9;14007:17;13998:6;13954:71;:::i;:::-;14035;14102:2;14091:9;14087:18;14078:6;14035:71;:::i;:::-;14116;14183:2;14172:9;14168:18;14159:6;14116:71;:::i;:::-;13756:438;;;;;;:::o;14200:169::-;14340:21;14336:1;14328:6;14324:14;14317:45;14200:169;:::o;14375:366::-;14517:3;14538:67;14602:2;14597:3;14538:67;:::i;:::-;14531:74;;14614:93;14703:3;14614:93;:::i;:::-;14732:2;14727:3;14723:12;14716:19;;14375:366;;;:::o;14747:419::-;14913:4;14951:2;14940:9;14936:18;14928:26;;15000:9;14994:4;14990:20;14986:1;14975:9;14971:17;14964:47;15028:131;15154:4;15028:131;:::i;:::-;15020:139;;14747:419;;;:::o;15172:175::-;15312:27;15308:1;15300:6;15296:14;15289:51;15172:175;:::o;15353:366::-;15495:3;15516:67;15580:2;15575:3;15516:67;:::i;:::-;15509:74;;15592:93;15681:3;15592:93;:::i;:::-;15710:2;15705:3;15701:12;15694:19;;15353:366;;;:::o;15725:419::-;15891:4;15929:2;15918:9;15914:18;15906:26;;15978:9;15972:4;15968:20;15964:1;15953:9;15949:17;15942:47;16006:131;16132:4;16006:131;:::i;:::-;15998:139;;15725:419;;;:::o;16150:194::-;16190:4;16210:20;16228:1;16210:20;:::i;:::-;16205:25;;16244:20;16262:1;16244:20;:::i;:::-;16239:25;;16288:1;16285;16281:9;16273:17;;16312:1;16306:4;16303:11;16300:37;;;16317:18;;:::i;:::-;16300:37;16150:194;;;;:::o;16350:147::-;16451:11;16488:3;16473:18;;16350:147;;;;:::o;16503:114::-;;:::o;16623:398::-;16782:3;16803:83;16884:1;16879:3;16803:83;:::i;:::-;16796:90;;16895:93;16984:3;16895:93;:::i;:::-;17013:1;17008:3;17004:11;16997:18;;16623:398;;;:::o;17027:379::-;17211:3;17233:147;17376:3;17233:147;:::i;:::-;17226:154;;17397:3;17390:10;;17027:379;;;:::o;17412:171::-;17552:23;17548:1;17540:6;17536:14;17529:47;17412:171;:::o;17589:366::-;17731:3;17752:67;17816:2;17811:3;17752:67;:::i;:::-;17745:74;;17828:93;17917:3;17828:93;:::i;:::-;17946:2;17941:3;17937:12;17930:19;;17589:366;;;:::o;17961:419::-;18127:4;18165:2;18154:9;18150:18;18142:26;;18214:9;18208:4;18204:20;18200:1;18189:9;18185:17;18178:47;18242:131;18368:4;18242:131;:::i;:::-;18234:139;;17961:419;;;:::o;18386:172::-;18526:24;18522:1;18514:6;18510:14;18503:48;18386:172;:::o;18564:366::-;18706:3;18727:67;18791:2;18786:3;18727:67;:::i;:::-;18720:74;;18803:93;18892:3;18803:93;:::i;:::-;18921:2;18916:3;18912:12;18905:19;;18564:366;;;:::o;18936:419::-;19102:4;19140:2;19129:9;19125:18;19117:26;;19189:9;19183:4;19179:20;19175:1;19164:9;19160:17;19153:47;19217:131;19343:4;19217:131;:::i;:::-;19209:139;;18936:419;;;:::o;19361:227::-;19501:34;19497:1;19489:6;19485:14;19478:58;19570:10;19565:2;19557:6;19553:15;19546:35;19361:227;:::o;19594:366::-;19736:3;19757:67;19821:2;19816:3;19757:67;:::i;:::-;19750:74;;19833:93;19922:3;19833:93;:::i;:::-;19951:2;19946:3;19942:12;19935:19;;19594:366;;;:::o;19966:419::-;20132:4;20170:2;20159:9;20155:18;20147:26;;20219:9;20213:4;20209:20;20205:1;20194:9;20190:17;20183:47;20247:131;20373:4;20247:131;:::i;:::-;20239:139;;19966:419;;;:::o;20391:85::-;20436:7;20465:5;20454:16;;20391:85;;;:::o;20482:156::-;20539:9;20572:60;20589:42;20598:32;20624:5;20598:32;:::i;:::-;20589:42;:::i;:::-;20572:60;:::i;:::-;20559:73;;20482:156;;;:::o;20644:145::-;20738:44;20776:5;20738:44;:::i;:::-;20733:3;20726:57;20644:145;;:::o;20795:236::-;20895:4;20933:2;20922:9;20918:18;20910:26;;20946:78;21021:1;21010:9;21006:17;20997:6;20946:78;:::i;:::-;20795:236;;;;:::o;21037:180::-;21085:77;21082:1;21075:88;21182:4;21179:1;21172:15;21206:4;21203:1;21196:15;21223:320;21267:6;21304:1;21298:4;21294:12;21284:22;;21351:1;21345:4;21341:12;21372:18;21362:81;;21428:4;21420:6;21416:17;21406:27;;21362:81;21490:2;21482:6;21479:14;21459:18;21456:38;21453:84;;21509:18;;:::i;:::-;21453:84;21274:269;21223:320;;;:::o;21549:90::-;21583:7;21626:5;21619:13;21612:21;21601:32;;21549:90;;;:::o;21645:116::-;21715:21;21730:5;21715:21;:::i;:::-;21708:5;21705:32;21695:60;;21751:1;21748;21741:12;21695:60;21645:116;:::o;21767:137::-;21821:5;21852:6;21846:13;21837:22;;21868:30;21892:5;21868:30;:::i;:::-;21767:137;;;;:::o;21910:345::-;21977:6;22026:2;22014:9;22005:7;22001:23;21997:32;21994:119;;;22032:79;;:::i;:::-;21994:119;22152:1;22177:61;22230:7;22221:6;22210:9;22206:22;22177:61;:::i;:::-;22167:71;;22123:125;21910:345;;;;:::o;22261:172::-;22401:24;22397:1;22389:6;22385:14;22378:48;22261:172;:::o;22439:366::-;22581:3;22602:67;22666:2;22661:3;22602:67;:::i;:::-;22595:74;;22678:93;22767:3;22678:93;:::i;:::-;22796:2;22791:3;22787:12;22780:19;;22439:366;;;:::o;22811:419::-;22977:4;23015:2;23004:9;23000:18;22992:26;;23064:9;23058:4;23054:20;23050:1;23039:9;23035:17;23028:47;23092:131;23218:4;23092:131;:::i;:::-;23084:139;;22811:419;;;:::o;23236:221::-;23376:34;23372:1;23364:6;23360:14;23353:58;23445:4;23440:2;23432:6;23428:15;23421:29;23236:221;:::o;23463:366::-;23605:3;23626:67;23690:2;23685:3;23626:67;:::i;:::-;23619:74;;23702:93;23791:3;23702:93;:::i;:::-;23820:2;23815:3;23811:12;23804:19;;23463:366;;;:::o;23835:419::-;24001:4;24039:2;24028:9;24024:18;24016:26;;24088:9;24082:4;24078:20;24074:1;24063:9;24059:17;24052:47;24116:131;24242:4;24116:131;:::i;:::-;24108:139;;23835:419;;;:::o;24260:141::-;24309:4;24332:3;24324:11;;24355:3;24352:1;24345:14;24389:4;24386:1;24376:18;24368:26;;24260:141;;;:::o;24407:93::-;24444:6;24491:2;24486;24479:5;24475:14;24471:23;24461:33;;24407:93;;;:::o;24506:107::-;24550:8;24600:5;24594:4;24590:16;24569:37;;24506:107;;;;:::o;24619:393::-;24688:6;24738:1;24726:10;24722:18;24761:97;24791:66;24780:9;24761:97;:::i;:::-;24879:39;24909:8;24898:9;24879:39;:::i;:::-;24867:51;;24951:4;24947:9;24940:5;24936:21;24927:30;;25000:4;24990:8;24986:19;24979:5;24976:30;24966:40;;24695:317;;24619:393;;;;;:::o;25018:142::-;25068:9;25101:53;25119:34;25128:24;25146:5;25128:24;:::i;:::-;25119:34;:::i;:::-;25101:53;:::i;:::-;25088:66;;25018:142;;;:::o;25166:75::-;25209:3;25230:5;25223:12;;25166:75;;;:::o;25247:269::-;25357:39;25388:7;25357:39;:::i;:::-;25418:91;25467:41;25491:16;25467:41;:::i;:::-;25459:6;25452:4;25446:11;25418:91;:::i;:::-;25412:4;25405:105;25323:193;25247:269;;;:::o;25522:73::-;25567:3;25522:73;:::o;25601:189::-;25678:32;;:::i;:::-;25719:65;25777:6;25769;25763:4;25719:65;:::i;:::-;25654:136;25601:189;;:::o;25796:186::-;25856:120;25873:3;25866:5;25863:14;25856:120;;;25927:39;25964:1;25957:5;25927:39;:::i;:::-;25900:1;25893:5;25889:13;25880:22;;25856:120;;;25796:186;;:::o;25988:543::-;26089:2;26084:3;26081:11;26078:446;;;26123:38;26155:5;26123:38;:::i;:::-;26207:29;26225:10;26207:29;:::i;:::-;26197:8;26193:44;26390:2;26378:10;26375:18;26372:49;;;26411:8;26396:23;;26372:49;26434:80;26490:22;26508:3;26490:22;:::i;:::-;26480:8;26476:37;26463:11;26434:80;:::i;:::-;26093:431;;26078:446;25988:543;;;:::o;26537:117::-;26591:8;26641:5;26635:4;26631:16;26610:37;;26537:117;;;;:::o;26660:169::-;26704:6;26737:51;26785:1;26781:6;26773:5;26770:1;26766:13;26737:51;:::i;:::-;26733:56;26818:4;26812;26808:15;26798:25;;26711:118;26660:169;;;;:::o;26834:295::-;26910:4;27056:29;27081:3;27075:4;27056:29;:::i;:::-;27048:37;;27118:3;27115:1;27111:11;27105:4;27102:21;27094:29;;26834:295;;;;:::o;27134:1395::-;27251:37;27284:3;27251:37;:::i;:::-;27353:18;27345:6;27342:30;27339:56;;;27375:18;;:::i;:::-;27339:56;27419:38;27451:4;27445:11;27419:38;:::i;:::-;27504:67;27564:6;27556;27550:4;27504:67;:::i;:::-;27598:1;27622:4;27609:17;;27654:2;27646:6;27643:14;27671:1;27666:618;;;;28328:1;28345:6;28342:77;;;28394:9;28389:3;28385:19;28379:26;28370:35;;28342:77;28445:67;28505:6;28498:5;28445:67;:::i;:::-;28439:4;28432:81;28301:222;27636:887;;27666:618;27718:4;27714:9;27706:6;27702:22;27752:37;27784:4;27752:37;:::i;:::-;27811:1;27825:208;27839:7;27836:1;27833:14;27825:208;;;27918:9;27913:3;27909:19;27903:26;27895:6;27888:42;27969:1;27961:6;27957:14;27947:24;;28016:2;28005:9;28001:18;27988:31;;27862:4;27859:1;27855:12;27850:17;;27825:208;;;28061:6;28052:7;28049:19;28046:179;;;28119:9;28114:3;28110:19;28104:26;28162:48;28204:4;28196:6;28192:17;28181:9;28162:48;:::i;:::-;28154:6;28147:64;28069:156;28046:179;28271:1;28267;28259:6;28255:14;28251:22;28245:4;28238:36;27673:611;;;27636:887;;27226:1303;;;27134:1395;;:::o;28535:529::-;28702:4;28740:2;28729:9;28725:18;28717:26;;28753:70;28820:1;28809:9;28805:17;28796:6;28753:70;:::i;:::-;28833:71;28900:2;28889:9;28885:18;28876:6;28833:71;:::i;:::-;28951:9;28945:4;28941:20;28936:2;28925:9;28921:18;28914:48;28979:78;29052:4;29043:6;28979:78;:::i;:::-;28971:86;;28535:529;;;;;;:::o;29070:167::-;29210:19;29206:1;29198:6;29194:14;29187:43;29070:167;:::o;29243:366::-;29385:3;29406:67;29470:2;29465:3;29406:67;:::i;:::-;29399:74;;29482:93;29571:3;29482:93;:::i;:::-;29600:2;29595:3;29591:12;29584:19;;29243:366;;;:::o;29615:419::-;29781:4;29819:2;29808:9;29804:18;29796:26;;29868:9;29862:4;29858:20;29854:1;29843:9;29839:17;29832:47;29896:131;30022:4;29896:131;:::i;:::-;29888:139;;29615:419;;;:::o;30040:174::-;30180:26;30176:1;30168:6;30164:14;30157:50;30040:174;:::o;30220:366::-;30362:3;30383:67;30447:2;30442:3;30383:67;:::i;:::-;30376:74;;30459:93;30548:3;30459:93;:::i;:::-;30577:2;30572:3;30568:12;30561:19;;30220:366;;;:::o;30592:419::-;30758:4;30796:2;30785:9;30781:18;30773:26;;30845:9;30839:4;30835:20;30831:1;30820:9;30816:17;30809:47;30873:131;30999:4;30873:131;:::i;:::-;30865:139;;30592:419;;;:::o;31017:180::-;31065:77;31062:1;31055:88;31162:4;31159:1;31152:15;31186:4;31183:1;31176:15;31203:230;31343:34;31339:1;31331:6;31327:14;31320:58;31412:13;31407:2;31399:6;31395:15;31388:38;31203:230;:::o;31439:366::-;31581:3;31602:67;31666:2;31661:3;31602:67;:::i;:::-;31595:74;;31678:93;31767:3;31678:93;:::i;:::-;31796:2;31791:3;31787:12;31780:19;;31439:366;;;:::o;31811:419::-;31977:4;32015:2;32004:9;32000:18;31992:26;;32064:9;32058:4;32054:20;32050:1;32039:9;32035:17;32028:47;32092:131;32218:4;32092:131;:::i;:::-;32084:139;;31811:419;;;:::o;32236:168::-;32376:20;32372:1;32364:6;32360:14;32353:44;32236:168;:::o;32410:366::-;32552:3;32573:67;32637:2;32632:3;32573:67;:::i;:::-;32566:74;;32649:93;32738:3;32649:93;:::i;:::-;32767:2;32762:3;32758:12;32751:19;;32410:366;;;:::o;32782:419::-;32948:4;32986:2;32975:9;32971:18;32963:26;;33035:9;33029:4;33025:20;33021:1;33010:9;33006:17;32999:47;33063:131;33189:4;33063:131;:::i;:::-;33055:139;;32782:419;;;:::o;33207:181::-;33347:33;33343:1;33335:6;33331:14;33324:57;33207:181;:::o;33394:366::-;33536:3;33557:67;33621:2;33616:3;33557:67;:::i;:::-;33550:74;;33633:93;33722:3;33633:93;:::i;:::-;33751:2;33746:3;33742:12;33735:19;;33394:366;;;:::o;33766:419::-;33932:4;33970:2;33959:9;33955:18;33947:26;;34019:9;34013:4;34009:20;34005:1;33994:9;33990:17;33983:47;34047:131;34173:4;34047:131;:::i;:::-;34039:139;;33766:419;;;:::o;34191:332::-;34312:4;34350:2;34339:9;34335:18;34327:26;;34363:71;34431:1;34420:9;34416:17;34407:6;34363:71;:::i;:::-;34444:72;34512:2;34501:9;34497:18;34488:6;34444:72;:::i;:::-;34191:332;;;;;:::o;34529:442::-;34678:4;34716:2;34705:9;34701:18;34693:26;;34729:71;34797:1;34786:9;34782:17;34773:6;34729:71;:::i;:::-;34810:72;34878:2;34867:9;34863:18;34854:6;34810:72;:::i;:::-;34892;34960:2;34949:9;34945:18;34936:6;34892:72;:::i;:::-;34529:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2353200",
								"executionCost": "2521",
								"totalCost": "2355721"
							},
							"external": {
								"": "468",
								"NATIVE_TOKEN()": "418",
								"allowedAmounts(address,address)": "infinite",
								"bulkSetAllowedAmount(address,address[],uint256[])": "infinite",
								"claim(address)": "infinite",
								"currentRound()": "infinite",
								"deposit(address,uint256)": "infinite",
								"initialize(address,address)": "infinite",
								"owner()": "2590",
								"renounceOwnership()": "infinite",
								"scorer()": "infinite",
								"setAllowedAmount(address,address,uint256)": "infinite",
								"setRound(uint64,uint64,string)": "infinite",
								"totalBalances(address)": "2891",
								"transferOwnership(address)": "infinite",
								"withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208523ef908c51dcee6fa87df007e6a606ded81ab694063b67e7b2bc736656fecd64736f6c634300081a0033",
									".code": [
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "B807A3C4"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "B807A3C4"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "E3E7C1F9"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "F3FEF3A3"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "A9012C89"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "A9590E8A"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "AEE9C872"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "485CC955"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "485CC955"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "85C758F7"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "8A19C8BC"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "1E83409A"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "31F7D964"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "47E7EF24"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6470,
											"end": 6479,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6452,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 614,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6439,
											"end": 6479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6503,
											"end": 6513,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH",
											"source": 13,
											"value": "5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
										},
										{
											"begin": 6529,
											"end": 6538,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 6495,
											"end": 6539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 6659,
											"end": 6693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2971,
											"end": 3903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2971,
											"end": 3903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 566,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2412,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2412,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1977,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1977,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 622,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 622,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 5261,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 5261,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4135,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 4135,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 4495,
											"end": 5012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 4495,
											"end": 5012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 5744,
											"end": 6322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 5744,
											"end": 6322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3063,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3088,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3088,
											"end": 3122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3088,
											"end": 3103,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 3088,
											"end": 3122,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3176,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FA7410D400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3146,
											"end": 3215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3292,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3299,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3339,
											"end": 3340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3336,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3319,
											"end": 3340,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 3311,
											"end": 3364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3407,
											"end": 3424,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3402,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3424,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3424,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 3375,
											"end": 3454,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3492,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3499,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3504,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3534,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 3515,
											"end": 3556,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3573,
											"end": 3594,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3578,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3573,
											"end": 3594,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3612,
											"end": 3624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3640,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3670,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 3630,
											"end": 3675,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3698,
											"end": 3705,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 3690,
											"end": 3731,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3596,
											"end": 3743,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3791,
											"end": 3801,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3803,
											"end": 3820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3776,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3790,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 3764,
											"end": 3790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3875,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3868,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "F7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683"
										},
										{
											"begin": 3877,
											"end": 3894,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 3850,
											"end": 3895,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 613,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2506,
											"end": 2527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2506,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2506,
											"end": 2527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2506,
											"end": 2527,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2565,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2552,
											"end": 2561,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2552,
											"end": 2571,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2544,
											"end": 2598,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2648,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2639,
											"end": 2649,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 2631,
											"end": 2694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 2740,
											"end": 2750,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2760,
											"end": 2764,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 2767,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2716,
											"end": 2721,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2739,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 2709,
											"end": 2739,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2822,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2817,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2798,
											"end": 2828,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 2869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2862,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
										},
										{
											"begin": 2871,
											"end": 2877,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 2844,
											"end": 2878,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 2076,
											"end": 2081,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2061,
											"end": 2075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 2061,
											"end": 2082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2061,
											"end": 2082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 2061,
											"end": 2082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2126,
											"end": 2150,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 2126,
											"end": 2148,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 2126,
											"end": 2150,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2126,
											"end": 2150,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 2126,
											"end": 2150,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2185,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2161,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "24D7806C"
										},
										{
											"begin": 1740,
											"end": 1750,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1717,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5380,
											"end": 5383,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5372,
											"end": 5383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5372,
											"end": 5383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5372,
											"end": 5377,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5372,
											"end": 5383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5372,
											"end": 5383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5372,
											"end": 5383,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 5364,
											"end": 5422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5454,
											"end": 5459,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5461,
											"end": 5464,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5466,
											"end": 5477,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 5433,
											"end": 5478,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13"
										},
										{
											"begin": 5507,
											"end": 5512,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5514,
											"end": 5517,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5519,
											"end": 5530,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 5494,
											"end": 5531,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "24D7806C"
										},
										{
											"begin": 1740,
											"end": 1750,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1717,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4260,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4262,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4244,
											"end": 4248,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4244,
											"end": 4262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4262,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 4236,
											"end": 4284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4325,
											"end": 4331,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4314,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4331,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4374,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4368,
											"end": 4372,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2"
										},
										{
											"begin": 4381,
											"end": 4387,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 4347,
											"end": 4388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "24D7806C"
										},
										{
											"begin": 1740,
											"end": 1750,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1717,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4696,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4671,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4671,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4678,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4696,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 4658,
											"end": 4725,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4760,
											"end": 4765,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4760,
											"end": 4765,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4760,
											"end": 4772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4760,
											"end": 4772,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4757,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4772,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4921,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4921,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4922,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4914,
											"end": 4924,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4895,
											"end": 4900,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4900,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4901,
											"end": 4902,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4895,
											"end": 4903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4895,
											"end": 4903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 4910,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4924,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4924,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4975,
											"end": 4980,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4970,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4970,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4972,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4965,
											"end": 4973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4965,
											"end": 4973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2"
										},
										{
											"begin": 4982,
											"end": 4989,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4989,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4990,
											"end": 4991,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4982,
											"end": 4992,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 4944,
											"end": 4993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 2526,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 2526,
											"end": 2547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 5855,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5845,
											"end": 5851,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5845,
											"end": 5855,
											"modifierDepth": 2,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 5837,
											"end": 5903,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5946,
											"end": 5952,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5935,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5941,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5952,
											"modifierDepth": 2,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5952,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 5914,
											"end": 5975,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6012,
											"end": 6018,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6001,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6007,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 5988,
											"end": 6018,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6035,
											"end": 6056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6035,
											"end": 6056,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6035,
											"end": 6040,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6035,
											"end": 6056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6035,
											"end": 6056,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6035,
											"end": 6056,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6099,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 6092,
											"end": 6097,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 6092,
											"end": 6099,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6099,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 6092,
											"end": 6099,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6104,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6092,
											"end": 6104,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6112,
											"end": 6118,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 6092,
											"end": 6123,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6073,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6073,
											"end": 6123,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6073,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6153,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 6138,
											"end": 6179,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6058,
											"end": 6191,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6239,
											"end": 6246,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6239,
											"end": 6244,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 6239,
											"end": 6246,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6239,
											"end": 6246,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6239,
											"end": 6246,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6248,
											"end": 6254,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6219,
											"end": 6224,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6212,
											"end": 6238,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6238,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 6212,
											"end": 6238,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6300,
											"end": 6305,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6291,
											"end": 6298,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 6291,
											"end": 6296,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 6291,
											"end": 6298,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6291,
											"end": 6298,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 6291,
											"end": 6298,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB"
										},
										{
											"begin": 6307,
											"end": 6313,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 6282,
											"end": 6314,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2568,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2568,
											"end": 2588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2752,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 2725,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2894,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1797,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 1959,
											"end": 1991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 1959,
											"end": 1993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2086,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 276,
											"end": 467,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 316,
											"end": 319,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 369,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 369,
											"end": 389,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 369,
											"end": 389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 364,
											"end": 389,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 364,
											"end": 389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 405,
											"end": 414,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 398,
											"end": 414,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 398,
											"end": 414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 433,
											"end": 436,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 427,
											"end": 437,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 424,
											"end": 460,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 440,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 440,
											"end": 458,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 473,
											"end": 591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 560,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 560,
											"end": 584,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 560,
											"end": 584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 548,
											"end": 585,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 597,
											"end": 819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 690,
											"end": 694,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 713,
											"end": 731,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 705,
											"end": 731,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 705,
											"end": 731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 809,
											"end": 810,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 807,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 794,
											"end": 811,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 741,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 741,
											"end": 812,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 741,
											"end": 812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 825,
											"end": 994,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 909,
											"end": 920,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 931,
											"end": 950,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 983,
											"end": 987,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 981,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 974,
											"end": 988,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1000,
											"end": 1174,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 1000,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1140,
											"end": 1166,
											"name": "PUSH",
											"source": 14,
											"value": "537765657473706F743A20757365206465706F73697428290000000000000000"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1124,
											"end": 1138,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1167,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1000,
											"end": 1174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1000,
											"end": 1174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1322,
											"end": 1325,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1343,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 1343,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1343,
											"end": 1410,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 1343,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 1419,
											"end": 1512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 1419,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1537,
											"end": 1539,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1535,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1521,
											"end": 1540,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1521,
											"end": 1540,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1718,
											"end": 1722,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1758,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1759,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1805,
											"end": 1814,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1799,
											"end": 1803,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1795,
											"end": 1815,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1791,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1816,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 1959,
											"end": 1963,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 1833,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1964,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 1833,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1964,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1964,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 2052,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 1977,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2010,
											"end": 2016,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2046,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2046,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 2052,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 2052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2058,
											"end": 2175,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 2058,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2167,
											"end": 2168,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2165,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2181,
											"end": 2298,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 2181,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2290,
											"end": 2291,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2288,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2280,
											"end": 2292,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2341,
											"end": 2348,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2423,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2374,
											"end": 2379,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2370,
											"end": 2424,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2359,
											"end": 2424,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2359,
											"end": 2424,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2473,
											"end": 2480,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 2520,
											"end": 2525,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 2502,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2491,
											"end": 2526,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2491,
											"end": 2526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2660,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 2538,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2604,
											"end": 2609,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2601,
											"end": 2636,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2640,
											"end": 2652,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2660,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2712,
											"end": 2717,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2756,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2737,
											"end": 2757,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2728,
											"end": 2757,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2728,
											"end": 2757,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 2793,
											"end": 2798,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 2766,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2870,
											"end": 2876,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2916,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2898,
											"end": 2905,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2890,
											"end": 2922,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 2925,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3045,
											"end": 3046,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 3115,
											"end": 3122,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 3070,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3060,
											"end": 3123,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3060,
											"end": 3123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3146,
											"end": 3264,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 3146,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 3251,
											"end": 3256,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 3233,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3257,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 3233,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3228,
											"end": 3231,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3221,
											"end": 3258,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3146,
											"end": 3264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3146,
											"end": 3264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3146,
											"end": 3264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3363,
											"end": 3367,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3378,
											"end": 3404,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3378,
											"end": 3404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3414,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 3482,
											"end": 3483,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3480,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3467,
											"end": 3484,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3414,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 3414,
											"end": 3485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3414,
											"end": 3485,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 3414,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3498,
											"end": 3620,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 3498,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 3589,
											"end": 3594,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 3571,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3564,
											"end": 3569,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3561,
											"end": 3596,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3610,
											"end": 3611,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3608,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3498,
											"end": 3620,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3498,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3716,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3697,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 3753,
											"end": 3758,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 3726,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3839,
											"end": 3845,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3853,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3896,
											"end": 3898,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3884,
											"end": 3893,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3871,
											"end": 3894,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3867,
											"end": 3899,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 3902,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 4092,
											"end": 4099,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4083,
											"end": 4089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4072,
											"end": 4081,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 4047,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4100,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3993,
											"end": 4110,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4149,
											"end": 4151,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 4220,
											"end": 4227,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4211,
											"end": 4217,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4196,
											"end": 4218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 4175,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4120,
											"end": 4238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4333,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4364,
											"end": 4373,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4362,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4351,
											"end": 4374,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4347,
											"end": 4379,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 4382,
											"end": 4461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4502,
											"end": 4503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 4572,
											"end": 4579,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4563,
											"end": 4569,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4552,
											"end": 4561,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4548,
											"end": 4570,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4527,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 4527,
											"end": 4580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4527,
											"end": 4580,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 4527,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4517,
											"end": 4580,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4517,
											"end": 4580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4473,
											"end": 4590,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4655,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 4700,
											"end": 4707,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4691,
											"end": 4697,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4680,
											"end": 4689,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4676,
											"end": 4698,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4655,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 4655,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4655,
											"end": 4708,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 4655,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4645,
											"end": 4708,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4645,
											"end": 4708,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4600,
											"end": 4718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4759,
											"end": 4762,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4785,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4785,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4785,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4847,
											"end": 4856,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 4898,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 4925,
											"end": 4930,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 4907,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 4898,
											"end": 4932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4932,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 4898,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4880,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 4880,
											"end": 4933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4880,
											"end": 4933,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 4880,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4933,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4995,
											"end": 5004,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5028,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 5059,
											"end": 5064,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5028,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 5028,
											"end": 5065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5028,
											"end": 5065,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 5028,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5065,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5143,
											"end": 5152,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 5207,
											"end": 5212,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 5176,
											"end": 5213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5213,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 5176,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5213,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5213,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5388,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 5225,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5328,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 5375,
											"end": 5380,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5328,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 5328,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5328,
											"end": 5381,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 5328,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5323,
											"end": 5326,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5316,
											"end": 5382,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5503,
											"end": 5507,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5554,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 5638,
											"end": 5639,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5623,
											"end": 5640,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5614,
											"end": 5620,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5554,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 5554,
											"end": 5641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5554,
											"end": 5641,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 5554,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5690,
											"end": 5697,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5749,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5708,
											"end": 5749,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5708,
											"end": 5749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5761,
											"end": 5876,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 5761,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 5863,
											"end": 5868,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 5846,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5844,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5834,
											"end": 5870,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5761,
											"end": 5876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5761,
											"end": 5876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5761,
											"end": 5876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5934,
											"end": 5940,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5973,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5962,
											"end": 5974,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5952,
											"end": 5974,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5952,
											"end": 5974,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6126,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 5987,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6071,
											"end": 6074,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6066,
											"end": 6069,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6060,
											"end": 6083,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 6117,
											"end": 6118,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6114,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6103,
											"end": 6106,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6115,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6119,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6126,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6126,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6126,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6132,
											"end": 6234,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 6132,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6173,
											"end": 6179,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6224,
											"end": 6226,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6220,
											"end": 6227,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 6215,
											"end": 6217,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6208,
											"end": 6213,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6204,
											"end": 6218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6200,
											"end": 6228,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6190,
											"end": 6228,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6190,
											"end": 6228,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6132,
											"end": 6234,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6132,
											"end": 6234,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6132,
											"end": 6234,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6132,
											"end": 6234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6240,
											"end": 6617,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 6240,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6328,
											"end": 6331,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6356,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 6389,
											"end": 6394,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6356,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 6356,
											"end": 6395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6356,
											"end": 6395,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 6356,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6411,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 6475,
											"end": 6481,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6470,
											"end": 6473,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6411,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 6411,
											"end": 6482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6411,
											"end": 6482,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 6411,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6404,
											"end": 6482,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6404,
											"end": 6482,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 6549,
											"end": 6555,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6544,
											"end": 6547,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6537,
											"end": 6541,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6530,
											"end": 6535,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6526,
											"end": 6542,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 6491,
											"end": 6556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6581,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 6603,
											"end": 6609,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6581,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 6581,
											"end": 6610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6581,
											"end": 6610,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 6581,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6576,
											"end": 6579,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6572,
											"end": 6611,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6565,
											"end": 6611,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6565,
											"end": 6611,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6332,
											"end": 6617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6240,
											"end": 6617,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6240,
											"end": 6617,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6240,
											"end": 6617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6240,
											"end": 6617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6240,
											"end": 6617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6623,
											"end": 7148,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 6623,
											"end": 7148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6788,
											"end": 6792,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6828,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6815,
											"end": 6824,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 6829,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 6829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6839,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 6905,
											"end": 6906,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6894,
											"end": 6903,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6890,
											"end": 6907,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 6887,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6839,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 6839,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6839,
											"end": 6908,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 6839,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6918,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 6984,
											"end": 6986,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6973,
											"end": 6982,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6969,
											"end": 6987,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6960,
											"end": 6966,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6918,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 6918,
											"end": 6988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6918,
											"end": 6988,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 6918,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7035,
											"end": 7044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7029,
											"end": 7033,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7025,
											"end": 7045,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7020,
											"end": 7022,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7009,
											"end": 7018,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7005,
											"end": 7023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6998,
											"end": 7046,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7063,
											"end": 7141,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 7136,
											"end": 7140,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7127,
											"end": 7133,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7063,
											"end": 7141,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 7063,
											"end": 7141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7063,
											"end": 7141,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 7063,
											"end": 7141,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7055,
											"end": 7141,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7055,
											"end": 7141,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6623,
											"end": 7148,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6623,
											"end": 7148,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6623,
											"end": 7148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6623,
											"end": 7148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6623,
											"end": 7148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6623,
											"end": 7148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6623,
											"end": 7148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7154,
											"end": 7274,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 7154,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7226,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 7243,
											"end": 7248,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7226,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 7226,
											"end": 7249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7226,
											"end": 7249,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 7226,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7219,
											"end": 7224,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7216,
											"end": 7250,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7206,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 7206,
											"end": 7268,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7264,
											"end": 7265,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7261,
											"end": 7262,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7254,
											"end": 7266,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7206,
											"end": 7268,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 7206,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7154,
											"end": 7274,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7154,
											"end": 7274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7280,
											"end": 7417,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 7280,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7325,
											"end": 7330,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7369,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7350,
											"end": 7370,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7341,
											"end": 7370,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7341,
											"end": 7370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7379,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 7405,
											"end": 7410,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7379,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 7379,
											"end": 7411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7379,
											"end": 7411,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 7379,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7280,
											"end": 7417,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7280,
											"end": 7417,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7280,
											"end": 7417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7280,
											"end": 7417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7280,
											"end": 7417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7423,
											"end": 7540,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 7423,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7532,
											"end": 7533,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7530,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7522,
											"end": 7534,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7546,
											"end": 7663,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 7546,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7655,
											"end": 7656,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7652,
											"end": 7653,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7645,
											"end": 7657,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7669,
											"end": 7849,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 7669,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7717,
											"end": 7794,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7795,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7814,
											"end": 7818,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 7811,
											"end": 7812,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7804,
											"end": 7819,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7838,
											"end": 7842,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7835,
											"end": 7836,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7843,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7855,
											"end": 8136,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 7855,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7938,
											"end": 7965,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7938,
											"end": 7965,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 7938,
											"end": 7965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7938,
											"end": 7965,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 7938,
											"end": 7965,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7930,
											"end": 7936,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7926,
											"end": 7966,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8068,
											"end": 8074,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8056,
											"end": 8066,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8053,
											"end": 8075,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8020,
											"end": 8030,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8017,
											"end": 8051,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8014,
											"end": 8076,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 8011,
											"end": 8099,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8011,
											"end": 8099,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 8011,
											"end": 8099,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8079,
											"end": 8097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 8079,
											"end": 8097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 8079,
											"end": 8097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8079,
											"end": 8097,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 8079,
											"end": 8097,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8011,
											"end": 8099,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 8011,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8119,
											"end": 8129,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8115,
											"end": 8117,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7898,
											"end": 8136,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7855,
											"end": 8136,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7855,
											"end": 8136,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7855,
											"end": 8136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8142,
											"end": 8271,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 8142,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8176,
											"end": 8182,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8203,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 8203,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 8203,
											"end": 8223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8203,
											"end": 8223,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 8203,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8193,
											"end": 8223,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8193,
											"end": 8223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8232,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 8260,
											"end": 8264,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8252,
											"end": 8258,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8232,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 8232,
											"end": 8265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8232,
											"end": 8265,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 8232,
											"end": 8265,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8142,
											"end": 8271,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8142,
											"end": 8271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8142,
											"end": 8271,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8142,
											"end": 8271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8277,
											"end": 8585,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 8277,
											"end": 8585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8339,
											"end": 8343,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8429,
											"end": 8447,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8421,
											"end": 8427,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8418,
											"end": 8448,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8415,
											"end": 8471,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8415,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 8415,
											"end": 8471,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 8451,
											"end": 8469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8415,
											"end": 8471,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 8415,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8489,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 8511,
											"end": 8517,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8489,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 8489,
											"end": 8518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8489,
											"end": 8518,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 8489,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8481,
											"end": 8518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8481,
											"end": 8518,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8573,
											"end": 8577,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8567,
											"end": 8571,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8563,
											"end": 8578,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8555,
											"end": 8578,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8555,
											"end": 8578,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8277,
											"end": 8585,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8277,
											"end": 8585,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8277,
											"end": 8585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8277,
											"end": 8585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8591,
											"end": 8739,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 8591,
											"end": 8739,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8689,
											"end": 8695,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8684,
											"end": 8687,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8679,
											"end": 8682,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8666,
											"end": 8696,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 8730,
											"end": 8731,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8721,
											"end": 8727,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8716,
											"end": 8719,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8712,
											"end": 8728,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8705,
											"end": 8732,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8591,
											"end": 8739,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8591,
											"end": 8739,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8591,
											"end": 8739,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8591,
											"end": 8739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8745,
											"end": 9170,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 8745,
											"end": 9170,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8823,
											"end": 8828,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8848,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 8864,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 8906,
											"end": 8912,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8864,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 8864,
											"end": 8913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8864,
											"end": 8913,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 8864,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8848,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 8848,
											"end": 8914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8848,
											"end": 8914,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 8848,
											"end": 8914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8839,
											"end": 8914,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8839,
											"end": 8914,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8937,
											"end": 8943,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8930,
											"end": 8935,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8923,
											"end": 8944,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8975,
											"end": 8979,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8964,
											"end": 8980,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9013,
											"end": 9016,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9004,
											"end": 9010,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8999,
											"end": 9002,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8995,
											"end": 9011,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8992,
											"end": 9017,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8989,
											"end": 9101,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8989,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 8989,
											"end": 9101,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9020,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 9020,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 9020,
											"end": 9099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9020,
											"end": 9099,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 9020,
											"end": 9099,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8989,
											"end": 9101,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 8989,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9110,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 9157,
											"end": 9163,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9152,
											"end": 9155,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9147,
											"end": 9150,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9110,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 9110,
											"end": 9164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9110,
											"end": 9164,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 9110,
											"end": 9164,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8829,
											"end": 9170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8745,
											"end": 9170,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8745,
											"end": 9170,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8745,
											"end": 9170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8745,
											"end": 9170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8745,
											"end": 9170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8745,
											"end": 9170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9190,
											"end": 9530,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 9190,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9246,
											"end": 9251,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9295,
											"end": 9298,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9288,
											"end": 9292,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 9280,
											"end": 9286,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9276,
											"end": 9293,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9272,
											"end": 9299,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9262,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 9262,
											"end": 9384,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9303,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 9303,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 9303,
											"end": 9382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9303,
											"end": 9382,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 9303,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9262,
											"end": 9384,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 9262,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9420,
											"end": 9426,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9407,
											"end": 9427,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9445,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 9520,
											"end": 9523,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9512,
											"end": 9518,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9505,
											"end": 9509,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9497,
											"end": 9503,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9493,
											"end": 9510,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9445,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 9445,
											"end": 9524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9445,
											"end": 9524,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 9445,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9436,
											"end": 9524,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9436,
											"end": 9524,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9252,
											"end": 9530,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9190,
											"end": 9530,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9190,
											"end": 9530,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9190,
											"end": 9530,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9190,
											"end": 9530,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9190,
											"end": 9530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9536,
											"end": 10331,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 9536,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9621,
											"end": 9627,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9629,
											"end": 9635,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9686,
											"end": 9688,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9674,
											"end": 9683,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9665,
											"end": 9672,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9661,
											"end": 9684,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9657,
											"end": 9689,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9654,
											"end": 9773,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9654,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 9654,
											"end": 9773,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9692,
											"end": 9771,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 9692,
											"end": 9771,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 9692,
											"end": 9771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9692,
											"end": 9771,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 9692,
											"end": 9771,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9654,
											"end": 9773,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 9654,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9812,
											"end": 9813,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9837,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 9881,
											"end": 9888,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9872,
											"end": 9878,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9861,
											"end": 9870,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9857,
											"end": 9879,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9837,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 9837,
											"end": 9889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9837,
											"end": 9889,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 9837,
											"end": 9889,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9827,
											"end": 9889,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9827,
											"end": 9889,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9783,
											"end": 9899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9938,
											"end": 9940,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9964,
											"end": 10016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 10008,
											"end": 10015,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9999,
											"end": 10005,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9988,
											"end": 9997,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9984,
											"end": 10006,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9964,
											"end": 10016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 9964,
											"end": 10016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9964,
											"end": 10016,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 9964,
											"end": 10016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9954,
											"end": 10016,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9954,
											"end": 10016,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9909,
											"end": 10026,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10093,
											"end": 10095,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10082,
											"end": 10091,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10078,
											"end": 10096,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10065,
											"end": 10097,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10124,
											"end": 10142,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10116,
											"end": 10122,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10113,
											"end": 10143,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10110,
											"end": 10227,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10110,
											"end": 10227,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 10110,
											"end": 10227,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10146,
											"end": 10225,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 10146,
											"end": 10225,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 10146,
											"end": 10225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10146,
											"end": 10225,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 10146,
											"end": 10225,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10110,
											"end": 10227,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 10110,
											"end": 10227,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10251,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 10306,
											"end": 10313,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10297,
											"end": 10303,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10286,
											"end": 10295,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10282,
											"end": 10304,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10251,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 10251,
											"end": 10314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10251,
											"end": 10314,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 10251,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10241,
											"end": 10314,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10241,
											"end": 10314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10036,
											"end": 10324,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9536,
											"end": 10331,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9536,
											"end": 10331,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9536,
											"end": 10331,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9536,
											"end": 10331,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9536,
											"end": 10331,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9536,
											"end": 10331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10337,
											"end": 10956,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 10337,
											"end": 10956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10414,
											"end": 10420,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10422,
											"end": 10428,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10430,
											"end": 10436,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10479,
											"end": 10481,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10467,
											"end": 10476,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10458,
											"end": 10465,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10454,
											"end": 10477,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10447,
											"end": 10566,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10447,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 10447,
											"end": 10566,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10485,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 10485,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 10485,
											"end": 10564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10485,
											"end": 10564,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 10485,
											"end": 10564,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10447,
											"end": 10566,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 10447,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10605,
											"end": 10606,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 10675,
											"end": 10682,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10666,
											"end": 10672,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10655,
											"end": 10664,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10651,
											"end": 10673,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10630,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 10630,
											"end": 10683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10630,
											"end": 10683,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 10630,
											"end": 10683,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10620,
											"end": 10683,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10620,
											"end": 10683,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10576,
											"end": 10693,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10732,
											"end": 10734,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10758,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 10803,
											"end": 10810,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10794,
											"end": 10800,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10783,
											"end": 10792,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10779,
											"end": 10801,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10758,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 10758,
											"end": 10811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10758,
											"end": 10811,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 10758,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10748,
											"end": 10811,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10748,
											"end": 10811,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10703,
											"end": 10821,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10860,
											"end": 10862,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10886,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 10931,
											"end": 10938,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10922,
											"end": 10928,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10911,
											"end": 10920,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10907,
											"end": 10929,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10886,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 10886,
											"end": 10939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10886,
											"end": 10939,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 10886,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10876,
											"end": 10939,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10876,
											"end": 10939,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10831,
											"end": 10949,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10337,
											"end": 10956,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10337,
											"end": 10956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10337,
											"end": 10956,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10337,
											"end": 10956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10337,
											"end": 10956,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10337,
											"end": 10956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10962,
											"end": 11079,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 10962,
											"end": 11079,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11071,
											"end": 11072,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11068,
											"end": 11069,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11061,
											"end": 11073,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11085,
											"end": 11202,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 11085,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11194,
											"end": 11195,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11191,
											"end": 11192,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11184,
											"end": 11196,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11225,
											"end": 11793,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 11225,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11298,
											"end": 11306,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11308,
											"end": 11314,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11358,
											"end": 11361,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11351,
											"end": 11355,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11343,
											"end": 11349,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11339,
											"end": 11356,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11335,
											"end": 11362,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11325,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 11325,
											"end": 11447,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11366,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 11366,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 11366,
											"end": 11445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11366,
											"end": 11445,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 11366,
											"end": 11445,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11325,
											"end": 11447,
											"name": "tag",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 11325,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11479,
											"end": 11485,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11466,
											"end": 11486,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 11456,
											"end": 11486,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11456,
											"end": 11486,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11509,
											"end": 11527,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11501,
											"end": 11507,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11498,
											"end": 11528,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11495,
											"end": 11612,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11495,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 11495,
											"end": 11612,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11531,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 11531,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 11531,
											"end": 11610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11531,
											"end": 11610,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 11531,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11495,
											"end": 11612,
											"name": "tag",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 11495,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11645,
											"end": 11649,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11637,
											"end": 11643,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11650,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11621,
											"end": 11650,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11621,
											"end": 11650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11699,
											"end": 11702,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11691,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11683,
											"end": 11689,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11679,
											"end": 11696,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 11669,
											"end": 11677,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11665,
											"end": 11697,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11662,
											"end": 11703,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11659,
											"end": 11787,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11659,
											"end": 11787,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 11659,
											"end": 11787,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11706,
											"end": 11785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 11706,
											"end": 11785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 11706,
											"end": 11785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11706,
											"end": 11785,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 11706,
											"end": 11785,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11659,
											"end": 11787,
											"name": "tag",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 11659,
											"end": 11787,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11225,
											"end": 11793,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11225,
											"end": 11793,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11225,
											"end": 11793,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11225,
											"end": 11793,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11225,
											"end": 11793,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11225,
											"end": 11793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11816,
											"end": 12384,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 11816,
											"end": 12384,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11889,
											"end": 11897,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11899,
											"end": 11905,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11949,
											"end": 11952,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11942,
											"end": 11946,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11934,
											"end": 11940,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11930,
											"end": 11947,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11926,
											"end": 11953,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11916,
											"end": 12038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 11916,
											"end": 12038,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 11957,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 11957,
											"end": 12036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12036,
											"name": "tag",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 11957,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11916,
											"end": 12038,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 11916,
											"end": 12038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12070,
											"end": 12076,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12057,
											"end": 12077,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 12047,
											"end": 12077,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12047,
											"end": 12077,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12100,
											"end": 12118,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12092,
											"end": 12098,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12089,
											"end": 12119,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12086,
											"end": 12203,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12086,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 12086,
											"end": 12203,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12122,
											"end": 12201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 12122,
											"end": 12201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 12122,
											"end": 12201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12122,
											"end": 12201,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 12122,
											"end": 12201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12086,
											"end": 12203,
											"name": "tag",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 12086,
											"end": 12203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12236,
											"end": 12240,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12228,
											"end": 12234,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12224,
											"end": 12241,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12212,
											"end": 12241,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12212,
											"end": 12241,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12290,
											"end": 12293,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12282,
											"end": 12286,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12274,
											"end": 12280,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12270,
											"end": 12287,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 12260,
											"end": 12268,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12256,
											"end": 12288,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12253,
											"end": 12294,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12250,
											"end": 12378,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12250,
											"end": 12378,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 12250,
											"end": 12378,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12297,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 12297,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 12297,
											"end": 12376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12297,
											"end": 12376,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 12297,
											"end": 12376,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12250,
											"end": 12378,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 12250,
											"end": 12378,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11816,
											"end": 12384,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11816,
											"end": 12384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11816,
											"end": 12384,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11816,
											"end": 12384,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11816,
											"end": 12384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11816,
											"end": 12384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 13469,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 12390,
											"end": 13469,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12529,
											"end": 12535,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12537,
											"end": 12543,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12545,
											"end": 12551,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12553,
											"end": 12559,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12602,
											"end": 12604,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 12590,
											"end": 12599,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12581,
											"end": 12588,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 12577,
											"end": 12600,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12573,
											"end": 12605,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12570,
											"end": 12689,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12570,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 12570,
											"end": 12689,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12608,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 12608,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 12608,
											"end": 12687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12608,
											"end": 12687,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 12608,
											"end": 12687,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12570,
											"end": 12689,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 12570,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12728,
											"end": 12729,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12753,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 12798,
											"end": 12805,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 12789,
											"end": 12795,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12778,
											"end": 12787,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 12774,
											"end": 12796,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 12753,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12806,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 12753,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12743,
											"end": 12806,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 12743,
											"end": 12806,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12699,
											"end": 12816,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12883,
											"end": 12885,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12872,
											"end": 12881,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12868,
											"end": 12886,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12855,
											"end": 12887,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12906,
											"end": 12912,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12903,
											"end": 12933,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12900,
											"end": 13017,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12900,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 12900,
											"end": 13017,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12936,
											"end": 13015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 12936,
											"end": 13015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 12936,
											"end": 13015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12936,
											"end": 13015,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 12936,
											"end": 13015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12900,
											"end": 13017,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 12900,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13049,
											"end": 13129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 13121,
											"end": 13128,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 13112,
											"end": 13118,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13101,
											"end": 13110,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 13097,
											"end": 13119,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13049,
											"end": 13129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 13049,
											"end": 13129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13049,
											"end": 13129,
											"name": "tag",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 13049,
											"end": 13129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13031,
											"end": 13129,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13031,
											"end": 13129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13031,
											"end": 13129,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13031,
											"end": 13129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12826,
											"end": 13139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13206,
											"end": 13208,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13195,
											"end": 13204,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13191,
											"end": 13209,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13178,
											"end": 13210,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 13237,
											"end": 13255,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13229,
											"end": 13235,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13226,
											"end": 13256,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13340,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13340,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 13223,
											"end": 13340,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13259,
											"end": 13338,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 13259,
											"end": 13338,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 13259,
											"end": 13338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13259,
											"end": 13338,
											"name": "tag",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 13259,
											"end": 13338,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13340,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 13223,
											"end": 13340,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13372,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 13444,
											"end": 13451,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 13435,
											"end": 13441,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13424,
											"end": 13433,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 13420,
											"end": 13442,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13372,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 13372,
											"end": 13452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13372,
											"end": 13452,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 13372,
											"end": 13452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13354,
											"end": 13452,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13354,
											"end": 13452,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13354,
											"end": 13452,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13354,
											"end": 13452,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13149,
											"end": 13462,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 13469,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 13469,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 13469,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 13469,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 13469,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 13469,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 13469,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 13469,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 13469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13475,
											"end": 13615,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 13475,
											"end": 13615,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13524,
											"end": 13533,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13557,
											"end": 13609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 13575,
											"end": 13608,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 13584,
											"end": 13607,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 13601,
											"end": 13606,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 13607,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 13584,
											"end": 13607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 13607,
											"name": "tag",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 13584,
											"end": 13607,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13575,
											"end": 13608,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 13575,
											"end": 13608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13575,
											"end": 13608,
											"name": "tag",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 13575,
											"end": 13608,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13557,
											"end": 13609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 13557,
											"end": 13609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13557,
											"end": 13609,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 13557,
											"end": 13609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13544,
											"end": 13609,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13544,
											"end": 13609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13475,
											"end": 13615,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13475,
											"end": 13615,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13475,
											"end": 13615,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13475,
											"end": 13615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13621,
											"end": 13750,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 13621,
											"end": 13750,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13707,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 13737,
											"end": 13742,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13707,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 13707,
											"end": 13743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13707,
											"end": 13743,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 13707,
											"end": 13743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13702,
											"end": 13705,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13695,
											"end": 13744,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13621,
											"end": 13750,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13621,
											"end": 13750,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13621,
											"end": 13750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13756,
											"end": 14194,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 13756,
											"end": 14194,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13903,
											"end": 13907,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13941,
											"end": 13943,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13930,
											"end": 13939,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13918,
											"end": 13944,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13918,
											"end": 13944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13954,
											"end": 14025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 14022,
											"end": 14023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14011,
											"end": 14020,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14007,
											"end": 14024,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13998,
											"end": 14004,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13954,
											"end": 14025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 13954,
											"end": 14025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13954,
											"end": 14025,
											"name": "tag",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 13954,
											"end": 14025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14035,
											"end": 14106,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 14102,
											"end": 14104,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14091,
											"end": 14100,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14078,
											"end": 14084,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14035,
											"end": 14106,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 14035,
											"end": 14106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14035,
											"end": 14106,
											"name": "tag",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 14035,
											"end": 14106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14116,
											"end": 14187,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 14183,
											"end": 14185,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14172,
											"end": 14181,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14168,
											"end": 14186,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14159,
											"end": 14165,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14116,
											"end": 14187,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 14116,
											"end": 14187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14116,
											"end": 14187,
											"name": "tag",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 14116,
											"end": 14187,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13756,
											"end": 14194,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13756,
											"end": 14194,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13756,
											"end": 14194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13756,
											"end": 14194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13756,
											"end": 14194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13756,
											"end": 14194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13756,
											"end": 14194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14200,
											"end": 14369,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 14200,
											"end": 14369,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14340,
											"end": 14361,
											"name": "PUSH",
											"source": 14,
											"value": "4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000"
										},
										{
											"begin": 14336,
											"end": 14337,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14328,
											"end": 14334,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14324,
											"end": 14338,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14317,
											"end": 14362,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14200,
											"end": 14369,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14200,
											"end": 14369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14375,
											"end": 14741,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 14375,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14517,
											"end": 14520,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14538,
											"end": 14605,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 14602,
											"end": 14604,
											"name": "PUSH",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 14597,
											"end": 14600,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14605,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 14538,
											"end": 14605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14605,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 14538,
											"end": 14605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14531,
											"end": 14605,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14531,
											"end": 14605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14614,
											"end": 14707,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 14703,
											"end": 14706,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14614,
											"end": 14707,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 14614,
											"end": 14707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14614,
											"end": 14707,
											"name": "tag",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 14614,
											"end": 14707,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14732,
											"end": 14734,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14727,
											"end": 14730,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14723,
											"end": 14735,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14716,
											"end": 14735,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14716,
											"end": 14735,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14375,
											"end": 14741,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14375,
											"end": 14741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14375,
											"end": 14741,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14375,
											"end": 14741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14747,
											"end": 15166,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 14747,
											"end": 15166,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14913,
											"end": 14917,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14951,
											"end": 14953,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14940,
											"end": 14949,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14936,
											"end": 14954,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14928,
											"end": 14954,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14928,
											"end": 14954,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15000,
											"end": 15009,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14994,
											"end": 14998,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14990,
											"end": 15010,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14986,
											"end": 14987,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14975,
											"end": 14984,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14971,
											"end": 14988,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14964,
											"end": 15011,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15028,
											"end": 15159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 15154,
											"end": 15158,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15028,
											"end": 15159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 15028,
											"end": 15159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15028,
											"end": 15159,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 15028,
											"end": 15159,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15020,
											"end": 15159,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15020,
											"end": 15159,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14747,
											"end": 15166,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14747,
											"end": 15166,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14747,
											"end": 15166,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14747,
											"end": 15166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15172,
											"end": 15347,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 15172,
											"end": 15347,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15312,
											"end": 15339,
											"name": "PUSH",
											"source": 14,
											"value": "496E73756666696369656E742066756E647320696E206A617200000000000000"
										},
										{
											"begin": 15308,
											"end": 15309,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15300,
											"end": 15306,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15296,
											"end": 15310,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15289,
											"end": 15340,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15172,
											"end": 15347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15172,
											"end": 15347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15353,
											"end": 15719,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 15353,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15495,
											"end": 15498,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15516,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 15580,
											"end": 15582,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 15575,
											"end": 15578,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15516,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 15516,
											"end": 15583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15516,
											"end": 15583,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 15516,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15509,
											"end": 15583,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15509,
											"end": 15583,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15592,
											"end": 15685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 15681,
											"end": 15684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15592,
											"end": 15685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 15592,
											"end": 15685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15592,
											"end": 15685,
											"name": "tag",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 15592,
											"end": 15685,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15710,
											"end": 15712,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15705,
											"end": 15708,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15701,
											"end": 15713,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15694,
											"end": 15713,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15694,
											"end": 15713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15353,
											"end": 15719,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15353,
											"end": 15719,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15353,
											"end": 15719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15353,
											"end": 15719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15725,
											"end": 16144,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 15725,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15891,
											"end": 15895,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15929,
											"end": 15931,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15918,
											"end": 15927,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15914,
											"end": 15932,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15906,
											"end": 15932,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15906,
											"end": 15932,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15978,
											"end": 15987,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15972,
											"end": 15976,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15968,
											"end": 15988,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15964,
											"end": 15965,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15953,
											"end": 15962,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15949,
											"end": 15966,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15942,
											"end": 15989,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16006,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 16132,
											"end": 16136,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16006,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 16006,
											"end": 16137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16006,
											"end": 16137,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 16006,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15998,
											"end": 16137,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15998,
											"end": 16137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15725,
											"end": 16144,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15725,
											"end": 16144,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15725,
											"end": 16144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15725,
											"end": 16144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16150,
											"end": 16344,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 16150,
											"end": 16344,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16190,
											"end": 16194,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16210,
											"end": 16230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 16228,
											"end": 16229,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16210,
											"end": 16230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 16210,
											"end": 16230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16210,
											"end": 16230,
											"name": "tag",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 16210,
											"end": 16230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16205,
											"end": 16230,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16205,
											"end": 16230,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16244,
											"end": 16264,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 16262,
											"end": 16263,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16244,
											"end": 16264,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 16244,
											"end": 16264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16244,
											"end": 16264,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 16244,
											"end": 16264,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16239,
											"end": 16264,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16239,
											"end": 16264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16288,
											"end": 16289,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16285,
											"end": 16286,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16281,
											"end": 16290,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16273,
											"end": 16290,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16273,
											"end": 16290,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16313,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16306,
											"end": 16310,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16303,
											"end": 16314,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 16300,
											"end": 16337,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16300,
											"end": 16337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 16300,
											"end": 16337,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16317,
											"end": 16335,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 16317,
											"end": 16335,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 16317,
											"end": 16335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16317,
											"end": 16335,
											"name": "tag",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 16317,
											"end": 16335,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16300,
											"end": 16337,
											"name": "tag",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 16300,
											"end": 16337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16150,
											"end": 16344,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16150,
											"end": 16344,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16150,
											"end": 16344,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16150,
											"end": 16344,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16150,
											"end": 16344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16350,
											"end": 16497,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 16350,
											"end": 16497,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16451,
											"end": 16462,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16488,
											"end": 16491,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16473,
											"end": 16491,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16473,
											"end": 16491,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16350,
											"end": 16497,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16350,
											"end": 16497,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16350,
											"end": 16497,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16350,
											"end": 16497,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16350,
											"end": 16497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16503,
											"end": 16617,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 16503,
											"end": 16617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16503,
											"end": 16617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16503,
											"end": 16617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16623,
											"end": 17021,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 16623,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16782,
											"end": 16785,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16803,
											"end": 16886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 16884,
											"end": 16885,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16879,
											"end": 16882,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16803,
											"end": 16886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 16803,
											"end": 16886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16803,
											"end": 16886,
											"name": "tag",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 16803,
											"end": 16886,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16796,
											"end": 16886,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16796,
											"end": 16886,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16895,
											"end": 16988,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 16984,
											"end": 16987,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16895,
											"end": 16988,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 16895,
											"end": 16988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16895,
											"end": 16988,
											"name": "tag",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 16895,
											"end": 16988,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17013,
											"end": 17014,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17008,
											"end": 17011,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17004,
											"end": 17015,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16623,
											"end": 17021,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16623,
											"end": 17021,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16623,
											"end": 17021,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16623,
											"end": 17021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17027,
											"end": 17406,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 17027,
											"end": 17406,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17211,
											"end": 17214,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17233,
											"end": 17380,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 17376,
											"end": 17379,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17233,
											"end": 17380,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 17233,
											"end": 17380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17233,
											"end": 17380,
											"name": "tag",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 17233,
											"end": 17380,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17226,
											"end": 17380,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17226,
											"end": 17380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17397,
											"end": 17400,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17390,
											"end": 17400,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17390,
											"end": 17400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17027,
											"end": 17406,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17027,
											"end": 17406,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17027,
											"end": 17406,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17027,
											"end": 17406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17412,
											"end": 17583,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 17412,
											"end": 17583,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17552,
											"end": 17575,
											"name": "PUSH",
											"source": 14,
											"value": "4574686572207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 17548,
											"end": 17549,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17540,
											"end": 17546,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17536,
											"end": 17550,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17529,
											"end": 17576,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17412,
											"end": 17583,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17412,
											"end": 17583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17589,
											"end": 17955,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 17589,
											"end": 17955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17731,
											"end": 17734,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17752,
											"end": 17819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 17816,
											"end": 17818,
											"name": "PUSH",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 17811,
											"end": 17814,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17752,
											"end": 17819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 17752,
											"end": 17819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17752,
											"end": 17819,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 17752,
											"end": 17819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17745,
											"end": 17819,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17745,
											"end": 17819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17828,
											"end": 17921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 17917,
											"end": 17920,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17828,
											"end": 17921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 17828,
											"end": 17921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17828,
											"end": 17921,
											"name": "tag",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 17828,
											"end": 17921,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17946,
											"end": 17948,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17941,
											"end": 17944,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17937,
											"end": 17949,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17930,
											"end": 17949,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17930,
											"end": 17949,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17589,
											"end": 17955,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17589,
											"end": 17955,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17589,
											"end": 17955,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17589,
											"end": 17955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17961,
											"end": 18380,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 17961,
											"end": 18380,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18127,
											"end": 18131,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18165,
											"end": 18167,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18154,
											"end": 18163,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18150,
											"end": 18168,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18142,
											"end": 18168,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18142,
											"end": 18168,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18214,
											"end": 18223,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18208,
											"end": 18212,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18204,
											"end": 18224,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18200,
											"end": 18201,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18189,
											"end": 18198,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18185,
											"end": 18202,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18178,
											"end": 18225,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18242,
											"end": 18373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 18368,
											"end": 18372,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18242,
											"end": 18373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 18242,
											"end": 18373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18242,
											"end": 18373,
											"name": "tag",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 18242,
											"end": 18373,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18234,
											"end": 18373,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18234,
											"end": 18373,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17961,
											"end": 18380,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17961,
											"end": 18380,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17961,
											"end": 18380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17961,
											"end": 18380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18386,
											"end": 18558,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 18386,
											"end": 18558,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18526,
											"end": 18550,
											"name": "PUSH",
											"source": 14,
											"value": "496E636F727265637420457468657220616D6F756E7400000000000000000000"
										},
										{
											"begin": 18522,
											"end": 18523,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18514,
											"end": 18520,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18510,
											"end": 18524,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18503,
											"end": 18551,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18386,
											"end": 18558,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18386,
											"end": 18558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18564,
											"end": 18930,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 18564,
											"end": 18930,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18706,
											"end": 18709,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18727,
											"end": 18794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 18791,
											"end": 18793,
											"name": "PUSH",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 18786,
											"end": 18789,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18727,
											"end": 18794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 18727,
											"end": 18794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18727,
											"end": 18794,
											"name": "tag",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 18727,
											"end": 18794,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18720,
											"end": 18794,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18720,
											"end": 18794,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18803,
											"end": 18896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 18892,
											"end": 18895,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18803,
											"end": 18896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 18803,
											"end": 18896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18803,
											"end": 18896,
											"name": "tag",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 18803,
											"end": 18896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18921,
											"end": 18923,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18916,
											"end": 18919,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18912,
											"end": 18924,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18905,
											"end": 18924,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18905,
											"end": 18924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18564,
											"end": 18930,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18564,
											"end": 18930,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18564,
											"end": 18930,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18564,
											"end": 18930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18936,
											"end": 19355,
											"name": "tag",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 18936,
											"end": 19355,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19102,
											"end": 19106,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19140,
											"end": 19142,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19129,
											"end": 19138,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19117,
											"end": 19143,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19117,
											"end": 19143,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19189,
											"end": 19198,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19183,
											"end": 19187,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19179,
											"end": 19199,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19175,
											"end": 19176,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19164,
											"end": 19173,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19160,
											"end": 19177,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19153,
											"end": 19200,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19217,
											"end": 19348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 19343,
											"end": 19347,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19217,
											"end": 19348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 19217,
											"end": 19348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19217,
											"end": 19348,
											"name": "tag",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 19217,
											"end": 19348,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19209,
											"end": 19348,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19209,
											"end": 19348,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18936,
											"end": 19355,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18936,
											"end": 19355,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18936,
											"end": 19355,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18936,
											"end": 19355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19361,
											"end": 19588,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 19361,
											"end": 19588,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19501,
											"end": 19535,
											"name": "PUSH",
											"source": 14,
											"value": "4465706F73697420616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 19497,
											"end": 19498,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19489,
											"end": 19495,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19485,
											"end": 19499,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19478,
											"end": 19536,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19570,
											"end": 19580,
											"name": "PUSH",
											"source": 14,
											"value": "68616E207A65726F000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19565,
											"end": 19567,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19557,
											"end": 19563,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19553,
											"end": 19568,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19546,
											"end": 19581,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19361,
											"end": 19588,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19361,
											"end": 19588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19594,
											"end": 19960,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 19594,
											"end": 19960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19736,
											"end": 19739,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19757,
											"end": 19824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 19821,
											"end": 19823,
											"name": "PUSH",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 19816,
											"end": 19819,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19757,
											"end": 19824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 19757,
											"end": 19824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19757,
											"end": 19824,
											"name": "tag",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 19757,
											"end": 19824,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19750,
											"end": 19824,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19750,
											"end": 19824,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19833,
											"end": 19926,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 19922,
											"end": 19925,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19833,
											"end": 19926,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 19833,
											"end": 19926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19833,
											"end": 19926,
											"name": "tag",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 19833,
											"end": 19926,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19951,
											"end": 19953,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19946,
											"end": 19949,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19942,
											"end": 19954,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19935,
											"end": 19954,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19935,
											"end": 19954,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19594,
											"end": 19960,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19594,
											"end": 19960,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19594,
											"end": 19960,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19594,
											"end": 19960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19966,
											"end": 20385,
											"name": "tag",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 19966,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20132,
											"end": 20136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20170,
											"end": 20172,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20159,
											"end": 20168,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20155,
											"end": 20173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20147,
											"end": 20173,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20147,
											"end": 20173,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20219,
											"end": 20228,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20213,
											"end": 20217,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20209,
											"end": 20229,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20205,
											"end": 20206,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20194,
											"end": 20203,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20190,
											"end": 20207,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20183,
											"end": 20230,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20247,
											"end": 20378,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 20373,
											"end": 20377,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20247,
											"end": 20378,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 20247,
											"end": 20378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20247,
											"end": 20378,
											"name": "tag",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 20247,
											"end": 20378,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20239,
											"end": 20378,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20239,
											"end": 20378,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19966,
											"end": 20385,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19966,
											"end": 20385,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19966,
											"end": 20385,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19966,
											"end": 20385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20391,
											"end": 20476,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 20391,
											"end": 20476,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20436,
											"end": 20443,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20465,
											"end": 20470,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20454,
											"end": 20470,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20454,
											"end": 20470,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20391,
											"end": 20476,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20391,
											"end": 20476,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20391,
											"end": 20476,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20391,
											"end": 20476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20482,
											"end": 20638,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 20482,
											"end": 20638,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20539,
											"end": 20548,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20572,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 20589,
											"end": 20631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 20598,
											"end": 20630,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 20624,
											"end": 20629,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20598,
											"end": 20630,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 20598,
											"end": 20630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20598,
											"end": 20630,
											"name": "tag",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 20598,
											"end": 20630,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20589,
											"end": 20631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 20589,
											"end": 20631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20589,
											"end": 20631,
											"name": "tag",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 20589,
											"end": 20631,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20572,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 20572,
											"end": 20632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20572,
											"end": 20632,
											"name": "tag",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 20572,
											"end": 20632,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20559,
											"end": 20632,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20559,
											"end": 20632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20482,
											"end": 20638,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20482,
											"end": 20638,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20482,
											"end": 20638,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20482,
											"end": 20638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20644,
											"end": 20789,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 20644,
											"end": 20789,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20738,
											"end": 20782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 20776,
											"end": 20781,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20738,
											"end": 20782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 20738,
											"end": 20782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20738,
											"end": 20782,
											"name": "tag",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 20738,
											"end": 20782,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20733,
											"end": 20736,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20726,
											"end": 20783,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20644,
											"end": 20789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20644,
											"end": 20789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20644,
											"end": 20789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20795,
											"end": 21031,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 20795,
											"end": 21031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20895,
											"end": 20899,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20933,
											"end": 20935,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20922,
											"end": 20931,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20918,
											"end": 20936,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20910,
											"end": 20936,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20910,
											"end": 20936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20946,
											"end": 21024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 21021,
											"end": 21022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21010,
											"end": 21019,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21006,
											"end": 21023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20997,
											"end": 21003,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20946,
											"end": 21024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 20946,
											"end": 21024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20946,
											"end": 21024,
											"name": "tag",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 20946,
											"end": 21024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20795,
											"end": 21031,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20795,
											"end": 21031,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20795,
											"end": 21031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20795,
											"end": 21031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20795,
											"end": 21031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21037,
											"end": 21217,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 21037,
											"end": 21217,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21085,
											"end": 21162,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21082,
											"end": 21083,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21075,
											"end": 21163,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21182,
											"end": 21186,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 21179,
											"end": 21180,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 21172,
											"end": 21187,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21206,
											"end": 21210,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 21203,
											"end": 21204,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21196,
											"end": 21211,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 21223,
											"end": 21543,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 21223,
											"end": 21543,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21267,
											"end": 21273,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21304,
											"end": 21305,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 21298,
											"end": 21302,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21294,
											"end": 21306,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 21284,
											"end": 21306,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21284,
											"end": 21306,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21351,
											"end": 21352,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 21345,
											"end": 21349,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21341,
											"end": 21353,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 21372,
											"end": 21390,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21362,
											"end": 21443,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 21362,
											"end": 21443,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21428,
											"end": 21432,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 21420,
											"end": 21426,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21416,
											"end": 21433,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 21406,
											"end": 21433,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21406,
											"end": 21433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21362,
											"end": 21443,
											"name": "tag",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 21362,
											"end": 21443,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21490,
											"end": 21492,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21482,
											"end": 21488,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21479,
											"end": 21493,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 21459,
											"end": 21477,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21456,
											"end": 21494,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21453,
											"end": 21537,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 21453,
											"end": 21537,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21509,
											"end": 21527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 21509,
											"end": 21527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 21509,
											"end": 21527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21509,
											"end": 21527,
											"name": "tag",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 21509,
											"end": 21527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21453,
											"end": 21537,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 21453,
											"end": 21537,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21274,
											"end": 21543,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21223,
											"end": 21543,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21223,
											"end": 21543,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21223,
											"end": 21543,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21223,
											"end": 21543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21549,
											"end": 21639,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 21549,
											"end": 21639,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21583,
											"end": 21590,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21626,
											"end": 21631,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21619,
											"end": 21632,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21612,
											"end": 21633,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21601,
											"end": 21633,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21601,
											"end": 21633,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21549,
											"end": 21639,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21549,
											"end": 21639,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21549,
											"end": 21639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21549,
											"end": 21639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21645,
											"end": 21761,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 21645,
											"end": 21761,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21715,
											"end": 21736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 21730,
											"end": 21735,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21715,
											"end": 21736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 21715,
											"end": 21736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21715,
											"end": 21736,
											"name": "tag",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 21715,
											"end": 21736,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21708,
											"end": 21713,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21705,
											"end": 21737,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 21695,
											"end": 21755,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 21695,
											"end": 21755,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21751,
											"end": 21752,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21748,
											"end": 21749,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21741,
											"end": 21753,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 21695,
											"end": 21755,
											"name": "tag",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 21695,
											"end": 21755,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21645,
											"end": 21761,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21645,
											"end": 21761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21767,
											"end": 21904,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 21767,
											"end": 21904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21821,
											"end": 21826,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21852,
											"end": 21858,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21846,
											"end": 21859,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 21837,
											"end": 21859,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21837,
											"end": 21859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21868,
											"end": 21898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 21892,
											"end": 21897,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21868,
											"end": 21898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 21868,
											"end": 21898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21868,
											"end": 21898,
											"name": "tag",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 21868,
											"end": 21898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21767,
											"end": 21904,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21767,
											"end": 21904,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21767,
											"end": 21904,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21767,
											"end": 21904,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21767,
											"end": 21904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21910,
											"end": 22255,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 21910,
											"end": 22255,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21977,
											"end": 21983,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22026,
											"end": 22028,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22014,
											"end": 22023,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22005,
											"end": 22012,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22001,
											"end": 22024,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21997,
											"end": 22029,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 21994,
											"end": 22113,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21994,
											"end": 22113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 21994,
											"end": 22113,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 22032,
											"end": 22111,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 22032,
											"end": 22111,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 22032,
											"end": 22111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22032,
											"end": 22111,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 22032,
											"end": 22111,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21994,
											"end": 22113,
											"name": "tag",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 21994,
											"end": 22113,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22152,
											"end": 22153,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22177,
											"end": 22238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 22230,
											"end": 22237,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22221,
											"end": 22227,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22210,
											"end": 22219,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 22206,
											"end": 22228,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22177,
											"end": 22238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 22177,
											"end": 22238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22177,
											"end": 22238,
											"name": "tag",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 22177,
											"end": 22238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22167,
											"end": 22238,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22167,
											"end": 22238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22123,
											"end": 22248,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21910,
											"end": 22255,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21910,
											"end": 22255,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21910,
											"end": 22255,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21910,
											"end": 22255,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21910,
											"end": 22255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22261,
											"end": 22433,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 22261,
											"end": 22433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22401,
											"end": 22425,
											"name": "PUSH",
											"source": 14,
											"value": "43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000"
										},
										{
											"begin": 22397,
											"end": 22398,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22389,
											"end": 22395,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22385,
											"end": 22399,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22378,
											"end": 22426,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22261,
											"end": 22433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22261,
											"end": 22433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22439,
											"end": 22805,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 22439,
											"end": 22805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22581,
											"end": 22584,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22602,
											"end": 22669,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 22666,
											"end": 22668,
											"name": "PUSH",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 22661,
											"end": 22664,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22602,
											"end": 22669,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 22602,
											"end": 22669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22602,
											"end": 22669,
											"name": "tag",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 22602,
											"end": 22669,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22595,
											"end": 22669,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22595,
											"end": 22669,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22678,
											"end": 22771,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 22767,
											"end": 22770,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22678,
											"end": 22771,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 22678,
											"end": 22771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22678,
											"end": 22771,
											"name": "tag",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 22678,
											"end": 22771,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22796,
											"end": 22798,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22791,
											"end": 22794,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22787,
											"end": 22799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22780,
											"end": 22799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22780,
											"end": 22799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22439,
											"end": 22805,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22439,
											"end": 22805,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22439,
											"end": 22805,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22439,
											"end": 22805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22811,
											"end": 23230,
											"name": "tag",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 22811,
											"end": 23230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22977,
											"end": 22981,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23015,
											"end": 23017,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23004,
											"end": 23013,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23000,
											"end": 23018,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22992,
											"end": 23018,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22992,
											"end": 23018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23064,
											"end": 23073,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23058,
											"end": 23062,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23054,
											"end": 23074,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 23050,
											"end": 23051,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23039,
											"end": 23048,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23035,
											"end": 23052,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23028,
											"end": 23075,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 23218,
											"end": 23222,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 23092,
											"end": 23223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23084,
											"end": 23223,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23084,
											"end": 23223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22811,
											"end": 23230,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22811,
											"end": 23230,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22811,
											"end": 23230,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22811,
											"end": 23230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23236,
											"end": 23457,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 23236,
											"end": 23457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23376,
											"end": 23410,
											"name": "PUSH",
											"source": 14,
											"value": "53746172742074696D65206D757374206265206265666F726520656E64207469"
										},
										{
											"begin": 23372,
											"end": 23373,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23364,
											"end": 23370,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23360,
											"end": 23374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23353,
											"end": 23411,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23445,
											"end": 23449,
											"name": "PUSH",
											"source": 14,
											"value": "6D65000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23440,
											"end": 23442,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23432,
											"end": 23438,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23428,
											"end": 23443,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23421,
											"end": 23450,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23236,
											"end": 23457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23236,
											"end": 23457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23463,
											"end": 23829,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 23463,
											"end": 23829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23605,
											"end": 23608,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23626,
											"end": 23693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 23690,
											"end": 23692,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 23685,
											"end": 23688,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23626,
											"end": 23693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 23626,
											"end": 23693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23626,
											"end": 23693,
											"name": "tag",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 23626,
											"end": 23693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23619,
											"end": 23693,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23619,
											"end": 23693,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23702,
											"end": 23795,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 23791,
											"end": 23794,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23702,
											"end": 23795,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 23702,
											"end": 23795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23702,
											"end": 23795,
											"name": "tag",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 23702,
											"end": 23795,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23820,
											"end": 23822,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 23815,
											"end": 23818,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23811,
											"end": 23823,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23804,
											"end": 23823,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23804,
											"end": 23823,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23463,
											"end": 23829,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23463,
											"end": 23829,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23463,
											"end": 23829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23463,
											"end": 23829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23835,
											"end": 24254,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 23835,
											"end": 24254,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24001,
											"end": 24005,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24039,
											"end": 24041,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24028,
											"end": 24037,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24024,
											"end": 24042,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24016,
											"end": 24042,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24016,
											"end": 24042,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24088,
											"end": 24097,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24082,
											"end": 24086,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24078,
											"end": 24098,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 24074,
											"end": 24075,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24063,
											"end": 24072,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24059,
											"end": 24076,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24052,
											"end": 24099,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24116,
											"end": 24247,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 24242,
											"end": 24246,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24116,
											"end": 24247,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 24116,
											"end": 24247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24116,
											"end": 24247,
											"name": "tag",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 24116,
											"end": 24247,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24108,
											"end": 24247,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24108,
											"end": 24247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23835,
											"end": 24254,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23835,
											"end": 24254,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23835,
											"end": 24254,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23835,
											"end": 24254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24260,
											"end": 24401,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 24260,
											"end": 24401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24309,
											"end": 24313,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24332,
											"end": 24335,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24324,
											"end": 24335,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24324,
											"end": 24335,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24355,
											"end": 24358,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24352,
											"end": 24353,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24345,
											"end": 24359,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24389,
											"end": 24393,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24386,
											"end": 24387,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 24368,
											"end": 24394,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24368,
											"end": 24394,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24260,
											"end": 24401,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24260,
											"end": 24401,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24260,
											"end": 24401,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24260,
											"end": 24401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24407,
											"end": 24500,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 24407,
											"end": 24500,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24444,
											"end": 24450,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24491,
											"end": 24493,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24486,
											"end": 24488,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 24479,
											"end": 24484,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24475,
											"end": 24489,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24471,
											"end": 24494,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 24461,
											"end": 24494,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24461,
											"end": 24494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24407,
											"end": 24500,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24407,
											"end": 24500,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24407,
											"end": 24500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24407,
											"end": 24500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24506,
											"end": 24613,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 24506,
											"end": 24613,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24550,
											"end": 24558,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24600,
											"end": 24605,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24594,
											"end": 24598,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24590,
											"end": 24606,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 24569,
											"end": 24606,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24569,
											"end": 24606,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24506,
											"end": 24613,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24506,
											"end": 24613,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24506,
											"end": 24613,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24506,
											"end": 24613,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24506,
											"end": 24613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24619,
											"end": 25012,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 24619,
											"end": 25012,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24688,
											"end": 24694,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24738,
											"end": 24739,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 24726,
											"end": 24736,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24722,
											"end": 24740,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 24761,
											"end": 24858,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 24791,
											"end": 24857,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24780,
											"end": 24789,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24761,
											"end": 24858,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 24761,
											"end": 24858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24761,
											"end": 24858,
											"name": "tag",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 24761,
											"end": 24858,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24879,
											"end": 24918,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 24909,
											"end": 24917,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 24898,
											"end": 24907,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24879,
											"end": 24918,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 24879,
											"end": 24918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24879,
											"end": 24918,
											"name": "tag",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 24879,
											"end": 24918,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24867,
											"end": 24918,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 24867,
											"end": 24918,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24951,
											"end": 24955,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 24947,
											"end": 24956,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 24940,
											"end": 24945,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24936,
											"end": 24957,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 24927,
											"end": 24957,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24927,
											"end": 24957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25000,
											"end": 25004,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 24990,
											"end": 24998,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 24986,
											"end": 25005,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 24979,
											"end": 24984,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24976,
											"end": 25006,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 24966,
											"end": 25006,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24966,
											"end": 25006,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24695,
											"end": 25012,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24695,
											"end": 25012,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24619,
											"end": 25012,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24619,
											"end": 25012,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24619,
											"end": 25012,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24619,
											"end": 25012,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24619,
											"end": 25012,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24619,
											"end": 25012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25018,
											"end": 25160,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 25018,
											"end": 25160,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25068,
											"end": 25077,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25101,
											"end": 25154,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 25119,
											"end": 25153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 25128,
											"end": 25152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 25146,
											"end": 25151,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25128,
											"end": 25152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 25128,
											"end": 25152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25128,
											"end": 25152,
											"name": "tag",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 25128,
											"end": 25152,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25119,
											"end": 25153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 25119,
											"end": 25153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25119,
											"end": 25153,
											"name": "tag",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 25119,
											"end": 25153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25101,
											"end": 25154,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 25101,
											"end": 25154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25101,
											"end": 25154,
											"name": "tag",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 25101,
											"end": 25154,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25088,
											"end": 25154,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25088,
											"end": 25154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25018,
											"end": 25160,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25018,
											"end": 25160,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25018,
											"end": 25160,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25018,
											"end": 25160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25166,
											"end": 25241,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 25166,
											"end": 25241,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25209,
											"end": 25212,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25230,
											"end": 25235,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25223,
											"end": 25235,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25223,
											"end": 25235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25166,
											"end": 25241,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25166,
											"end": 25241,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25166,
											"end": 25241,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25166,
											"end": 25241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25247,
											"end": 25516,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 25247,
											"end": 25516,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 25388,
											"end": 25395,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 25357,
											"end": 25396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25396,
											"name": "tag",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 25357,
											"end": 25396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25418,
											"end": 25509,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 25467,
											"end": 25508,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 25491,
											"end": 25507,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25467,
											"end": 25508,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 25467,
											"end": 25508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25467,
											"end": 25508,
											"name": "tag",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 25467,
											"end": 25508,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25459,
											"end": 25465,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25452,
											"end": 25456,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25446,
											"end": 25457,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 25418,
											"end": 25509,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 25418,
											"end": 25509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25418,
											"end": 25509,
											"name": "tag",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 25418,
											"end": 25509,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25412,
											"end": 25416,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25405,
											"end": 25510,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 25323,
											"end": 25516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25247,
											"end": 25516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25247,
											"end": 25516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25247,
											"end": 25516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25247,
											"end": 25516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25522,
											"end": 25595,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 25522,
											"end": 25595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25567,
											"end": 25570,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25522,
											"end": 25595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25522,
											"end": 25595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25601,
											"end": 25790,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 25601,
											"end": 25790,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25678,
											"end": 25710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 25678,
											"end": 25710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 25678,
											"end": 25710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25678,
											"end": 25710,
											"name": "tag",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 25678,
											"end": 25710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25719,
											"end": 25784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 25777,
											"end": 25783,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25769,
											"end": 25775,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25763,
											"end": 25767,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25719,
											"end": 25784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 25719,
											"end": 25784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25719,
											"end": 25784,
											"name": "tag",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 25719,
											"end": 25784,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25654,
											"end": 25790,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25601,
											"end": 25790,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25601,
											"end": 25790,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25601,
											"end": 25790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25796,
											"end": 25982,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 25796,
											"end": 25982,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25856,
											"end": 25976,
											"name": "tag",
											"source": 14,
											"value": "674"
										},
										{
											"begin": 25856,
											"end": 25976,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25873,
											"end": 25876,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25866,
											"end": 25871,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25863,
											"end": 25877,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 25856,
											"end": 25976,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 25856,
											"end": 25976,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 25856,
											"end": 25976,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 25927,
											"end": 25966,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 25964,
											"end": 25965,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25957,
											"end": 25962,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25927,
											"end": 25966,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 25927,
											"end": 25966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25927,
											"end": 25966,
											"name": "tag",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 25927,
											"end": 25966,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25900,
											"end": 25901,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 25893,
											"end": 25898,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25889,
											"end": 25902,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25880,
											"end": 25902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25880,
											"end": 25902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25856,
											"end": 25976,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "674"
										},
										{
											"begin": 25856,
											"end": 25976,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25856,
											"end": 25976,
											"name": "tag",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 25856,
											"end": 25976,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25796,
											"end": 25982,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25796,
											"end": 25982,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25796,
											"end": 25982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25988,
											"end": 26531,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 25988,
											"end": 26531,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26089,
											"end": 26091,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 26084,
											"end": 26087,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26081,
											"end": 26092,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 26078,
											"end": 26524,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26078,
											"end": 26524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 26078,
											"end": 26524,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26123,
											"end": 26161,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "680"
										},
										{
											"begin": 26155,
											"end": 26160,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26123,
											"end": 26161,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 26123,
											"end": 26161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26123,
											"end": 26161,
											"name": "tag",
											"source": 14,
											"value": "680"
										},
										{
											"begin": 26123,
											"end": 26161,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26207,
											"end": 26236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 26225,
											"end": 26235,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26207,
											"end": 26236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 26207,
											"end": 26236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26207,
											"end": 26236,
											"name": "tag",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 26207,
											"end": 26236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26197,
											"end": 26205,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26193,
											"end": 26237,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26390,
											"end": 26392,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26378,
											"end": 26388,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26375,
											"end": 26393,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 26372,
											"end": 26421,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26372,
											"end": 26421,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 26372,
											"end": 26421,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26411,
											"end": 26419,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26396,
											"end": 26419,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26396,
											"end": 26419,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26372,
											"end": 26421,
											"name": "tag",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 26372,
											"end": 26421,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26434,
											"end": 26514,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 26490,
											"end": 26512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 26508,
											"end": 26511,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26490,
											"end": 26512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 26490,
											"end": 26512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26490,
											"end": 26512,
											"name": "tag",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 26490,
											"end": 26512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26480,
											"end": 26488,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26476,
											"end": 26513,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26463,
											"end": 26474,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26434,
											"end": 26514,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 26434,
											"end": 26514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26434,
											"end": 26514,
											"name": "tag",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 26434,
											"end": 26514,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26093,
											"end": 26524,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26093,
											"end": 26524,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26078,
											"end": 26524,
											"name": "tag",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 26078,
											"end": 26524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25988,
											"end": 26531,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25988,
											"end": 26531,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25988,
											"end": 26531,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25988,
											"end": 26531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26537,
											"end": 26654,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 26537,
											"end": 26654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26591,
											"end": 26599,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26641,
											"end": 26646,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26635,
											"end": 26639,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26631,
											"end": 26647,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 26610,
											"end": 26647,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26610,
											"end": 26647,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26537,
											"end": 26654,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26537,
											"end": 26654,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26537,
											"end": 26654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26537,
											"end": 26654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26537,
											"end": 26654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26660,
											"end": 26829,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 26660,
											"end": 26829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26704,
											"end": 26710,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26737,
											"end": 26788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 26785,
											"end": 26786,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26781,
											"end": 26787,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 26773,
											"end": 26778,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26770,
											"end": 26771,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 26766,
											"end": 26779,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 26737,
											"end": 26788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 26737,
											"end": 26788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26737,
											"end": 26788,
											"name": "tag",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 26737,
											"end": 26788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26733,
											"end": 26789,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 26818,
											"end": 26822,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 26812,
											"end": 26816,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26808,
											"end": 26823,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 26798,
											"end": 26823,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26798,
											"end": 26823,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26711,
											"end": 26829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26660,
											"end": 26829,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26660,
											"end": 26829,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26660,
											"end": 26829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26660,
											"end": 26829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26660,
											"end": 26829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26834,
											"end": 27129,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 26834,
											"end": 27129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26910,
											"end": 26914,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27056,
											"end": 27085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 27081,
											"end": 27084,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27075,
											"end": 27079,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27056,
											"end": 27085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 27056,
											"end": 27085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27056,
											"end": 27085,
											"name": "tag",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 27056,
											"end": 27085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27048,
											"end": 27085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27048,
											"end": 27085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27118,
											"end": 27121,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27115,
											"end": 27116,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 27111,
											"end": 27122,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 27105,
											"end": 27109,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27102,
											"end": 27123,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 27094,
											"end": 27123,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27094,
											"end": 27123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26834,
											"end": 27129,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26834,
											"end": 27129,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26834,
											"end": 27129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26834,
											"end": 27129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26834,
											"end": 27129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27134,
											"end": 28529,
											"name": "tag",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 27134,
											"end": 28529,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27251,
											"end": 27288,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 27284,
											"end": 27287,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27251,
											"end": 27288,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 27251,
											"end": 27288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27251,
											"end": 27288,
											"name": "tag",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 27251,
											"end": 27288,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27353,
											"end": 27371,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27345,
											"end": 27351,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27342,
											"end": 27372,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 27339,
											"end": 27395,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 27339,
											"end": 27395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 27339,
											"end": 27395,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 27375,
											"end": 27393,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 27375,
											"end": 27393,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 27375,
											"end": 27393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27375,
											"end": 27393,
											"name": "tag",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 27375,
											"end": 27393,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27339,
											"end": 27395,
											"name": "tag",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 27339,
											"end": 27395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27419,
											"end": 27457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 27451,
											"end": 27455,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27445,
											"end": 27456,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 27419,
											"end": 27457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 27419,
											"end": 27457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27419,
											"end": 27457,
											"name": "tag",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 27419,
											"end": 27457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27504,
											"end": 27571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 27564,
											"end": 27570,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27556,
											"end": 27562,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27550,
											"end": 27554,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27504,
											"end": 27571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 27504,
											"end": 27571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27504,
											"end": 27571,
											"name": "tag",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 27504,
											"end": 27571,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27598,
											"end": 27599,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27622,
											"end": 27626,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27609,
											"end": 27626,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27609,
											"end": 27626,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27654,
											"end": 27656,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 27646,
											"end": 27652,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27643,
											"end": 27657,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 27671,
											"end": 27672,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 27666,
											"end": 28284,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27666,
											"end": 28284,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 27666,
											"end": 28284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 27666,
											"end": 28284,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28328,
											"end": 28329,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28345,
											"end": 28351,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28342,
											"end": 28419,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 28342,
											"end": 28419,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "698"
										},
										{
											"begin": 28342,
											"end": 28419,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28394,
											"end": 28403,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28389,
											"end": 28392,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 28385,
											"end": 28404,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28379,
											"end": 28405,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 28370,
											"end": 28405,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28370,
											"end": 28405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28342,
											"end": 28419,
											"name": "tag",
											"source": 14,
											"value": "698"
										},
										{
											"begin": 28342,
											"end": 28419,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28445,
											"end": 28512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 28505,
											"end": 28511,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28498,
											"end": 28503,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28445,
											"end": 28512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 28445,
											"end": 28512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28445,
											"end": 28512,
											"name": "tag",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 28445,
											"end": 28512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28439,
											"end": 28443,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28432,
											"end": 28513,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 28301,
											"end": 28523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27636,
											"end": 28523,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 27636,
											"end": 28523,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27666,
											"end": 28284,
											"name": "tag",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 27666,
											"end": 28284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27718,
											"end": 27722,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 27714,
											"end": 27723,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 27706,
											"end": 27712,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27702,
											"end": 27724,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 27752,
											"end": 27789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 27784,
											"end": 27788,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 27752,
											"end": 27789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 27752,
											"end": 27789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27752,
											"end": 27789,
											"name": "tag",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 27752,
											"end": 27789,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27811,
											"end": 27812,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27825,
											"end": 28033,
											"name": "tag",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 27825,
											"end": 28033,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27839,
											"end": 27846,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27836,
											"end": 27837,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27833,
											"end": 27847,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 27825,
											"end": 28033,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 27825,
											"end": 28033,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "703"
										},
										{
											"begin": 27825,
											"end": 28033,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 27918,
											"end": 27927,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27913,
											"end": 27916,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 27909,
											"end": 27928,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27903,
											"end": 27929,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 27895,
											"end": 27901,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27888,
											"end": 27930,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 27969,
											"end": 27970,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 27961,
											"end": 27967,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27957,
											"end": 27971,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27947,
											"end": 27971,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27947,
											"end": 27971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28016,
											"end": 28018,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28005,
											"end": 28014,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28001,
											"end": 28019,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27988,
											"end": 28019,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 27988,
											"end": 28019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27862,
											"end": 27866,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27859,
											"end": 27860,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27855,
											"end": 27867,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27850,
											"end": 27867,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27850,
											"end": 27867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27825,
											"end": 28033,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 27825,
											"end": 28033,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27825,
											"end": 28033,
											"name": "tag",
											"source": 14,
											"value": "703"
										},
										{
											"begin": 27825,
											"end": 28033,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28061,
											"end": 28067,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28052,
											"end": 28059,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28049,
											"end": 28068,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 28046,
											"end": 28225,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 28046,
											"end": 28225,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 28046,
											"end": 28225,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28119,
											"end": 28128,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28114,
											"end": 28117,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 28110,
											"end": 28129,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28104,
											"end": 28130,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 28162,
											"end": 28210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 28204,
											"end": 28208,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 28196,
											"end": 28202,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 28192,
											"end": 28209,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 28181,
											"end": 28190,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28162,
											"end": 28210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 28162,
											"end": 28210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28162,
											"end": 28210,
											"name": "tag",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 28162,
											"end": 28210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28154,
											"end": 28160,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28147,
											"end": 28211,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 28069,
											"end": 28225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28046,
											"end": 28225,
											"name": "tag",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 28046,
											"end": 28225,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28271,
											"end": 28272,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 28267,
											"end": 28268,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 28259,
											"end": 28265,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 28255,
											"end": 28269,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 28251,
											"end": 28273,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28245,
											"end": 28249,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 28238,
											"end": 28274,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 27673,
											"end": 28284,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27673,
											"end": 28284,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27673,
											"end": 28284,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27636,
											"end": 28523,
											"name": "tag",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 27636,
											"end": 28523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27636,
											"end": 28523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27226,
											"end": 28529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27226,
											"end": 28529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27226,
											"end": 28529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27134,
											"end": 28529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27134,
											"end": 28529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27134,
											"end": 28529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28535,
											"end": 29064,
											"name": "tag",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 28535,
											"end": 29064,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28702,
											"end": 28706,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28740,
											"end": 28742,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 28729,
											"end": 28738,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28725,
											"end": 28743,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28717,
											"end": 28743,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28717,
											"end": 28743,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28753,
											"end": 28823,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 28820,
											"end": 28821,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28809,
											"end": 28818,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28805,
											"end": 28822,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28796,
											"end": 28802,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28753,
											"end": 28823,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 28753,
											"end": 28823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28753,
											"end": 28823,
											"name": "tag",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 28753,
											"end": 28823,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28833,
											"end": 28904,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 28900,
											"end": 28902,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28889,
											"end": 28898,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28885,
											"end": 28903,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28876,
											"end": 28882,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28833,
											"end": 28904,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 28833,
											"end": 28904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28833,
											"end": 28904,
											"name": "tag",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 28833,
											"end": 28904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28951,
											"end": 28960,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28945,
											"end": 28949,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28941,
											"end": 28961,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 28936,
											"end": 28938,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 28925,
											"end": 28934,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28921,
											"end": 28939,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28914,
											"end": 28962,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 28979,
											"end": 29057,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 29052,
											"end": 29056,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29043,
											"end": 29049,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28979,
											"end": 29057,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 28979,
											"end": 29057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28979,
											"end": 29057,
											"name": "tag",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 28979,
											"end": 29057,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28971,
											"end": 29057,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28971,
											"end": 29057,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28535,
											"end": 29064,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 28535,
											"end": 29064,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 28535,
											"end": 29064,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28535,
											"end": 29064,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28535,
											"end": 29064,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28535,
											"end": 29064,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28535,
											"end": 29064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29070,
											"end": 29237,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 29070,
											"end": 29237,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29210,
											"end": 29229,
											"name": "PUSH",
											"source": 14,
											"value": "5A65726F20616464726573732075736572000000000000000000000000000000"
										},
										{
											"begin": 29206,
											"end": 29207,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29198,
											"end": 29204,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29194,
											"end": 29208,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29187,
											"end": 29230,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29070,
											"end": 29237,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29070,
											"end": 29237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29243,
											"end": 29609,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 29243,
											"end": 29609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29385,
											"end": 29388,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29406,
											"end": 29473,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 29470,
											"end": 29472,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 29465,
											"end": 29468,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29406,
											"end": 29473,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 29406,
											"end": 29473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29406,
											"end": 29473,
											"name": "tag",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 29406,
											"end": 29473,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29399,
											"end": 29473,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29399,
											"end": 29473,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29482,
											"end": 29575,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 29571,
											"end": 29574,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29482,
											"end": 29575,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 29482,
											"end": 29575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29482,
											"end": 29575,
											"name": "tag",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 29482,
											"end": 29575,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29600,
											"end": 29602,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29595,
											"end": 29598,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29591,
											"end": 29603,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29584,
											"end": 29603,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29584,
											"end": 29603,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29243,
											"end": 29609,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29243,
											"end": 29609,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29243,
											"end": 29609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29243,
											"end": 29609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29615,
											"end": 30034,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 29615,
											"end": 30034,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29781,
											"end": 29785,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29819,
											"end": 29821,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29808,
											"end": 29817,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29804,
											"end": 29822,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29796,
											"end": 29822,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29796,
											"end": 29822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29868,
											"end": 29877,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29862,
											"end": 29866,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29858,
											"end": 29878,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 29854,
											"end": 29855,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29843,
											"end": 29852,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29839,
											"end": 29856,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29832,
											"end": 29879,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29896,
											"end": 30027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 30022,
											"end": 30026,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29896,
											"end": 30027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 29896,
											"end": 30027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29896,
											"end": 30027,
											"name": "tag",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 29896,
											"end": 30027,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29888,
											"end": 30027,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29888,
											"end": 30027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29615,
											"end": 30034,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29615,
											"end": 30034,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29615,
											"end": 30034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29615,
											"end": 30034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30040,
											"end": 30214,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 30040,
											"end": 30214,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30180,
											"end": 30206,
											"name": "PUSH",
											"source": 14,
											"value": "4D69736D617463686564206172726179206C656E677468730000000000000000"
										},
										{
											"begin": 30176,
											"end": 30177,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30168,
											"end": 30174,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30164,
											"end": 30178,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30157,
											"end": 30207,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30040,
											"end": 30214,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30040,
											"end": 30214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30220,
											"end": 30586,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 30220,
											"end": 30586,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30362,
											"end": 30365,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30383,
											"end": 30450,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 30447,
											"end": 30449,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 30442,
											"end": 30445,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30383,
											"end": 30450,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 30383,
											"end": 30450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30383,
											"end": 30450,
											"name": "tag",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 30383,
											"end": 30450,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30376,
											"end": 30450,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30376,
											"end": 30450,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30459,
											"end": 30552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 30548,
											"end": 30551,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30459,
											"end": 30552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 30459,
											"end": 30552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30459,
											"end": 30552,
											"name": "tag",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 30459,
											"end": 30552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30577,
											"end": 30579,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 30572,
											"end": 30575,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30568,
											"end": 30580,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30561,
											"end": 30580,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30561,
											"end": 30580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30220,
											"end": 30586,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30220,
											"end": 30586,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30220,
											"end": 30586,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30220,
											"end": 30586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30592,
											"end": 31011,
											"name": "tag",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 30592,
											"end": 31011,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30758,
											"end": 30762,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30796,
											"end": 30798,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 30785,
											"end": 30794,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30781,
											"end": 30799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30773,
											"end": 30799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30773,
											"end": 30799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30845,
											"end": 30854,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30839,
											"end": 30843,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30835,
											"end": 30855,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 30831,
											"end": 30832,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30820,
											"end": 30829,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30816,
											"end": 30833,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30809,
											"end": 30856,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30873,
											"end": 31004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 30999,
											"end": 31003,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30873,
											"end": 31004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 30873,
											"end": 31004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30873,
											"end": 31004,
											"name": "tag",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 30873,
											"end": 31004,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30865,
											"end": 31004,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30865,
											"end": 31004,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30592,
											"end": 31011,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30592,
											"end": 31011,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30592,
											"end": 31011,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30592,
											"end": 31011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31017,
											"end": 31197,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 31017,
											"end": 31197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31065,
											"end": 31142,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31062,
											"end": 31063,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31055,
											"end": 31143,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31162,
											"end": 31166,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 31159,
											"end": 31160,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 31152,
											"end": 31167,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31186,
											"end": 31190,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 31183,
											"end": 31184,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31176,
											"end": 31191,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 31203,
											"end": 31433,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 31203,
											"end": 31433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31343,
											"end": 31377,
											"name": "PUSH",
											"source": 14,
											"value": "5769746864726177616C20616D6F756E74206D75737420626520677265617465"
										},
										{
											"begin": 31339,
											"end": 31340,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31331,
											"end": 31337,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31327,
											"end": 31341,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31320,
											"end": 31378,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31412,
											"end": 31425,
											"name": "PUSH",
											"source": 14,
											"value": "72207468616E207A65726F000000000000000000000000000000000000000000"
										},
										{
											"begin": 31407,
											"end": 31409,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 31399,
											"end": 31405,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31395,
											"end": 31410,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31388,
											"end": 31426,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31203,
											"end": 31433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31203,
											"end": 31433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31439,
											"end": 31805,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 31439,
											"end": 31805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31581,
											"end": 31584,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31602,
											"end": 31669,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "725"
										},
										{
											"begin": 31666,
											"end": 31668,
											"name": "PUSH",
											"source": 14,
											"value": "2B"
										},
										{
											"begin": 31661,
											"end": 31664,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31602,
											"end": 31669,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 31602,
											"end": 31669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31602,
											"end": 31669,
											"name": "tag",
											"source": 14,
											"value": "725"
										},
										{
											"begin": 31602,
											"end": 31669,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31595,
											"end": 31669,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31595,
											"end": 31669,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31678,
											"end": 31771,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 31767,
											"end": 31770,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31678,
											"end": 31771,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 31678,
											"end": 31771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31678,
											"end": 31771,
											"name": "tag",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 31678,
											"end": 31771,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31796,
											"end": 31798,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 31791,
											"end": 31794,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31787,
											"end": 31799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31780,
											"end": 31799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31780,
											"end": 31799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31439,
											"end": 31805,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31439,
											"end": 31805,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31439,
											"end": 31805,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31439,
											"end": 31805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31811,
											"end": 32230,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 31811,
											"end": 32230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31977,
											"end": 31981,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32015,
											"end": 32017,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 32004,
											"end": 32013,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32000,
											"end": 32018,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31992,
											"end": 32018,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31992,
											"end": 32018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32064,
											"end": 32073,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32058,
											"end": 32062,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32054,
											"end": 32074,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 32050,
											"end": 32051,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32039,
											"end": 32048,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 32035,
											"end": 32052,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32028,
											"end": 32075,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 32092,
											"end": 32223,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 32218,
											"end": 32222,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32092,
											"end": 32223,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 32092,
											"end": 32223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32092,
											"end": 32223,
											"name": "tag",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 32092,
											"end": 32223,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32084,
											"end": 32223,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32084,
											"end": 32223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31811,
											"end": 32230,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31811,
											"end": 32230,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31811,
											"end": 32230,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31811,
											"end": 32230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32236,
											"end": 32404,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 32236,
											"end": 32404,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32376,
											"end": 32396,
											"name": "PUSH",
											"source": 14,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 32372,
											"end": 32373,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32364,
											"end": 32370,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32360,
											"end": 32374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32353,
											"end": 32397,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 32236,
											"end": 32404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32236,
											"end": 32404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32410,
											"end": 32776,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 32410,
											"end": 32776,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32552,
											"end": 32555,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32573,
											"end": 32640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 32637,
											"end": 32639,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 32632,
											"end": 32635,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 32573,
											"end": 32640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 32573,
											"end": 32640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32573,
											"end": 32640,
											"name": "tag",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 32573,
											"end": 32640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32566,
											"end": 32640,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32566,
											"end": 32640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32649,
											"end": 32742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 32738,
											"end": 32741,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32649,
											"end": 32742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 32649,
											"end": 32742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32649,
											"end": 32742,
											"name": "tag",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 32649,
											"end": 32742,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32767,
											"end": 32769,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 32762,
											"end": 32765,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32758,
											"end": 32770,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32751,
											"end": 32770,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32751,
											"end": 32770,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32410,
											"end": 32776,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32410,
											"end": 32776,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32410,
											"end": 32776,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32410,
											"end": 32776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32782,
											"end": 33201,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 32782,
											"end": 33201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32948,
											"end": 32952,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32986,
											"end": 32988,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 32975,
											"end": 32984,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32971,
											"end": 32989,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32963,
											"end": 32989,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32963,
											"end": 32989,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33035,
											"end": 33044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 33029,
											"end": 33033,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 33025,
											"end": 33045,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 33021,
											"end": 33022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33010,
											"end": 33019,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 33006,
											"end": 33023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32999,
											"end": 33046,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 33063,
											"end": 33194,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 33189,
											"end": 33193,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 33063,
											"end": 33194,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 33063,
											"end": 33194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33063,
											"end": 33194,
											"name": "tag",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 33063,
											"end": 33194,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33055,
											"end": 33194,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33055,
											"end": 33194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32782,
											"end": 33201,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32782,
											"end": 33201,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32782,
											"end": 33201,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32782,
											"end": 33201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33207,
											"end": 33388,
											"name": "tag",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 33207,
											"end": 33388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33347,
											"end": 33380,
											"name": "PUSH",
											"source": 14,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 33343,
											"end": 33344,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33335,
											"end": 33341,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33331,
											"end": 33345,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33324,
											"end": 33381,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 33207,
											"end": 33388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33207,
											"end": 33388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33394,
											"end": 33760,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 33394,
											"end": 33760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33536,
											"end": 33539,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33557,
											"end": 33624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 33621,
											"end": 33623,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 33616,
											"end": 33619,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 33557,
											"end": 33624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 33557,
											"end": 33624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33557,
											"end": 33624,
											"name": "tag",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 33557,
											"end": 33624,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33550,
											"end": 33624,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 33550,
											"end": 33624,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33633,
											"end": 33726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 33722,
											"end": 33725,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33633,
											"end": 33726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 33633,
											"end": 33726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33633,
											"end": 33726,
											"name": "tag",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 33633,
											"end": 33726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33751,
											"end": 33753,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 33746,
											"end": 33749,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33742,
											"end": 33754,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33735,
											"end": 33754,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33735,
											"end": 33754,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33394,
											"end": 33760,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 33394,
											"end": 33760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33394,
											"end": 33760,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33394,
											"end": 33760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33766,
											"end": 34185,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 33766,
											"end": 34185,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33932,
											"end": 33936,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33970,
											"end": 33972,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 33959,
											"end": 33968,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33955,
											"end": 33973,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33947,
											"end": 33973,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33947,
											"end": 33973,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34019,
											"end": 34028,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 34013,
											"end": 34017,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 34009,
											"end": 34029,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 34005,
											"end": 34006,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33994,
											"end": 34003,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 33990,
											"end": 34007,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33983,
											"end": 34030,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 34047,
											"end": 34178,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 34173,
											"end": 34177,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 34047,
											"end": 34178,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 34047,
											"end": 34178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34047,
											"end": 34178,
											"name": "tag",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 34047,
											"end": 34178,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34039,
											"end": 34178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 34039,
											"end": 34178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33766,
											"end": 34185,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 33766,
											"end": 34185,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33766,
											"end": 34185,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33766,
											"end": 34185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34191,
											"end": 34523,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 34191,
											"end": 34523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34312,
											"end": 34316,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34350,
											"end": 34352,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 34339,
											"end": 34348,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 34335,
											"end": 34353,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34327,
											"end": 34353,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 34327,
											"end": 34353,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34363,
											"end": 34434,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "742"
										},
										{
											"begin": 34431,
											"end": 34432,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34420,
											"end": 34429,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 34416,
											"end": 34433,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34407,
											"end": 34413,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 34363,
											"end": 34434,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 34363,
											"end": 34434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34363,
											"end": 34434,
											"name": "tag",
											"source": 14,
											"value": "742"
										},
										{
											"begin": 34363,
											"end": 34434,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34444,
											"end": 34516,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "743"
										},
										{
											"begin": 34512,
											"end": 34514,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 34501,
											"end": 34510,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 34497,
											"end": 34515,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34488,
											"end": 34494,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 34444,
											"end": 34516,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 34444,
											"end": 34516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34444,
											"end": 34516,
											"name": "tag",
											"source": 14,
											"value": "743"
										},
										{
											"begin": 34444,
											"end": 34516,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34191,
											"end": 34523,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 34191,
											"end": 34523,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 34191,
											"end": 34523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34191,
											"end": 34523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34191,
											"end": 34523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34191,
											"end": 34523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34529,
											"end": 34971,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 34529,
											"end": 34971,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34678,
											"end": 34682,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34716,
											"end": 34718,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 34705,
											"end": 34714,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 34701,
											"end": 34719,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34693,
											"end": 34719,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 34693,
											"end": 34719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34729,
											"end": 34800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 34797,
											"end": 34798,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34786,
											"end": 34795,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 34782,
											"end": 34799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34773,
											"end": 34779,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 34729,
											"end": 34800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 34729,
											"end": 34800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34729,
											"end": 34800,
											"name": "tag",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 34729,
											"end": 34800,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34810,
											"end": 34882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "746"
										},
										{
											"begin": 34878,
											"end": 34880,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 34867,
											"end": 34876,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 34863,
											"end": 34881,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34854,
											"end": 34860,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 34810,
											"end": 34882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 34810,
											"end": 34882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34810,
											"end": 34882,
											"name": "tag",
											"source": 14,
											"value": "746"
										},
										{
											"begin": 34810,
											"end": 34882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34892,
											"end": 34964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "747"
										},
										{
											"begin": 34960,
											"end": 34962,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 34949,
											"end": 34958,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 34945,
											"end": 34963,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34936,
											"end": 34942,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 34892,
											"end": 34964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 34892,
											"end": 34964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34892,
											"end": 34964,
											"name": "tag",
											"source": 14,
											"value": "747"
										},
										{
											"begin": 34892,
											"end": 34964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34529,
											"end": 34971,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 34529,
											"end": 34971,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 34529,
											"end": 34971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34529,
											"end": 34971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34529,
											"end": 34971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34529,
											"end": 34971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34529,
											"end": 34971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NATIVE_TOKEN()": "31f7d964",
							"allowedAmounts(address,address)": "a9590e8a",
							"bulkSetAllowedAmount(address,address[],uint256[])": "e3e7c1f9",
							"claim(address)": "1e83409a",
							"currentRound()": "8a19c8bc",
							"deposit(address,uint256)": "47e7ef24",
							"initialize(address,address)": "485cc955",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"scorer()": "85c758f7",
							"setAllowedAmount(address,address,uint256)": "b807a3c4",
							"setRound(uint64,uint64,string)": "a9012c89",
							"totalBalances(address)": "aee9c872",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"NotWithinRound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"AllowedAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"RoundUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"NATIVE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"bulkSetAllowedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRound\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_scorer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scorer\",\"outputs\":[{\"internalType\":\"contract IScorer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"setRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"params\":{\"amount\":\"The value to add (in wei for Ether).\",\"token\":\"The token address (address(0) for Ether).\"}},\"initialize(address,address)\":{\"params\":{\"_scorer\":\"The scoring contract address.\",\"owner\":\"The owner address.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAllowedAmount(address,address,uint256)\":{\"params\":{\"amount\":\"The allowed amount for the user.\",\"token\":\"The token address.\",\"user\":\"The address of the user.\"}},\"setRound(uint64,uint64,string)\":{\"params\":{\"end\":\"The end timestamp of the round.\",\"metadataURI\":\"The IPFS URI for the round metadata.\",\"start\":\"The start timestamp of the round.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"The amount to withdraw.\",\"token\":\"The token address (address(0) for Ether).\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bulkSetAllowedAmount(address,address[],uint256[])\":{\"notice\":\"Sets the allowed amount for multiple users for a given token in one call.\"},\"claim(address)\":{\"notice\":\"Claims the full allowed amount for a user during the round.\"},\"deposit(address,uint256)\":{\"notice\":\"Deposits funds into this jar for a specific token or Ether.\"},\"initialize(address,address)\":{\"notice\":\"Initializes this contract with its initial state.\"},\"setAllowedAmount(address,address,uint256)\":{\"notice\":\"Sets the allowed amount for a specific user and token.\"},\"setRound(uint64,uint64,string)\":{\"notice\":\"Sets the round duration and metadata URI.\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws funds from the jar for a specific token or Ether.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sweetspot.sol\":\"sweetspot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0x5bf83793e4290e7e68813647ee12b8abc4c538289be58958e32b7333b5b04e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f2ae1e6cfcef833b0424c313a99b39e98c418ba4fc037c081644ef42e598776\",\"dweb:/ipfs/QmSyyx1J5C2o3KCaWxDf3Gd9szsZGdzJCbe4u4SvdNXPjV\"]},\"contracts/sweetspot.sol\":{\"keccak256\":\"0xc1f06e157c4b41c57a88ca0a24e18bed54aa00b3e66c6f32e2cb7583d85b9e32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6171bb0be84030314e9c9800a981442a1323945aacdd94aa20aaf939ac767434\",\"dweb:/ipfs/QmQbhNwxkMXDCTnjsdPP584CBZbjWpqfVq943Q6VCRBWp2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1498,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "scorer",
								"offset": 0,
								"slot": "50",
								"type": "t_contract(IScorer)1472"
							},
							{
								"astId": 1508,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "currentRound",
								"offset": 0,
								"slot": "51",
								"type": "t_struct(Round)1505_storage"
							},
							{
								"astId": 1512,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "totalBalances",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1518,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "allowedAmounts",
								"offset": 0,
								"slot": "54",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_contract(IScorer)1472": {
								"encoding": "inplace",
								"label": "contract IScorer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Round)1505_storage": {
								"encoding": "inplace",
								"label": "struct sweetspot.Round",
								"members": [
									{
										"astId": 1500,
										"contract": "contracts/sweetspot.sol:sweetspot",
										"label": "start",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1502,
										"contract": "contracts/sweetspot.sol:sweetspot",
										"label": "end",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1504,
										"contract": "contracts/sweetspot.sol:sweetspot",
										"label": "metadataURI",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"bulkSetAllowedAmount(address,address[],uint256[])": {
								"notice": "Sets the allowed amount for multiple users for a given token in one call."
							},
							"claim(address)": {
								"notice": "Claims the full allowed amount for a user during the round."
							},
							"deposit(address,uint256)": {
								"notice": "Deposits funds into this jar for a specific token or Ether."
							},
							"initialize(address,address)": {
								"notice": "Initializes this contract with its initial state."
							},
							"setAllowedAmount(address,address,uint256)": {
								"notice": "Sets the allowed amount for a specific user and token."
							},
							"setRound(uint64,uint64,string)": {
								"notice": "Sets the round duration and metadata URI."
							},
							"withdraw(address,uint256)": {
								"notice": "Withdraws funds from the jar for a specific token or Ether."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							579
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 580,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 579,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 579,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								579,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 561,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						],
						"ReentrancyGuardUpgradeable": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 534,
							"sourceUnit": 449,
							"src": "136:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "144:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"1000:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1000:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "1000:13:2"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "201:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 533,
							"linearizedBaseContracts": [
								533,
								448
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "970:26:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 458,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1793:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1768:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1768:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 457,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1808:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 461,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1840:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1815:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1815:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1851:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 463,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1875:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1859:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 462,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1859:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "1949:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 468,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "1959:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "1959:34:2"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 465,
												"name": "onlyInitializing",
												"nameLocations": [
													"1932:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1932:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1932:16:2"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1898:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:0:2"
									},
									"scope": 533,
									"src": "1889:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2076:39:2",
										"statements": [
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 477,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 478,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2096:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "2086:22:2"
											}
										]
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 475,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 474,
												"name": "onlyInitializing",
												"nameLocations": [
													"2059:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2059:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2059:16:2"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2015:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:0:2"
									},
									"scope": 533,
									"src": "2006:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2516:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 485,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2526:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2526:21:2"
											},
											{
												"id": 488,
												"nodeType": "PlaceholderStatement",
												"src": "2557:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 489,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "2568:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2568:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "2568:20:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2121:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 493,
									"name": "nonReentrant",
									"nameLocation": "2501:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2513:2:2"
									},
									"src": "2492:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "2640:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 497,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "2733:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 498,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2744:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2733:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2754:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2725:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2725:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "2725:63:2"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2863:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 504,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2873:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2863:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "2863:18:2"
											}
										]
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2610:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2629:2:2"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:0:2"
									},
									"scope": 533,
									"src": "2601:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "2932:171:2",
										"statements": [
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 511,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3074:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 512,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "3084:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3074:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "3074:22:2"
											}
										]
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2903:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2921:2:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2932:0:2"
									},
									"scope": 533,
									"src": "2894:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "3346:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3363:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 523,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3374:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3363:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 521,
												"id": 525,
												"nodeType": "Return",
												"src": "3356:26:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3109:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3291:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3314:2:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3340:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3340:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:6:2"
									},
									"scope": 533,
									"src": "3282:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "3395:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 532,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3674:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "3654:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 529,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3654:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 531,
										"length": {
											"hexValue": "3439",
											"id": 530,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3662:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3654:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 534,
							"src": "952:2730:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "112:3571:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							579
						],
						"Initializable": [
							448
						]
					},
					"id": 580,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 537,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 580,
							"sourceUnit": 449,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 536,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 539,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:3"
									},
									"id": 540,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 538,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 579,
							"linearizedBaseContracts": [
								579,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 543,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 542,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 579,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 548,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 579,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 557,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 556,
												"id": 559,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 579,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 566,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 565,
												"id": 568,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 579,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 574,
												"id": 576,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 579,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 580,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							661
						],
						"IERC165": [
							1451
						],
						"IERC20": [
							747
						]
					},
					"id": 662,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 581,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 583,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 662,
							"sourceUnit": 670,
							"src": "133:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 582,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "141:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 662,
							"sourceUnit": 666,
							"src": "170:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 584,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1451,
										"src": "178:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 587,
										"name": "IERC20",
										"nameLocations": [
											"590:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 747,
										"src": "590:6:4"
									},
									"id": 588,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:4"
								},
								{
									"baseName": {
										"id": 589,
										"name": "IERC165",
										"nameLocations": [
											"598:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1451,
										"src": "598:7:4"
									},
									"id": 590,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:4"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 586,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:4",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 661,
							"linearizedBaseContracts": [
								661,
								1451,
								747
							],
							"name": "IERC1363",
							"nameLocation": "578:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1548:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1560:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1593:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:4"
									},
									"scope": 661,
									"src": "1523:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2088:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2100:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2115:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:4"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2154:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:4"
									},
									"scope": 661,
									"src": "2063:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2653:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2667:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2679:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2712:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 621,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:4"
									},
									"scope": 661,
									"src": "2624:94:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3294:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3308:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3320:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3335:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:4"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3374:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:4"
									},
									"scope": 661,
									"src": "3265:115:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3805:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3822:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:4"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3855:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:4"
									},
									"scope": 661,
									"src": "3781:80:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4374:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4391:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4406:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:4"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4445:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:4"
									},
									"scope": 661,
									"src": "4350:101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 662,
							"src": "568:3885:4",
							"usedErrors": [],
							"usedEvents": [
								681,
								690
							]
						}
					],
					"src": "107:4347:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1451
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 663,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 665,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 666,
							"sourceUnit": 1452,
							"src": "132:59:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 664,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1451,
										"src": "140:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							747
						]
					},
					"id": 670,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 670,
							"sourceUnit": 748,
							"src": "131:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 668,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "139:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							747
						]
					},
					"id": 748,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 671,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 672,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 747,
							"linearizedBaseContracts": [
								747
							],
							"name": "IERC20",
							"nameLocation": "214:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 681,
									"name": "Transfer",
									"nameLocation": "396:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "405:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "427:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "447:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:7"
									},
									"src": "390:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 690,
									"name": "Approval",
									"nameLocation": "627:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "636:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "659:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:7"
									},
									"src": "621:78:7"
								},
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:7"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "821:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:7"
									},
									"scope": 747,
									"src": "775:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:7"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "971:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:7"
									},
									"scope": 747,
									"src": "912:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1222:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:7"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1267:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:7"
									},
									"scope": 747,
									"src": "1204:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1567:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1582:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:7"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1622:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:7"
									},
									"scope": 747,
									"src": "1548:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2326:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:7"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2376:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:7"
									},
									"scope": 747,
									"src": "2309:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2712:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2726:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:7"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2771:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:7"
									},
									"scope": 747,
									"src": "2690:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 748,
							"src": "204:2575:7",
							"usedErrors": [],
							"usedEvents": [
								681,
								690
							]
						}
					],
					"src": "106:2674:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1417
						],
						"IERC1363": [
							661
						],
						"IERC20": [
							747
						],
						"SafeERC20": [
							1158
						]
					},
					"id": 1159,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 749,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 751,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 748,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 750,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 753,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 662,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 752,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 661,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 1418,
							"src": "238:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 754,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1417,
										"src": "246:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 756,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1158,
							"linearizedBaseContracts": [
								1158
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 761,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "875:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:8"
									},
									"src": "844:46:8"
								},
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 770,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1011:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1028:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1054:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:8"
									},
									"src": "972:109:8"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "1343:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 782,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "1373:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 785,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "1395:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 714,
																	"src": "1395:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 787,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "1412:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 788,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 778,
																			"src": "1416:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 789,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 783,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 781,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "1353:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:8"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1293:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 772,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "1293:6:8"
													},
													"referencedDeclaration": 747,
													"src": "1293:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1307:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1319:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:8"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:8"
									},
									"scope": 1158,
									"src": "1271:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1760:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "1790:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 811,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "1812:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 746,
																	"src": "1812:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 813,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "1833:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 814,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "1839:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 815,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 804,
																			"src": "1843:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 816,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 809,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 807,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "1770:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:8"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1696:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 796,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "1696:6:8"
													},
													"referencedDeclaration": 747,
													"src": "1696:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1710:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1724:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1736:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:8"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:8"
									},
									"scope": 1158,
									"src": "1670:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "2600:139:8",
										"statements": [
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 851,
														"src": "2610:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 838,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1158",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1158",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 836,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "2664:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 834,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "2633:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "2633:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "2695:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 845,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "2702:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 846,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "2711:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 847,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "2726:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2682:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:8"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2545:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 824,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 823,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "2545:6:8"
													},
													"referencedDeclaration": 747,
													"src": "2545:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2559:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2576:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:8"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:8"
									},
									"scope": 1158,
									"src": "2514:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "3505:370:8",
										"statements": [
											{
												"id": 893,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:8",
												"statements": [
													{
														"assignments": [
															864
														],
														"declarations": [
															{
																"constant": false,
																"id": 864,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 893,
																"src": "3539:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 863,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 873,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 869,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1158",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1158",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 867,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 871,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "3597:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 865,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "3566:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$747",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 724,
																"src": "3566:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 874,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "3623:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 875,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "3642:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 884,
														"nodeType": "IfStatement",
														"src": "3619:160:8",
														"trueBody": {
															"id": 883,
															"nodeType": "Block",
															"src": "3661:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 878,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "3719:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 879,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 864,
																				"src": "3728:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 880,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "3746:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 877,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 770,
																			"src": "3686:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 882,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 886,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "3805:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$747",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 887,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "3812:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 888,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "3821:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 889,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "3840:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$747",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 885,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "3792:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 892,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3438:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 854,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "3438:6:8"
													},
													"referencedDeclaration": 747,
													"src": "3438:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3452:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3469:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:8"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:8"
									},
									"scope": 1158,
									"src": "3407:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "4529:303:8",
										"statements": [
											{
												"assignments": [
													907
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 941,
														"src": "4539:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 906,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 910,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "4582:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$747",
																	"typeString": "contract IERC20"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 734,
															"src": "4582:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 912,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "4598:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 913,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "4607:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 908,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:8"
											},
											{
												"condition": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 918,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "4654:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$747",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 919,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "4661:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$747",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 917,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "4630:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 940,
												"nodeType": "IfStatement",
												"src": "4625:201:8",
												"trueBody": {
													"id": 939,
													"nodeType": "Block",
													"src": "4676:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 923,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "4710:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 926,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 899,
																					"src": "4732:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$747",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 734,
																				"src": "4732:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 928,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 901,
																						"src": "4748:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 929,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 930,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 924,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 922,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "4690:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 933,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 935,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "4795:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 936,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "4802:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 934,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "4775:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 938,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4474:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 898,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 897,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "4474:6:8"
													},
													"referencedDeclaration": 747,
													"src": "4474:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4488:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4505:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:8"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:8"
									},
									"scope": 1158,
									"src": "4452:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "5279:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 955,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "5293:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 969,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "5402:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 970,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "5406:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 971,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "5413:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 967,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "5380:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$661",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 612,
																"src": "5380:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 982,
													"nodeType": "IfStatement",
													"src": "5375:117:8",
													"trueBody": {
														"id": 981,
														"nodeType": "Block",
														"src": "5420:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 977,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "5474:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 975,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 974,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "5441:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 980,
																"nodeType": "RevertStatement",
																"src": "5434:47:8"
															}
														]
													}
												},
												"id": 983,
												"nodeType": "IfStatement",
												"src": "5289:203:8",
												"trueBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "5314:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 961,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "5341:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 962,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "5348:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 963,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "5352:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 960,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "5328:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 965,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5208:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$661",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 661,
														"src": "5208:8:8"
													},
													"referencedDeclaration": 661,
													"src": "5208:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$661",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5224:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5236:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5251:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:8"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:8"
									},
									"scope": 1158,
									"src": "5176:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "6017:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1000,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "6031:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1015,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "6154:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1016,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "6160:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1017,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "6164:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1018,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "6171:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1013,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "6128:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$661",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 638,
																"src": "6128:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1029,
													"nodeType": "IfStatement",
													"src": "6123:127:8",
													"trueBody": {
														"id": 1028,
														"nodeType": "Block",
														"src": "6178:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1024,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 989,
																					"src": "6232:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1022,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1021,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "6199:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1027,
																"nodeType": "RevertStatement",
																"src": "6192:47:8"
															}
														]
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "6027:223:8",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "6052:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1006,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "6083:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1007,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "6090:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1008,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "6096:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1009,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "6100:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1005,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "6066:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1011,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5895:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$661",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 988,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 987,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 661,
														"src": "5895:8:8"
													},
													"referencedDeclaration": 661,
													"src": "5895:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$661",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5919:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5941:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5961:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5984:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:8"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:8"
									},
									"scope": 1158,
									"src": "5850:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "7023:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1045,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "7037:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1059,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "7145:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1060,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "7149:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1061,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "7156:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1057,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "7124:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$661",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 660,
																"src": "7124:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1072,
													"nodeType": "IfStatement",
													"src": "7119:116:8",
													"trueBody": {
														"id": 1071,
														"nodeType": "Block",
														"src": "7163:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1067,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1036,
																					"src": "7217:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1066,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1065,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1064,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "7184:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1070,
																"nodeType": "RevertStatement",
																"src": "7177:47:8"
															}
														]
													}
												},
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "7033:202:8",
												"trueBody": {
													"id": 1056,
													"nodeType": "Block",
													"src": "7058:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1051,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "7085:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1052,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "7092:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1053,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "7096:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1050,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "7072:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1055,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6952:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$661",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1034,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 661,
														"src": "6952:8:8"
													},
													"referencedDeclaration": 661,
													"src": "6952:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$661",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6968:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6980:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6995:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1041,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:8"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:8"
									},
									"scope": 1158,
									"src": "6921:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "7808:650:8",
										"statements": [
											{
												"assignments": [
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1085,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "7818:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1084,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:8"
											},
											{
												"assignments": [
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "7846:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1087,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1089,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:8"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:8",
													"nodeType": "YulBlock",
													"src": "7900:396:8",
													"statements": [
														{
															"nativeSrc": "7914:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:8"
																		},
																		"nativeSrc": "7934:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:8"
																		},
																		"nativeSrc": "7951:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:8"
																		},
																		"nativeSrc": "7968:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:8"
																},
																"nativeSrc": "7929:60:8",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:8",
																"nodeType": "YulBlock",
																"src": "8050:157:8",
																"statements": [
																	{
																		"nativeSrc": "8068:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:8"
																			},
																			"nativeSrc": "8079:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:8"
																					},
																					"nativeSrc": "8130:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:8"
																			},
																			"nativeSrc": "8107:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:8"
																		},
																		"nativeSrc": "8107:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:8"
																					},
																					"nativeSrc": "8176:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:8"
																			},
																			"nativeSrc": "8164:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:8"
																		},
																		"nativeSrc": "8164:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:8"
																},
																"nativeSrc": "8034:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:8"
															},
															"nativeSrc": "8031:176:8",
															"nodeType": "YulIf",
															"src": "8031:176:8"
														},
														{
															"nativeSrc": "8220:30:8",
															"nodeType": "YulAssignment",
															"src": "8220:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:8"
																},
																"nativeSrc": "8234:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:8"
																}
															]
														},
														{
															"nativeSrc": "8263:23:8",
															"nodeType": "YulAssignment",
															"src": "8263:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:8"
																},
																"nativeSrc": "8278:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1081,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1081,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1085,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1088,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1079,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1090,
												"nodeType": "InlineAssembly",
												"src": "7875:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1091,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "8310:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1102,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "8362:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1096,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1079,
																			"src": "8336:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$747",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$747",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1094,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1114,
												"nodeType": "IfStatement",
												"src": "8306:146:8",
												"trueBody": {
													"id": 1113,
													"nodeType": "Block",
													"src": "8380:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1109,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "8434:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$747",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$747",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1107,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1106,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "8401:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1112,
															"nodeType": "RevertStatement",
															"src": "8394:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "7767:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1078,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1077,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "7767:6:8"
													},
													"referencedDeclaration": 747,
													"src": "7767:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "7781:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:8"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:8"
									},
									"scope": 1158,
									"src": "7738:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "9049:391:8",
										"statements": [
											{
												"assignments": [
													1128
												],
												"declarations": [
													{
														"constant": false,
														"id": 1128,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "9059:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1127,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:8"
											},
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "9081:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:8"
											},
											{
												"assignments": [
													1134
												],
												"declarations": [
													{
														"constant": false,
														"id": 1134,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "9109:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1133,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1135,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:8",
													"nodeType": "YulBlock",
													"src": "9163:174:8",
													"statements": [
														{
															"nativeSrc": "9177:71:8",
															"nodeType": "YulAssignment",
															"src": "9177:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:8"
																		},
																		"nativeSrc": "9193:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:8"
																		},
																		"nativeSrc": "9210:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:8"
																		},
																		"nativeSrc": "9227:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:8"
																},
																"nativeSrc": "9188:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:8"
																}
															]
														},
														{
															"nativeSrc": "9261:30:8",
															"nodeType": "YulAssignment",
															"src": "9261:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:8"
																},
																"nativeSrc": "9275:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:8"
																}
															]
														},
														{
															"nativeSrc": "9304:23:8",
															"nodeType": "YulAssignment",
															"src": "9304:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:8"
																},
																"nativeSrc": "9319:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1122,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1122,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1131,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1134,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1128,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1120,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1136,
												"nodeType": "InlineAssembly",
												"src": "9138:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1137,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "9353:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1138,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "9365:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1149,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "9416:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1143,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1120,
																						"src": "9391:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$747",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$747",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1142,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1141,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1153,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1126,
												"id": 1155,
												"nodeType": "Return",
												"src": "9346:87:8"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "8993:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1119,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1118,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "8993:6:8"
													},
													"referencedDeclaration": 747,
													"src": "8993:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "9007:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:8"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "9043:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:8"
									},
									"scope": 1158,
									"src": "8960:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1159,
							"src": "750:8692:8",
							"usedErrors": [
								761,
								770
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1417
						],
						"Errors": [
							1439
						]
					},
					"id": 1418,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1160,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1162,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 1440,
							"src": "127:36:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1161,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1439,
										"src": "135:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1163,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1417,
							"linearizedBaseContracts": [
								1417
							],
							"name": "Address",
							"nameLocation": "241:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:9",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1168,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "358:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:9"
									},
									"src": "335:39:9"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "1361:278:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1178,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																],
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1176,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1181,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "1399:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1195,
												"nodeType": "IfStatement",
												"src": "1371:125:9",
												"trueBody": {
													"id": 1194,
													"nodeType": "Block",
													"src": "1407:89:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1188,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1186,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1191,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1173,
																		"src": "1478:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1183,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "1428:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "1428:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1193,
															"nodeType": "RevertStatement",
															"src": "1421:64:9"
														}
													]
												}
											},
											{
												"assignments": [
													1197,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "1507:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1204,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1198,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "1525:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1200,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "1547:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:9"
											},
											{
												"condition": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:9",
													"subExpression": {
														"id": 1205,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "1573:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1213,
												"nodeType": "IfStatement",
												"src": "1568:65:9",
												"trueBody": {
													"id": 1212,
													"nodeType": "Block",
													"src": "1582:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1207,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "1603:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1430,
																	"src": "1603:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1211,
															"nodeType": "RevertStatement",
															"src": "1596:26:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "1309:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "1336:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:9"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:9"
									},
									"scope": 1417,
									"src": "1290:349:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "2573:62:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2612:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "2620:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1225,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "2590:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1224,
												"id": 1230,
												"nodeType": "Return",
												"src": "2583:45:9"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2506:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2522:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:9"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2559:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:9"
									},
									"scope": 1417,
									"src": "2484:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "3072:294:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1246,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																],
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1244,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1249,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "3110:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1263,
												"nodeType": "IfStatement",
												"src": "3082:123:9",
												"trueBody": {
													"id": 1262,
													"nodeType": "Block",
													"src": "3117:88:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1256,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1254,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1259,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "3188:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1251,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "3138:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "3138:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1261,
															"nodeType": "RevertStatement",
															"src": "3131:63:9"
														}
													]
												}
											},
											{
												"assignments": [
													1265,
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "3215:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1264,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1267,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "3229:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1266,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"arguments": [
														{
															"id": 1272,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "3282:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1268,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "3256:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1270,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "3275:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1276,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "3331:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1277,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "3339:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1278,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "3348:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1275,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "3304:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1243,
												"id": 1280,
												"nodeType": "Return",
												"src": "3297:62:9"
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2990:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3006:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3025:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:9"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3058:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:9"
									},
									"scope": 1417,
									"src": "2959:407:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "3605:154:9",
										"statements": [
											{
												"assignments": [
													1293,
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1293,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "3616:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1292,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "3630:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1294,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"arguments": [
														{
															"id": 1298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "3675:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1296,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3657:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1302,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3724:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "3732:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1304,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "3741:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1301,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "3697:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1306,
												"nodeType": "Return",
												"src": "3690:62:9"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3533:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3549:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:9"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3591:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:9"
									},
									"scope": 1417,
									"src": "3505:254:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "3997:156:9",
										"statements": [
											{
												"assignments": [
													1319,
													1321
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "4008:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1318,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "4022:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1326,
												"initialValue": {
													"arguments": [
														{
															"id": 1324,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "4069:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1322,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4049:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:9",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1328,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4118:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "4126:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1330,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "4135:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1327,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "4091:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1317,
												"id": 1332,
												"nodeType": "Return",
												"src": "4084:62:9"
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3930:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3946:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:9"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3983:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1315,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:9"
									},
									"scope": 1417,
									"src": "3900:253:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "4579:424:9",
										"statements": [
											{
												"condition": {
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:9",
													"subExpression": {
														"id": 1346,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "4594:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "4653:344:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1353,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1341,
																			"src": "4841:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1357,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1337,
																				"src": "4867:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1368,
															"nodeType": "IfStatement",
															"src": "4837:119:9",
															"trueBody": {
																"id": 1367,
																"nodeType": "Block",
																"src": "4892:64:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1364,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "4934:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1363,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "4917:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1366,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1369,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "4976:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1345,
															"id": 1370,
															"nodeType": "Return",
															"src": "4969:17:9"
														}
													]
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "4589:408:9",
												"trueBody": {
													"id": 1352,
													"nodeType": "Block",
													"src": "4603:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1349,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "4625:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1348,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "4617:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1351,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4466:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4490:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4512:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:9"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4565:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:9"
									},
									"scope": 1417,
									"src": "4421:582:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "5307:122:9",
										"statements": [
											{
												"condition": {
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:9",
													"subExpression": {
														"id": 1384,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "5322:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1393,
													"nodeType": "Block",
													"src": "5381:42:9",
													"statements": [
														{
															"expression": {
																"id": 1391,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "5402:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1383,
															"id": 1392,
															"nodeType": "Return",
															"src": "5395:17:9"
														}
													]
												},
												"id": 1394,
												"nodeType": "IfStatement",
												"src": "5317:106:9",
												"trueBody": {
													"id": 1390,
													"nodeType": "Block",
													"src": "5331:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1387,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1379,
																		"src": "5353:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1386,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "5345:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1389,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:9",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5231:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5245:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:9"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5293:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:9"
									},
									"scope": 1417,
									"src": "5205:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "5598:432:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1402,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "5674:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1413,
													"nodeType": "Block",
													"src": "5973:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1408,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "5994:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1430,
																	"src": "5994:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1412,
															"nodeType": "RevertStatement",
															"src": "5987:26:9"
														}
													]
												},
												"id": 1414,
												"nodeType": "IfStatement",
												"src": "5670:354:9",
												"trueBody": {
													"id": 1407,
													"nodeType": "Block",
													"src": "5697:270:9",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:9",
																"nodeType": "YulBlock",
																"src": "5824:133:9",
																"statements": [
																	{
																		"nativeSrc": "5842:40:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:9"
																			},
																			"nativeSrc": "5865:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:9",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:9",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:9"
																					},
																					"nativeSrc": "5906:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:9"
																			},
																			"nativeSrc": "5899:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:9"
																		},
																		"nativeSrc": "5899:44:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:9"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1399,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1399,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:9",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1406,
															"nodeType": "InlineAssembly",
															"src": "5799:158:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:9",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "5560:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:9"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:9"
									},
									"scope": 1417,
									"src": "5543:487:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1418,
							"src": "233:5799:9",
							"usedErrors": [
								1168
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1439
						]
					},
					"id": 1440,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1419,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1420,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:10",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1439,
							"linearizedBaseContracts": [
								1439
							],
							"name": "Errors",
							"nameLocation": "419:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:10",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1427,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "557:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "574:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:10"
									},
									"src": "531:59:10"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:10",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1430,
									"name": "FailedCall",
									"nameLocation": "696:10:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:10"
									},
									"src": "690:19:10"
								},
								{
									"documentation": {
										"id": 1431,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:10",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1433,
									"name": "FailedDeployment",
									"nameLocation": "772:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:10"
									},
									"src": "766:25:10"
								},
								{
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:10",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1438,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "884:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:10"
									},
									"src": "860:33:10"
								}
							],
							"scope": 1440,
							"src": "411:484:10",
							"usedErrors": [
								1427,
								1430,
								1433,
								1438
							],
							"usedEvents": []
						}
					],
					"src": "100:796:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1451
						]
					},
					"id": 1452,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1441,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1442,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1451,
							"linearizedBaseContracts": [
								1451
							],
							"name": "IERC165",
							"nameLocation": "432:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "818:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1444,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:11"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "861:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:11"
									},
									"scope": 1451,
									"src": "791:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1452,
							"src": "422:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:11"
				},
				"id": 11
			},
			"contracts/interface/IScorer.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IScorer.sol",
					"exportedSymbols": {
						"IScorer": [
							1472
						]
					},
					"id": 1473,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1453,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IScorer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1472,
							"linearizedBaseContracts": [
								1472
							],
							"name": "IScorer",
							"nameLocation": "71:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "86:741:12",
										"text": " @dev Returns the score of a specific user for a given score type.\n      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).\n      The score is typically used to determine the user's eligibility for certain actions or claims.\n      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\n @param user The address of the user whose score is being queried.\n @param scoreType The type of score to query, represented as a `bytes32` hash.\n @return The score of the user as a uint256 value.\n @notice This function should be implemented in the contract that inherits the `IScorer` interface."
									},
									"functionSelector": "db4f1024",
									"id": 1463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "score",
									"nameLocation": "842:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "856:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "848:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "scoreType",
												"nameLocation": "876:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "862:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "862:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:39:12"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "910:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:9:12"
									},
									"scope": 1472,
									"src": "833:86:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "927:302:12",
										"text": " @dev Checks if the provided address is an admin.\n @param admin The address to check for admin status.\n @return True if the address is an admin, false otherwise.\n @notice This function should be implemented in the contract that inherits the `IScorer` interface."
									},
									"functionSelector": "24d7806c",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "1244:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1260:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1252:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:15:12"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1290:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1468,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1289:6:12"
									},
									"scope": 1472,
									"src": "1235:61:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1473,
							"src": "61:1238:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1268:12"
				},
				"id": 12
			},
			"contracts/sweetspot.sol": {
				"ast": {
					"absolutePath": "contracts/sweetspot.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							579
						],
						"IERC20": [
							747
						],
						"IScorer": [
							1472
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"ReentrancyGuardUpgradeable": [
							533
						],
						"SafeERC20": [
							1158
						],
						"sweetspot": [
							2000
						]
					},
					"id": 2001,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1475,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2001,
							"sourceUnit": 195,
							"src": "61:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1477,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2001,
							"sourceUnit": 748,
							"src": "138:72:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1476,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "147:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1479,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2001,
							"sourceUnit": 1159,
							"src": "212:84:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1478,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1158,
										"src": "221:9:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 1480,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2001,
							"sourceUnit": 534,
							"src": "298:85:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IScorer.sol",
							"file": "./interface/IScorer.sol",
							"id": 1481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2001,
							"sourceUnit": 1473,
							"src": "385:33:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1482,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"476:18:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "476:18:13"
									},
									"id": 1483,
									"nodeType": "InheritanceSpecifier",
									"src": "476:18:13"
								},
								{
									"baseName": {
										"id": 1484,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"496:26:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 533,
										"src": "496:26:13"
									},
									"id": 1485,
									"nodeType": "InheritanceSpecifier",
									"src": "496:26:13"
								}
							],
							"canonicalName": "sweetspot",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2000,
							"linearizedBaseContracts": [
								2000,
								533,
								194,
								579,
								448
							],
							"name": "sweetspot",
							"nameLocation": "463:9:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1489,
									"libraryName": {
										"id": 1486,
										"name": "SafeERC20",
										"nameLocations": [
											"537:9:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1158,
										"src": "537:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "531:27:13",
									"typeName": {
										"id": 1488,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1487,
											"name": "IERC20",
											"nameLocations": [
												"551:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 747,
											"src": "551:6:13"
										},
										"referencedDeclaration": 747,
										"src": "551:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$747",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "31f7d964",
									"id": 1495,
									"mutability": "constant",
									"name": "NATIVE_TOKEN",
									"nameLocation": "590:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2000,
									"src": "566:49:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1490,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "566:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 1493,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "613:1:13",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 1492,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "605:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1491,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "605:7:13",
												"typeDescriptions": {}
											}
										},
										"id": 1494,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "605:10:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85c758f7",
									"id": 1498,
									"mutability": "mutable",
									"name": "scorer",
									"nameLocation": "637:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2000,
									"src": "622:21:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IScorer_$1472",
										"typeString": "contract IScorer"
									},
									"typeName": {
										"id": 1497,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1496,
											"name": "IScorer",
											"nameLocations": [
												"622:7:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1472,
											"src": "622:7:13"
										},
										"referencedDeclaration": 1472,
										"src": "622:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IScorer_$1472",
											"typeString": "contract IScorer"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "sweetspot.Round",
									"id": 1505,
									"members": [
										{
											"constant": false,
											"id": 1500,
											"mutability": "mutable",
											"name": "start",
											"nameLocation": "719:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1505,
											"src": "712:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1499,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "712:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1502,
											"mutability": "mutable",
											"name": "end",
											"nameLocation": "774:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1505,
											"src": "767:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1501,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "767:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1504,
											"mutability": "mutable",
											"name": "metadataURI",
											"nameLocation": "825:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1505,
											"src": "818:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1503,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "818:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Round",
									"nameLocation": "695:5:13",
									"nodeType": "StructDefinition",
									"scope": 2000,
									"src": "688:187:13",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a19c8bc",
									"id": 1508,
									"mutability": "mutable",
									"name": "currentRound",
									"nameLocation": "896:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2000,
									"src": "883:25:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Round_$1505_storage",
										"typeString": "struct sweetspot.Round"
									},
									"typeName": {
										"id": 1507,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1506,
											"name": "Round",
											"nameLocations": [
												"883:5:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1505,
											"src": "883:5:13"
										},
										"referencedDeclaration": 1505,
										"src": "883:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Round_$1505_storage_ptr",
											"typeString": "struct sweetspot.Round"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aee9c872",
									"id": 1512,
									"mutability": "mutable",
									"name": "totalBalances",
									"nameLocation": "1034:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2000,
									"src": "999:48:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1511,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1509,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1007:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "999:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1510,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1018:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9590e8a",
									"id": 1518,
									"mutability": "mutable",
									"name": "allowedAmounts",
									"nameLocation": "1152:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2000,
									"src": "1097:69:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1517,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1513,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1105:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1097:47:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1516,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1514,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1124:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1116:27:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1515,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1135:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62",
									"id": 1526,
									"name": "Deposit",
									"nameLocation": "1182:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"indexed": true,
												"mutability": "mutable",
												"name": "depositor",
												"nameLocation": "1206:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1190:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1233:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1217:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1248:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1240:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:66:13"
									},
									"src": "1176:80:13"
								},
								{
									"anonymous": false,
									"eventSelector": "9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb",
									"id": 1534,
									"name": "Withdraw",
									"nameLocation": "1268:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"indexed": true,
												"mutability": "mutable",
												"name": "withdrawer",
												"nameLocation": "1293:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1277:26:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1321:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1305:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1336:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1328:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:67:13"
									},
									"src": "1262:82:13"
								},
								{
									"anonymous": false,
									"eventSelector": "f7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683",
									"id": 1542,
									"name": "Claimed",
									"nameLocation": "1356:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimant",
												"nameLocation": "1380:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1364:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1406:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1390:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1421:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1413:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:65:13"
									},
									"src": "1350:79:13"
								},
								{
									"anonymous": false,
									"eventSelector": "3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2",
									"id": 1550,
									"name": "AllowedAmountUpdated",
									"nameLocation": "1441:20:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1478:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1462:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1500:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1484:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "1515:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1507:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:64:13"
									},
									"src": "1435:91:13"
								},
								{
									"anonymous": false,
									"eventSelector": "09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13",
									"id": 1558,
									"name": "RoundUpdated",
									"nameLocation": "1538:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"indexed": false,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1559:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1551:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"indexed": false,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "1574:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1566:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "1586:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1579:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1579:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1550:48:13"
									},
									"src": "1532:67:13"
								},
								{
									"errorSelector": "fa7410d4",
									"id": 1566,
									"name": "NotWithinRound",
									"nameLocation": "1613:14:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "currentTime",
												"nameLocation": "1636:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1628:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1628:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1657:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1649:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "1672:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1664:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:49:13"
									},
									"src": "1607:70:13"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "1706:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1571,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1740:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1744:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1740:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1569,
																	"name": "scorer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "1725:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IScorer_$1472",
																		"typeString": "contract IScorer"
																	}
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1732:7:13",
																"memberName": "isAdmin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1471,
																"src": "1725:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1725:26:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1753:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															},
															"value": "Caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															}
														],
														"id": 1568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1717:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "1717:61:13"
											},
											{
												"id": 1577,
												"nodeType": "PlaceholderStatement",
												"src": "1789:1:13"
											}
										]
									},
									"id": 1579,
									"name": "onlyAdmin",
									"nameLocation": "1694:9:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1703:2:13"
									},
									"src": "1685:113:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "2050:144:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1590,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "2076:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1589,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2061:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2061:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1593,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "2126:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2126:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "2126:24:13"
											},
											{
												"expression": {
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1596,
														"name": "scorer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "2161:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1472",
															"typeString": "contract IScorer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1598,
																"name": "_scorer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "2178:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1597,
															"name": "IScorer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "2170:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IScorer_$1472_$",
																"typeString": "type(contract IScorer)"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2170:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1472",
															"typeString": "contract IScorer"
														}
													},
													"src": "2161:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IScorer_$1472",
														"typeString": "contract IScorer"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "2161:25:13"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "1806:165:13",
										"text": "@notice Initializes this contract with its initial state.\n @param _scorer The scoring contract address.\n @param owner The owner address."
									},
									"functionSelector": "485cc955",
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1587,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1586,
												"name": "initializer",
												"nameLocations": [
													"2038:11:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "2038:11:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2038:11:13"
										}
									],
									"name": "initialize",
									"nameLocation": "1986:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "_scorer",
												"nameLocation": "2005:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "1997:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2022:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "2014:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:32:13"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2050:0:13"
									},
									"scope": 2000,
									"src": "1977:217:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "2491:395:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1613,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "2506:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1614,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "2515:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2506:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1645,
													"nodeType": "Block",
													"src": "2616:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1626,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1608,
																			"src": "2639:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2648:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2639:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2651:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																			"typeString": "literal_string \"Deposit amount must be greater than zero\""
																		},
																		"value": "Deposit amount must be greater than zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																			"typeString": "literal_string \"Deposit amount must be greater than zero\""
																		}
																	],
																	"id": 1625,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2631:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2631:63:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1631,
															"nodeType": "ExpressionStatement",
															"src": "2631:63:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1636,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2740:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2744:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2740:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1640,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2760:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_sweetspot_$2000",
																					"typeString": "contract sweetspot"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_sweetspot_$2000",
																					"typeString": "contract sweetspot"
																				}
																			],
																			"id": 1639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2752:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1638,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2752:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2752:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1642,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "2767:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1633,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1606,
																				"src": "2716:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1632,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "2709:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$747_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2709:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2723:16:13",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 821,
																	"src": "2709:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$747_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2709:65:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1644,
															"nodeType": "ExpressionStatement",
															"src": "2709:65:13"
														}
													]
												},
												"id": 1646,
												"nodeType": "IfStatement",
												"src": "2502:284:13",
												"trueBody": {
													"id": 1624,
													"nodeType": "Block",
													"src": "2529:81:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1617,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2552:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2556:5:13",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2552:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1619,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1608,
																			"src": "2565:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2552:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e636f727265637420457468657220616d6f756e74",
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2573:24:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																			"typeString": "literal_string \"Incorrect Ether amount\""
																		},
																		"value": "Incorrect Ether amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																			"typeString": "literal_string \"Incorrect Ether amount\""
																		}
																	],
																	"id": 1616,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2544:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2544:54:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1623,
															"nodeType": "ExpressionStatement",
															"src": "2544:54:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1647,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "2798:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1649,
														"indexExpression": {
															"id": 1648,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "2812:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2798:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1650,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "2822:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2798:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "2798:30:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1654,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2852:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2856:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2852:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1656,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "2864:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "2871:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1653,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "2844:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:34:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "EmitStatement",
												"src": "2839:39:13"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "2202:204:13",
										"text": "@notice Deposits funds into this jar for a specific token or Ether.\n @param token The token address (address(0) for Ether).\n @param amount The value to add (in wei for Ether)."
									},
									"functionSelector": "47e7ef24",
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1611,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1610,
												"name": "nonReentrant",
												"nameLocations": [
													"2477:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "2477:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2477:12:13"
										}
									],
									"name": "deposit",
									"nameLocation": "2421:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2437:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "2429:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2452:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "2444:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:31:13"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2491:0:13"
									},
									"scope": 2000,
									"src": "2412:474:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1768,
										"nodeType": "Block",
										"src": "3023:880:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1669,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3048:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3054:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3048:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 1671,
																"name": "currentRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "3066:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$1505_storage",
																	"typeString": "struct sweetspot.Round storage ref"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3079:5:13",
															"memberName": "start",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1500,
															"src": "3066:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3048:36:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1674,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3088:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3094:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3088:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1676,
																"name": "currentRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "3106:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$1505_storage",
																	"typeString": "struct sweetspot.Round storage ref"
																}
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3119:3:13",
															"memberName": "end",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1502,
															"src": "3106:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3088:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3048:74:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "3044:183:13",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "3124:103:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1681,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3161:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3167:9:13",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3161:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1683,
																			"name": "currentRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "3178:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Round_$1505_storage",
																				"typeString": "struct sweetspot.Round storage ref"
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3191:5:13",
																		"memberName": "start",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1500,
																		"src": "3178:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	{
																		"expression": {
																			"id": 1685,
																			"name": "currentRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "3198:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Round_$1505_storage",
																				"typeString": "struct sweetspot.Round storage ref"
																			}
																		},
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3211:3:13",
																		"memberName": "end",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1502,
																		"src": "3198:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 1680,
																	"name": "NotWithinRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "3146:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3146:69:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1688,
															"nodeType": "RevertStatement",
															"src": "3139:76:13"
														}
													]
												}
											},
											{
												"assignments": [
													1692
												],
												"declarations": [
													{
														"constant": false,
														"id": 1692,
														"mutability": "mutable",
														"name": "userAllowedAmount",
														"nameLocation": "3247:17:13",
														"nodeType": "VariableDeclaration",
														"scope": 1768,
														"src": "3239:25:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1691,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3239:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1699,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1693,
															"name": "allowedAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "3267:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1696,
														"indexExpression": {
															"expression": {
																"id": 1694,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3282:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3286:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3282:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3267:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1698,
													"indexExpression": {
														"id": 1697,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3294:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3267:33:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3239:61:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1701,
																"name": "userAllowedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1692,
																"src": "3319:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3339:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3319:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20636c61696d61626c6520616d6f756e74",
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3342:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																"typeString": "literal_string \"No claimable amount\""
															},
															"value": "No claimable amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																"typeString": "literal_string \"No claimable amount\""
															}
														],
														"id": 1700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3311:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3311:53:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "3311:53:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1708,
																	"name": "totalBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "3383:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1710,
																"indexExpression": {
																	"id": 1709,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "3397:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3383:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1711,
																"name": "userAllowedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1692,
																"src": "3407:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3383:41:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3426:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															},
															"value": "Insufficient funds in jar"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															}
														],
														"id": 1707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3375:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3375:79:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "3375:79:13"
											},
											{
												"expression": {
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1716,
																"name": "allowedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "3467:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1720,
															"indexExpression": {
																"expression": {
																	"id": 1717,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3482:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3486:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3482:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3467:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1721,
														"indexExpression": {
															"id": 1719,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3494:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3467:33:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3503:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3467:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "3467:37:13"
											},
											{
												"expression": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1725,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "3515:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1727,
														"indexExpression": {
															"id": 1726,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3529:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3515:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1728,
														"name": "userAllowedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "3539:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3515:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "3515:41:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1731,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3573:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1732,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "3582:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3573:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1759,
													"nodeType": "Block",
													"src": "3749:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1754,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3791:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3795:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3791:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1756,
																		"name": "userAllowedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "3803:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1751,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1664,
																				"src": "3771:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1750,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "3764:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$747_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3764:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3778:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "3764:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$747_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3764:57:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1758,
															"nodeType": "ExpressionStatement",
															"src": "3764:57:13"
														}
													]
												},
												"id": 1760,
												"nodeType": "IfStatement",
												"src": "3569:264:13",
												"trueBody": {
													"id": 1749,
													"nodeType": "Block",
													"src": "3596:147:13",
													"statements": [
														{
															"assignments": [
																1735,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1735,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "3617:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1749,
																	"src": "3612:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1734,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3612:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1743,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3672:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1736,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3630:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3634:6:13",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3630:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3641:4:13",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "3630:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1739,
																			"name": "userAllowedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1692,
																			"src": "3653:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "3630:41:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3630:45:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3611:64:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1745,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "3698:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"id": 1746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3707:23:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		},
																		"value": "Ether transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		}
																	],
																	"id": 1744,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3690:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3690:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1748,
															"nodeType": "ExpressionStatement",
															"src": "3690:41:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1762,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3858:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3862:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3858:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1764,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3870:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1765,
															"name": "userAllowedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "3877:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1761,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "3850:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3850:45:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1767,
												"nodeType": "EmitStatement",
												"src": "3845:50:13"
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "2894:71:13",
										"text": "@notice Claims the full allowed amount for a user during the round."
									},
									"functionSelector": "1e83409a",
									"id": 1769,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1666,
												"name": "nonReentrant",
												"nameLocations": [
													"3010:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "3010:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3010:12:13"
										}
									],
									"name": "claim",
									"nameLocation": "2980:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2994:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "2986:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2986:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:15:13"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3023:0:13"
									},
									"scope": 2000,
									"src": "2971:932:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "4225:171:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1782,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "4244:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4260:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4252:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1783,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4252:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4252:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4244:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573732075736572",
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4264:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
																"typeString": "literal_string \"Zero address user\""
															},
															"value": "Zero address user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
																"typeString": "literal_string \"Zero address user\""
															}
														],
														"id": 1781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4236:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4236:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "4236:48:13"
											},
											{
												"expression": {
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1791,
																"name": "allowedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "4295:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1794,
															"indexExpression": {
																"id": 1792,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "4310:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4295:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1795,
														"indexExpression": {
															"id": 1793,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "4316:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4295:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1796,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1776,
														"src": "4325:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4295:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "4295:36:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1800,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "4368:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1801,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "4374:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1802,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "4381:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1799,
														"name": "AllowedAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "4347:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4347:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1804,
												"nodeType": "EmitStatement",
												"src": "4342:46:13"
											}
										]
									},
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "3911:218:13",
										"text": "@notice Sets the allowed amount for a specific user and token.\n @param user The address of the user.\n @param token The token address.\n @param amount The allowed amount for the user."
									},
									"functionSelector": "b807a3c4",
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1779,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1778,
												"name": "onlyAdmin",
												"nameLocations": [
													"4215:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1579,
												"src": "4215:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4215:9:13"
										}
									],
									"name": "setAllowedAmount",
									"nameLocation": "4144:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4169:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "4161:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4161:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4183:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "4175:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4175:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4198:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "4190:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4160:45:13"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4225:0:13"
									},
									"scope": 2000,
									"src": "4135:261:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "4647:365:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1821,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "4666:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4672:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4666:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1823,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "4682:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4690:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4682:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4666:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69736d617463686564206172726179206c656e67746873",
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4698:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
																"typeString": "literal_string \"Mismatched array lengths\""
															},
															"value": "Mismatched array lengths"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
																"typeString": "literal_string \"Mismatched array lengths\""
															}
														],
														"id": 1820,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4658:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4658:67:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1828,
												"nodeType": "ExpressionStatement",
												"src": "4658:67:13"
											},
											{
												"body": {
													"id": 1862,
													"nodeType": "Block",
													"src": "4779:226:13",
													"statements": [
														{
															"expression": {
																"id": 1850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1840,
																			"name": "allowedAmounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1518,
																			"src": "4880:14:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1845,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1841,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1812,
																				"src": "4895:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 1843,
																			"indexExpression": {
																				"id": 1842,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1830,
																				"src": "4901:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4895:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4880:24:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1846,
																	"indexExpression": {
																		"id": 1844,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "4905:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4880:31:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1847,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1815,
																		"src": "4914:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1849,
																	"indexExpression": {
																		"id": 1848,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1830,
																		"src": "4922:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4914:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4880:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1851,
															"nodeType": "ExpressionStatement",
															"src": "4880:44:13"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1853,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "4965:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1855,
																		"indexExpression": {
																			"id": 1854,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "4971:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4965:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1856,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "4975:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1857,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1815,
																			"src": "4982:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1859,
																		"indexExpression": {
																			"id": 1858,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "4990:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4982:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1852,
																	"name": "AllowedAmountUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "4944:20:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4944:49:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1861,
															"nodeType": "EmitStatement",
															"src": "4939:54:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1833,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "4756:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1834,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "4760:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4766:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4760:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4756:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1863,
												"initializationExpression": {
													"assignments": [
														1830
													],
													"declarations": [
														{
															"constant": false,
															"id": 1830,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4749:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1863,
															"src": "4741:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1829,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4741:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1832,
													"initialValue": {
														"hexValue": "30",
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4753:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4741:13:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4774:3:13",
														"subExpression": {
															"id": 1837,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "4774:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1839,
													"nodeType": "ExpressionStatement",
													"src": "4774:3:13"
												},
												"nodeType": "ForStatement",
												"src": "4736:269:13"
											}
										]
									},
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "4404:85:13",
										"text": "@notice Sets the allowed amount for multiple users for a given token in one call."
									},
									"functionSelector": "e3e7c1f9",
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1818,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1817,
												"name": "onlyAdmin",
												"nameLocations": [
													"4637:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1579,
												"src": "4637:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4637:9:13"
										}
									],
									"name": "bulkSetAllowedAmount",
									"nameLocation": "4504:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4543:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "4535:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4535:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "users",
												"nameLocation": "4578:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "4559:24:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1810,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4559:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1811,
													"nodeType": "ArrayTypeName",
													"src": "4559:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4613:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "4594:26:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1813,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4594:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1814,
													"nodeType": "ArrayTypeName",
													"src": "4594:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4524:103:13"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4647:0:13"
									},
									"scope": 2000,
									"src": "4495:517:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "5353:186:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1878,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1868,
																"src": "5372:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1879,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "5380:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "5372:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53746172742074696d65206d757374206265206265666f726520656e642074696d65",
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5385:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																"typeString": "literal_string \"Start time must be before end time\""
															},
															"value": "Start time must be before end time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																"typeString": "literal_string \"Start time must be before end time\""
															}
														],
														"id": 1877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5364:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5364:58:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "5364:58:13"
											},
											{
												"expression": {
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1884,
														"name": "currentRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "5433:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$1505_storage",
															"typeString": "struct sweetspot.Round storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1886,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1868,
																"src": "5454:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1887,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "5461:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1888,
																"name": "metadataURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "5466:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 1885,
															"name": "Round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "5448:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Round_$1505_storage_ptr_$",
																"typeString": "type(struct sweetspot.Round storage pointer)"
															}
														},
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5448:30:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$1505_memory_ptr",
															"typeString": "struct sweetspot.Round memory"
														}
													},
													"src": "5433:45:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Round_$1505_storage",
														"typeString": "struct sweetspot.Round storage ref"
													}
												},
												"id": 1891,
												"nodeType": "ExpressionStatement",
												"src": "5433:45:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1893,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "5507:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1894,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "5514:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1895,
															"name": "metadataURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "5519:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1892,
														"name": "RoundUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "5494:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,string memory)"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5494:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1897,
												"nodeType": "EmitStatement",
												"src": "5489:42:13"
											}
										]
									},
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "5020:235:13",
										"text": "@notice Sets the round duration and metadata URI.\n @param start The start timestamp of the round.\n @param end The end timestamp of the round.\n @param metadataURI The IPFS URI for the round metadata."
									},
									"functionSelector": "a9012c89",
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1875,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1874,
												"name": "onlyAdmin",
												"nameLocations": [
													"5343:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1579,
												"src": "5343:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5343:9:13"
										}
									],
									"name": "setRound",
									"nameLocation": "5270:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "5287:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5279:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1867,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "5302:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5294:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1869,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5294:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "5321:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5307:25:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5307:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5278:55:13"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:0:13"
									},
									"scope": 2000,
									"src": "5261:278:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "5826:496:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1912,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "5845:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5854:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5845:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5857:45:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																"typeString": "literal_string \"Withdrawal amount must be greater than zero\""
															},
															"value": "Withdrawal amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																"typeString": "literal_string \"Withdrawal amount must be greater than zero\""
															}
														],
														"id": 1911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5837:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5837:66:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1917,
												"nodeType": "ExpressionStatement",
												"src": "5837:66:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1919,
																	"name": "totalBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "5922:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1921,
																"indexExpression": {
																	"id": 1920,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "5936:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5922:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1922,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "5946:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5922:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5954:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 1918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5914:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5914:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "5914:61:13"
											},
											{
												"expression": {
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1927,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "5988:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1929,
														"indexExpression": {
															"id": 1928,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "6002:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5988:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1930,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "6012:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5988:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1932,
												"nodeType": "ExpressionStatement",
												"src": "5988:30:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1933,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "6035:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1934,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "6044:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6035:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1961,
													"nodeType": "Block",
													"src": "6197:70:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1956,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "6239:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6239:7:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1958,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1904,
																		"src": "6248:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1953,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1902,
																				"src": "6219:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1952,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "6212:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$747_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6212:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6226:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "6212:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$747_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6212:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1960,
															"nodeType": "ExpressionStatement",
															"src": "6212:43:13"
														}
													]
												},
												"id": 1962,
												"nodeType": "IfStatement",
												"src": "6031:236:13",
												"trueBody": {
													"id": 1951,
													"nodeType": "Block",
													"src": "6058:133:13",
													"statements": [
														{
															"assignments": [
																1937,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1937,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "6079:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1951,
																	"src": "6074:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1936,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "6074:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1945,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6120:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1938,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 105,
																				"src": "6092:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6092:7:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6100:4:13",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "6092:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1941,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "6112:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "6092:27:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6092:31:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6073:50:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1947,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1937,
																		"src": "6146:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6155:23:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		},
																		"value": "Ether transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		}
																	],
																	"id": 1946,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6138:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6138:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1950,
															"nodeType": "ExpressionStatement",
															"src": "6138:41:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "6291:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6291:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1966,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "6300:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1967,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "6307:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1963,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "6282:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6282:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1969,
												"nodeType": "EmitStatement",
												"src": "6277:37:13"
											}
										]
									},
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "5547:191:13",
										"text": "@notice Withdraws funds from the jar for a specific token or Ether.\n @param token The token address (address(0) for Ether).\n @param amount The amount to withdraw."
									},
									"functionSelector": "f3fef3a3",
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1907,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1906,
												"name": "onlyOwner",
												"nameLocations": [
													"5802:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "5802:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5802:9:13"
										},
										{
											"id": 1909,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1908,
												"name": "nonReentrant",
												"nameLocations": [
													"5812:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "5812:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5812:12:13"
										}
									],
									"name": "withdraw",
									"nameLocation": "5753:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5770:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5762:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5762:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5785:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5777:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5777:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5761:31:13"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5826:0:13"
									},
									"scope": 2000,
									"src": "5744:578:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1990,
										"nodeType": "Block",
										"src": "6428:119:13",
										"statements": [
											{
												"expression": {
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1975,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "6439:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1977,
														"indexExpression": {
															"id": 1976,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "6453:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6439:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1978,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6470:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6474:5:13",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6470:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6439:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "6439:40:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1983,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6503:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6507:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6503:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1985,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "6515:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1986,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6529:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6533:5:13",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6529:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1982,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "6495:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6495:44:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1989,
												"nodeType": "EmitStatement",
												"src": "6490:49:13"
											}
										]
									},
									"documentation": {
										"id": 1972,
										"nodeType": "StructuredDocumentation",
										"src": "6330:65:13",
										"text": "@notice Allows Ether deposits directly via fallback function."
									},
									"id": 1991,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6408:2:13"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6428:0:13"
									},
									"scope": 2000,
									"src": "6401:146:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "6583:118:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "537765657473706f743a20757365206465706f7369742829",
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6666:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f",
																"typeString": "literal_string \"Sweetspot: use deposit()\""
															},
															"value": "Sweetspot: use deposit()"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f",
																"typeString": "literal_string \"Sweetspot: use deposit()\""
															}
														],
														"id": 1994,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "6659:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6659:34:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1997,
												"nodeType": "ExpressionStatement",
												"src": "6659:34:13"
											}
										]
									},
									"id": 1999,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6563:2:13"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6583:0:13"
									},
									"scope": 2000,
									"src": "6555:146:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2001,
							"src": "454:6250:13",
							"usedErrors": [
								30,
								35,
								211,
								214,
								761,
								1566
							],
							"usedEvents": [
								41,
								219,
								1526,
								1534,
								1542,
								1550,
								1558
							]
						}
					],
					"src": "33:6673:13"
				},
				"id": 13
			}
		}
	}
}