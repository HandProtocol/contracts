{
	"id": "b1850703930f217b19f818377aa26947",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sweetspot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport { SafeERC20 } from '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\nimport \"./interface/IScorer.sol\"; // Import the IScorer interface\r\n\r\ncontract nCookieJar is OwnableUpgradeable {\r\n    using SafeERC20 for IERC20;\r\n\r\n    // address public constant ETHER = address(0); // Placeholder for Ether\r\n    // celo \r\n    address public constant ETHER = 0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9;\r\n    IScorer public scorer; // Scoring contract for eligibility\r\n\r\n    struct Round {\r\n        uint256 start; // Start timestamp of the round\r\n        uint256 end; // End timestamp of the round\r\n        string metadataURI; // IPFS URI for round metadata\r\n    }\r\n\r\n    Round public currentRound; // Current round details\r\n\r\n    // Tracks balances for each token (including Ether)\r\n    mapping(address => uint256) public totalBalances;\r\n    // Allowed amounts per user per token\r\n    mapping(address => mapping(address => uint256)) public allowedAmounts;\r\n\r\n    event Deposit(address indexed depositor, address indexed token, uint256 amount);\r\n    event Withdraw(address indexed withdrawer, address indexed token, uint256 amount);\r\n    event Claimed(address indexed claimant, address indexed token, uint256 amount);\r\n    event AllowedAmountUpdated(address indexed user, address indexed token, uint256 newAmount);\r\n    event RoundUpdated(uint256 start, uint256 end, string metadataURI);\r\n\r\n\r\n    modifier onlyAdmin() {\r\n        require(scorer.isAdmin(msg.sender), \"Caller is not an admin\");\r\n        _;\r\n    }\r\n\r\n    /// @notice Initializes this contract with its initial state.\r\n    ///\r\n    /// @param _scorer The scoring contract address.\r\n    /// @param owner The owner address.\r\n    function initialize(address _scorer, address owner) external initializer {\r\n        __Ownable_init(owner); // Initialize OwnableUpgradeable\r\n        scorer = IScorer(_scorer);\r\n    }\r\n\r\n    /// @notice Deposits funds into this jar for a specific token or Ether.\r\n    ///\r\n    /// @param token The token address (address(0) for Ether).\r\n    /// @param amount The value to add (in wei for Ether).\r\n    function deposit(address token, uint256 amount) external payable {\r\n        if (token == ETHER) {\r\n            require(msg.value == amount, \"Incorrect Ether amount\");\r\n        } else {\r\n            require(amount > 0, \"Deposit amount must be greater than zero\");\r\n            IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\r\n        }\r\n\r\n        totalBalances[token] += amount;\r\n        emit Deposit(msg.sender, token, amount);\r\n    }\r\n\r\n    /// @notice Claims the full allowed amount for a user during the round.\r\n    function claim(address token) external {\r\n        require(block.timestamp >= currentRound.start && block.timestamp <= currentRound.end, \"Not within round duration\");\r\n\r\n        uint256 userAllowedAmount = allowedAmounts[msg.sender][token];\r\n        require(userAllowedAmount > 0, \"No claimable amount\");\r\n        require(totalBalances[token] >= userAllowedAmount, \"Insufficient funds in jar\");\r\n        require(scorer.score(msg.sender, \"Trust\") > 0, \"Insufficient Trust score\");\r\n\r\n        allowedAmounts[msg.sender][token] = 0;\r\n        totalBalances[token] -= userAllowedAmount;\r\n\r\n        if (token == ETHER) {\r\n            (bool success, ) = msg.sender.call{value: userAllowedAmount}(\"\");\r\n            require(success, \"Ether transfer failed\");\r\n        } else {\r\n            IERC20(token).safeTransfer(msg.sender, userAllowedAmount);\r\n        }\r\n\r\n        emit Claimed(msg.sender, token, userAllowedAmount);\r\n    }\r\n\r\n    /// @notice Sets the allowed amount for a specific user and token.\r\n    ///\r\n    /// @param user The address of the user.\r\n    /// @param token The token address.\r\n    /// @param amount The allowed amount for the user.\r\n    function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {\r\n        allowedAmounts[user][token] = amount;\r\n        emit AllowedAmountUpdated(user, token, amount);\r\n    }\r\n\r\n    /// @notice Sets the round duration and metadata URI.\r\n    ///\r\n    /// @param start The start timestamp of the round.\r\n    /// @param end The end timestamp of the round.\r\n    /// @param metadataURI The IPFS URI for the round metadata.\r\n    function setRound(uint256 start, uint256 end, string memory metadataURI) external onlyAdmin {\r\n        require(start < end, \"Start time must be before end time\");\r\n        currentRound = Round(start, end, metadataURI);\r\n        emit RoundUpdated(start, end, metadataURI);\r\n    }\r\n\r\n    /// @notice Withdraws funds from the jar for a specific token or Ether.\r\n    ///\r\n    /// @param token The token address (address(0) for Ether).\r\n    /// @param amount The amount to withdraw.\r\n    function withdraw(address token, uint256 amount) external onlyOwner {\r\n        require(amount > 0, \"Withdrawal amount must be greater than zero\");\r\n        require(totalBalances[token] >= amount, \"Insufficient funds\");\r\n\r\n        totalBalances[token] -= amount;\r\n\r\n        if (token == ETHER) {\r\n            (bool success, ) = owner().call{value: amount}(\"\");\r\n            require(success, \"Ether transfer failed\");\r\n        } else {\r\n            IERC20(token).safeTransfer(owner(), amount);\r\n        }\r\n        emit Withdraw(owner(), token, amount);\r\n    }\r\n\r\n    /// @notice Allows Ether deposits directly via fallback function.\r\n    receive() external payable {\r\n        totalBalances[ETHER] += msg.value;\r\n        emit Deposit(msg.sender, ETHER, msg.value);\r\n    }\r\n}\r\n"
			},
			"contracts/interface/IScorer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ninterface IScorer {\r\n    /**\r\n     * @dev Returns the score of a specific user for a given score type.\r\n     *      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).\r\n     *      The score is typically used to determine the user's eligibility for certain actions or claims.\r\n     *      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\r\n     *\r\n     * @param user The address of the user whose score is being queried.\r\n     * @param scoreType The type of score to query, represented as a `bytes32` hash.\r\n     * @return The score of the user as a uint256 value.\r\n     * @notice This function should be implemented in the contract that inherits the `IScorer` interface.\r\n     */\r\n    function score(address user, string memory scoreType) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Checks if the provided address is an admin.\r\n     * @param admin The address to check for admin status.\r\n     * @return True if the address is an admin, false otherwise.\r\n     * @notice This function should be implemented in the contract that inherits the `IScorer` interface.\r\n     */\r\n    function isAdmin(address admin) external view returns (bool);\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IScorer.sol": {
				"IScorer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "scoreType",
									"type": "string"
								}
							],
							"name": "score",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isAdmin(address)": {
								"details": "Checks if the provided address is an admin.",
								"params": {
									"admin": "The address to check for admin status."
								},
								"returns": {
									"_0": "True if the address is an admin, false otherwise."
								}
							},
							"score(address,string)": {
								"details": "Returns the score of a specific user for a given score type.      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.",
								"params": {
									"scoreType": "The type of score to query, represented as a `bytes32` hash.",
									"user": "The address of the user whose score is being queried."
								},
								"returns": {
									"_0": "The score of the user as a uint256 value."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isAdmin(address)": "24d7806c",
							"score(address,string)": "db4f1024"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"scoreType\",\"type\":\"string\"}],\"name\":\"score\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isAdmin(address)\":{\"details\":\"Checks if the provided address is an admin.\",\"params\":{\"admin\":\"The address to check for admin status.\"},\"returns\":{\"_0\":\"True if the address is an admin, false otherwise.\"}},\"score(address,string)\":{\"details\":\"Returns the score of a specific user for a given score type.      The score type is represented as a `bytes32` hash (e.g., keccak256(\\\"Trust\\\")).      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\",\"params\":{\"scoreType\":\"The type of score to query, represented as a `bytes32` hash.\",\"user\":\"The address of the user whose score is being queried.\"},\"returns\":{\"_0\":\"The score of the user as a uint256 value.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isAdmin(address)\":{\"notice\":\"This function should be implemented in the contract that inherits the `IScorer` interface.\"},\"score(address,string)\":{\"notice\":\"This function should be implemented in the contract that inherits the `IScorer` interface.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IScorer.sol\":\"IScorer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0x5bf83793e4290e7e68813647ee12b8abc4c538289be58958e32b7333b5b04e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f2ae1e6cfcef833b0424c313a99b39e98c418ba4fc037c081644ef42e598776\",\"dweb:/ipfs/QmSyyx1J5C2o3KCaWxDf3Gd9szsZGdzJCbe4u4SvdNXPjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"isAdmin(address)": {
								"notice": "This function should be implemented in the contract that inherits the `IScorer` interface."
							},
							"score(address,string)": {
								"notice": "This function should be implemented in the contract that inherits the `IScorer` interface."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/sweetspot.sol": {
				"nCookieJar": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "AllowedAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimant",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"name": "RoundUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "withdrawer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ETHER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowedAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_scorer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scorer",
							"outputs": [
								{
									"internalType": "contract IScorer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setAllowedAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"name": "setRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "totalBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"deposit(address,uint256)": {
								"params": {
									"amount": "The value to add (in wei for Ether).",
									"token": "The token address (address(0) for Ether)."
								}
							},
							"initialize(address,address)": {
								"params": {
									"_scorer": "The scoring contract address.",
									"owner": "The owner address."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setAllowedAmount(address,address,uint256)": {
								"params": {
									"amount": "The allowed amount for the user.",
									"token": "The token address.",
									"user": "The address of the user."
								}
							},
							"setRound(uint256,uint256,string)": {
								"params": {
									"end": "The end timestamp of the round.",
									"metadataURI": "The IPFS URI for the round metadata.",
									"start": "The start timestamp of the round."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address,uint256)": {
								"params": {
									"amount": "The amount to withdraw.",
									"token": "The token address (address(0) for Ether)."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sweetspot.sol\":367:5697  contract nCookieJar is OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sweetspot.sol\":367:5697  contract nCookieJar is OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb807a3c4\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb807a3c4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbe9a7687\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9590e8a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xaee9c872\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x485cc955\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x85c758f7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8a19c8bc\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x1e83409a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x42cb1fbc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x47e7ef24\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/sweetspot.sol\":5624:5633  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":5600:5613  totalBalances */\n      0x04\n        /* \"contracts/sweetspot.sol\":5600:5620  totalBalances[ETHER] */\n      0x00\n        /* \"contracts/sweetspot.sol\":574:616  0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9 */\n      0xf194afdf50b03e69bd7d057c1aa9e10c9954e4c9\n        /* \"contracts/sweetspot.sol\":5600:5620  totalBalances[ETHER] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":5600:5633  totalBalances[ETHER] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":574:616  0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9 */\n      0xf194afdf50b03e69bd7d057c1aa9e10c9954e4c9\n        /* \"contracts/sweetspot.sol\":5649:5686  Deposit(msg.sender, ETHER, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":5657:5667  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":5649:5686  Deposit(msg.sender, ETHER, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62\n        /* \"contracts/sweetspot.sol\":5676:5685  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":5649:5686  Deposit(msg.sender, ETHER, msg.value) */\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":367:5697  contract nCookieJar is OwnableUpgradeable {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sweetspot.sol\":2841:3760  function claim(address token) external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/sweetspot.sol\":542:616  address public constant ETHER = 0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":2303:2756  function deposit(address token, uint256 amount) external payable {... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/sweetspot.sol\":1903:2085  function initialize(address _scorer, address owner) external initializer {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/sweetspot.sol\":623:644  IScorer public scorer */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":886:911  Round public currentRound */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":1100:1169  mapping(address => mapping(address => uint256)) public allowedAmounts */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":1002:1050  mapping(address => uint256) public totalBalances */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":3992:4194  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/sweetspot.sol\":4443:4721  function setRound(uint256 start, uint256 end, string memory metadataURI) external onlyAdmin {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/sweetspot.sol\":4926:5483  function withdraw(address token, uint256 amount) external onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/sweetspot.sol\":2841:3760  function claim(address token) external {... */\n    tag_30:\n        /* \"contracts/sweetspot.sol\":2918:2930  currentRound */\n      0x01\n        /* \"contracts/sweetspot.sol\":2918:2936  currentRound.start */\n      0x00\n      add\n      sload\n        /* \"contracts/sweetspot.sol\":2899:2914  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":2899:2936  block.timestamp >= currentRound.start */\n      lt\n      iszero\n        /* \"contracts/sweetspot.sol\":2899:2975  block.timestamp >= currentRound.start && block.timestamp <= currentRound.end */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"contracts/sweetspot.sol\":2959:2971  currentRound */\n      0x01\n        /* \"contracts/sweetspot.sol\":2959:2975  currentRound.end */\n      dup1\n      add\n      sload\n        /* \"contracts/sweetspot.sol\":2940:2955  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":2940:2975  block.timestamp <= currentRound.end */\n      gt\n      iszero\n        /* \"contracts/sweetspot.sol\":2899:2975  block.timestamp >= currentRound.start && block.timestamp <= currentRound.end */\n    tag_91:\n        /* \"contracts/sweetspot.sol\":2891:3005  require(block.timestamp >= currentRound.start && block.timestamp <= currentRound.end, \"Not within round duration\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/sweetspot.sol\":3018:3043  uint256 userAllowedAmount */\n      0x00\n        /* \"contracts/sweetspot.sol\":3046:3060  allowedAmounts */\n      0x05\n        /* \"contracts/sweetspot.sol\":3046:3072  allowedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3061:3071  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3046:3072  allowedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3046:3079  allowedAmounts[msg.sender][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3073:3078  token */\n      dup4\n        /* \"contracts/sweetspot.sol\":3046:3079  allowedAmounts[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":3018:3079  uint256 userAllowedAmount = allowedAmounts[msg.sender][token] */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":3118:3119  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3098:3115  userAllowedAmount */\n      dup2\n        /* \"contracts/sweetspot.sol\":3098:3119  userAllowedAmount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":3090:3143  require(userAllowedAmount > 0, \"No claimable amount\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/sweetspot.sol\":3186:3203  userAllowedAmount */\n      dup1\n        /* \"contracts/sweetspot.sol\":3162:3175  totalBalances */\n      0x04\n        /* \"contracts/sweetspot.sol\":3162:3182  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3176:3181  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3162:3182  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":3162:3203  totalBalances[token] >= userAllowedAmount */\n      lt\n      iszero\n        /* \"contracts/sweetspot.sol\":3154:3233  require(totalBalances[token] >= userAllowedAmount, \"Insufficient funds in jar\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/sweetspot.sol\":3288:3289  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3252:3258  scorer */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3252:3264  scorer.score */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdb4f1024\n        /* \"contracts/sweetspot.sol\":3265:3275  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3252:3285  scorer.score(msg.sender, \"Trust\") */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"contracts/sweetspot.sol\":3252:3289  scorer.score(msg.sender, \"Trust\") > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":3244:3318  require(scorer.score(msg.sender, \"Trust\") > 0, \"Insufficient Trust score\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/sweetspot.sol\":3367:3368  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3331:3345  allowedAmounts */\n      0x05\n        /* \"contracts/sweetspot.sol\":3331:3357  allowedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3346:3356  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3331:3357  allowedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3331:3364  allowedAmounts[msg.sender][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3358:3363  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3331:3364  allowedAmounts[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3331:3368  allowedAmounts[msg.sender][token] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":3403:3420  userAllowedAmount */\n      dup1\n        /* \"contracts/sweetspot.sol\":3379:3392  totalBalances */\n      0x04\n        /* \"contracts/sweetspot.sol\":3379:3399  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3393:3398  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3379:3399  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":3379:3420  totalBalances[token] -= userAllowedAmount */\n      dup3\n      dup3\n      sload\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":574:616  0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9 */\n      0xf194afdf50b03e69bd7d057c1aa9e10c9954e4c9\n        /* \"contracts/sweetspot.sol\":3437:3451  token == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3437:3442  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":3437:3451  token == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":3433:3690  if (token == ETHER) {... */\n      tag_112\n      jumpi\n        /* \"contracts/sweetspot.sol\":3469:3481  bool success */\n      0x00\n        /* \"contracts/sweetspot.sol\":3487:3497  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3487:3502  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3510:3527  userAllowedAmount */\n      dup3\n        /* \"contracts/sweetspot.sol\":3487:3532  msg.sender.call{value: userAllowedAmount}(\"\") */\n      mload(0x40)\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_117\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_116)\n    tag_117:\n      0x60\n      swap2\n      pop\n    tag_116:\n      pop\n        /* \"contracts/sweetspot.sol\":3468:3532  (bool success, ) = msg.sender.call{value: userAllowedAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":3555:3562  success */\n      dup1\n        /* \"contracts/sweetspot.sol\":3547:3588  require(success, \"Ether transfer failed\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/sweetspot.sol\":3453:3600  {... */\n      pop\n        /* \"contracts/sweetspot.sol\":3433:3690  if (token == ETHER) {... */\n      jump(tag_121)\n    tag_112:\n        /* \"contracts/sweetspot.sol\":3621:3678  IERC20(token).safeTransfer(msg.sender, userAllowedAmount) */\n      tag_122\n        /* \"contracts/sweetspot.sol\":3648:3658  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3660:3677  userAllowedAmount */\n      dup3\n        /* \"contracts/sweetspot.sol\":3628:3633  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3621:3647  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_123\n      swap1\n        /* \"contracts/sweetspot.sol\":3621:3678  IERC20(token).safeTransfer(msg.sender, userAllowedAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"contracts/sweetspot.sol\":3433:3690  if (token == ETHER) {... */\n    tag_121:\n        /* \"contracts/sweetspot.sol\":3727:3732  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":3707:3752  Claimed(msg.sender, token, userAllowedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3715:3725  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3707:3752  Claimed(msg.sender, token, userAllowedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683\n        /* \"contracts/sweetspot.sol\":3734:3751  userAllowedAmount */\n      dup4\n        /* \"contracts/sweetspot.sol\":3707:3752  Claimed(msg.sender, token, userAllowedAmount) */\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":2880:3760  {... */\n      pop\n        /* \"contracts/sweetspot.sol\":2841:3760  function claim(address token) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":542:616  address public constant ETHER = 0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9 */\n    tag_33:\n        /* \"contracts/sweetspot.sol\":574:616  0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9 */\n      0xf194afdf50b03e69bd7d057c1aa9e10c9954e4c9\n        /* \"contracts/sweetspot.sol\":542:616  address public constant ETHER = 0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9 */\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":2303:2756  function deposit(address token, uint256 amount) external payable {... */\n    tag_39:\n        /* \"contracts/sweetspot.sol\":574:616  0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9 */\n      0xf194afdf50b03e69bd7d057c1aa9e10c9954e4c9\n        /* \"contracts/sweetspot.sol\":2383:2397  token == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":2383:2388  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":2383:2397  token == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":2379:2656  if (token == ETHER) {... */\n      tag_126\n      jumpi\n        /* \"contracts/sweetspot.sol\":2435:2441  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":2422:2431  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":2422:2441  msg.value == amount */\n      eq\n        /* \"contracts/sweetspot.sol\":2414:2468  require(msg.value == amount, \"Incorrect Ether amount\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/sweetspot.sol\":2379:2656  if (token == ETHER) {... */\n      jump(tag_130)\n    tag_126:\n        /* \"contracts/sweetspot.sol\":2518:2519  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":2509:2515  amount */\n      dup2\n        /* \"contracts/sweetspot.sol\":2509:2519  amount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":2501:2564  require(amount > 0, \"Deposit amount must be greater than zero\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"contracts/sweetspot.sol\":2579:2644  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_134\n        /* \"contracts/sweetspot.sol\":2610:2620  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":2630:2634  this */\n      address\n        /* \"contracts/sweetspot.sol\":2637:2643  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":2586:2591  token */\n      dup6\n        /* \"contracts/sweetspot.sol\":2579:2609  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_135\n      swap1\n        /* \"contracts/sweetspot.sol\":2579:2644  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/sweetspot.sol\":2379:2656  if (token == ETHER) {... */\n    tag_130:\n        /* \"contracts/sweetspot.sol\":2692:2698  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":2668:2681  totalBalances */\n      0x04\n        /* \"contracts/sweetspot.sol\":2668:2688  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":2682:2687  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":2668:2688  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":2668:2698  totalBalances[token] += amount */\n      dup3\n      dup3\n      sload\n      tag_136\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_136:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":2734:2739  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":2714:2748  Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":2722:2732  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":2714:2748  Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62\n        /* \"contracts/sweetspot.sol\":2741:2747  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":2714:2748  Deposit(msg.sender, token, amount) */\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":2303:2756  function deposit(address token, uint256 amount) external payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":1903:2085  function initialize(address _scorer, address owner) external initializer {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_141\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_141:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_142\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_143\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_145:\n        /* \"contracts/sweetspot.sol\":1987:2008  __Ownable_init(owner) */\n      tag_147\n        /* \"contracts/sweetspot.sol\":2002:2007  owner */\n      dup7\n        /* \"contracts/sweetspot.sol\":1987:2001  __Ownable_init */\n      tag_148\n        /* \"contracts/sweetspot.sol\":1987:2008  __Ownable_init(owner) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/sweetspot.sol\":2069:2076  _scorer */\n      dup7\n        /* \"contracts/sweetspot.sol\":2052:2058  scorer */\n      0x00\n      dup1\n        /* \"contracts/sweetspot.sol\":2052:2077  scorer = IScorer(_scorer) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/sweetspot.sol\":1903:2085  function initialize(address _scorer, address owner) external initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_156\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":623:644  IScorer public scorer */\n    tag_50:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":886:911  Round public currentRound */\n    tag_55:\n      0x01\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      dup1\n      sload\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_159\n      jump\t// in\n    tag_160:\n      dup1\n      iszero\n      tag_161\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_162\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_161)\n    tag_162:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_163:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_163\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":1100:1169  mapping(address => mapping(address => uint256)) public allowedAmounts */\n    tag_65:\n      mstore(0x20, 0x05)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":1002:1050  mapping(address => uint256) public totalBalances */\n    tag_70:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":3992:4194  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n    tag_76:\n        /* \"contracts/sweetspot.sol\":1651:1657  scorer */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":1651:1665  scorer.isAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24d7806c\n        /* \"contracts/sweetspot.sol\":1666:1676  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":1651:1677  scorer.isAdmin(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_168:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"contracts/sweetspot.sol\":1643:1704  require(scorer.isAdmin(msg.sender), \"Caller is not an admin\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"contracts/sweetspot.sol\":4123:4129  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":4093:4107  allowedAmounts */\n      0x05\n        /* \"contracts/sweetspot.sol\":4093:4113  allowedAmounts[user] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4108:4112  user */\n      dup6\n        /* \"contracts/sweetspot.sol\":4093:4113  allowedAmounts[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4093:4120  allowedAmounts[user][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4114:4119  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":4093:4120  allowedAmounts[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4093:4129  allowedAmounts[user][token] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":4172:4177  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":4145:4186  AllowedAmountUpdated(user, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":4166:4170  user */\n      dup4\n        /* \"contracts/sweetspot.sol\":4145:4186  AllowedAmountUpdated(user, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2\n        /* \"contracts/sweetspot.sol\":4179:4185  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":4145:4186  AllowedAmountUpdated(user, token, amount) */\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":3992:4194  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":4443:4721  function setRound(uint256 start, uint256 end, string memory metadataURI) external onlyAdmin {... */\n    tag_81:\n        /* \"contracts/sweetspot.sol\":1651:1657  scorer */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":1651:1665  scorer.isAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24d7806c\n        /* \"contracts/sweetspot.sol\":1666:1676  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":1651:1677  scorer.isAdmin(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_179:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_182:\n        /* \"contracts/sweetspot.sol\":1643:1704  require(scorer.isAdmin(msg.sender), \"Caller is not an admin\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_175\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/sweetspot.sol\":4562:4565  end */\n      dup2\n        /* \"contracts/sweetspot.sol\":4554:4559  start */\n      dup4\n        /* \"contracts/sweetspot.sol\":4554:4565  start < end */\n      lt\n        /* \"contracts/sweetspot.sol\":4546:4604  require(start < end, \"Start time must be before end time\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contracts/sweetspot.sol\":4630:4660  Round(start, end, metadataURI) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/sweetspot.sol\":4636:4641  start */\n      dup5\n        /* \"contracts/sweetspot.sol\":4630:4660  Round(start, end, metadataURI) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sweetspot.sol\":4643:4646  end */\n      dup4\n        /* \"contracts/sweetspot.sol\":4630:4660  Round(start, end, metadataURI) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sweetspot.sol\":4648:4659  metadataURI */\n      dup3\n        /* \"contracts/sweetspot.sol\":4630:4660  Round(start, end, metadataURI) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/sweetspot.sol\":4615:4627  currentRound */\n      0x01\n        /* \"contracts/sweetspot.sol\":4615:4660  currentRound = Round(start, end, metadataURI) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      swap1\n      dup2\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/sweetspot.sol\":4676:4713  RoundUpdated(start, end, metadataURI) */\n      0x09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13\n        /* \"contracts/sweetspot.sol\":4689:4694  start */\n      dup4\n        /* \"contracts/sweetspot.sol\":4696:4699  end */\n      dup4\n        /* \"contracts/sweetspot.sol\":4701:4712  metadataURI */\n      dup4\n        /* \"contracts/sweetspot.sol\":4676:4713  RoundUpdated(start, end, metadataURI) */\n      mload(0x40)\n      tag_191\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sweetspot.sol\":4443:4721  function setRound(uint256 start, uint256 end, string memory metadataURI) external onlyAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_193\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":4926:5483  function withdraw(address token, uint256 amount) external onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"contracts/sweetspot.sol\":5022:5023  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":5013:5019  amount */\n      dup2\n        /* \"contracts/sweetspot.sol\":5013:5023  amount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":5005:5071  require(amount > 0, \"Withdrawal amount must be greater than zero\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/sweetspot.sol\":5114:5120  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":5090:5103  totalBalances */\n      0x04\n        /* \"contracts/sweetspot.sol\":5090:5110  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":5104:5109  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":5090:5110  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":5090:5120  totalBalances[token] >= amount */\n      lt\n      iszero\n        /* \"contracts/sweetspot.sol\":5082:5143  require(totalBalances[token] >= amount, \"Insufficient funds\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/sweetspot.sol\":5180:5186  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":5156:5169  totalBalances */\n      0x04\n        /* \"contracts/sweetspot.sol\":5156:5176  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":5170:5175  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":5156:5176  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":5156:5186  totalBalances[token] -= amount */\n      dup3\n      dup3\n      sload\n      tag_207\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_207:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":574:616  0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9 */\n      0xf194afdf50b03e69bd7d057c1aa9e10c9954e4c9\n        /* \"contracts/sweetspot.sol\":5203:5217  token == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":5203:5208  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":5203:5217  token == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":5199:5428  if (token == ETHER) {... */\n      tag_208\n      jumpi\n        /* \"contracts/sweetspot.sol\":5235:5247  bool success */\n      0x00\n        /* \"contracts/sweetspot.sol\":5253:5260  owner() */\n      tag_209\n        /* \"contracts/sweetspot.sol\":5253:5258  owner */\n      tag_60\n        /* \"contracts/sweetspot.sol\":5253:5260  owner() */\n      jump\t// in\n    tag_209:\n        /* \"contracts/sweetspot.sol\":5253:5265  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":5273:5279  amount */\n      dup3\n        /* \"contracts/sweetspot.sol\":5253:5284  owner().call{value: amount}(\"\") */\n      mload(0x40)\n      tag_210\n      swap1\n      tag_114\n      jump\t// in\n    tag_210:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_213\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_212)\n    tag_213:\n      0x60\n      swap2\n      pop\n    tag_212:\n      pop\n        /* \"contracts/sweetspot.sol\":5234:5284  (bool success, ) = owner().call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":5307:5314  success */\n      dup1\n        /* \"contracts/sweetspot.sol\":5299:5340  require(success, \"Ether transfer failed\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_120\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"contracts/sweetspot.sol\":5219:5352  {... */\n      pop\n        /* \"contracts/sweetspot.sol\":5199:5428  if (token == ETHER) {... */\n      jump(tag_216)\n    tag_208:\n        /* \"contracts/sweetspot.sol\":5373:5416  IERC20(token).safeTransfer(owner(), amount) */\n      tag_217\n        /* \"contracts/sweetspot.sol\":5400:5407  owner() */\n      tag_218\n        /* \"contracts/sweetspot.sol\":5400:5405  owner */\n      tag_60\n        /* \"contracts/sweetspot.sol\":5400:5407  owner() */\n      jump\t// in\n    tag_218:\n        /* \"contracts/sweetspot.sol\":5409:5415  amount */\n      dup3\n        /* \"contracts/sweetspot.sol\":5380:5385  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":5373:5399  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_123\n      swap1\n        /* \"contracts/sweetspot.sol\":5373:5416  IERC20(token).safeTransfer(owner(), amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"contracts/sweetspot.sol\":5199:5428  if (token == ETHER) {... */\n    tag_216:\n        /* \"contracts/sweetspot.sol\":5461:5466  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":5443:5475  Withdraw(owner(), token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":5452:5459  owner() */\n      tag_219\n        /* \"contracts/sweetspot.sol\":5452:5457  owner */\n      tag_60\n        /* \"contracts/sweetspot.sol\":5452:5459  owner() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/sweetspot.sol\":5443:5475  Withdraw(owner(), token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb\n        /* \"contracts/sweetspot.sol\":5468:5474  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":5443:5475  Withdraw(owner(), token, amount) */\n      mload(0x40)\n      tag_220\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":4926:5483  function withdraw(address token, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_223\n      swap3\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1817  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1833:1837  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1841  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1843:1848  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_228\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_60\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_250)\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_265\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_266:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_267:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x11\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:467   */\n    tag_23:\n        /* \"#utility.yul\":316:319   */\n      0x00\n        /* \"#utility.yul\":335:355   */\n      tag_352\n        /* \"#utility.yul\":353:354   */\n      dup3\n        /* \"#utility.yul\":335:355   */\n      tag_266\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":330:355   */\n      swap2\n      pop\n        /* \"#utility.yul\":369:389   */\n      tag_353\n        /* \"#utility.yul\":387:388   */\n      dup4\n        /* \"#utility.yul\":369:389   */\n      tag_266\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":364:389   */\n      swap3\n      pop\n        /* \"#utility.yul\":412:413   */\n      dup3\n        /* \"#utility.yul\":409:410   */\n      dup3\n        /* \"#utility.yul\":405:414   */\n      add\n        /* \"#utility.yul\":398:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:436   */\n      dup1\n        /* \"#utility.yul\":430:431   */\n      dup3\n        /* \"#utility.yul\":427:437   */\n      gt\n        /* \"#utility.yul\":424:460   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":440:458   */\n      tag_355\n      tag_267\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":424:460   */\n    tag_354:\n        /* \"#utility.yul\":276:467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":473:591   */\n    tag_268:\n        /* \"#utility.yul\":560:584   */\n      tag_357\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":560:584   */\n      tag_266\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":555:558   */\n      dup3\n        /* \"#utility.yul\":548:585   */\n      mstore\n        /* \"#utility.yul\":473:591   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":597:819   */\n    tag_25:\n        /* \"#utility.yul\":690:694   */\n      0x00\n        /* \"#utility.yul\":728:730   */\n      0x20\n        /* \"#utility.yul\":717:726   */\n      dup3\n        /* \"#utility.yul\":713:731   */\n      add\n        /* \"#utility.yul\":705:731   */\n      swap1\n      pop\n        /* \"#utility.yul\":741:812   */\n      tag_359\n        /* \"#utility.yul\":809:810   */\n      0x00\n        /* \"#utility.yul\":798:807   */\n      dup4\n        /* \"#utility.yul\":794:811   */\n      add\n        /* \"#utility.yul\":785:791   */\n      dup5\n        /* \"#utility.yul\":741:812   */\n      tag_268\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":597:819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":825:900   */\n    tag_269:\n        /* \"#utility.yul\":858:864   */\n      0x00\n        /* \"#utility.yul\":891:893   */\n      0x40\n        /* \"#utility.yul\":885:894   */\n      mload\n        /* \"#utility.yul\":875:894   */\n      swap1\n      pop\n        /* \"#utility.yul\":825:900   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":906:1023   */\n    tag_270:\n        /* \"#utility.yul\":1015:1016   */\n      0x00\n        /* \"#utility.yul\":1012:1013   */\n      dup1\n        /* \"#utility.yul\":1005:1017   */\n      revert\n        /* \"#utility.yul\":1029:1146   */\n    tag_271:\n        /* \"#utility.yul\":1138:1139   */\n      0x00\n        /* \"#utility.yul\":1135:1136   */\n      dup1\n        /* \"#utility.yul\":1128:1140   */\n      revert\n        /* \"#utility.yul\":1152:1278   */\n    tag_272:\n        /* \"#utility.yul\":1189:1196   */\n      0x00\n        /* \"#utility.yul\":1229:1271   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1222:1227   */\n      dup3\n        /* \"#utility.yul\":1218:1272   */\n      and\n        /* \"#utility.yul\":1207:1272   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1284:1380   */\n    tag_273:\n        /* \"#utility.yul\":1321:1328   */\n      0x00\n        /* \"#utility.yul\":1350:1374   */\n      tag_365\n        /* \"#utility.yul\":1368:1373   */\n      dup3\n        /* \"#utility.yul\":1350:1374   */\n      tag_272\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":1339:1374   */\n      swap1\n      pop\n        /* \"#utility.yul\":1284:1380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1386:1508   */\n    tag_274:\n        /* \"#utility.yul\":1459:1483   */\n      tag_367\n        /* \"#utility.yul\":1477:1482   */\n      dup2\n        /* \"#utility.yul\":1459:1483   */\n      tag_273\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":1452:1457   */\n      dup2\n        /* \"#utility.yul\":1449:1484   */\n      eq\n        /* \"#utility.yul\":1439:1502   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":1498:1499   */\n      0x00\n        /* \"#utility.yul\":1495:1496   */\n      dup1\n        /* \"#utility.yul\":1488:1500   */\n      revert\n        /* \"#utility.yul\":1439:1502   */\n    tag_368:\n        /* \"#utility.yul\":1386:1508   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1514:1653   */\n    tag_275:\n        /* \"#utility.yul\":1560:1565   */\n      0x00\n        /* \"#utility.yul\":1598:1604   */\n      dup2\n        /* \"#utility.yul\":1585:1605   */\n      calldataload\n        /* \"#utility.yul\":1576:1605   */\n      swap1\n      pop\n        /* \"#utility.yul\":1614:1647   */\n      tag_370\n        /* \"#utility.yul\":1641:1646   */\n      dup2\n        /* \"#utility.yul\":1614:1647   */\n      tag_274\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1514:1653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1659:1988   */\n    tag_29:\n        /* \"#utility.yul\":1718:1724   */\n      0x00\n        /* \"#utility.yul\":1767:1769   */\n      0x20\n        /* \"#utility.yul\":1755:1764   */\n      dup3\n        /* \"#utility.yul\":1746:1753   */\n      dup5\n        /* \"#utility.yul\":1742:1765   */\n      sub\n        /* \"#utility.yul\":1738:1770   */\n      slt\n        /* \"#utility.yul\":1735:1854   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":1773:1852   */\n      tag_373\n      tag_270\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":1735:1854   */\n    tag_372:\n        /* \"#utility.yul\":1893:1894   */\n      0x00\n        /* \"#utility.yul\":1918:1971   */\n      tag_374\n        /* \"#utility.yul\":1963:1970   */\n      dup5\n        /* \"#utility.yul\":1954:1960   */\n      dup3\n        /* \"#utility.yul\":1943:1952   */\n      dup6\n        /* \"#utility.yul\":1939:1961   */\n      add\n        /* \"#utility.yul\":1918:1971   */\n      tag_275\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1908:1971   */\n      swap2\n      pop\n        /* \"#utility.yul\":1864:1981   */\n      pop\n        /* \"#utility.yul\":1659:1988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1994:2112   */\n    tag_276:\n        /* \"#utility.yul\":2081:2105   */\n      tag_376\n        /* \"#utility.yul\":2099:2104   */\n      dup2\n        /* \"#utility.yul\":2081:2105   */\n      tag_273\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2076:2079   */\n      dup3\n        /* \"#utility.yul\":2069:2106   */\n      mstore\n        /* \"#utility.yul\":1994:2112   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2118:2340   */\n    tag_35:\n        /* \"#utility.yul\":2211:2215   */\n      0x00\n        /* \"#utility.yul\":2249:2251   */\n      0x20\n        /* \"#utility.yul\":2238:2247   */\n      dup3\n        /* \"#utility.yul\":2234:2252   */\n      add\n        /* \"#utility.yul\":2226:2252   */\n      swap1\n      pop\n        /* \"#utility.yul\":2262:2333   */\n      tag_378\n        /* \"#utility.yul\":2330:2331   */\n      0x00\n        /* \"#utility.yul\":2319:2328   */\n      dup4\n        /* \"#utility.yul\":2315:2332   */\n      add\n        /* \"#utility.yul\":2306:2312   */\n      dup5\n        /* \"#utility.yul\":2262:2333   */\n      tag_276\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2118:2340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2346:2468   */\n    tag_277:\n        /* \"#utility.yul\":2419:2443   */\n      tag_380\n        /* \"#utility.yul\":2437:2442   */\n      dup2\n        /* \"#utility.yul\":2419:2443   */\n      tag_266\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2412:2417   */\n      dup2\n        /* \"#utility.yul\":2409:2444   */\n      eq\n        /* \"#utility.yul\":2399:2462   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":2458:2459   */\n      0x00\n        /* \"#utility.yul\":2455:2456   */\n      dup1\n        /* \"#utility.yul\":2448:2460   */\n      revert\n        /* \"#utility.yul\":2399:2462   */\n    tag_381:\n        /* \"#utility.yul\":2346:2468   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2474:2613   */\n    tag_278:\n        /* \"#utility.yul\":2520:2525   */\n      0x00\n        /* \"#utility.yul\":2558:2564   */\n      dup2\n        /* \"#utility.yul\":2545:2565   */\n      calldataload\n        /* \"#utility.yul\":2536:2565   */\n      swap1\n      pop\n        /* \"#utility.yul\":2574:2607   */\n      tag_383\n        /* \"#utility.yul\":2601:2606   */\n      dup2\n        /* \"#utility.yul\":2574:2607   */\n      tag_277\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2474:2613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2619:3093   */\n    tag_38:\n        /* \"#utility.yul\":2687:2693   */\n      0x00\n        /* \"#utility.yul\":2695:2701   */\n      dup1\n        /* \"#utility.yul\":2744:2746   */\n      0x40\n        /* \"#utility.yul\":2732:2741   */\n      dup4\n        /* \"#utility.yul\":2723:2730   */\n      dup6\n        /* \"#utility.yul\":2719:2742   */\n      sub\n        /* \"#utility.yul\":2715:2747   */\n      slt\n        /* \"#utility.yul\":2712:2831   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":2750:2829   */\n      tag_386\n      tag_270\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2712:2831   */\n    tag_385:\n        /* \"#utility.yul\":2870:2871   */\n      0x00\n        /* \"#utility.yul\":2895:2948   */\n      tag_387\n        /* \"#utility.yul\":2940:2947   */\n      dup6\n        /* \"#utility.yul\":2931:2937   */\n      dup3\n        /* \"#utility.yul\":2920:2929   */\n      dup7\n        /* \"#utility.yul\":2916:2938   */\n      add\n        /* \"#utility.yul\":2895:2948   */\n      tag_275\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2885:2948   */\n      swap3\n      pop\n        /* \"#utility.yul\":2841:2958   */\n      pop\n        /* \"#utility.yul\":2997:2999   */\n      0x20\n        /* \"#utility.yul\":3023:3076   */\n      tag_388\n        /* \"#utility.yul\":3068:3075   */\n      dup6\n        /* \"#utility.yul\":3059:3065   */\n      dup3\n        /* \"#utility.yul\":3048:3057   */\n      dup7\n        /* \"#utility.yul\":3044:3066   */\n      add\n        /* \"#utility.yul\":3023:3076   */\n      tag_278\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3013:3076   */\n      swap2\n      pop\n        /* \"#utility.yul\":2968:3086   */\n      pop\n        /* \"#utility.yul\":2619:3093   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3099:3573   */\n    tag_43:\n        /* \"#utility.yul\":3167:3173   */\n      0x00\n        /* \"#utility.yul\":3175:3181   */\n      dup1\n        /* \"#utility.yul\":3224:3226   */\n      0x40\n        /* \"#utility.yul\":3212:3221   */\n      dup4\n        /* \"#utility.yul\":3203:3210   */\n      dup6\n        /* \"#utility.yul\":3199:3222   */\n      sub\n        /* \"#utility.yul\":3195:3227   */\n      slt\n        /* \"#utility.yul\":3192:3311   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":3230:3309   */\n      tag_391\n      tag_270\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3192:3311   */\n    tag_390:\n        /* \"#utility.yul\":3350:3351   */\n      0x00\n        /* \"#utility.yul\":3375:3428   */\n      tag_392\n        /* \"#utility.yul\":3420:3427   */\n      dup6\n        /* \"#utility.yul\":3411:3417   */\n      dup3\n        /* \"#utility.yul\":3400:3409   */\n      dup7\n        /* \"#utility.yul\":3396:3418   */\n      add\n        /* \"#utility.yul\":3375:3428   */\n      tag_275\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3365:3428   */\n      swap3\n      pop\n        /* \"#utility.yul\":3321:3438   */\n      pop\n        /* \"#utility.yul\":3477:3479   */\n      0x20\n        /* \"#utility.yul\":3503:3556   */\n      tag_393\n        /* \"#utility.yul\":3548:3555   */\n      dup6\n        /* \"#utility.yul\":3539:3545   */\n      dup3\n        /* \"#utility.yul\":3528:3537   */\n      dup7\n        /* \"#utility.yul\":3524:3546   */\n      add\n        /* \"#utility.yul\":3503:3556   */\n      tag_275\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3493:3556   */\n      swap2\n      pop\n        /* \"#utility.yul\":3448:3566   */\n      pop\n        /* \"#utility.yul\":3099:3573   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3579:3639   */\n    tag_279:\n        /* \"#utility.yul\":3607:3610   */\n      0x00\n        /* \"#utility.yul\":3628:3633   */\n      dup2\n        /* \"#utility.yul\":3621:3633   */\n      swap1\n      pop\n        /* \"#utility.yul\":3579:3639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3645:3787   */\n    tag_280:\n        /* \"#utility.yul\":3695:3704   */\n      0x00\n        /* \"#utility.yul\":3728:3781   */\n      tag_396\n        /* \"#utility.yul\":3746:3780   */\n      tag_397\n        /* \"#utility.yul\":3755:3779   */\n      tag_398\n        /* \"#utility.yul\":3773:3778   */\n      dup5\n        /* \"#utility.yul\":3755:3779   */\n      tag_272\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3746:3780   */\n      tag_279\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3728:3781   */\n      tag_272\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3715:3781   */\n      swap1\n      pop\n        /* \"#utility.yul\":3645:3787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3793:3919   */\n    tag_281:\n        /* \"#utility.yul\":3843:3852   */\n      0x00\n        /* \"#utility.yul\":3876:3913   */\n      tag_400\n        /* \"#utility.yul\":3907:3912   */\n      dup3\n        /* \"#utility.yul\":3876:3913   */\n      tag_280\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3863:3913   */\n      swap1\n      pop\n        /* \"#utility.yul\":3793:3919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3925:4067   */\n    tag_282:\n        /* \"#utility.yul\":3991:4000   */\n      0x00\n        /* \"#utility.yul\":4024:4061   */\n      tag_402\n        /* \"#utility.yul\":4055:4060   */\n      dup3\n        /* \"#utility.yul\":4024:4061   */\n      tag_281\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":4011:4061   */\n      swap1\n      pop\n        /* \"#utility.yul\":3925:4067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4073:4236   */\n    tag_283:\n        /* \"#utility.yul\":4176:4229   */\n      tag_404\n        /* \"#utility.yul\":4223:4228   */\n      dup2\n        /* \"#utility.yul\":4176:4229   */\n      tag_282\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4171:4174   */\n      dup3\n        /* \"#utility.yul\":4164:4230   */\n      mstore\n        /* \"#utility.yul\":4073:4236   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4242:4496   */\n    tag_52:\n        /* \"#utility.yul\":4351:4355   */\n      0x00\n        /* \"#utility.yul\":4389:4391   */\n      0x20\n        /* \"#utility.yul\":4378:4387   */\n      dup3\n        /* \"#utility.yul\":4374:4392   */\n      add\n        /* \"#utility.yul\":4366:4392   */\n      swap1\n      pop\n        /* \"#utility.yul\":4402:4489   */\n      tag_406\n        /* \"#utility.yul\":4486:4487   */\n      0x00\n        /* \"#utility.yul\":4475:4484   */\n      dup4\n        /* \"#utility.yul\":4471:4488   */\n      add\n        /* \"#utility.yul\":4462:4468   */\n      dup5\n        /* \"#utility.yul\":4402:4489   */\n      tag_283\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4242:4496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4502:4601   */\n    tag_284:\n        /* \"#utility.yul\":4554:4560   */\n      0x00\n        /* \"#utility.yul\":4588:4593   */\n      dup2\n        /* \"#utility.yul\":4582:4594   */\n      mload\n        /* \"#utility.yul\":4572:4594   */\n      swap1\n      pop\n        /* \"#utility.yul\":4502:4601   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4607:4776   */\n    tag_285:\n        /* \"#utility.yul\":4691:4702   */\n      0x00\n        /* \"#utility.yul\":4725:4731   */\n      dup3\n        /* \"#utility.yul\":4720:4723   */\n      dup3\n        /* \"#utility.yul\":4713:4732   */\n      mstore\n        /* \"#utility.yul\":4765:4769   */\n      0x20\n        /* \"#utility.yul\":4760:4763   */\n      dup3\n        /* \"#utility.yul\":4756:4770   */\n      add\n        /* \"#utility.yul\":4741:4770   */\n      swap1\n      pop\n        /* \"#utility.yul\":4607:4776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4782:4921   */\n    tag_286:\n        /* \"#utility.yul\":4871:4877   */\n      dup3\n        /* \"#utility.yul\":4866:4869   */\n      dup2\n        /* \"#utility.yul\":4861:4864   */\n      dup4\n        /* \"#utility.yul\":4855:4878   */\n      mcopy\n        /* \"#utility.yul\":4912:4913   */\n      0x00\n        /* \"#utility.yul\":4903:4909   */\n      dup4\n        /* \"#utility.yul\":4898:4901   */\n      dup4\n        /* \"#utility.yul\":4894:4910   */\n      add\n        /* \"#utility.yul\":4887:4914   */\n      mstore\n        /* \"#utility.yul\":4782:4921   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4927:5029   */\n    tag_287:\n        /* \"#utility.yul\":4968:4974   */\n      0x00\n        /* \"#utility.yul\":5019:5021   */\n      0x1f\n        /* \"#utility.yul\":5015:5022   */\n      not\n        /* \"#utility.yul\":5010:5012   */\n      0x1f\n        /* \"#utility.yul\":5003:5008   */\n      dup4\n        /* \"#utility.yul\":4999:5013   */\n      add\n        /* \"#utility.yul\":4995:5023   */\n      and\n        /* \"#utility.yul\":4985:5023   */\n      swap1\n      pop\n        /* \"#utility.yul\":4927:5029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5035:5412   */\n    tag_288:\n        /* \"#utility.yul\":5123:5126   */\n      0x00\n        /* \"#utility.yul\":5151:5190   */\n      tag_412\n        /* \"#utility.yul\":5184:5189   */\n      dup3\n        /* \"#utility.yul\":5151:5190   */\n      tag_284\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5206:5277   */\n      tag_413\n        /* \"#utility.yul\":5270:5276   */\n      dup2\n        /* \"#utility.yul\":5265:5268   */\n      dup6\n        /* \"#utility.yul\":5206:5277   */\n      tag_285\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5199:5277   */\n      swap4\n      pop\n        /* \"#utility.yul\":5286:5351   */\n      tag_414\n        /* \"#utility.yul\":5344:5350   */\n      dup2\n        /* \"#utility.yul\":5339:5342   */\n      dup6\n        /* \"#utility.yul\":5332:5336   */\n      0x20\n        /* \"#utility.yul\":5325:5330   */\n      dup7\n        /* \"#utility.yul\":5321:5337   */\n      add\n        /* \"#utility.yul\":5286:5351   */\n      tag_286\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5376:5405   */\n      tag_415\n        /* \"#utility.yul\":5398:5404   */\n      dup2\n        /* \"#utility.yul\":5376:5405   */\n      tag_287\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5371:5374   */\n      dup5\n        /* \"#utility.yul\":5367:5406   */\n      add\n        /* \"#utility.yul\":5360:5406   */\n      swap2\n      pop\n        /* \"#utility.yul\":5127:5412   */\n      pop\n        /* \"#utility.yul\":5035:5412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5418:5951   */\n    tag_57:\n        /* \"#utility.yul\":5587:5591   */\n      0x00\n        /* \"#utility.yul\":5625:5627   */\n      0x60\n        /* \"#utility.yul\":5614:5623   */\n      dup3\n        /* \"#utility.yul\":5610:5628   */\n      add\n        /* \"#utility.yul\":5602:5628   */\n      swap1\n      pop\n        /* \"#utility.yul\":5638:5709   */\n      tag_417\n        /* \"#utility.yul\":5706:5707   */\n      0x00\n        /* \"#utility.yul\":5695:5704   */\n      dup4\n        /* \"#utility.yul\":5691:5708   */\n      add\n        /* \"#utility.yul\":5682:5688   */\n      dup7\n        /* \"#utility.yul\":5638:5709   */\n      tag_268\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":5719:5791   */\n      tag_418\n        /* \"#utility.yul\":5787:5789   */\n      0x20\n        /* \"#utility.yul\":5776:5785   */\n      dup4\n        /* \"#utility.yul\":5772:5790   */\n      add\n        /* \"#utility.yul\":5763:5769   */\n      dup6\n        /* \"#utility.yul\":5719:5791   */\n      tag_268\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":5838:5847   */\n      dup2\n        /* \"#utility.yul\":5832:5836   */\n      dup2\n        /* \"#utility.yul\":5828:5848   */\n      sub\n        /* \"#utility.yul\":5823:5825   */\n      0x40\n        /* \"#utility.yul\":5812:5821   */\n      dup4\n        /* \"#utility.yul\":5808:5826   */\n      add\n        /* \"#utility.yul\":5801:5849   */\n      mstore\n        /* \"#utility.yul\":5866:5944   */\n      tag_419\n        /* \"#utility.yul\":5939:5943   */\n      dup2\n        /* \"#utility.yul\":5930:5936   */\n      dup5\n        /* \"#utility.yul\":5866:5944   */\n      tag_288\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5858:5944   */\n      swap1\n      pop\n        /* \"#utility.yul\":5418:5951   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5957:6576   */\n    tag_75:\n        /* \"#utility.yul\":6034:6040   */\n      0x00\n        /* \"#utility.yul\":6042:6048   */\n      dup1\n        /* \"#utility.yul\":6050:6056   */\n      0x00\n        /* \"#utility.yul\":6099:6101   */\n      0x60\n        /* \"#utility.yul\":6087:6096   */\n      dup5\n        /* \"#utility.yul\":6078:6085   */\n      dup7\n        /* \"#utility.yul\":6074:6097   */\n      sub\n        /* \"#utility.yul\":6070:6102   */\n      slt\n        /* \"#utility.yul\":6067:6186   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":6105:6184   */\n      tag_422\n      tag_270\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":6067:6186   */\n    tag_421:\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6250:6303   */\n      tag_423\n        /* \"#utility.yul\":6295:6302   */\n      dup7\n        /* \"#utility.yul\":6286:6292   */\n      dup3\n        /* \"#utility.yul\":6275:6284   */\n      dup8\n        /* \"#utility.yul\":6271:6293   */\n      add\n        /* \"#utility.yul\":6250:6303   */\n      tag_275\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6240:6303   */\n      swap4\n      pop\n        /* \"#utility.yul\":6196:6313   */\n      pop\n        /* \"#utility.yul\":6352:6354   */\n      0x20\n        /* \"#utility.yul\":6378:6431   */\n      tag_424\n        /* \"#utility.yul\":6423:6430   */\n      dup7\n        /* \"#utility.yul\":6414:6420   */\n      dup3\n        /* \"#utility.yul\":6403:6412   */\n      dup8\n        /* \"#utility.yul\":6399:6421   */\n      add\n        /* \"#utility.yul\":6378:6431   */\n      tag_275\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":6368:6431   */\n      swap3\n      pop\n        /* \"#utility.yul\":6323:6441   */\n      pop\n        /* \"#utility.yul\":6480:6482   */\n      0x40\n        /* \"#utility.yul\":6506:6559   */\n      tag_425\n        /* \"#utility.yul\":6551:6558   */\n      dup7\n        /* \"#utility.yul\":6542:6548   */\n      dup3\n        /* \"#utility.yul\":6531:6540   */\n      dup8\n        /* \"#utility.yul\":6527:6549   */\n      add\n        /* \"#utility.yul\":6506:6559   */\n      tag_278\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":6496:6559   */\n      swap2\n      pop\n        /* \"#utility.yul\":6451:6569   */\n      pop\n        /* \"#utility.yul\":5957:6576   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6582:6699   */\n    tag_289:\n        /* \"#utility.yul\":6691:6692   */\n      0x00\n        /* \"#utility.yul\":6688:6689   */\n      dup1\n        /* \"#utility.yul\":6681:6693   */\n      revert\n        /* \"#utility.yul\":6705:6822   */\n    tag_290:\n        /* \"#utility.yul\":6814:6815   */\n      0x00\n        /* \"#utility.yul\":6811:6812   */\n      dup1\n        /* \"#utility.yul\":6804:6816   */\n      revert\n        /* \"#utility.yul\":6828:7008   */\n    tag_291:\n        /* \"#utility.yul\":6876:6953   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6873:6874   */\n      0x00\n        /* \"#utility.yul\":6866:6954   */\n      mstore\n        /* \"#utility.yul\":6973:6977   */\n      0x41\n        /* \"#utility.yul\":6970:6971   */\n      0x04\n        /* \"#utility.yul\":6963:6978   */\n      mstore\n        /* \"#utility.yul\":6997:7001   */\n      0x24\n        /* \"#utility.yul\":6994:6995   */\n      0x00\n        /* \"#utility.yul\":6987:7002   */\n      revert\n        /* \"#utility.yul\":7014:7295   */\n    tag_292:\n        /* \"#utility.yul\":7097:7124   */\n      tag_430\n        /* \"#utility.yul\":7119:7123   */\n      dup3\n        /* \"#utility.yul\":7097:7124   */\n      tag_287\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7089:7095   */\n      dup2\n        /* \"#utility.yul\":7085:7125   */\n      add\n        /* \"#utility.yul\":7227:7233   */\n      dup2\n        /* \"#utility.yul\":7215:7225   */\n      dup2\n        /* \"#utility.yul\":7212:7234   */\n      lt\n        /* \"#utility.yul\":7191:7209   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7179:7189   */\n      dup3\n        /* \"#utility.yul\":7176:7210   */\n      gt\n        /* \"#utility.yul\":7173:7235   */\n      or\n        /* \"#utility.yul\":7170:7258   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":7238:7256   */\n      tag_432\n      tag_291\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":7170:7258   */\n    tag_431:\n        /* \"#utility.yul\":7278:7288   */\n      dup1\n        /* \"#utility.yul\":7274:7276   */\n      0x40\n        /* \"#utility.yul\":7267:7289   */\n      mstore\n        /* \"#utility.yul\":7057:7295   */\n      pop\n        /* \"#utility.yul\":7014:7295   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7301:7430   */\n    tag_293:\n        /* \"#utility.yul\":7335:7341   */\n      0x00\n        /* \"#utility.yul\":7362:7382   */\n      tag_434\n      tag_269\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":7352:7382   */\n      swap1\n      pop\n        /* \"#utility.yul\":7391:7424   */\n      tag_435\n        /* \"#utility.yul\":7419:7423   */\n      dup3\n        /* \"#utility.yul\":7411:7417   */\n      dup3\n        /* \"#utility.yul\":7391:7424   */\n      tag_292\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":7301:7430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7436:7744   */\n    tag_294:\n        /* \"#utility.yul\":7498:7502   */\n      0x00\n        /* \"#utility.yul\":7588:7606   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7580:7586   */\n      dup3\n        /* \"#utility.yul\":7577:7607   */\n      gt\n        /* \"#utility.yul\":7574:7630   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":7610:7628   */\n      tag_438\n      tag_291\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7574:7630   */\n    tag_437:\n        /* \"#utility.yul\":7648:7677   */\n      tag_439\n        /* \"#utility.yul\":7670:7676   */\n      dup3\n        /* \"#utility.yul\":7648:7677   */\n      tag_287\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":7640:7677   */\n      swap1\n      pop\n        /* \"#utility.yul\":7732:7736   */\n      0x20\n        /* \"#utility.yul\":7726:7730   */\n      dup2\n        /* \"#utility.yul\":7722:7737   */\n      add\n        /* \"#utility.yul\":7714:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7436:7744   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7750:7898   */\n    tag_295:\n        /* \"#utility.yul\":7848:7854   */\n      dup3\n        /* \"#utility.yul\":7843:7846   */\n      dup2\n        /* \"#utility.yul\":7838:7841   */\n      dup4\n        /* \"#utility.yul\":7825:7855   */\n      calldatacopy\n        /* \"#utility.yul\":7889:7890   */\n      0x00\n        /* \"#utility.yul\":7880:7886   */\n      dup4\n        /* \"#utility.yul\":7875:7878   */\n      dup4\n        /* \"#utility.yul\":7871:7887   */\n      add\n        /* \"#utility.yul\":7864:7891   */\n      mstore\n        /* \"#utility.yul\":7750:7898   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7904:8329   */\n    tag_296:\n        /* \"#utility.yul\":7982:7987   */\n      0x00\n        /* \"#utility.yul\":8007:8073   */\n      tag_442\n        /* \"#utility.yul\":8023:8072   */\n      tag_443\n        /* \"#utility.yul\":8065:8071   */\n      dup5\n        /* \"#utility.yul\":8023:8072   */\n      tag_294\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8007:8073   */\n      tag_293\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":7998:8073   */\n      swap1\n      pop\n        /* \"#utility.yul\":8096:8102   */\n      dup3\n        /* \"#utility.yul\":8089:8094   */\n      dup2\n        /* \"#utility.yul\":8082:8103   */\n      mstore\n        /* \"#utility.yul\":8134:8138   */\n      0x20\n        /* \"#utility.yul\":8127:8132   */\n      dup2\n        /* \"#utility.yul\":8123:8139   */\n      add\n        /* \"#utility.yul\":8172:8175   */\n      dup5\n        /* \"#utility.yul\":8163:8169   */\n      dup5\n        /* \"#utility.yul\":8158:8161   */\n      dup5\n        /* \"#utility.yul\":8154:8170   */\n      add\n        /* \"#utility.yul\":8151:8176   */\n      gt\n        /* \"#utility.yul\":8148:8260   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":8179:8258   */\n      tag_445\n      tag_290\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":8148:8260   */\n    tag_444:\n        /* \"#utility.yul\":8269:8323   */\n      tag_446\n        /* \"#utility.yul\":8316:8322   */\n      dup5\n        /* \"#utility.yul\":8311:8314   */\n      dup3\n        /* \"#utility.yul\":8306:8309   */\n      dup6\n        /* \"#utility.yul\":8269:8323   */\n      tag_295\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7988:8329   */\n      pop\n        /* \"#utility.yul\":7904:8329   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8349:8689   */\n    tag_297:\n        /* \"#utility.yul\":8405:8410   */\n      0x00\n        /* \"#utility.yul\":8454:8457   */\n      dup3\n        /* \"#utility.yul\":8447:8451   */\n      0x1f\n        /* \"#utility.yul\":8439:8445   */\n      dup4\n        /* \"#utility.yul\":8435:8452   */\n      add\n        /* \"#utility.yul\":8431:8458   */\n      slt\n        /* \"#utility.yul\":8421:8543   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":8462:8541   */\n      tag_449\n      tag_289\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8421:8543   */\n    tag_448:\n        /* \"#utility.yul\":8579:8585   */\n      dup2\n        /* \"#utility.yul\":8566:8586   */\n      calldataload\n        /* \"#utility.yul\":8604:8683   */\n      tag_450\n        /* \"#utility.yul\":8679:8682   */\n      dup5\n        /* \"#utility.yul\":8671:8677   */\n      dup3\n        /* \"#utility.yul\":8664:8668   */\n      0x20\n        /* \"#utility.yul\":8656:8662   */\n      dup7\n        /* \"#utility.yul\":8652:8669   */\n      add\n        /* \"#utility.yul\":8604:8683   */\n      tag_296\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":8595:8683   */\n      swap2\n      pop\n        /* \"#utility.yul\":8411:8689   */\n      pop\n        /* \"#utility.yul\":8349:8689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8695:9494   */\n    tag_80:\n        /* \"#utility.yul\":8782:8788   */\n      0x00\n        /* \"#utility.yul\":8790:8796   */\n      dup1\n        /* \"#utility.yul\":8798:8804   */\n      0x00\n        /* \"#utility.yul\":8847:8849   */\n      0x60\n        /* \"#utility.yul\":8835:8844   */\n      dup5\n        /* \"#utility.yul\":8826:8833   */\n      dup7\n        /* \"#utility.yul\":8822:8845   */\n      sub\n        /* \"#utility.yul\":8818:8850   */\n      slt\n        /* \"#utility.yul\":8815:8934   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":8853:8932   */\n      tag_453\n      tag_270\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8815:8934   */\n    tag_452:\n        /* \"#utility.yul\":8973:8974   */\n      0x00\n        /* \"#utility.yul\":8998:9051   */\n      tag_454\n        /* \"#utility.yul\":9043:9050   */\n      dup7\n        /* \"#utility.yul\":9034:9040   */\n      dup3\n        /* \"#utility.yul\":9023:9032   */\n      dup8\n        /* \"#utility.yul\":9019:9041   */\n      add\n        /* \"#utility.yul\":8998:9051   */\n      tag_278\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":8988:9051   */\n      swap4\n      pop\n        /* \"#utility.yul\":8944:9061   */\n      pop\n        /* \"#utility.yul\":9100:9102   */\n      0x20\n        /* \"#utility.yul\":9126:9179   */\n      tag_455\n        /* \"#utility.yul\":9171:9178   */\n      dup7\n        /* \"#utility.yul\":9162:9168   */\n      dup3\n        /* \"#utility.yul\":9151:9160   */\n      dup8\n        /* \"#utility.yul\":9147:9169   */\n      add\n        /* \"#utility.yul\":9126:9179   */\n      tag_278\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":9116:9179   */\n      swap3\n      pop\n        /* \"#utility.yul\":9071:9189   */\n      pop\n        /* \"#utility.yul\":9256:9258   */\n      0x40\n        /* \"#utility.yul\":9245:9254   */\n      dup5\n        /* \"#utility.yul\":9241:9259   */\n      add\n        /* \"#utility.yul\":9228:9260   */\n      calldataload\n        /* \"#utility.yul\":9287:9305   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9279:9285   */\n      dup2\n        /* \"#utility.yul\":9276:9306   */\n      gt\n        /* \"#utility.yul\":9273:9390   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":9309:9388   */\n      tag_457\n      tag_271\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9273:9390   */\n    tag_456:\n        /* \"#utility.yul\":9414:9477   */\n      tag_458\n        /* \"#utility.yul\":9469:9476   */\n      dup7\n        /* \"#utility.yul\":9460:9466   */\n      dup3\n        /* \"#utility.yul\":9449:9458   */\n      dup8\n        /* \"#utility.yul\":9445:9467   */\n      add\n        /* \"#utility.yul\":9414:9477   */\n      tag_297\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":9404:9477   */\n      swap2\n      pop\n        /* \"#utility.yul\":9199:9487   */\n      pop\n        /* \"#utility.yul\":8695:9494   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9500:9675   */\n    tag_298:\n        /* \"#utility.yul\":9640:9667   */\n      0x4e6f742077697468696e20726f756e64206475726174696f6e00000000000000\n        /* \"#utility.yul\":9636:9637   */\n      0x00\n        /* \"#utility.yul\":9628:9634   */\n      dup3\n        /* \"#utility.yul\":9624:9638   */\n      add\n        /* \"#utility.yul\":9617:9668   */\n      mstore\n        /* \"#utility.yul\":9500:9675   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9681:10047   */\n    tag_299:\n        /* \"#utility.yul\":9823:9826   */\n      0x00\n        /* \"#utility.yul\":9844:9911   */\n      tag_461\n        /* \"#utility.yul\":9908:9910   */\n      0x19\n        /* \"#utility.yul\":9903:9906   */\n      dup4\n        /* \"#utility.yul\":9844:9911   */\n      tag_285\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9837:9911   */\n      swap2\n      pop\n        /* \"#utility.yul\":9920:10013   */\n      tag_462\n        /* \"#utility.yul\":10009:10012   */\n      dup3\n        /* \"#utility.yul\":9920:10013   */\n      tag_298\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10038:10040   */\n      0x20\n        /* \"#utility.yul\":10033:10036   */\n      dup3\n        /* \"#utility.yul\":10029:10041   */\n      add\n        /* \"#utility.yul\":10022:10041   */\n      swap1\n      pop\n        /* \"#utility.yul\":9681:10047   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10053:10472   */\n    tag_94:\n        /* \"#utility.yul\":10219:10223   */\n      0x00\n        /* \"#utility.yul\":10257:10259   */\n      0x20\n        /* \"#utility.yul\":10246:10255   */\n      dup3\n        /* \"#utility.yul\":10242:10260   */\n      add\n        /* \"#utility.yul\":10234:10260   */\n      swap1\n      pop\n        /* \"#utility.yul\":10306:10315   */\n      dup2\n        /* \"#utility.yul\":10300:10304   */\n      dup2\n        /* \"#utility.yul\":10296:10316   */\n      sub\n        /* \"#utility.yul\":10292:10293   */\n      0x00\n        /* \"#utility.yul\":10281:10290   */\n      dup4\n        /* \"#utility.yul\":10277:10294   */\n      add\n        /* \"#utility.yul\":10270:10317   */\n      mstore\n        /* \"#utility.yul\":10334:10465   */\n      tag_464\n        /* \"#utility.yul\":10460:10464   */\n      dup2\n        /* \"#utility.yul\":10334:10465   */\n      tag_299\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10326:10465   */\n      swap1\n      pop\n        /* \"#utility.yul\":10053:10472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10478:10647   */\n    tag_300:\n        /* \"#utility.yul\":10618:10639   */\n      0x4e6f20636c61696d61626c6520616d6f756e7400000000000000000000000000\n        /* \"#utility.yul\":10614:10615   */\n      0x00\n        /* \"#utility.yul\":10606:10612   */\n      dup3\n        /* \"#utility.yul\":10602:10616   */\n      add\n        /* \"#utility.yul\":10595:10640   */\n      mstore\n        /* \"#utility.yul\":10478:10647   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10653:11019   */\n    tag_301:\n        /* \"#utility.yul\":10795:10798   */\n      0x00\n        /* \"#utility.yul\":10816:10883   */\n      tag_467\n        /* \"#utility.yul\":10880:10882   */\n      0x13\n        /* \"#utility.yul\":10875:10878   */\n      dup4\n        /* \"#utility.yul\":10816:10883   */\n      tag_285\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10809:10883   */\n      swap2\n      pop\n        /* \"#utility.yul\":10892:10985   */\n      tag_468\n        /* \"#utility.yul\":10981:10984   */\n      dup3\n        /* \"#utility.yul\":10892:10985   */\n      tag_300\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":11010:11012   */\n      0x20\n        /* \"#utility.yul\":11005:11008   */\n      dup3\n        /* \"#utility.yul\":11001:11013   */\n      add\n        /* \"#utility.yul\":10994:11013   */\n      swap1\n      pop\n        /* \"#utility.yul\":10653:11019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11025:11444   */\n    tag_97:\n        /* \"#utility.yul\":11191:11195   */\n      0x00\n        /* \"#utility.yul\":11229:11231   */\n      0x20\n        /* \"#utility.yul\":11218:11227   */\n      dup3\n        /* \"#utility.yul\":11214:11232   */\n      add\n        /* \"#utility.yul\":11206:11232   */\n      swap1\n      pop\n        /* \"#utility.yul\":11278:11287   */\n      dup2\n        /* \"#utility.yul\":11272:11276   */\n      dup2\n        /* \"#utility.yul\":11268:11288   */\n      sub\n        /* \"#utility.yul\":11264:11265   */\n      0x00\n        /* \"#utility.yul\":11253:11262   */\n      dup4\n        /* \"#utility.yul\":11249:11266   */\n      add\n        /* \"#utility.yul\":11242:11289   */\n      mstore\n        /* \"#utility.yul\":11306:11437   */\n      tag_470\n        /* \"#utility.yul\":11432:11436   */\n      dup2\n        /* \"#utility.yul\":11306:11437   */\n      tag_301\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11298:11437   */\n      swap1\n      pop\n        /* \"#utility.yul\":11025:11444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11450:11625   */\n    tag_302:\n        /* \"#utility.yul\":11590:11617   */\n      0x496e73756666696369656e742066756e647320696e206a617200000000000000\n        /* \"#utility.yul\":11586:11587   */\n      0x00\n        /* \"#utility.yul\":11578:11584   */\n      dup3\n        /* \"#utility.yul\":11574:11588   */\n      add\n        /* \"#utility.yul\":11567:11618   */\n      mstore\n        /* \"#utility.yul\":11450:11625   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11631:11997   */\n    tag_303:\n        /* \"#utility.yul\":11773:11776   */\n      0x00\n        /* \"#utility.yul\":11794:11861   */\n      tag_473\n        /* \"#utility.yul\":11858:11860   */\n      0x19\n        /* \"#utility.yul\":11853:11856   */\n      dup4\n        /* \"#utility.yul\":11794:11861   */\n      tag_285\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11787:11861   */\n      swap2\n      pop\n        /* \"#utility.yul\":11870:11963   */\n      tag_474\n        /* \"#utility.yul\":11959:11962   */\n      dup3\n        /* \"#utility.yul\":11870:11963   */\n      tag_302\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11988:11990   */\n      0x20\n        /* \"#utility.yul\":11983:11986   */\n      dup3\n        /* \"#utility.yul\":11979:11991   */\n      add\n        /* \"#utility.yul\":11972:11991   */\n      swap1\n      pop\n        /* \"#utility.yul\":11631:11997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12003:12422   */\n    tag_100:\n        /* \"#utility.yul\":12169:12173   */\n      0x00\n        /* \"#utility.yul\":12207:12209   */\n      0x20\n        /* \"#utility.yul\":12196:12205   */\n      dup3\n        /* \"#utility.yul\":12192:12210   */\n      add\n        /* \"#utility.yul\":12184:12210   */\n      swap1\n      pop\n        /* \"#utility.yul\":12256:12265   */\n      dup2\n        /* \"#utility.yul\":12250:12254   */\n      dup2\n        /* \"#utility.yul\":12246:12266   */\n      sub\n        /* \"#utility.yul\":12242:12243   */\n      0x00\n        /* \"#utility.yul\":12231:12240   */\n      dup4\n        /* \"#utility.yul\":12227:12244   */\n      add\n        /* \"#utility.yul\":12220:12267   */\n      mstore\n        /* \"#utility.yul\":12284:12415   */\n      tag_476\n        /* \"#utility.yul\":12410:12414   */\n      dup2\n        /* \"#utility.yul\":12284:12415   */\n      tag_303\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":12276:12415   */\n      swap1\n      pop\n        /* \"#utility.yul\":12003:12422   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12428:12583   */\n    tag_304:\n        /* \"#utility.yul\":12568:12575   */\n      0x5472757374000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12564:12565   */\n      0x00\n        /* \"#utility.yul\":12556:12562   */\n      dup3\n        /* \"#utility.yul\":12552:12566   */\n      add\n        /* \"#utility.yul\":12545:12576   */\n      mstore\n        /* \"#utility.yul\":12428:12583   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12589:12954   */\n    tag_305:\n        /* \"#utility.yul\":12731:12734   */\n      0x00\n        /* \"#utility.yul\":12752:12818   */\n      tag_479\n        /* \"#utility.yul\":12816:12817   */\n      0x05\n        /* \"#utility.yul\":12811:12814   */\n      dup4\n        /* \"#utility.yul\":12752:12818   */\n      tag_285\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":12745:12818   */\n      swap2\n      pop\n        /* \"#utility.yul\":12827:12920   */\n      tag_480\n        /* \"#utility.yul\":12916:12919   */\n      dup3\n        /* \"#utility.yul\":12827:12920   */\n      tag_304\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12945:12947   */\n      0x20\n        /* \"#utility.yul\":12940:12943   */\n      dup3\n        /* \"#utility.yul\":12936:12948   */\n      add\n        /* \"#utility.yul\":12929:12948   */\n      swap1\n      pop\n        /* \"#utility.yul\":12589:12954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12960:13489   */\n    tag_102:\n        /* \"#utility.yul\":13154:13158   */\n      0x00\n        /* \"#utility.yul\":13192:13194   */\n      0x40\n        /* \"#utility.yul\":13181:13190   */\n      dup3\n        /* \"#utility.yul\":13177:13195   */\n      add\n        /* \"#utility.yul\":13169:13195   */\n      swap1\n      pop\n        /* \"#utility.yul\":13205:13276   */\n      tag_482\n        /* \"#utility.yul\":13273:13274   */\n      0x00\n        /* \"#utility.yul\":13262:13271   */\n      dup4\n        /* \"#utility.yul\":13258:13275   */\n      add\n        /* \"#utility.yul\":13249:13255   */\n      dup5\n        /* \"#utility.yul\":13205:13276   */\n      tag_276\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":13323:13332   */\n      dup2\n        /* \"#utility.yul\":13317:13321   */\n      dup2\n        /* \"#utility.yul\":13313:13333   */\n      sub\n        /* \"#utility.yul\":13308:13310   */\n      0x20\n        /* \"#utility.yul\":13297:13306   */\n      dup4\n        /* \"#utility.yul\":13293:13311   */\n      add\n        /* \"#utility.yul\":13286:13334   */\n      mstore\n        /* \"#utility.yul\":13351:13482   */\n      tag_483\n        /* \"#utility.yul\":13477:13481   */\n      dup2\n        /* \"#utility.yul\":13351:13482   */\n      tag_305\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":13343:13482   */\n      swap1\n      pop\n        /* \"#utility.yul\":12960:13489   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13495:13638   */\n    tag_306:\n        /* \"#utility.yul\":13552:13557   */\n      0x00\n        /* \"#utility.yul\":13583:13589   */\n      dup2\n        /* \"#utility.yul\":13577:13590   */\n      mload\n        /* \"#utility.yul\":13568:13590   */\n      swap1\n      pop\n        /* \"#utility.yul\":13599:13632   */\n      tag_485\n        /* \"#utility.yul\":13626:13631   */\n      dup2\n        /* \"#utility.yul\":13599:13632   */\n      tag_277\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":13495:13638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13644:13995   */\n    tag_106:\n        /* \"#utility.yul\":13714:13720   */\n      0x00\n        /* \"#utility.yul\":13763:13765   */\n      0x20\n        /* \"#utility.yul\":13751:13760   */\n      dup3\n        /* \"#utility.yul\":13742:13749   */\n      dup5\n        /* \"#utility.yul\":13738:13761   */\n      sub\n        /* \"#utility.yul\":13734:13766   */\n      slt\n        /* \"#utility.yul\":13731:13850   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":13769:13848   */\n      tag_488\n      tag_270\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13731:13850   */\n    tag_487:\n        /* \"#utility.yul\":13889:13890   */\n      0x00\n        /* \"#utility.yul\":13914:13978   */\n      tag_489\n        /* \"#utility.yul\":13970:13977   */\n      dup5\n        /* \"#utility.yul\":13961:13967   */\n      dup3\n        /* \"#utility.yul\":13950:13959   */\n      dup6\n        /* \"#utility.yul\":13946:13968   */\n      add\n        /* \"#utility.yul\":13914:13978   */\n      tag_306\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":13904:13978   */\n      swap2\n      pop\n        /* \"#utility.yul\":13860:13988   */\n      pop\n        /* \"#utility.yul\":13644:13995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14001:14175   */\n    tag_307:\n        /* \"#utility.yul\":14141:14167   */\n      0x496e73756666696369656e742054727573742073636f72650000000000000000\n        /* \"#utility.yul\":14137:14138   */\n      0x00\n        /* \"#utility.yul\":14129:14135   */\n      dup3\n        /* \"#utility.yul\":14125:14139   */\n      add\n        /* \"#utility.yul\":14118:14168   */\n      mstore\n        /* \"#utility.yul\":14001:14175   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14181:14547   */\n    tag_308:\n        /* \"#utility.yul\":14323:14326   */\n      0x00\n        /* \"#utility.yul\":14344:14411   */\n      tag_492\n        /* \"#utility.yul\":14408:14410   */\n      0x18\n        /* \"#utility.yul\":14403:14406   */\n      dup4\n        /* \"#utility.yul\":14344:14411   */\n      tag_285\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":14337:14411   */\n      swap2\n      pop\n        /* \"#utility.yul\":14420:14513   */\n      tag_493\n        /* \"#utility.yul\":14509:14512   */\n      dup3\n        /* \"#utility.yul\":14420:14513   */\n      tag_307\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":14538:14540   */\n      0x20\n        /* \"#utility.yul\":14533:14536   */\n      dup3\n        /* \"#utility.yul\":14529:14541   */\n      add\n        /* \"#utility.yul\":14522:14541   */\n      swap1\n      pop\n        /* \"#utility.yul\":14181:14547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14553:14972   */\n    tag_109:\n        /* \"#utility.yul\":14719:14723   */\n      0x00\n        /* \"#utility.yul\":14757:14759   */\n      0x20\n        /* \"#utility.yul\":14746:14755   */\n      dup3\n        /* \"#utility.yul\":14742:14760   */\n      add\n        /* \"#utility.yul\":14734:14760   */\n      swap1\n      pop\n        /* \"#utility.yul\":14806:14815   */\n      dup2\n        /* \"#utility.yul\":14800:14804   */\n      dup2\n        /* \"#utility.yul\":14796:14816   */\n      sub\n        /* \"#utility.yul\":14792:14793   */\n      0x00\n        /* \"#utility.yul\":14781:14790   */\n      dup4\n        /* \"#utility.yul\":14777:14794   */\n      add\n        /* \"#utility.yul\":14770:14817   */\n      mstore\n        /* \"#utility.yul\":14834:14965   */\n      tag_495\n        /* \"#utility.yul\":14960:14964   */\n      dup2\n        /* \"#utility.yul\":14834:14965   */\n      tag_308\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":14826:14965   */\n      swap1\n      pop\n        /* \"#utility.yul\":14553:14972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14978:15172   */\n    tag_111:\n        /* \"#utility.yul\":15018:15022   */\n      0x00\n        /* \"#utility.yul\":15038:15058   */\n      tag_497\n        /* \"#utility.yul\":15056:15057   */\n      dup3\n        /* \"#utility.yul\":15038:15058   */\n      tag_266\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":15033:15058   */\n      swap2\n      pop\n        /* \"#utility.yul\":15072:15092   */\n      tag_498\n        /* \"#utility.yul\":15090:15091   */\n      dup4\n        /* \"#utility.yul\":15072:15092   */\n      tag_266\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":15067:15092   */\n      swap3\n      pop\n        /* \"#utility.yul\":15116:15117   */\n      dup3\n        /* \"#utility.yul\":15113:15114   */\n      dup3\n        /* \"#utility.yul\":15109:15118   */\n      sub\n        /* \"#utility.yul\":15101:15118   */\n      swap1\n      pop\n        /* \"#utility.yul\":15140:15141   */\n      dup2\n        /* \"#utility.yul\":15134:15138   */\n      dup2\n        /* \"#utility.yul\":15131:15142   */\n      gt\n        /* \"#utility.yul\":15128:15165   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":15145:15163   */\n      tag_500\n      tag_267\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":15128:15165   */\n    tag_499:\n        /* \"#utility.yul\":14978:15172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15178:15325   */\n    tag_309:\n        /* \"#utility.yul\":15279:15290   */\n      0x00\n        /* \"#utility.yul\":15316:15319   */\n      dup2\n        /* \"#utility.yul\":15301:15319   */\n      swap1\n      pop\n        /* \"#utility.yul\":15178:15325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15331:15445   */\n    tag_310:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15451:15849   */\n    tag_311:\n        /* \"#utility.yul\":15610:15613   */\n      0x00\n        /* \"#utility.yul\":15631:15714   */\n      tag_504\n        /* \"#utility.yul\":15712:15713   */\n      0x00\n        /* \"#utility.yul\":15707:15710   */\n      dup4\n        /* \"#utility.yul\":15631:15714   */\n      tag_309\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":15624:15714   */\n      swap2\n      pop\n        /* \"#utility.yul\":15723:15816   */\n      tag_505\n        /* \"#utility.yul\":15812:15815   */\n      dup3\n        /* \"#utility.yul\":15723:15816   */\n      tag_310\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":15841:15842   */\n      0x00\n        /* \"#utility.yul\":15836:15839   */\n      dup3\n        /* \"#utility.yul\":15832:15843   */\n      add\n        /* \"#utility.yul\":15825:15843   */\n      swap1\n      pop\n        /* \"#utility.yul\":15451:15849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15855:16234   */\n    tag_114:\n        /* \"#utility.yul\":16039:16042   */\n      0x00\n        /* \"#utility.yul\":16061:16208   */\n      tag_507\n        /* \"#utility.yul\":16204:16207   */\n      dup3\n        /* \"#utility.yul\":16061:16208   */\n      tag_311\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":16054:16208   */\n      swap2\n      pop\n        /* \"#utility.yul\":16225:16228   */\n      dup2\n        /* \"#utility.yul\":16218:16228   */\n      swap1\n      pop\n        /* \"#utility.yul\":15855:16234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16240:16411   */\n    tag_312:\n        /* \"#utility.yul\":16380:16403   */\n      0x4574686572207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":16376:16377   */\n      0x00\n        /* \"#utility.yul\":16368:16374   */\n      dup3\n        /* \"#utility.yul\":16364:16378   */\n      add\n        /* \"#utility.yul\":16357:16404   */\n      mstore\n        /* \"#utility.yul\":16240:16411   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16417:16783   */\n    tag_313:\n        /* \"#utility.yul\":16559:16562   */\n      0x00\n        /* \"#utility.yul\":16580:16647   */\n      tag_510\n        /* \"#utility.yul\":16644:16646   */\n      0x15\n        /* \"#utility.yul\":16639:16642   */\n      dup4\n        /* \"#utility.yul\":16580:16647   */\n      tag_285\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":16573:16647   */\n      swap2\n      pop\n        /* \"#utility.yul\":16656:16749   */\n      tag_511\n        /* \"#utility.yul\":16745:16748   */\n      dup3\n        /* \"#utility.yul\":16656:16749   */\n      tag_312\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":16774:16776   */\n      0x20\n        /* \"#utility.yul\":16769:16772   */\n      dup3\n        /* \"#utility.yul\":16765:16777   */\n      add\n        /* \"#utility.yul\":16758:16777   */\n      swap1\n      pop\n        /* \"#utility.yul\":16417:16783   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16789:17208   */\n    tag_120:\n        /* \"#utility.yul\":16955:16959   */\n      0x00\n        /* \"#utility.yul\":16993:16995   */\n      0x20\n        /* \"#utility.yul\":16982:16991   */\n      dup3\n        /* \"#utility.yul\":16978:16996   */\n      add\n        /* \"#utility.yul\":16970:16996   */\n      swap1\n      pop\n        /* \"#utility.yul\":17042:17051   */\n      dup2\n        /* \"#utility.yul\":17036:17040   */\n      dup2\n        /* \"#utility.yul\":17032:17052   */\n      sub\n        /* \"#utility.yul\":17028:17029   */\n      0x00\n        /* \"#utility.yul\":17017:17026   */\n      dup4\n        /* \"#utility.yul\":17013:17030   */\n      add\n        /* \"#utility.yul\":17006:17053   */\n      mstore\n        /* \"#utility.yul\":17070:17201   */\n      tag_513\n        /* \"#utility.yul\":17196:17200   */\n      dup2\n        /* \"#utility.yul\":17070:17201   */\n      tag_313\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":17062:17201   */\n      swap1\n      pop\n        /* \"#utility.yul\":16789:17208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17214:17386   */\n    tag_314:\n        /* \"#utility.yul\":17354:17378   */\n      0x496e636f727265637420457468657220616d6f756e7400000000000000000000\n        /* \"#utility.yul\":17350:17351   */\n      0x00\n        /* \"#utility.yul\":17342:17348   */\n      dup3\n        /* \"#utility.yul\":17338:17352   */\n      add\n        /* \"#utility.yul\":17331:17379   */\n      mstore\n        /* \"#utility.yul\":17214:17386   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17392:17758   */\n    tag_315:\n        /* \"#utility.yul\":17534:17537   */\n      0x00\n        /* \"#utility.yul\":17555:17622   */\n      tag_516\n        /* \"#utility.yul\":17619:17621   */\n      0x16\n        /* \"#utility.yul\":17614:17617   */\n      dup4\n        /* \"#utility.yul\":17555:17622   */\n      tag_285\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":17548:17622   */\n      swap2\n      pop\n        /* \"#utility.yul\":17631:17724   */\n      tag_517\n        /* \"#utility.yul\":17720:17723   */\n      dup3\n        /* \"#utility.yul\":17631:17724   */\n      tag_314\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":17749:17751   */\n      0x20\n        /* \"#utility.yul\":17744:17747   */\n      dup3\n        /* \"#utility.yul\":17740:17752   */\n      add\n        /* \"#utility.yul\":17733:17752   */\n      swap1\n      pop\n        /* \"#utility.yul\":17392:17758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17764:18183   */\n    tag_129:\n        /* \"#utility.yul\":17930:17934   */\n      0x00\n        /* \"#utility.yul\":17968:17970   */\n      0x20\n        /* \"#utility.yul\":17957:17966   */\n      dup3\n        /* \"#utility.yul\":17953:17971   */\n      add\n        /* \"#utility.yul\":17945:17971   */\n      swap1\n      pop\n        /* \"#utility.yul\":18017:18026   */\n      dup2\n        /* \"#utility.yul\":18011:18015   */\n      dup2\n        /* \"#utility.yul\":18007:18027   */\n      sub\n        /* \"#utility.yul\":18003:18004   */\n      0x00\n        /* \"#utility.yul\":17992:18001   */\n      dup4\n        /* \"#utility.yul\":17988:18005   */\n      add\n        /* \"#utility.yul\":17981:18028   */\n      mstore\n        /* \"#utility.yul\":18045:18176   */\n      tag_519\n        /* \"#utility.yul\":18171:18175   */\n      dup2\n        /* \"#utility.yul\":18045:18176   */\n      tag_315\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":18037:18176   */\n      swap1\n      pop\n        /* \"#utility.yul\":17764:18183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18189:18416   */\n    tag_316:\n        /* \"#utility.yul\":18329:18363   */\n      0x4465706f73697420616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":18325:18326   */\n      0x00\n        /* \"#utility.yul\":18317:18323   */\n      dup3\n        /* \"#utility.yul\":18313:18327   */\n      add\n        /* \"#utility.yul\":18306:18364   */\n      mstore\n        /* \"#utility.yul\":18398:18408   */\n      0x68616e207a65726f000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18393:18395   */\n      0x20\n        /* \"#utility.yul\":18385:18391   */\n      dup3\n        /* \"#utility.yul\":18381:18396   */\n      add\n        /* \"#utility.yul\":18374:18409   */\n      mstore\n        /* \"#utility.yul\":18189:18416   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18422:18788   */\n    tag_317:\n        /* \"#utility.yul\":18564:18567   */\n      0x00\n        /* \"#utility.yul\":18585:18652   */\n      tag_522\n        /* \"#utility.yul\":18649:18651   */\n      0x28\n        /* \"#utility.yul\":18644:18647   */\n      dup4\n        /* \"#utility.yul\":18585:18652   */\n      tag_285\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":18578:18652   */\n      swap2\n      pop\n        /* \"#utility.yul\":18661:18754   */\n      tag_523\n        /* \"#utility.yul\":18750:18753   */\n      dup3\n        /* \"#utility.yul\":18661:18754   */\n      tag_316\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":18779:18781   */\n      0x40\n        /* \"#utility.yul\":18774:18777   */\n      dup3\n        /* \"#utility.yul\":18770:18782   */\n      add\n        /* \"#utility.yul\":18763:18782   */\n      swap1\n      pop\n        /* \"#utility.yul\":18422:18788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18794:19213   */\n    tag_133:\n        /* \"#utility.yul\":18960:18964   */\n      0x00\n        /* \"#utility.yul\":18998:19000   */\n      0x20\n        /* \"#utility.yul\":18987:18996   */\n      dup3\n        /* \"#utility.yul\":18983:19001   */\n      add\n        /* \"#utility.yul\":18975:19001   */\n      swap1\n      pop\n        /* \"#utility.yul\":19047:19056   */\n      dup2\n        /* \"#utility.yul\":19041:19045   */\n      dup2\n        /* \"#utility.yul\":19037:19057   */\n      sub\n        /* \"#utility.yul\":19033:19034   */\n      0x00\n        /* \"#utility.yul\":19022:19031   */\n      dup4\n        /* \"#utility.yul\":19018:19035   */\n      add\n        /* \"#utility.yul\":19011:19058   */\n      mstore\n        /* \"#utility.yul\":19075:19206   */\n      tag_525\n        /* \"#utility.yul\":19201:19205   */\n      dup2\n        /* \"#utility.yul\":19075:19206   */\n      tag_317\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":19067:19206   */\n      swap1\n      pop\n        /* \"#utility.yul\":18794:19213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19219:19304   */\n    tag_318:\n        /* \"#utility.yul\":19264:19271   */\n      0x00\n        /* \"#utility.yul\":19293:19298   */\n      dup2\n        /* \"#utility.yul\":19282:19298   */\n      swap1\n      pop\n        /* \"#utility.yul\":19219:19304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19310:19411   */\n    tag_319:\n        /* \"#utility.yul\":19346:19353   */\n      0x00\n        /* \"#utility.yul\":19386:19404   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19379:19384   */\n      dup3\n        /* \"#utility.yul\":19375:19405   */\n      and\n        /* \"#utility.yul\":19364:19405   */\n      swap1\n      pop\n        /* \"#utility.yul\":19310:19411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19417:19573   */\n    tag_320:\n        /* \"#utility.yul\":19474:19483   */\n      0x00\n        /* \"#utility.yul\":19507:19567   */\n      tag_529\n        /* \"#utility.yul\":19524:19566   */\n      tag_530\n        /* \"#utility.yul\":19533:19565   */\n      tag_531\n        /* \"#utility.yul\":19559:19564   */\n      dup5\n        /* \"#utility.yul\":19533:19565   */\n      tag_318\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":19524:19566   */\n      tag_279\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":19507:19567   */\n      tag_319\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":19494:19567   */\n      swap1\n      pop\n        /* \"#utility.yul\":19417:19573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19579:19724   */\n    tag_321:\n        /* \"#utility.yul\":19673:19717   */\n      tag_533\n        /* \"#utility.yul\":19711:19716   */\n      dup2\n        /* \"#utility.yul\":19673:19717   */\n      tag_320\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":19668:19671   */\n      dup3\n        /* \"#utility.yul\":19661:19718   */\n      mstore\n        /* \"#utility.yul\":19579:19724   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19730:19966   */\n    tag_151:\n        /* \"#utility.yul\":19830:19834   */\n      0x00\n        /* \"#utility.yul\":19868:19870   */\n      0x20\n        /* \"#utility.yul\":19857:19866   */\n      dup3\n        /* \"#utility.yul\":19853:19871   */\n      add\n        /* \"#utility.yul\":19845:19871   */\n      swap1\n      pop\n        /* \"#utility.yul\":19881:19959   */\n      tag_535\n        /* \"#utility.yul\":19956:19957   */\n      0x00\n        /* \"#utility.yul\":19945:19954   */\n      dup4\n        /* \"#utility.yul\":19941:19958   */\n      add\n        /* \"#utility.yul\":19932:19938   */\n      dup5\n        /* \"#utility.yul\":19881:19959   */\n      tag_321\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":19730:19966   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19972:20152   */\n    tag_322:\n        /* \"#utility.yul\":20020:20097   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20017:20018   */\n      0x00\n        /* \"#utility.yul\":20010:20098   */\n      mstore\n        /* \"#utility.yul\":20117:20121   */\n      0x22\n        /* \"#utility.yul\":20114:20115   */\n      0x04\n        /* \"#utility.yul\":20107:20122   */\n      mstore\n        /* \"#utility.yul\":20141:20145   */\n      0x24\n        /* \"#utility.yul\":20138:20139   */\n      0x00\n        /* \"#utility.yul\":20131:20146   */\n      revert\n        /* \"#utility.yul\":20158:20478   */\n    tag_159:\n        /* \"#utility.yul\":20202:20208   */\n      0x00\n        /* \"#utility.yul\":20239:20240   */\n      0x02\n        /* \"#utility.yul\":20233:20237   */\n      dup3\n        /* \"#utility.yul\":20229:20241   */\n      div\n        /* \"#utility.yul\":20219:20241   */\n      swap1\n      pop\n        /* \"#utility.yul\":20286:20287   */\n      0x01\n        /* \"#utility.yul\":20280:20284   */\n      dup3\n        /* \"#utility.yul\":20276:20288   */\n      and\n        /* \"#utility.yul\":20307:20325   */\n      dup1\n        /* \"#utility.yul\":20297:20378   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":20363:20367   */\n      0x7f\n        /* \"#utility.yul\":20355:20361   */\n      dup3\n        /* \"#utility.yul\":20351:20368   */\n      and\n        /* \"#utility.yul\":20341:20368   */\n      swap2\n      pop\n        /* \"#utility.yul\":20297:20378   */\n    tag_538:\n        /* \"#utility.yul\":20425:20427   */\n      0x20\n        /* \"#utility.yul\":20417:20423   */\n      dup3\n        /* \"#utility.yul\":20414:20428   */\n      lt\n        /* \"#utility.yul\":20394:20412   */\n      dup2\n        /* \"#utility.yul\":20391:20429   */\n      sub\n        /* \"#utility.yul\":20388:20472   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":20444:20462   */\n      tag_540\n      tag_322\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":20388:20472   */\n    tag_539:\n        /* \"#utility.yul\":20209:20478   */\n      pop\n        /* \"#utility.yul\":20158:20478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20484:20574   */\n    tag_323:\n        /* \"#utility.yul\":20518:20525   */\n      0x00\n        /* \"#utility.yul\":20561:20566   */\n      dup2\n        /* \"#utility.yul\":20554:20567   */\n      iszero\n        /* \"#utility.yul\":20547:20568   */\n      iszero\n        /* \"#utility.yul\":20536:20568   */\n      swap1\n      pop\n        /* \"#utility.yul\":20484:20574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20580:20696   */\n    tag_324:\n        /* \"#utility.yul\":20650:20671   */\n      tag_543\n        /* \"#utility.yul\":20665:20670   */\n      dup2\n        /* \"#utility.yul\":20650:20671   */\n      tag_323\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":20643:20648   */\n      dup2\n        /* \"#utility.yul\":20640:20672   */\n      eq\n        /* \"#utility.yul\":20630:20690   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":20686:20687   */\n      0x00\n        /* \"#utility.yul\":20683:20684   */\n      dup1\n        /* \"#utility.yul\":20676:20688   */\n      revert\n        /* \"#utility.yul\":20630:20690   */\n    tag_544:\n        /* \"#utility.yul\":20580:20696   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20702:20839   */\n    tag_325:\n        /* \"#utility.yul\":20756:20761   */\n      0x00\n        /* \"#utility.yul\":20787:20793   */\n      dup2\n        /* \"#utility.yul\":20781:20794   */\n      mload\n        /* \"#utility.yul\":20772:20794   */\n      swap1\n      pop\n        /* \"#utility.yul\":20803:20833   */\n      tag_546\n        /* \"#utility.yul\":20827:20832   */\n      dup2\n        /* \"#utility.yul\":20803:20833   */\n      tag_324\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":20702:20839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20845:21190   */\n    tag_172:\n        /* \"#utility.yul\":20912:20918   */\n      0x00\n        /* \"#utility.yul\":20961:20963   */\n      0x20\n        /* \"#utility.yul\":20949:20958   */\n      dup3\n        /* \"#utility.yul\":20940:20947   */\n      dup5\n        /* \"#utility.yul\":20936:20959   */\n      sub\n        /* \"#utility.yul\":20932:20964   */\n      slt\n        /* \"#utility.yul\":20929:21048   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":20967:21046   */\n      tag_549\n      tag_270\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":20929:21048   */\n    tag_548:\n        /* \"#utility.yul\":21087:21088   */\n      0x00\n        /* \"#utility.yul\":21112:21173   */\n      tag_550\n        /* \"#utility.yul\":21165:21172   */\n      dup5\n        /* \"#utility.yul\":21156:21162   */\n      dup3\n        /* \"#utility.yul\":21145:21154   */\n      dup6\n        /* \"#utility.yul\":21141:21163   */\n      add\n        /* \"#utility.yul\":21112:21173   */\n      tag_325\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":21102:21173   */\n      swap2\n      pop\n        /* \"#utility.yul\":21058:21183   */\n      pop\n        /* \"#utility.yul\":20845:21190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21196:21368   */\n    tag_326:\n        /* \"#utility.yul\":21336:21360   */\n      0x43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000\n        /* \"#utility.yul\":21332:21333   */\n      0x00\n        /* \"#utility.yul\":21324:21330   */\n      dup3\n        /* \"#utility.yul\":21320:21334   */\n      add\n        /* \"#utility.yul\":21313:21361   */\n      mstore\n        /* \"#utility.yul\":21196:21368   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21374:21740   */\n    tag_327:\n        /* \"#utility.yul\":21516:21519   */\n      0x00\n        /* \"#utility.yul\":21537:21604   */\n      tag_553\n        /* \"#utility.yul\":21601:21603   */\n      0x16\n        /* \"#utility.yul\":21596:21599   */\n      dup4\n        /* \"#utility.yul\":21537:21604   */\n      tag_285\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":21530:21604   */\n      swap2\n      pop\n        /* \"#utility.yul\":21613:21706   */\n      tag_554\n        /* \"#utility.yul\":21702:21705   */\n      dup3\n        /* \"#utility.yul\":21613:21706   */\n      tag_326\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":21731:21733   */\n      0x20\n        /* \"#utility.yul\":21726:21729   */\n      dup3\n        /* \"#utility.yul\":21722:21734   */\n      add\n        /* \"#utility.yul\":21715:21734   */\n      swap1\n      pop\n        /* \"#utility.yul\":21374:21740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21746:22165   */\n    tag_175:\n        /* \"#utility.yul\":21912:21916   */\n      0x00\n        /* \"#utility.yul\":21950:21952   */\n      0x20\n        /* \"#utility.yul\":21939:21948   */\n      dup3\n        /* \"#utility.yul\":21935:21953   */\n      add\n        /* \"#utility.yul\":21927:21953   */\n      swap1\n      pop\n        /* \"#utility.yul\":21999:22008   */\n      dup2\n        /* \"#utility.yul\":21993:21997   */\n      dup2\n        /* \"#utility.yul\":21989:22009   */\n      sub\n        /* \"#utility.yul\":21985:21986   */\n      0x00\n        /* \"#utility.yul\":21974:21983   */\n      dup4\n        /* \"#utility.yul\":21970:21987   */\n      add\n        /* \"#utility.yul\":21963:22010   */\n      mstore\n        /* \"#utility.yul\":22027:22158   */\n      tag_556\n        /* \"#utility.yul\":22153:22157   */\n      dup2\n        /* \"#utility.yul\":22027:22158   */\n      tag_327\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":22019:22158   */\n      swap1\n      pop\n        /* \"#utility.yul\":21746:22165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22171:22392   */\n    tag_328:\n        /* \"#utility.yul\":22311:22345   */\n      0x53746172742074696d65206d757374206265206265666f726520656e64207469\n        /* \"#utility.yul\":22307:22308   */\n      0x00\n        /* \"#utility.yul\":22299:22305   */\n      dup3\n        /* \"#utility.yul\":22295:22309   */\n      add\n        /* \"#utility.yul\":22288:22346   */\n      mstore\n        /* \"#utility.yul\":22380:22384   */\n      0x6d65000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22375:22377   */\n      0x20\n        /* \"#utility.yul\":22367:22373   */\n      dup3\n        /* \"#utility.yul\":22363:22378   */\n      add\n        /* \"#utility.yul\":22356:22385   */\n      mstore\n        /* \"#utility.yul\":22171:22392   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22398:22764   */\n    tag_329:\n        /* \"#utility.yul\":22540:22543   */\n      0x00\n        /* \"#utility.yul\":22561:22628   */\n      tag_559\n        /* \"#utility.yul\":22625:22627   */\n      0x22\n        /* \"#utility.yul\":22620:22623   */\n      dup4\n        /* \"#utility.yul\":22561:22628   */\n      tag_285\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":22554:22628   */\n      swap2\n      pop\n        /* \"#utility.yul\":22637:22730   */\n      tag_560\n        /* \"#utility.yul\":22726:22729   */\n      dup3\n        /* \"#utility.yul\":22637:22730   */\n      tag_328\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":22755:22757   */\n      0x40\n        /* \"#utility.yul\":22750:22753   */\n      dup3\n        /* \"#utility.yul\":22746:22758   */\n      add\n        /* \"#utility.yul\":22739:22758   */\n      swap1\n      pop\n        /* \"#utility.yul\":22398:22764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22770:23189   */\n    tag_188:\n        /* \"#utility.yul\":22936:22940   */\n      0x00\n        /* \"#utility.yul\":22974:22976   */\n      0x20\n        /* \"#utility.yul\":22963:22972   */\n      dup3\n        /* \"#utility.yul\":22959:22977   */\n      add\n        /* \"#utility.yul\":22951:22977   */\n      swap1\n      pop\n        /* \"#utility.yul\":23023:23032   */\n      dup2\n        /* \"#utility.yul\":23017:23021   */\n      dup2\n        /* \"#utility.yul\":23013:23033   */\n      sub\n        /* \"#utility.yul\":23009:23010   */\n      0x00\n        /* \"#utility.yul\":22998:23007   */\n      dup4\n        /* \"#utility.yul\":22994:23011   */\n      add\n        /* \"#utility.yul\":22987:23034   */\n      mstore\n        /* \"#utility.yul\":23051:23182   */\n      tag_562\n        /* \"#utility.yul\":23177:23181   */\n      dup2\n        /* \"#utility.yul\":23051:23182   */\n      tag_329\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":23043:23182   */\n      swap1\n      pop\n        /* \"#utility.yul\":22770:23189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23195:23336   */\n    tag_330:\n        /* \"#utility.yul\":23244:23248   */\n      0x00\n        /* \"#utility.yul\":23267:23270   */\n      dup2\n        /* \"#utility.yul\":23259:23270   */\n      swap1\n      pop\n        /* \"#utility.yul\":23290:23293   */\n      dup2\n        /* \"#utility.yul\":23287:23288   */\n      0x00\n        /* \"#utility.yul\":23280:23294   */\n      mstore\n        /* \"#utility.yul\":23324:23328   */\n      0x20\n        /* \"#utility.yul\":23321:23322   */\n      0x00\n        /* \"#utility.yul\":23311:23329   */\n      keccak256\n        /* \"#utility.yul\":23303:23329   */\n      swap1\n      pop\n        /* \"#utility.yul\":23195:23336   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23342:23435   */\n    tag_331:\n        /* \"#utility.yul\":23379:23385   */\n      0x00\n        /* \"#utility.yul\":23426:23428   */\n      0x20\n        /* \"#utility.yul\":23421:23423   */\n      0x1f\n        /* \"#utility.yul\":23414:23419   */\n      dup4\n        /* \"#utility.yul\":23410:23424   */\n      add\n        /* \"#utility.yul\":23406:23429   */\n      div\n        /* \"#utility.yul\":23396:23429   */\n      swap1\n      pop\n        /* \"#utility.yul\":23342:23435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23441:23548   */\n    tag_332:\n        /* \"#utility.yul\":23485:23493   */\n      0x00\n        /* \"#utility.yul\":23535:23540   */\n      dup3\n        /* \"#utility.yul\":23529:23533   */\n      dup3\n        /* \"#utility.yul\":23525:23541   */\n      shl\n        /* \"#utility.yul\":23504:23541   */\n      swap1\n      pop\n        /* \"#utility.yul\":23441:23548   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23554:23947   */\n    tag_333:\n        /* \"#utility.yul\":23623:23629   */\n      0x00\n        /* \"#utility.yul\":23673:23674   */\n      0x08\n        /* \"#utility.yul\":23661:23671   */\n      dup4\n        /* \"#utility.yul\":23657:23675   */\n      mul\n        /* \"#utility.yul\":23696:23793   */\n      tag_567\n        /* \"#utility.yul\":23726:23792   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23715:23724   */\n      dup3\n        /* \"#utility.yul\":23696:23793   */\n      tag_332\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":23814:23853   */\n      tag_568\n        /* \"#utility.yul\":23844:23852   */\n      dup7\n        /* \"#utility.yul\":23833:23842   */\n      dup4\n        /* \"#utility.yul\":23814:23853   */\n      tag_332\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":23802:23853   */\n      swap6\n      pop\n        /* \"#utility.yul\":23886:23890   */\n      dup1\n        /* \"#utility.yul\":23882:23891   */\n      not\n        /* \"#utility.yul\":23875:23880   */\n      dup5\n        /* \"#utility.yul\":23871:23892   */\n      and\n        /* \"#utility.yul\":23862:23892   */\n      swap4\n      pop\n        /* \"#utility.yul\":23935:23939   */\n      dup1\n        /* \"#utility.yul\":23925:23933   */\n      dup7\n        /* \"#utility.yul\":23921:23940   */\n      and\n        /* \"#utility.yul\":23914:23919   */\n      dup5\n        /* \"#utility.yul\":23911:23941   */\n      or\n        /* \"#utility.yul\":23901:23941   */\n      swap3\n      pop\n        /* \"#utility.yul\":23630:23947   */\n      pop\n      pop\n        /* \"#utility.yul\":23554:23947   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23953:24095   */\n    tag_334:\n        /* \"#utility.yul\":24003:24012   */\n      0x00\n        /* \"#utility.yul\":24036:24089   */\n      tag_570\n        /* \"#utility.yul\":24054:24088   */\n      tag_571\n        /* \"#utility.yul\":24063:24087   */\n      tag_572\n        /* \"#utility.yul\":24081:24086   */\n      dup5\n        /* \"#utility.yul\":24063:24087   */\n      tag_266\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":24054:24088   */\n      tag_279\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":24036:24089   */\n      tag_266\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":24023:24089   */\n      swap1\n      pop\n        /* \"#utility.yul\":23953:24095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24101:24176   */\n    tag_335:\n        /* \"#utility.yul\":24144:24147   */\n      0x00\n        /* \"#utility.yul\":24165:24170   */\n      dup2\n        /* \"#utility.yul\":24158:24170   */\n      swap1\n      pop\n        /* \"#utility.yul\":24101:24176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24182:24451   */\n    tag_336:\n        /* \"#utility.yul\":24292:24331   */\n      tag_575\n        /* \"#utility.yul\":24323:24330   */\n      dup4\n        /* \"#utility.yul\":24292:24331   */\n      tag_334\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":24353:24444   */\n      tag_576\n        /* \"#utility.yul\":24402:24443   */\n      tag_577\n        /* \"#utility.yul\":24426:24442   */\n      dup3\n        /* \"#utility.yul\":24402:24443   */\n      tag_335\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":24394:24400   */\n      dup5\n        /* \"#utility.yul\":24387:24391   */\n      dup5\n        /* \"#utility.yul\":24381:24392   */\n      sload\n        /* \"#utility.yul\":24353:24444   */\n      tag_333\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":24347:24351   */\n      dup3\n        /* \"#utility.yul\":24340:24445   */\n      sstore\n        /* \"#utility.yul\":24258:24451   */\n      pop\n        /* \"#utility.yul\":24182:24451   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24457:24530   */\n    tag_337:\n        /* \"#utility.yul\":24502:24505   */\n      0x00\n        /* \"#utility.yul\":24457:24530   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":24536:24725   */\n    tag_338:\n        /* \"#utility.yul\":24613:24645   */\n      tag_580\n      tag_337\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":24654:24719   */\n      tag_581\n        /* \"#utility.yul\":24712:24718   */\n      dup2\n        /* \"#utility.yul\":24704:24710   */\n      dup5\n        /* \"#utility.yul\":24698:24702   */\n      dup5\n        /* \"#utility.yul\":24654:24719   */\n      tag_336\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":24589:24725   */\n      pop\n        /* \"#utility.yul\":24536:24725   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24731:24917   */\n    tag_339:\n        /* \"#utility.yul\":24791:24911   */\n    tag_583:\n        /* \"#utility.yul\":24808:24811   */\n      dup2\n        /* \"#utility.yul\":24801:24806   */\n      dup2\n        /* \"#utility.yul\":24798:24812   */\n      lt\n        /* \"#utility.yul\":24791:24911   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":24862:24901   */\n      tag_586\n        /* \"#utility.yul\":24899:24900   */\n      0x00\n        /* \"#utility.yul\":24892:24897   */\n      dup3\n        /* \"#utility.yul\":24862:24901   */\n      tag_338\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":24835:24836   */\n      0x01\n        /* \"#utility.yul\":24828:24833   */\n      dup2\n        /* \"#utility.yul\":24824:24837   */\n      add\n        /* \"#utility.yul\":24815:24837   */\n      swap1\n      pop\n        /* \"#utility.yul\":24791:24911   */\n      jump(tag_583)\n    tag_585:\n        /* \"#utility.yul\":24731:24917   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24923:25466   */\n    tag_340:\n        /* \"#utility.yul\":25024:25026   */\n      0x1f\n        /* \"#utility.yul\":25019:25022   */\n      dup3\n        /* \"#utility.yul\":25016:25027   */\n      gt\n        /* \"#utility.yul\":25013:25459   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":25058:25096   */\n      tag_589\n        /* \"#utility.yul\":25090:25095   */\n      dup2\n        /* \"#utility.yul\":25058:25096   */\n      tag_330\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":25142:25171   */\n      tag_590\n        /* \"#utility.yul\":25160:25170   */\n      dup5\n        /* \"#utility.yul\":25142:25171   */\n      tag_331\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":25132:25140   */\n      dup2\n        /* \"#utility.yul\":25128:25172   */\n      add\n        /* \"#utility.yul\":25325:25327   */\n      0x20\n        /* \"#utility.yul\":25313:25323   */\n      dup6\n        /* \"#utility.yul\":25310:25328   */\n      lt\n        /* \"#utility.yul\":25307:25356   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":25346:25354   */\n      dup2\n        /* \"#utility.yul\":25331:25354   */\n      swap1\n      pop\n        /* \"#utility.yul\":25307:25356   */\n    tag_591:\n        /* \"#utility.yul\":25369:25449   */\n      tag_592\n        /* \"#utility.yul\":25425:25447   */\n      tag_593\n        /* \"#utility.yul\":25443:25446   */\n      dup6\n        /* \"#utility.yul\":25425:25447   */\n      tag_331\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":25415:25423   */\n      dup4\n        /* \"#utility.yul\":25411:25448   */\n      add\n        /* \"#utility.yul\":25398:25409   */\n      dup3\n        /* \"#utility.yul\":25369:25449   */\n      tag_339\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":25028:25459   */\n      pop\n      pop\n        /* \"#utility.yul\":25013:25459   */\n    tag_588:\n        /* \"#utility.yul\":24923:25466   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25472:25589   */\n    tag_341:\n        /* \"#utility.yul\":25526:25534   */\n      0x00\n        /* \"#utility.yul\":25576:25581   */\n      dup3\n        /* \"#utility.yul\":25570:25574   */\n      dup3\n        /* \"#utility.yul\":25566:25582   */\n      shr\n        /* \"#utility.yul\":25545:25582   */\n      swap1\n      pop\n        /* \"#utility.yul\":25472:25589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25595:25764   */\n    tag_342:\n        /* \"#utility.yul\":25639:25645   */\n      0x00\n        /* \"#utility.yul\":25672:25723   */\n      tag_596\n        /* \"#utility.yul\":25720:25721   */\n      0x00\n        /* \"#utility.yul\":25716:25722   */\n      not\n        /* \"#utility.yul\":25708:25713   */\n      dup5\n        /* \"#utility.yul\":25705:25706   */\n      0x08\n        /* \"#utility.yul\":25701:25714   */\n      mul\n        /* \"#utility.yul\":25672:25723   */\n      tag_341\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":25668:25724   */\n      not\n        /* \"#utility.yul\":25753:25757   */\n      dup1\n        /* \"#utility.yul\":25747:25751   */\n      dup4\n        /* \"#utility.yul\":25743:25758   */\n      and\n        /* \"#utility.yul\":25733:25758   */\n      swap2\n      pop\n        /* \"#utility.yul\":25646:25764   */\n      pop\n        /* \"#utility.yul\":25595:25764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25769:26064   */\n    tag_343:\n        /* \"#utility.yul\":25845:25849   */\n      0x00\n        /* \"#utility.yul\":25991:26020   */\n      tag_598\n        /* \"#utility.yul\":26016:26019   */\n      dup4\n        /* \"#utility.yul\":26010:26014   */\n      dup4\n        /* \"#utility.yul\":25991:26020   */\n      tag_342\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":25983:26020   */\n      swap2\n      pop\n        /* \"#utility.yul\":26053:26056   */\n      dup3\n        /* \"#utility.yul\":26050:26051   */\n      0x02\n        /* \"#utility.yul\":26046:26057   */\n      mul\n        /* \"#utility.yul\":26040:26044   */\n      dup3\n        /* \"#utility.yul\":26037:26058   */\n      or\n        /* \"#utility.yul\":26029:26058   */\n      swap1\n      pop\n        /* \"#utility.yul\":25769:26064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26069:27464   */\n    tag_190:\n        /* \"#utility.yul\":26186:26223   */\n      tag_600\n        /* \"#utility.yul\":26219:26222   */\n      dup3\n        /* \"#utility.yul\":26186:26223   */\n      tag_284\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":26288:26306   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":26280:26286   */\n      dup2\n        /* \"#utility.yul\":26277:26307   */\n      gt\n        /* \"#utility.yul\":26274:26330   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":26310:26328   */\n      tag_602\n      tag_291\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":26274:26330   */\n    tag_601:\n        /* \"#utility.yul\":26354:26392   */\n      tag_603\n        /* \"#utility.yul\":26386:26390   */\n      dup3\n        /* \"#utility.yul\":26380:26391   */\n      sload\n        /* \"#utility.yul\":26354:26392   */\n      tag_159\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":26439:26506   */\n      tag_604\n        /* \"#utility.yul\":26499:26505   */\n      dup3\n        /* \"#utility.yul\":26491:26497   */\n      dup3\n        /* \"#utility.yul\":26485:26489   */\n      dup6\n        /* \"#utility.yul\":26439:26506   */\n      tag_340\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":26533:26534   */\n      0x00\n        /* \"#utility.yul\":26557:26561   */\n      0x20\n        /* \"#utility.yul\":26544:26561   */\n      swap1\n      pop\n        /* \"#utility.yul\":26589:26591   */\n      0x1f\n        /* \"#utility.yul\":26581:26587   */\n      dup4\n        /* \"#utility.yul\":26578:26592   */\n      gt\n        /* \"#utility.yul\":26606:26607   */\n      0x01\n        /* \"#utility.yul\":26601:27219   */\n      dup2\n      eq\n      tag_606\n      jumpi\n        /* \"#utility.yul\":27263:27264   */\n      0x00\n        /* \"#utility.yul\":27280:27286   */\n      dup5\n        /* \"#utility.yul\":27277:27354   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":27329:27338   */\n      dup3\n        /* \"#utility.yul\":27324:27327   */\n      dup8\n        /* \"#utility.yul\":27320:27339   */\n      add\n        /* \"#utility.yul\":27314:27340   */\n      mload\n        /* \"#utility.yul\":27305:27340   */\n      swap1\n      pop\n        /* \"#utility.yul\":27277:27354   */\n    tag_607:\n        /* \"#utility.yul\":27380:27447   */\n      tag_608\n        /* \"#utility.yul\":27440:27446   */\n      dup6\n        /* \"#utility.yul\":27433:27438   */\n      dup3\n        /* \"#utility.yul\":27380:27447   */\n      tag_343\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":27374:27378   */\n      dup7\n        /* \"#utility.yul\":27367:27448   */\n      sstore\n        /* \"#utility.yul\":27236:27458   */\n      pop\n        /* \"#utility.yul\":26571:27458   */\n      jump(tag_605)\n        /* \"#utility.yul\":26601:27219   */\n    tag_606:\n        /* \"#utility.yul\":26653:26657   */\n      0x1f\n        /* \"#utility.yul\":26649:26658   */\n      not\n        /* \"#utility.yul\":26641:26647   */\n      dup5\n        /* \"#utility.yul\":26637:26659   */\n      and\n        /* \"#utility.yul\":26687:26724   */\n      tag_609\n        /* \"#utility.yul\":26719:26723   */\n      dup7\n        /* \"#utility.yul\":26687:26724   */\n      tag_330\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":26746:26747   */\n      0x00\n        /* \"#utility.yul\":26760:26968   */\n    tag_610:\n        /* \"#utility.yul\":26774:26781   */\n      dup3\n        /* \"#utility.yul\":26771:26772   */\n      dup2\n        /* \"#utility.yul\":26768:26782   */\n      lt\n        /* \"#utility.yul\":26760:26968   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":26853:26862   */\n      dup5\n        /* \"#utility.yul\":26848:26851   */\n      dup10\n        /* \"#utility.yul\":26844:26863   */\n      add\n        /* \"#utility.yul\":26838:26864   */\n      mload\n        /* \"#utility.yul\":26830:26836   */\n      dup3\n        /* \"#utility.yul\":26823:26865   */\n      sstore\n        /* \"#utility.yul\":26904:26905   */\n      0x01\n        /* \"#utility.yul\":26896:26902   */\n      dup3\n        /* \"#utility.yul\":26892:26906   */\n      add\n        /* \"#utility.yul\":26882:26906   */\n      swap2\n      pop\n        /* \"#utility.yul\":26951:26953   */\n      0x20\n        /* \"#utility.yul\":26940:26949   */\n      dup6\n        /* \"#utility.yul\":26936:26954   */\n      add\n        /* \"#utility.yul\":26923:26954   */\n      swap5\n      pop\n        /* \"#utility.yul\":26797:26801   */\n      0x20\n        /* \"#utility.yul\":26794:26795   */\n      dup2\n        /* \"#utility.yul\":26790:26802   */\n      add\n        /* \"#utility.yul\":26785:26802   */\n      swap1\n      pop\n        /* \"#utility.yul\":26760:26968   */\n      jump(tag_610)\n    tag_612:\n        /* \"#utility.yul\":26996:27002   */\n      dup7\n        /* \"#utility.yul\":26987:26994   */\n      dup4\n        /* \"#utility.yul\":26984:27003   */\n      lt\n        /* \"#utility.yul\":26981:27160   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":27054:27063   */\n      dup5\n        /* \"#utility.yul\":27049:27052   */\n      dup10\n        /* \"#utility.yul\":27045:27064   */\n      add\n        /* \"#utility.yul\":27039:27065   */\n      mload\n        /* \"#utility.yul\":27097:27145   */\n      tag_614\n        /* \"#utility.yul\":27139:27143   */\n      0x1f\n        /* \"#utility.yul\":27131:27137   */\n      dup10\n        /* \"#utility.yul\":27127:27144   */\n      and\n        /* \"#utility.yul\":27116:27125   */\n      dup3\n        /* \"#utility.yul\":27097:27145   */\n      tag_342\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":27089:27095   */\n      dup4\n        /* \"#utility.yul\":27082:27146   */\n      sstore\n        /* \"#utility.yul\":27004:27160   */\n      pop\n        /* \"#utility.yul\":26981:27160   */\n    tag_613:\n        /* \"#utility.yul\":27206:27207   */\n      0x01\n        /* \"#utility.yul\":27202:27203   */\n      0x02\n        /* \"#utility.yul\":27194:27200   */\n      dup9\n        /* \"#utility.yul\":27190:27204   */\n      mul\n        /* \"#utility.yul\":27186:27208   */\n      add\n        /* \"#utility.yul\":27180:27184   */\n      dup9\n        /* \"#utility.yul\":27173:27209   */\n      sstore\n        /* \"#utility.yul\":26608:27219   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":26571:27458   */\n    tag_605:\n      pop\n        /* \"#utility.yul\":26161:27464   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":26069:27464   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27470:27700   */\n    tag_344:\n        /* \"#utility.yul\":27610:27644   */\n      0x5769746864726177616c20616d6f756e74206d75737420626520677265617465\n        /* \"#utility.yul\":27606:27607   */\n      0x00\n        /* \"#utility.yul\":27598:27604   */\n      dup3\n        /* \"#utility.yul\":27594:27608   */\n      add\n        /* \"#utility.yul\":27587:27645   */\n      mstore\n        /* \"#utility.yul\":27679:27692   */\n      0x72207468616e207a65726f000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27674:27676   */\n      0x20\n        /* \"#utility.yul\":27666:27672   */\n      dup3\n        /* \"#utility.yul\":27662:27677   */\n      add\n        /* \"#utility.yul\":27655:27693   */\n      mstore\n        /* \"#utility.yul\":27470:27700   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27706:28072   */\n    tag_345:\n        /* \"#utility.yul\":27848:27851   */\n      0x00\n        /* \"#utility.yul\":27869:27936   */\n      tag_617\n        /* \"#utility.yul\":27933:27935   */\n      0x2b\n        /* \"#utility.yul\":27928:27931   */\n      dup4\n        /* \"#utility.yul\":27869:27936   */\n      tag_285\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":27862:27936   */\n      swap2\n      pop\n        /* \"#utility.yul\":27945:28038   */\n      tag_618\n        /* \"#utility.yul\":28034:28037   */\n      dup3\n        /* \"#utility.yul\":27945:28038   */\n      tag_344\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":28063:28065   */\n      0x40\n        /* \"#utility.yul\":28058:28061   */\n      dup3\n        /* \"#utility.yul\":28054:28066   */\n      add\n        /* \"#utility.yul\":28047:28066   */\n      swap1\n      pop\n        /* \"#utility.yul\":27706:28072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28078:28497   */\n    tag_203:\n        /* \"#utility.yul\":28244:28248   */\n      0x00\n        /* \"#utility.yul\":28282:28284   */\n      0x20\n        /* \"#utility.yul\":28271:28280   */\n      dup3\n        /* \"#utility.yul\":28267:28285   */\n      add\n        /* \"#utility.yul\":28259:28285   */\n      swap1\n      pop\n        /* \"#utility.yul\":28331:28340   */\n      dup2\n        /* \"#utility.yul\":28325:28329   */\n      dup2\n        /* \"#utility.yul\":28321:28341   */\n      sub\n        /* \"#utility.yul\":28317:28318   */\n      0x00\n        /* \"#utility.yul\":28306:28315   */\n      dup4\n        /* \"#utility.yul\":28302:28319   */\n      add\n        /* \"#utility.yul\":28295:28342   */\n      mstore\n        /* \"#utility.yul\":28359:28490   */\n      tag_620\n        /* \"#utility.yul\":28485:28489   */\n      dup2\n        /* \"#utility.yul\":28359:28490   */\n      tag_345\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":28351:28490   */\n      swap1\n      pop\n        /* \"#utility.yul\":28078:28497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28503:28671   */\n    tag_346:\n        /* \"#utility.yul\":28643:28663   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":28639:28640   */\n      0x00\n        /* \"#utility.yul\":28631:28637   */\n      dup3\n        /* \"#utility.yul\":28627:28641   */\n      add\n        /* \"#utility.yul\":28620:28664   */\n      mstore\n        /* \"#utility.yul\":28503:28671   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28677:29043   */\n    tag_347:\n        /* \"#utility.yul\":28819:28822   */\n      0x00\n        /* \"#utility.yul\":28840:28907   */\n      tag_623\n        /* \"#utility.yul\":28904:28906   */\n      0x12\n        /* \"#utility.yul\":28899:28902   */\n      dup4\n        /* \"#utility.yul\":28840:28907   */\n      tag_285\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":28833:28907   */\n      swap2\n      pop\n        /* \"#utility.yul\":28916:29009   */\n      tag_624\n        /* \"#utility.yul\":29005:29008   */\n      dup3\n        /* \"#utility.yul\":28916:29009   */\n      tag_346\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":29034:29036   */\n      0x20\n        /* \"#utility.yul\":29029:29032   */\n      dup3\n        /* \"#utility.yul\":29025:29037   */\n      add\n        /* \"#utility.yul\":29018:29037   */\n      swap1\n      pop\n        /* \"#utility.yul\":28677:29043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29049:29468   */\n    tag_206:\n        /* \"#utility.yul\":29215:29219   */\n      0x00\n        /* \"#utility.yul\":29253:29255   */\n      0x20\n        /* \"#utility.yul\":29242:29251   */\n      dup3\n        /* \"#utility.yul\":29238:29256   */\n      add\n        /* \"#utility.yul\":29230:29256   */\n      swap1\n      pop\n        /* \"#utility.yul\":29302:29311   */\n      dup2\n        /* \"#utility.yul\":29296:29300   */\n      dup2\n        /* \"#utility.yul\":29292:29312   */\n      sub\n        /* \"#utility.yul\":29288:29289   */\n      0x00\n        /* \"#utility.yul\":29277:29286   */\n      dup4\n        /* \"#utility.yul\":29273:29290   */\n      add\n        /* \"#utility.yul\":29266:29313   */\n      mstore\n        /* \"#utility.yul\":29330:29461   */\n      tag_626\n        /* \"#utility.yul\":29456:29460   */\n      dup2\n        /* \"#utility.yul\":29330:29461   */\n      tag_347\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":29322:29461   */\n      swap1\n      pop\n        /* \"#utility.yul\":29049:29468   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29474:29806   */\n    tag_224:\n        /* \"#utility.yul\":29595:29599   */\n      0x00\n        /* \"#utility.yul\":29633:29635   */\n      0x40\n        /* \"#utility.yul\":29622:29631   */\n      dup3\n        /* \"#utility.yul\":29618:29636   */\n      add\n        /* \"#utility.yul\":29610:29636   */\n      swap1\n      pop\n        /* \"#utility.yul\":29646:29717   */\n      tag_628\n        /* \"#utility.yul\":29714:29715   */\n      0x00\n        /* \"#utility.yul\":29703:29712   */\n      dup4\n        /* \"#utility.yul\":29699:29716   */\n      add\n        /* \"#utility.yul\":29690:29696   */\n      dup6\n        /* \"#utility.yul\":29646:29717   */\n      tag_276\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":29727:29799   */\n      tag_629\n        /* \"#utility.yul\":29795:29797   */\n      0x20\n        /* \"#utility.yul\":29784:29793   */\n      dup4\n        /* \"#utility.yul\":29780:29798   */\n      add\n        /* \"#utility.yul\":29771:29777   */\n      dup5\n        /* \"#utility.yul\":29727:29799   */\n      tag_268\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":29474:29806   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29812:30254   */\n    tag_229:\n        /* \"#utility.yul\":29961:29965   */\n      0x00\n        /* \"#utility.yul\":29999:30001   */\n      0x60\n        /* \"#utility.yul\":29988:29997   */\n      dup3\n        /* \"#utility.yul\":29984:30002   */\n      add\n        /* \"#utility.yul\":29976:30002   */\n      swap1\n      pop\n        /* \"#utility.yul\":30012:30083   */\n      tag_631\n        /* \"#utility.yul\":30080:30081   */\n      0x00\n        /* \"#utility.yul\":30069:30078   */\n      dup4\n        /* \"#utility.yul\":30065:30082   */\n      add\n        /* \"#utility.yul\":30056:30062   */\n      dup7\n        /* \"#utility.yul\":30012:30083   */\n      tag_276\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":30093:30165   */\n      tag_632\n        /* \"#utility.yul\":30161:30163   */\n      0x20\n        /* \"#utility.yul\":30150:30159   */\n      dup4\n        /* \"#utility.yul\":30146:30164   */\n      add\n        /* \"#utility.yul\":30137:30143   */\n      dup6\n        /* \"#utility.yul\":30093:30165   */\n      tag_276\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":30175:30247   */\n      tag_633\n        /* \"#utility.yul\":30243:30245   */\n      0x40\n        /* \"#utility.yul\":30232:30241   */\n      dup4\n        /* \"#utility.yul\":30228:30246   */\n      add\n        /* \"#utility.yul\":30219:30225   */\n      dup5\n        /* \"#utility.yul\":30175:30247   */\n      tag_268\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":29812:30254   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122043e1481c8167809fa7db7c783cf02c683613220197cc4a5a2e91ae0454e3473d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506127aa8061001c5f395ff3fe6080604052600436106100e0575f3560e01c80638da5cb5b1161007e578063b807a3c411610058578063b807a3c41461036f578063be9a768714610397578063f2fde38b146103bf578063f3fef3a3146103e7576101c7565b80638da5cb5b146102cd578063a9590e8a146102f7578063aee9c87214610333576101c7565b8063485cc955116100ba578063485cc95514610239578063715018a61461026157806385c758f7146102775780638a19c8bc146102a1576101c7565b80631e83409a146101cb57806342cb1fbc146101f357806347e7ef241461021d576101c7565b366101c7573460045f73f194afdf50b03e69bd7d057c1aa9e10c9954e4c973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461014591906118b9565b9250508190555073f194afdf50b03e69bd7d057c1aa9e10c9954e4c973ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62346040516101bd91906118fb565b60405180910390a3005b5f80fd5b3480156101d6575f80fd5b506101f160048036038101906101ec919061197f565b61040f565b005b3480156101fe575f80fd5b506102076108d7565b60405161021491906119b9565b60405180910390f35b610237600480360381019061023291906119fc565b6108ef565b005b348015610244575f80fd5b5061025f600480360381019061025a9190611a3a565b610aa9565b005b34801561026c575f80fd5b50610275610c6a565b005b348015610282575f80fd5b5061028b610c7d565b6040516102989190611ad3565b60405180910390f35b3480156102ac575f80fd5b506102b5610ca0565b6040516102c493929190611b5c565b60405180910390f35b3480156102d8575f80fd5b506102e1610d3d565b6040516102ee91906119b9565b60405180910390f35b348015610302575f80fd5b5061031d60048036038101906103189190611a3a565b610d72565b60405161032a91906118fb565b60405180910390f35b34801561033e575f80fd5b506103596004803603810190610354919061197f565b610d92565b60405161036691906118fb565b60405180910390f35b34801561037a575f80fd5b5061039560048036038101906103909190611b98565b610da7565b005b3480156103a2575f80fd5b506103bd60048036038101906103b89190611d14565b610f64565b005b3480156103ca575f80fd5b506103e560048036038101906103e0919061197f565b611104565b005b3480156103f2575f80fd5b5061040d600480360381019061040891906119fc565b611188565b005b60015f01544210158015610427575060018001544211155b610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d90611dca565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b90611e32565b60405180910390fd5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b90611e9a565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663db4f1024336040518263ffffffff1660e01b81526004016105fe9190611f02565b602060405180830381865afa158015610619573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063d9190611f42565b1161067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490611fb7565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107469190611fd5565b9250508190555073f194afdf50b03e69bd7d057c1aa9e10c9954e4c973ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610842575f3373ffffffffffffffffffffffffffffffffffffffff16826040516107b990612035565b5f6040518083038185875af1925050503d805f81146107f3576040519150601f19603f3d011682016040523d82523d5f602084013e6107f8565b606091505b505090508061083c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083390612093565b60405180910390fd5b5061086e565b61086d33828473ffffffffffffffffffffffffffffffffffffffff166114449092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683836040516108cb91906118fb565b60405180910390a35050565b73f194afdf50b03e69bd7d057c1aa9e10c9954e4c981565b73f194afdf50b03e69bd7d057c1aa9e10c9954e4c973ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361097d57803414610978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096f906120fb565b60405180910390fd5b6109ed565b5f81116109bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b690612189565b60405180910390fd5b6109ec3330838573ffffffffffffffffffffffffffffffffffffffff166114c3909392919063ffffffff16565b5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a3991906118b9565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6283604051610a9d91906118fb565b60405180910390a35050565b5f610ab2611545565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610afa5750825b90505f60018367ffffffffffffffff16148015610b2d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b3b575080155b15610b72576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610bbf576001855f0160086101000a81548160ff0219169083151502179055505b610bc88661156c565b865f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610c61575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c5891906121f3565b60405180910390a15b50505050505050565b610c72611580565b610c7b5f611607565b565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001805f015490806001015490806002018054610cbc90612239565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce890612239565b8015610d335780601f10610d0a57610100808354040283529160200191610d33565b820191905f5260205f20905b815481529060010190602001808311610d1657829003601f168201915b5050505050905083565b5f80610d476116d8565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6005602052815f5260405f20602052805f5260405f205f91509150505481565b6004602052805f5260405f205f915090505481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b8152600401610dff91906119b9565b602060405180830381865afa158015610e1a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e3e919061229e565b610e7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7490612313565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc283604051610f5791906118fb565b60405180910390a3505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b8152600401610fbc91906119b9565b602060405180830381865afa158015610fd7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ffb919061229e565b61103a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103190612313565b60405180910390fd5b81831061107c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611073906123a1565b60405180910390fd5b60405180606001604052808481526020018381526020018281525060015f820151815f01556020820151816001015560408201518160020190816110c09190612553565b509050507f09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e138383836040516110f793929190611b5c565b60405180910390a1505050565b61110c611580565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361117c575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161117391906119b9565b60405180910390fd5b61118581611607565b50565b611190611580565b5f81116111d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c990612692565b60405180910390fd5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015611252576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611249906126fa565b60405180910390fd5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461129e9190611fd5565b9250508190555073f194afdf50b03e69bd7d057c1aa9e10c9954e4c973ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113a1575f6112f5610d3d565b73ffffffffffffffffffffffffffffffffffffffff168260405161131890612035565b5f6040518083038185875af1925050503d805f8114611352576040519150601f19603f3d011682016040523d82523d5f602084013e611357565b606091505b505090508061139b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139290612093565b60405180910390fd5b506113d4565b6113d36113ac610d3d565b828473ffffffffffffffffffffffffffffffffffffffff166114449092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff166113f3610d3d565b73ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb8360405161143891906118fb565b60405180910390a35050565b6114be838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611477929190612718565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506116ff565b505050565b61153f848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016114f89392919061273f565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506116ff565b50505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61157461179a565b61157d816117da565b50565b61158861185e565b73ffffffffffffffffffffffffffffffffffffffff166115a6610d3d565b73ffffffffffffffffffffffffffffffffffffffff1614611605576115c961185e565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115fc91906119b9565b60405180910390fd5b565b5f6116106116d8565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f8060205f8451602086015f885af18061171e576040513d5f823e3d81fd5b3d92505f519150505f8214611737576001811415611752565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561179457836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161178b91906119b9565b60405180910390fd5b50505050565b6117a2611865565b6117d8576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6117e261179a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611852575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161184991906119b9565b60405180910390fd5b61185b81611607565b50565b5f33905090565b5f61186e611545565b5f0160089054906101000a900460ff16905090565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118c382611883565b91506118ce83611883565b92508282019050808211156118e6576118e561188c565b5b92915050565b6118f581611883565b82525050565b5f60208201905061190e5f8301846118ec565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61194e82611925565b9050919050565b61195e81611944565b8114611968575f80fd5b50565b5f8135905061197981611955565b92915050565b5f602082840312156119945761199361191d565b5b5f6119a18482850161196b565b91505092915050565b6119b381611944565b82525050565b5f6020820190506119cc5f8301846119aa565b92915050565b6119db81611883565b81146119e5575f80fd5b50565b5f813590506119f6816119d2565b92915050565b5f8060408385031215611a1257611a1161191d565b5b5f611a1f8582860161196b565b9250506020611a30858286016119e8565b9150509250929050565b5f8060408385031215611a5057611a4f61191d565b5b5f611a5d8582860161196b565b9250506020611a6e8582860161196b565b9150509250929050565b5f819050919050565b5f611a9b611a96611a9184611925565b611a78565b611925565b9050919050565b5f611aac82611a81565b9050919050565b5f611abd82611aa2565b9050919050565b611acd81611ab3565b82525050565b5f602082019050611ae65f830184611ac4565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611b2e82611aec565b611b388185611af6565b9350611b48818560208601611b06565b611b5181611b14565b840191505092915050565b5f606082019050611b6f5f8301866118ec565b611b7c60208301856118ec565b8181036040830152611b8e8184611b24565b9050949350505050565b5f805f60608486031215611baf57611bae61191d565b5b5f611bbc8682870161196b565b9350506020611bcd8682870161196b565b9250506040611bde868287016119e8565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611c2682611b14565b810181811067ffffffffffffffff82111715611c4557611c44611bf0565b5b80604052505050565b5f611c57611914565b9050611c638282611c1d565b919050565b5f67ffffffffffffffff821115611c8257611c81611bf0565b5b611c8b82611b14565b9050602081019050919050565b828183375f83830152505050565b5f611cb8611cb384611c68565b611c4e565b905082815260208101848484011115611cd457611cd3611bec565b5b611cdf848285611c98565b509392505050565b5f82601f830112611cfb57611cfa611be8565b5b8135611d0b848260208601611ca6565b91505092915050565b5f805f60608486031215611d2b57611d2a61191d565b5b5f611d38868287016119e8565b9350506020611d49868287016119e8565b925050604084013567ffffffffffffffff811115611d6a57611d69611921565b5b611d7686828701611ce7565b9150509250925092565b7f4e6f742077697468696e20726f756e64206475726174696f6e000000000000005f82015250565b5f611db4601983611af6565b9150611dbf82611d80565b602082019050919050565b5f6020820190508181035f830152611de181611da8565b9050919050565b7f4e6f20636c61696d61626c6520616d6f756e74000000000000000000000000005f82015250565b5f611e1c601383611af6565b9150611e2782611de8565b602082019050919050565b5f6020820190508181035f830152611e4981611e10565b9050919050565b7f496e73756666696369656e742066756e647320696e206a6172000000000000005f82015250565b5f611e84601983611af6565b9150611e8f82611e50565b602082019050919050565b5f6020820190508181035f830152611eb181611e78565b9050919050565b7f54727573740000000000000000000000000000000000000000000000000000005f82015250565b5f611eec600583611af6565b9150611ef782611eb8565b602082019050919050565b5f604082019050611f155f8301846119aa565b8181036020830152611f2681611ee0565b905092915050565b5f81519050611f3c816119d2565b92915050565b5f60208284031215611f5757611f5661191d565b5b5f611f6484828501611f2e565b91505092915050565b7f496e73756666696369656e742054727573742073636f726500000000000000005f82015250565b5f611fa1601883611af6565b9150611fac82611f6d565b602082019050919050565b5f6020820190508181035f830152611fce81611f95565b9050919050565b5f611fdf82611883565b9150611fea83611883565b92508282039050818111156120025761200161188c565b5b92915050565b5f81905092915050565b50565b5f6120205f83612008565b915061202b82612012565b5f82019050919050565b5f61203f82612015565b9150819050919050565b7f4574686572207472616e73666572206661696c656400000000000000000000005f82015250565b5f61207d601583611af6565b915061208882612049565b602082019050919050565b5f6020820190508181035f8301526120aa81612071565b9050919050565b7f496e636f727265637420457468657220616d6f756e74000000000000000000005f82015250565b5f6120e5601683611af6565b91506120f0826120b1565b602082019050919050565b5f6020820190508181035f830152612112816120d9565b9050919050565b7f4465706f73697420616d6f756e74206d757374206265206772656174657220745f8201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b5f612173602883611af6565b915061217e82612119565b604082019050919050565b5f6020820190508181035f8301526121a081612167565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f6121dd6121d86121d3846121a7565b611a78565b6121b0565b9050919050565b6121ed816121c3565b82525050565b5f6020820190506122065f8301846121e4565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061225057607f821691505b6020821081036122635761226261220c565b5b50919050565b5f8115159050919050565b61227d81612269565b8114612287575f80fd5b50565b5f8151905061229881612274565b92915050565b5f602082840312156122b3576122b261191d565b5b5f6122c08482850161228a565b91505092915050565b7f43616c6c6572206973206e6f7420616e2061646d696e000000000000000000005f82015250565b5f6122fd601683611af6565b9150612308826122c9565b602082019050919050565b5f6020820190508181035f83015261232a816122f1565b9050919050565b7f53746172742074696d65206d757374206265206265666f726520656e642074695f8201527f6d65000000000000000000000000000000000000000000000000000000000000602082015250565b5f61238b602283611af6565b915061239682612331565b604082019050919050565b5f6020820190508181035f8301526123b88161237f565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261241b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826123e0565b61242586836123e0565b95508019841693508086168417925050509392505050565b5f61245761245261244d84611883565b611a78565b611883565b9050919050565b5f819050919050565b6124708361243d565b61248461247c8261245e565b8484546123ec565b825550505050565b5f90565b61249861248c565b6124a3818484612467565b505050565b5b818110156124c6576124bb5f82612490565b6001810190506124a9565b5050565b601f82111561250b576124dc816123bf565b6124e5846123d1565b810160208510156124f4578190505b612508612500856123d1565b8301826124a8565b50505b505050565b5f82821c905092915050565b5f61252b5f1984600802612510565b1980831691505092915050565b5f612543838361251c565b9150826002028217905092915050565b61255c82611aec565b67ffffffffffffffff81111561257557612574611bf0565b5b61257f8254612239565b61258a8282856124ca565b5f60209050601f8311600181146125bb575f84156125a9578287015190505b6125b38582612538565b86555061261a565b601f1984166125c9866123bf565b5f5b828110156125f0578489015182556001820191506020850194506020810190506125cb565b8683101561260d5784890151612609601f89168261251c565b8355505b6001600288020188555050505b505050505050565b7f5769746864726177616c20616d6f756e74206d757374206265206772656174655f8201527f72207468616e207a65726f000000000000000000000000000000000000000000602082015250565b5f61267c602b83611af6565b915061268782612622565b604082019050919050565b5f6020820190508181035f8301526126a981612670565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f6126e4601283611af6565b91506126ef826126b0565b602082019050919050565b5f6020820190508181035f830152612711816126d8565b9050919050565b5f60408201905061272b5f8301856119aa565b61273860208301846118ec565b9392505050565b5f6060820190506127525f8301866119aa565b61275f60208301856119aa565b61276c60408301846118ec565b94935050505056fea264697066735822122043e1481c8167809fa7db7c783cf02c683613220197cc4a5a2e91ae0454e3473d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27AA DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xB807A3C4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB807A3C4 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xBE9A7687 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x3E7 JUMPI PUSH2 0x1C7 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xA9590E8A EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xAEE9C872 EQ PUSH2 0x333 JUMPI PUSH2 0x1C7 JUMP JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0x2A1 JUMPI PUSH2 0x1C7 JUMP JUMPDEST DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x42CB1FBC EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x21D JUMPI PUSH2 0x1C7 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1C7 JUMPI CALLVALUE PUSH1 0x4 PUSH0 PUSH20 0xF194AFDF50B03E69BD7D057C1AA9E10C9954E4C9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH20 0xF194AFDF50B03E69BD7D057C1AA9E10C9954E4C9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0xAA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0xC6A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH2 0xDA7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0xF64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x1104 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x1188 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 ADD SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x427 JUMPI POP PUSH1 0x1 DUP1 ADD SLOAD TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45D SWAP1 PUSH2 0x1DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51B SWAP1 PUSH2 0x1E32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59B SWAP1 PUSH2 0x1E9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB4F1024 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x619 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x1F42 JUMP JUMPDEST GT PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x674 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH20 0xF194AFDF50B03E69BD7D057C1AA9E10C9954E4C9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x842 JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP1 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x86E JUMP JUMPDEST PUSH2 0x86D CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1444 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xF194AFDF50B03E69BD7D057C1AA9E10C9954E4C9 DUP2 JUMP JUMPDEST PUSH20 0xF194AFDF50B03E69BD7D057C1AA9E10C9954E4C9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x97D JUMPI DUP1 CALLVALUE EQ PUSH2 0x978 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96F SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9ED JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x9BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B6 SWAP1 PUSH2 0x2189 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EC CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14C3 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA39 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAB2 PUSH2 0x1545 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB2D JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB3B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBBF JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBC8 DUP7 PUSH2 0x156C JUMP JUMPDEST DUP7 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC61 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC72 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xC7B PUSH0 PUSH2 0x1607 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xCBC SWAP1 PUSH2 0x2239 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCE8 SWAP1 PUSH2 0x2239 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD33 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD33 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD16 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD47 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFF SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE1A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE3E SWAP2 SWAP1 PUSH2 0x229E JUMP JUMPDEST PUSH2 0xE7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE74 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF57 SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFD7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFFB SWAP2 SWAP1 PUSH2 0x229E JUMP JUMPDEST PUSH2 0x103A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1031 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 LT PUSH2 0x107C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1073 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x110C PUSH2 0x1580 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1185 DUP2 PUSH2 0x1607 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1190 PUSH2 0x1580 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x11D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C9 SWAP1 PUSH2 0x2692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1249 SWAP1 PUSH2 0x26FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH20 0xF194AFDF50B03E69BD7D057C1AA9E10C9954E4C9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13A1 JUMPI PUSH0 PUSH2 0x12F5 PUSH2 0xD3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1318 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1357 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x139B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1392 SWAP1 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x13D3 PUSH2 0x13AC PUSH2 0xD3D JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1444 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13F3 PUSH2 0xD3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x1438 SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x14BE DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1477 SWAP3 SWAP2 SWAP1 PUSH2 0x2718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x16FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x153F DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x14F8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x16FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1574 PUSH2 0x179A JUMP JUMPDEST PUSH2 0x157D DUP2 PUSH2 0x17DA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1588 PUSH2 0x185E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A6 PUSH2 0xD3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1605 JUMPI PUSH2 0x15C9 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1610 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x171E JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1737 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1752 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1794 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178B SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x17A2 PUSH2 0x1865 JUMP JUMPDEST PUSH2 0x17D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x17E2 PUSH2 0x179A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1852 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1849 SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x185B DUP2 PUSH2 0x1607 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x186E PUSH2 0x1545 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18C3 DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 POP PUSH2 0x18CE DUP4 PUSH2 0x1883 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18E6 JUMPI PUSH2 0x18E5 PUSH2 0x188C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18F5 DUP2 PUSH2 0x1883 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x190E PUSH0 DUP4 ADD DUP5 PUSH2 0x18EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x194E DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x195E DUP2 PUSH2 0x1944 JUMP JUMPDEST DUP2 EQ PUSH2 0x1968 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1979 DUP2 PUSH2 0x1955 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1994 JUMPI PUSH2 0x1993 PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19A1 DUP5 DUP3 DUP6 ADD PUSH2 0x196B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19B3 DUP2 PUSH2 0x1944 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19CC PUSH0 DUP4 ADD DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19DB DUP2 PUSH2 0x1883 JUMP JUMPDEST DUP2 EQ PUSH2 0x19E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F6 DUP2 PUSH2 0x19D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A12 JUMPI PUSH2 0x1A11 PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1F DUP6 DUP3 DUP7 ADD PUSH2 0x196B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A30 DUP6 DUP3 DUP7 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A50 JUMPI PUSH2 0x1A4F PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A5D DUP6 DUP3 DUP7 ADD PUSH2 0x196B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A6E DUP6 DUP3 DUP7 ADD PUSH2 0x196B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A9B PUSH2 0x1A96 PUSH2 0x1A91 DUP5 PUSH2 0x1925 JUMP JUMPDEST PUSH2 0x1A78 JUMP JUMPDEST PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AAC DUP3 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABD DUP3 PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACD DUP2 PUSH2 0x1AB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B2E DUP3 PUSH2 0x1AEC JUMP JUMPDEST PUSH2 0x1B38 DUP2 DUP6 PUSH2 0x1AF6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B48 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x1B51 DUP2 PUSH2 0x1B14 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B6F PUSH0 DUP4 ADD DUP7 PUSH2 0x18EC JUMP JUMPDEST PUSH2 0x1B7C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18EC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B8E DUP2 DUP5 PUSH2 0x1B24 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BAF JUMPI PUSH2 0x1BAE PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBC DUP7 DUP3 DUP8 ADD PUSH2 0x196B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BCD DUP7 DUP3 DUP8 ADD PUSH2 0x196B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BDE DUP7 DUP3 DUP8 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1C26 DUP3 PUSH2 0x1B14 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C45 JUMPI PUSH2 0x1C44 PUSH2 0x1BF0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C57 PUSH2 0x1914 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C63 DUP3 DUP3 PUSH2 0x1C1D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C82 JUMPI PUSH2 0x1C81 PUSH2 0x1BF0 JUMP JUMPDEST JUMPDEST PUSH2 0x1C8B DUP3 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB8 PUSH2 0x1CB3 DUP5 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x1C4E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CD4 JUMPI PUSH2 0x1CD3 PUSH2 0x1BEC JUMP JUMPDEST JUMPDEST PUSH2 0x1CDF DUP5 DUP3 DUP6 PUSH2 0x1C98 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x1BE8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D0B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D2B JUMPI PUSH2 0x1D2A PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D38 DUP7 DUP3 DUP8 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D49 DUP7 DUP3 DUP8 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D6A JUMPI PUSH2 0x1D69 PUSH2 0x1921 JUMP JUMPDEST JUMPDEST PUSH2 0x1D76 DUP7 DUP3 DUP8 ADD PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E6F742077697468696E20726F756E64206475726174696F6E00000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB4 PUSH1 0x19 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBF DUP3 PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DE1 DUP2 PUSH2 0x1DA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1C PUSH1 0x13 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E27 DUP3 PUSH2 0x1DE8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E49 DUP2 PUSH2 0x1E10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E84 PUSH1 0x19 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E8F DUP3 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EB1 DUP2 PUSH2 0x1E78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472757374000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEC PUSH1 0x5 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF7 DUP3 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F15 PUSH0 DUP4 ADD DUP5 PUSH2 0x19AA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1F26 DUP2 PUSH2 0x1EE0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F3C DUP2 PUSH2 0x19D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F57 JUMPI PUSH2 0x1F56 PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F64 DUP5 DUP3 DUP6 ADD PUSH2 0x1F2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742054727573742073636F72650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA1 PUSH1 0x18 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAC DUP3 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FCE DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDF DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEA DUP4 PUSH2 0x1883 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2002 JUMPI PUSH2 0x2001 PUSH2 0x188C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2020 PUSH0 DUP4 PUSH2 0x2008 JUMP JUMPDEST SWAP2 POP PUSH2 0x202B DUP3 PUSH2 0x2012 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x203F DUP3 PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x207D PUSH1 0x15 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2088 DUP3 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20AA DUP2 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420457468657220616D6F756E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20E5 PUSH1 0x16 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F0 DUP3 PUSH2 0x20B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2112 DUP2 PUSH2 0x20D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2173 PUSH1 0x28 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x217E DUP3 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21A0 DUP2 PUSH2 0x2167 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21DD PUSH2 0x21D8 PUSH2 0x21D3 DUP5 PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0x1A78 JUMP JUMPDEST PUSH2 0x21B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21ED DUP2 PUSH2 0x21C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2206 PUSH0 DUP4 ADD DUP5 PUSH2 0x21E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2250 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2263 JUMPI PUSH2 0x2262 PUSH2 0x220C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x227D DUP2 PUSH2 0x2269 JUMP JUMPDEST DUP2 EQ PUSH2 0x2287 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2298 DUP2 PUSH2 0x2274 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B3 JUMPI PUSH2 0x22B2 PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C0 DUP5 DUP3 DUP6 ADD PUSH2 0x228A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22FD PUSH1 0x16 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2308 DUP3 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x232A DUP2 PUSH2 0x22F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x238B PUSH1 0x22 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2396 DUP3 PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23B8 DUP2 PUSH2 0x237F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x241B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x23E0 JUMP JUMPDEST PUSH2 0x2425 DUP7 DUP4 PUSH2 0x23E0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2457 PUSH2 0x2452 PUSH2 0x244D DUP5 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x1A78 JUMP JUMPDEST PUSH2 0x1883 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2470 DUP4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x2484 PUSH2 0x247C DUP3 PUSH2 0x245E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x23EC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2498 PUSH2 0x248C JUMP JUMPDEST PUSH2 0x24A3 DUP2 DUP5 DUP5 PUSH2 0x2467 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24C6 JUMPI PUSH2 0x24BB PUSH0 DUP3 PUSH2 0x2490 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24A9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x250B JUMPI PUSH2 0x24DC DUP2 PUSH2 0x23BF JUMP JUMPDEST PUSH2 0x24E5 DUP5 PUSH2 0x23D1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x24F4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2508 PUSH2 0x2500 DUP6 PUSH2 0x23D1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x24A8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x252B PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2510 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2543 DUP4 DUP4 PUSH2 0x251C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x255C DUP3 PUSH2 0x1AEC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2575 JUMPI PUSH2 0x2574 PUSH2 0x1BF0 JUMP JUMPDEST JUMPDEST PUSH2 0x257F DUP3 SLOAD PUSH2 0x2239 JUMP JUMPDEST PUSH2 0x258A DUP3 DUP3 DUP6 PUSH2 0x24CA JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x25BB JUMPI PUSH0 DUP5 ISZERO PUSH2 0x25A9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x25B3 DUP6 DUP3 PUSH2 0x2538 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x261A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x25C9 DUP7 PUSH2 0x23BF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x25F0 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25CB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x260D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2609 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x251C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x267C PUSH1 0x2B DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2687 DUP3 PUSH2 0x2622 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26A9 DUP2 PUSH2 0x2670 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26E4 PUSH1 0x12 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x26EF DUP3 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2711 DUP2 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x272B PUSH0 DUP4 ADD DUP6 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x2738 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18EC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2752 PUSH0 DUP4 ADD DUP7 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x275F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x276C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18EC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xE1 BASEFEE SHR DUP2 PUSH8 0x809FA7DB7C783CF0 0x2C PUSH9 0x3613220197CC4A5A2E SWAP2 0xAE DIV SLOAD 0xE3 SELFBALANCE RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "367:5330:12:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ETHER_1404": {
									"entryPoint": 2263,
									"id": 1404,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1819": {
									"entryPoint": null,
									"id": 1819,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 5484,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 6106,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1031": {
									"entryPoint": 5887,
									"id": 1031,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 6042,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 5504,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 5445,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 5848,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 6245,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_476": {
									"entryPoint": 6238,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_193": {
									"entryPoint": 5639,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowedAmounts_1427": {
									"entryPoint": 3442,
									"id": 1427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_1668": {
									"entryPoint": 1039,
									"id": 1668,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentRound_1417": {
									"entryPoint": 3232,
									"id": 1417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1557": {
									"entryPoint": 2287,
									"id": 1557,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@initialize_1501": {
									"entryPoint": 2729,
									"id": 1501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 3389,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 3178,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_736": {
									"entryPoint": 5315,
									"id": 736,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_709": {
									"entryPoint": 5188,
									"id": 709,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@scorer_1407": {
									"entryPoint": 3197,
									"id": 1407,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAllowedAmount_1695": {
									"entryPoint": 3495,
									"id": 1695,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setRound_1729": {
									"entryPoint": 3940,
									"id": 1729,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@totalBalances_1421": {
									"entryPoint": 3474,
									"id": 1421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 4356,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1799": {
									"entryPoint": 4488,
									"id": 1799,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 7334,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr": {
									"entryPoint": 7444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IScorer_$1387_to_t_address_fromStack": {
									"entryPoint": 6852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 8676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10047,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b__to_t_address_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10008,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IScorer_$1387__to_t_address__fromStack_reversed": {
									"entryPoint": 6867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 8691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7004,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6420,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9418,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 8615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 8624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IScorer_$1387_to_t_address": {
									"entryPoint": 6835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 8643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7320,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8716,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7144,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7148,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363": {
									"entryPoint": 7552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf": {
									"entryPoint": 7656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f": {
									"entryPoint": 9009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be": {
									"entryPoint": 8265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 9904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b": {
									"entryPoint": 7864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375": {
									"entryPoint": 8369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5": {
									"entryPoint": 8045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d": {
									"entryPoint": 7760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226": {
									"entryPoint": 8905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 8210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71": {
									"entryPoint": 8473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76": {
									"entryPoint": 9762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9196,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9319,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9356,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:30257:13",
										"nodeType": "YulBlock",
										"src": "0:30257:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:13",
													"nodeType": "YulBlock",
													"src": "52:32:13",
													"statements": [
														{
															"nativeSrc": "62:16:13",
															"nodeType": "YulAssignment",
															"src": "62:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:13",
																"nodeType": "YulIdentifier",
																"src": "73:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:77:13"
											},
											{
												"body": {
													"nativeSrc": "118:152:13",
													"nodeType": "YulBlock",
													"src": "118:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "135:1:13",
																		"nodeType": "YulLiteral",
																		"src": "135:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "138:77:13",
																		"nodeType": "YulLiteral",
																		"src": "138:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "128:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:13"
																},
																"nativeSrc": "128:88:13",
																"nodeType": "YulFunctionCall",
																"src": "128:88:13"
															},
															"nativeSrc": "128:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "128:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "232:1:13",
																		"nodeType": "YulLiteral",
																		"src": "232:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "235:4:13",
																		"nodeType": "YulLiteral",
																		"src": "235:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "225:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:13"
																},
																"nativeSrc": "225:15:13",
																"nodeType": "YulFunctionCall",
																"src": "225:15:13"
															},
															"nativeSrc": "225:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "225:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:13",
																		"nodeType": "YulLiteral",
																		"src": "256:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "259:4:13",
																		"nodeType": "YulLiteral",
																		"src": "259:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "249:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:13"
																},
																"nativeSrc": "249:15:13",
																"nodeType": "YulFunctionCall",
																"src": "249:15:13"
															},
															"nativeSrc": "249:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "249:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "90:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:13"
											},
											{
												"body": {
													"nativeSrc": "320:147:13",
													"nodeType": "YulBlock",
													"src": "320:147:13",
													"statements": [
														{
															"nativeSrc": "330:25:13",
															"nodeType": "YulAssignment",
															"src": "330:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "353:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "335:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:13"
																},
																"nativeSrc": "335:20:13",
																"nodeType": "YulFunctionCall",
																"src": "335:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "330:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:13"
																}
															]
														},
														{
															"nativeSrc": "364:25:13",
															"nodeType": "YulAssignment",
															"src": "364:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "387:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "369:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:13"
																},
																"nativeSrc": "369:20:13",
																"nodeType": "YulFunctionCall",
																"src": "369:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "364:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:13"
																}
															]
														},
														{
															"nativeSrc": "398:16:13",
															"nodeType": "YulAssignment",
															"src": "398:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "409:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "412:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "405:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:13"
																},
																"nativeSrc": "405:9:13",
																"nodeType": "YulFunctionCall",
																"src": "405:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "398:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "438:22:13",
																"nodeType": "YulBlock",
																"src": "438:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "440:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:13"
																			},
																			"nativeSrc": "440:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:13"
																		},
																		"nativeSrc": "440:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "430:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "433:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "427:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:13"
																},
																"nativeSrc": "427:10:13",
																"nodeType": "YulFunctionCall",
																"src": "427:10:13"
															},
															"nativeSrc": "424:36:13",
															"nodeType": "YulIf",
															"src": "424:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "276:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "307:1:13",
														"nodeType": "YulTypedName",
														"src": "307:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "310:1:13",
														"nodeType": "YulTypedName",
														"src": "310:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "316:3:13",
														"nodeType": "YulTypedName",
														"src": "316:3:13",
														"type": ""
													}
												],
												"src": "276:191:13"
											},
											{
												"body": {
													"nativeSrc": "538:53:13",
													"nodeType": "YulBlock",
													"src": "538:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "555:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "578:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "578:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "560:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "560:17:13"
																		},
																		"nativeSrc": "560:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "560:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "548:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:13"
																},
																"nativeSrc": "548:37:13",
																"nodeType": "YulFunctionCall",
																"src": "548:37:13"
															},
															"nativeSrc": "548:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "548:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "473:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "526:5:13",
														"nodeType": "YulTypedName",
														"src": "526:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "533:3:13",
														"nodeType": "YulTypedName",
														"src": "533:3:13",
														"type": ""
													}
												],
												"src": "473:118:13"
											},
											{
												"body": {
													"nativeSrc": "695:124:13",
													"nodeType": "YulBlock",
													"src": "695:124:13",
													"statements": [
														{
															"nativeSrc": "705:26:13",
															"nodeType": "YulAssignment",
															"src": "705:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "717:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "717:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "728:2:13",
																		"nodeType": "YulLiteral",
																		"src": "728:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "713:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "713:3:13"
																},
																"nativeSrc": "713:18:13",
																"nodeType": "YulFunctionCall",
																"src": "713:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "705:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "705:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "785:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "798:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "798:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "809:1:13",
																				"nodeType": "YulLiteral",
																				"src": "809:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:13"
																		},
																		"nativeSrc": "794:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "794:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "741:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "741:43:13"
																},
																"nativeSrc": "741:71:13",
																"nodeType": "YulFunctionCall",
																"src": "741:71:13"
															},
															"nativeSrc": "741:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "741:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "597:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "667:9:13",
														"nodeType": "YulTypedName",
														"src": "667:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "679:6:13",
														"nodeType": "YulTypedName",
														"src": "679:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "690:4:13",
														"nodeType": "YulTypedName",
														"src": "690:4:13",
														"type": ""
													}
												],
												"src": "597:222:13"
											},
											{
												"body": {
													"nativeSrc": "865:35:13",
													"nodeType": "YulBlock",
													"src": "865:35:13",
													"statements": [
														{
															"nativeSrc": "875:19:13",
															"nodeType": "YulAssignment",
															"src": "875:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "891:2:13",
																		"nodeType": "YulLiteral",
																		"src": "891:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "885:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "885:5:13"
																},
																"nativeSrc": "885:9:13",
																"nodeType": "YulFunctionCall",
																"src": "885:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "875:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "825:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "858:6:13",
														"nodeType": "YulTypedName",
														"src": "858:6:13",
														"type": ""
													}
												],
												"src": "825:75:13"
											},
											{
												"body": {
													"nativeSrc": "995:28:13",
													"nodeType": "YulBlock",
													"src": "995:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1012:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1012:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1015:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1015:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1005:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1005:6:13"
																},
																"nativeSrc": "1005:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1005:12:13"
															},
															"nativeSrc": "1005:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1005:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "906:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "906:117:13"
											},
											{
												"body": {
													"nativeSrc": "1118:28:13",
													"nodeType": "YulBlock",
													"src": "1118:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1135:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1135:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1138:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1138:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1128:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1128:6:13"
																},
																"nativeSrc": "1128:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1128:12:13"
															},
															"nativeSrc": "1128:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1128:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1029:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1029:117:13"
											},
											{
												"body": {
													"nativeSrc": "1197:81:13",
													"nodeType": "YulBlock",
													"src": "1197:81:13",
													"statements": [
														{
															"nativeSrc": "1207:65:13",
															"nodeType": "YulAssignment",
															"src": "1207:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1222:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1222:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1229:42:13",
																		"nodeType": "YulLiteral",
																		"src": "1229:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1218:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1218:3:13"
																},
																"nativeSrc": "1218:54:13",
																"nodeType": "YulFunctionCall",
																"src": "1218:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1207:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1207:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1152:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1179:5:13",
														"nodeType": "YulTypedName",
														"src": "1179:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1189:7:13",
														"nodeType": "YulTypedName",
														"src": "1189:7:13",
														"type": ""
													}
												],
												"src": "1152:126:13"
											},
											{
												"body": {
													"nativeSrc": "1329:51:13",
													"nodeType": "YulBlock",
													"src": "1329:51:13",
													"statements": [
														{
															"nativeSrc": "1339:35:13",
															"nodeType": "YulAssignment",
															"src": "1339:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1368:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1368:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1350:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "1350:17:13"
																},
																"nativeSrc": "1350:24:13",
																"nodeType": "YulFunctionCall",
																"src": "1350:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1339:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1339:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1284:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1311:5:13",
														"nodeType": "YulTypedName",
														"src": "1311:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1321:7:13",
														"nodeType": "YulTypedName",
														"src": "1321:7:13",
														"type": ""
													}
												],
												"src": "1284:96:13"
											},
											{
												"body": {
													"nativeSrc": "1429:79:13",
													"nodeType": "YulBlock",
													"src": "1429:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1486:16:13",
																"nodeType": "YulBlock",
																"src": "1486:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1495:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1495:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1498:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1488:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1488:6:13"
																			},
																			"nativeSrc": "1488:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1488:12:13"
																		},
																		"nativeSrc": "1488:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1488:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1452:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1452:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1477:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1477:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1459:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1459:17:13"
																				},
																				"nativeSrc": "1459:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1449:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1449:2:13"
																		},
																		"nativeSrc": "1449:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1449:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1442:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:13"
																},
																"nativeSrc": "1442:43:13",
																"nodeType": "YulFunctionCall",
																"src": "1442:43:13"
															},
															"nativeSrc": "1439:63:13",
															"nodeType": "YulIf",
															"src": "1439:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1386:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1422:5:13",
														"nodeType": "YulTypedName",
														"src": "1422:5:13",
														"type": ""
													}
												],
												"src": "1386:122:13"
											},
											{
												"body": {
													"nativeSrc": "1566:87:13",
													"nodeType": "YulBlock",
													"src": "1566:87:13",
													"statements": [
														{
															"nativeSrc": "1576:29:13",
															"nodeType": "YulAssignment",
															"src": "1576:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1598:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1598:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1585:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1585:12:13"
																},
																"nativeSrc": "1585:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1585:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1576:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1576:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1641:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1641:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1614:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1614:26:13"
																},
																"nativeSrc": "1614:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1614:33:13"
															},
															"nativeSrc": "1614:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1614:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1514:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1544:6:13",
														"nodeType": "YulTypedName",
														"src": "1544:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1552:3:13",
														"nodeType": "YulTypedName",
														"src": "1552:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"src": "1514:139:13"
											},
											{
												"body": {
													"nativeSrc": "1725:263:13",
													"nodeType": "YulBlock",
													"src": "1725:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1771:83:13",
																"nodeType": "YulBlock",
																"src": "1771:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1773:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1773:77:13"
																			},
																			"nativeSrc": "1773:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1773:79:13"
																		},
																		"nativeSrc": "1773:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1773:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1746:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1746:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1755:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1755:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1742:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1742:3:13"
																		},
																		"nativeSrc": "1742:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1742:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1767:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1767:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1738:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1738:3:13"
																},
																"nativeSrc": "1738:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1738:32:13"
															},
															"nativeSrc": "1735:119:13",
															"nodeType": "YulIf",
															"src": "1735:119:13"
														},
														{
															"nativeSrc": "1864:117:13",
															"nodeType": "YulBlock",
															"src": "1864:117:13",
															"statements": [
																{
																	"nativeSrc": "1879:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1879:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1893:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1893:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1883:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1883:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1908:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1908:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1943:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1943:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1954:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1954:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1939:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1939:3:13"
																				},
																				"nativeSrc": "1939:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1939:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1963:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1963:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1918:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1918:20:13"
																		},
																		"nativeSrc": "1918:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1918:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1908:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1908:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1659:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1695:9:13",
														"nodeType": "YulTypedName",
														"src": "1695:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1706:7:13",
														"nodeType": "YulTypedName",
														"src": "1706:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1718:6:13",
														"nodeType": "YulTypedName",
														"src": "1718:6:13",
														"type": ""
													}
												],
												"src": "1659:329:13"
											},
											{
												"body": {
													"nativeSrc": "2059:53:13",
													"nodeType": "YulBlock",
													"src": "2059:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2076:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2076:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2099:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2099:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2081:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "2081:17:13"
																		},
																		"nativeSrc": "2081:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2081:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2069:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:13"
																},
																"nativeSrc": "2069:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2069:37:13"
															},
															"nativeSrc": "2069:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "2069:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1994:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2047:5:13",
														"nodeType": "YulTypedName",
														"src": "2047:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2054:3:13",
														"nodeType": "YulTypedName",
														"src": "2054:3:13",
														"type": ""
													}
												],
												"src": "1994:118:13"
											},
											{
												"body": {
													"nativeSrc": "2216:124:13",
													"nodeType": "YulBlock",
													"src": "2216:124:13",
													"statements": [
														{
															"nativeSrc": "2226:26:13",
															"nodeType": "YulAssignment",
															"src": "2226:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2238:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2238:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2249:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2249:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2234:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2234:3:13"
																},
																"nativeSrc": "2234:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2234:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2226:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2226:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2306:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2306:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2319:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2319:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2330:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2330:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2315:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2315:3:13"
																		},
																		"nativeSrc": "2315:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2315:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2262:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2262:43:13"
																},
																"nativeSrc": "2262:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2262:71:13"
															},
															"nativeSrc": "2262:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "2262:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2118:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2188:9:13",
														"nodeType": "YulTypedName",
														"src": "2188:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2200:6:13",
														"nodeType": "YulTypedName",
														"src": "2200:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2211:4:13",
														"nodeType": "YulTypedName",
														"src": "2211:4:13",
														"type": ""
													}
												],
												"src": "2118:222:13"
											},
											{
												"body": {
													"nativeSrc": "2389:79:13",
													"nodeType": "YulBlock",
													"src": "2389:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2446:16:13",
																"nodeType": "YulBlock",
																"src": "2446:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2455:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2455:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2458:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2458:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2448:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2448:6:13"
																			},
																			"nativeSrc": "2448:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2448:12:13"
																		},
																		"nativeSrc": "2448:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2448:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2412:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2412:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2437:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2437:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2419:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2419:17:13"
																				},
																				"nativeSrc": "2419:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2419:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2409:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2409:2:13"
																		},
																		"nativeSrc": "2409:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:13"
																},
																"nativeSrc": "2402:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2402:43:13"
															},
															"nativeSrc": "2399:63:13",
															"nodeType": "YulIf",
															"src": "2399:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2346:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2382:5:13",
														"nodeType": "YulTypedName",
														"src": "2382:5:13",
														"type": ""
													}
												],
												"src": "2346:122:13"
											},
											{
												"body": {
													"nativeSrc": "2526:87:13",
													"nodeType": "YulBlock",
													"src": "2526:87:13",
													"statements": [
														{
															"nativeSrc": "2536:29:13",
															"nodeType": "YulAssignment",
															"src": "2536:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2558:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2558:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2545:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2545:12:13"
																},
																"nativeSrc": "2545:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2545:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2536:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2536:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2601:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2601:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2574:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "2574:26:13"
																},
																"nativeSrc": "2574:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2574:33:13"
															},
															"nativeSrc": "2574:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2574:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2474:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2504:6:13",
														"nodeType": "YulTypedName",
														"src": "2504:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2512:3:13",
														"nodeType": "YulTypedName",
														"src": "2512:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2520:5:13",
														"nodeType": "YulTypedName",
														"src": "2520:5:13",
														"type": ""
													}
												],
												"src": "2474:139:13"
											},
											{
												"body": {
													"nativeSrc": "2702:391:13",
													"nodeType": "YulBlock",
													"src": "2702:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2748:83:13",
																"nodeType": "YulBlock",
																"src": "2748:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2750:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2750:77:13"
																			},
																			"nativeSrc": "2750:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2750:79:13"
																		},
																		"nativeSrc": "2750:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2750:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2723:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2723:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2732:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2732:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2719:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:13"
																		},
																		"nativeSrc": "2719:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2719:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2744:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2744:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2715:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2715:3:13"
																},
																"nativeSrc": "2715:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2715:32:13"
															},
															"nativeSrc": "2712:119:13",
															"nodeType": "YulIf",
															"src": "2712:119:13"
														},
														{
															"nativeSrc": "2841:117:13",
															"nodeType": "YulBlock",
															"src": "2841:117:13",
															"statements": [
																{
																	"nativeSrc": "2856:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2856:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2870:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2870:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2860:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2860:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2885:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2885:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2920:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2920:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2931:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2931:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2916:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2916:3:13"
																				},
																				"nativeSrc": "2916:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2916:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2940:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2940:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2895:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2895:20:13"
																		},
																		"nativeSrc": "2895:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2895:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2885:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2885:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2968:118:13",
															"nodeType": "YulBlock",
															"src": "2968:118:13",
															"statements": [
																{
																	"nativeSrc": "2983:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2983:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2997:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2997:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2987:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2987:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3013:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3013:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3048:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3048:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3059:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3059:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3044:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3044:3:13"
																				},
																				"nativeSrc": "3044:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3044:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3068:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3068:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3023:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3023:20:13"
																		},
																		"nativeSrc": "3023:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3023:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3013:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3013:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2619:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2664:9:13",
														"nodeType": "YulTypedName",
														"src": "2664:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2675:7:13",
														"nodeType": "YulTypedName",
														"src": "2675:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2687:6:13",
														"nodeType": "YulTypedName",
														"src": "2687:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2695:6:13",
														"nodeType": "YulTypedName",
														"src": "2695:6:13",
														"type": ""
													}
												],
												"src": "2619:474:13"
											},
											{
												"body": {
													"nativeSrc": "3182:391:13",
													"nodeType": "YulBlock",
													"src": "3182:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3228:83:13",
																"nodeType": "YulBlock",
																"src": "3228:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3230:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3230:77:13"
																			},
																			"nativeSrc": "3230:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3230:79:13"
																		},
																		"nativeSrc": "3230:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3230:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3203:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3212:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3212:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3199:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3199:3:13"
																		},
																		"nativeSrc": "3199:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3199:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3224:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3224:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3195:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3195:3:13"
																},
																"nativeSrc": "3195:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3195:32:13"
															},
															"nativeSrc": "3192:119:13",
															"nodeType": "YulIf",
															"src": "3192:119:13"
														},
														{
															"nativeSrc": "3321:117:13",
															"nodeType": "YulBlock",
															"src": "3321:117:13",
															"statements": [
																{
																	"nativeSrc": "3336:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3336:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3350:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3350:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3340:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3340:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3365:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3365:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3400:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3400:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3411:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3411:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3396:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3396:3:13"
																				},
																				"nativeSrc": "3396:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3396:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3420:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3420:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3375:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3375:20:13"
																		},
																		"nativeSrc": "3375:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3375:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3365:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3365:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3448:118:13",
															"nodeType": "YulBlock",
															"src": "3448:118:13",
															"statements": [
																{
																	"nativeSrc": "3463:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3463:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3477:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3477:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3467:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3467:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3493:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3493:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3528:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3528:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3539:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3539:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3524:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3524:3:13"
																				},
																				"nativeSrc": "3524:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3524:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3548:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3548:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3503:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3503:20:13"
																		},
																		"nativeSrc": "3503:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3503:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3493:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3493:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3099:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3144:9:13",
														"nodeType": "YulTypedName",
														"src": "3144:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3155:7:13",
														"nodeType": "YulTypedName",
														"src": "3155:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3167:6:13",
														"nodeType": "YulTypedName",
														"src": "3167:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3175:6:13",
														"nodeType": "YulTypedName",
														"src": "3175:6:13",
														"type": ""
													}
												],
												"src": "3099:474:13"
											},
											{
												"body": {
													"nativeSrc": "3611:28:13",
													"nodeType": "YulBlock",
													"src": "3611:28:13",
													"statements": [
														{
															"nativeSrc": "3621:12:13",
															"nodeType": "YulAssignment",
															"src": "3621:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "3628:5:13",
																"nodeType": "YulIdentifier",
																"src": "3628:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3621:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3621:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3579:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3597:5:13",
														"nodeType": "YulTypedName",
														"src": "3597:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3607:3:13",
														"nodeType": "YulTypedName",
														"src": "3607:3:13",
														"type": ""
													}
												],
												"src": "3579:60:13"
											},
											{
												"body": {
													"nativeSrc": "3705:82:13",
													"nodeType": "YulBlock",
													"src": "3705:82:13",
													"statements": [
														{
															"nativeSrc": "3715:66:13",
															"nodeType": "YulAssignment",
															"src": "3715:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3773:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3773:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3755:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3755:17:13"
																				},
																				"nativeSrc": "3755:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3755:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3746:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "3746:8:13"
																		},
																		"nativeSrc": "3746:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3746:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3728:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3728:17:13"
																},
																"nativeSrc": "3728:53:13",
																"nodeType": "YulFunctionCall",
																"src": "3728:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3715:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3715:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3645:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3685:5:13",
														"nodeType": "YulTypedName",
														"src": "3685:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3695:9:13",
														"nodeType": "YulTypedName",
														"src": "3695:9:13",
														"type": ""
													}
												],
												"src": "3645:142:13"
											},
											{
												"body": {
													"nativeSrc": "3853:66:13",
													"nodeType": "YulBlock",
													"src": "3853:66:13",
													"statements": [
														{
															"nativeSrc": "3863:50:13",
															"nodeType": "YulAssignment",
															"src": "3863:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3907:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3907:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3876:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3876:30:13"
																},
																"nativeSrc": "3876:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3876:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3863:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3863:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3793:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3833:5:13",
														"nodeType": "YulTypedName",
														"src": "3833:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3843:9:13",
														"nodeType": "YulTypedName",
														"src": "3843:9:13",
														"type": ""
													}
												],
												"src": "3793:126:13"
											},
											{
												"body": {
													"nativeSrc": "4001:66:13",
													"nodeType": "YulBlock",
													"src": "4001:66:13",
													"statements": [
														{
															"nativeSrc": "4011:50:13",
															"nodeType": "YulAssignment",
															"src": "4011:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4055:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4055:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4024:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "4024:30:13"
																},
																"nativeSrc": "4024:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4024:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4011:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4011:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IScorer_$1387_to_t_address",
												"nativeSrc": "3925:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3981:5:13",
														"nodeType": "YulTypedName",
														"src": "3981:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3991:9:13",
														"nodeType": "YulTypedName",
														"src": "3991:9:13",
														"type": ""
													}
												],
												"src": "3925:142:13"
											},
											{
												"body": {
													"nativeSrc": "4154:82:13",
													"nodeType": "YulBlock",
													"src": "4154:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4171:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4171:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4223:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4223:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IScorer_$1387_to_t_address",
																			"nativeSrc": "4176:46:13",
																			"nodeType": "YulIdentifier",
																			"src": "4176:46:13"
																		},
																		"nativeSrc": "4176:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4176:53:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4164:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4164:6:13"
																},
																"nativeSrc": "4164:66:13",
																"nodeType": "YulFunctionCall",
																"src": "4164:66:13"
															},
															"nativeSrc": "4164:66:13",
															"nodeType": "YulExpressionStatement",
															"src": "4164:66:13"
														}
													]
												},
												"name": "abi_encode_t_contract$_IScorer_$1387_to_t_address_fromStack",
												"nativeSrc": "4073:163:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4142:5:13",
														"nodeType": "YulTypedName",
														"src": "4142:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4149:3:13",
														"nodeType": "YulTypedName",
														"src": "4149:3:13",
														"type": ""
													}
												],
												"src": "4073:163:13"
											},
											{
												"body": {
													"nativeSrc": "4356:140:13",
													"nodeType": "YulBlock",
													"src": "4356:140:13",
													"statements": [
														{
															"nativeSrc": "4366:26:13",
															"nodeType": "YulAssignment",
															"src": "4366:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4378:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4378:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4389:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4389:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4374:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4374:3:13"
																},
																"nativeSrc": "4374:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4374:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4366:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4366:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4462:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4462:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4475:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4475:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4486:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4486:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4471:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4471:3:13"
																		},
																		"nativeSrc": "4471:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4471:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IScorer_$1387_to_t_address_fromStack",
																	"nativeSrc": "4402:59:13",
																	"nodeType": "YulIdentifier",
																	"src": "4402:59:13"
																},
																"nativeSrc": "4402:87:13",
																"nodeType": "YulFunctionCall",
																"src": "4402:87:13"
															},
															"nativeSrc": "4402:87:13",
															"nodeType": "YulExpressionStatement",
															"src": "4402:87:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IScorer_$1387__to_t_address__fromStack_reversed",
												"nativeSrc": "4242:254:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4328:9:13",
														"nodeType": "YulTypedName",
														"src": "4328:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4340:6:13",
														"nodeType": "YulTypedName",
														"src": "4340:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4351:4:13",
														"nodeType": "YulTypedName",
														"src": "4351:4:13",
														"type": ""
													}
												],
												"src": "4242:254:13"
											},
											{
												"body": {
													"nativeSrc": "4561:40:13",
													"nodeType": "YulBlock",
													"src": "4561:40:13",
													"statements": [
														{
															"nativeSrc": "4572:22:13",
															"nodeType": "YulAssignment",
															"src": "4572:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4588:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4588:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4582:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4582:5:13"
																},
																"nativeSrc": "4582:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4582:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4572:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4572:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4502:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4544:5:13",
														"nodeType": "YulTypedName",
														"src": "4544:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4554:6:13",
														"nodeType": "YulTypedName",
														"src": "4554:6:13",
														"type": ""
													}
												],
												"src": "4502:99:13"
											},
											{
												"body": {
													"nativeSrc": "4703:73:13",
													"nodeType": "YulBlock",
													"src": "4703:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4720:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4720:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4725:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4725:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4713:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4713:6:13"
																},
																"nativeSrc": "4713:19:13",
																"nodeType": "YulFunctionCall",
																"src": "4713:19:13"
															},
															"nativeSrc": "4713:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "4713:19:13"
														},
														{
															"nativeSrc": "4741:29:13",
															"nodeType": "YulAssignment",
															"src": "4741:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4760:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4760:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4765:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4765:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4756:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4756:3:13"
																},
																"nativeSrc": "4756:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4756:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4741:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "4741:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4607:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4675:3:13",
														"nodeType": "YulTypedName",
														"src": "4675:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4680:6:13",
														"nodeType": "YulTypedName",
														"src": "4680:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4691:11:13",
														"nodeType": "YulTypedName",
														"src": "4691:11:13",
														"type": ""
													}
												],
												"src": "4607:169:13"
											},
											{
												"body": {
													"nativeSrc": "4844:77:13",
													"nodeType": "YulBlock",
													"src": "4844:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4861:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4861:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4866:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4866:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4871:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4871:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "4855:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4855:5:13"
																},
																"nativeSrc": "4855:23:13",
																"nodeType": "YulFunctionCall",
																"src": "4855:23:13"
															},
															"nativeSrc": "4855:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "4855:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4898:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4898:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4903:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4903:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4894:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:13"
																		},
																		"nativeSrc": "4894:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4894:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4912:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4912:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4887:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4887:6:13"
																},
																"nativeSrc": "4887:27:13",
																"nodeType": "YulFunctionCall",
																"src": "4887:27:13"
															},
															"nativeSrc": "4887:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "4887:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "4782:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4826:3:13",
														"nodeType": "YulTypedName",
														"src": "4826:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4831:3:13",
														"nodeType": "YulTypedName",
														"src": "4831:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4836:6:13",
														"nodeType": "YulTypedName",
														"src": "4836:6:13",
														"type": ""
													}
												],
												"src": "4782:139:13"
											},
											{
												"body": {
													"nativeSrc": "4975:54:13",
													"nodeType": "YulBlock",
													"src": "4975:54:13",
													"statements": [
														{
															"nativeSrc": "4985:38:13",
															"nodeType": "YulAssignment",
															"src": "4985:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5003:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5003:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5010:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5010:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4999:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:13"
																		},
																		"nativeSrc": "4999:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4999:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5019:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5019:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5015:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5015:3:13"
																		},
																		"nativeSrc": "5015:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4995:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4995:3:13"
																},
																"nativeSrc": "4995:28:13",
																"nodeType": "YulFunctionCall",
																"src": "4995:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4985:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4985:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4927:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4958:5:13",
														"nodeType": "YulTypedName",
														"src": "4958:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4968:6:13",
														"nodeType": "YulTypedName",
														"src": "4968:6:13",
														"type": ""
													}
												],
												"src": "4927:102:13"
											},
											{
												"body": {
													"nativeSrc": "5127:285:13",
													"nodeType": "YulBlock",
													"src": "5127:285:13",
													"statements": [
														{
															"nativeSrc": "5137:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5137:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5184:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5184:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5151:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "5151:32:13"
																},
																"nativeSrc": "5151:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5151:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5141:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5141:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5199:78:13",
															"nodeType": "YulAssignment",
															"src": "5199:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5265:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5265:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5270:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5270:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5206:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "5206:58:13"
																},
																"nativeSrc": "5206:71:13",
																"nodeType": "YulFunctionCall",
																"src": "5206:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5199:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5199:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5325:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5325:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5332:4:13",
																				"nodeType": "YulLiteral",
																				"src": "5332:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5321:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5321:3:13"
																		},
																		"nativeSrc": "5321:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5321:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5339:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5339:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5344:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5344:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5286:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "5286:34:13"
																},
																"nativeSrc": "5286:65:13",
																"nodeType": "YulFunctionCall",
																"src": "5286:65:13"
															},
															"nativeSrc": "5286:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "5286:65:13"
														},
														{
															"nativeSrc": "5360:46:13",
															"nodeType": "YulAssignment",
															"src": "5360:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5371:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5371:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5398:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5398:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5376:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "5376:21:13"
																		},
																		"nativeSrc": "5376:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5376:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5367:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:13"
																},
																"nativeSrc": "5367:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5367:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5360:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5360:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5035:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5108:5:13",
														"nodeType": "YulTypedName",
														"src": "5108:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5115:3:13",
														"nodeType": "YulTypedName",
														"src": "5115:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5123:3:13",
														"nodeType": "YulTypedName",
														"src": "5123:3:13",
														"type": ""
													}
												],
												"src": "5035:377:13"
											},
											{
												"body": {
													"nativeSrc": "5592:359:13",
													"nodeType": "YulBlock",
													"src": "5592:359:13",
													"statements": [
														{
															"nativeSrc": "5602:26:13",
															"nodeType": "YulAssignment",
															"src": "5602:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5614:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5614:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5625:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5625:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5610:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5610:3:13"
																},
																"nativeSrc": "5610:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5610:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5602:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5602:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5682:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5682:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5695:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5695:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5706:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5706:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5691:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5691:3:13"
																		},
																		"nativeSrc": "5691:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5691:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5638:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5638:43:13"
																},
																"nativeSrc": "5638:71:13",
																"nodeType": "YulFunctionCall",
																"src": "5638:71:13"
															},
															"nativeSrc": "5638:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "5638:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5763:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5763:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5776:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5776:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5787:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5787:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5772:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5772:3:13"
																		},
																		"nativeSrc": "5772:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5772:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5719:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5719:43:13"
																},
																"nativeSrc": "5719:72:13",
																"nodeType": "YulFunctionCall",
																"src": "5719:72:13"
															},
															"nativeSrc": "5719:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "5719:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5812:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5812:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5823:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5823:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5808:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5808:3:13"
																		},
																		"nativeSrc": "5808:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5808:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5832:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5832:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5838:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5838:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5828:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5828:3:13"
																		},
																		"nativeSrc": "5828:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5828:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5801:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5801:6:13"
																},
																"nativeSrc": "5801:48:13",
																"nodeType": "YulFunctionCall",
																"src": "5801:48:13"
															},
															"nativeSrc": "5801:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "5801:48:13"
														},
														{
															"nativeSrc": "5858:86:13",
															"nodeType": "YulAssignment",
															"src": "5858:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5930:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5930:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5939:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5939:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5866:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "5866:63:13"
																},
																"nativeSrc": "5866:78:13",
																"nodeType": "YulFunctionCall",
																"src": "5866:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5858:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5858:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5418:533:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5548:9:13",
														"nodeType": "YulTypedName",
														"src": "5548:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5560:6:13",
														"nodeType": "YulTypedName",
														"src": "5560:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5568:6:13",
														"nodeType": "YulTypedName",
														"src": "5568:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5576:6:13",
														"nodeType": "YulTypedName",
														"src": "5576:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5587:4:13",
														"nodeType": "YulTypedName",
														"src": "5587:4:13",
														"type": ""
													}
												],
												"src": "5418:533:13"
											},
											{
												"body": {
													"nativeSrc": "6057:519:13",
													"nodeType": "YulBlock",
													"src": "6057:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6103:83:13",
																"nodeType": "YulBlock",
																"src": "6103:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6105:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6105:77:13"
																			},
																			"nativeSrc": "6105:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6105:79:13"
																		},
																		"nativeSrc": "6105:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6105:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6078:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6078:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6087:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6087:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6074:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6074:3:13"
																		},
																		"nativeSrc": "6074:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6074:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6099:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6099:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6070:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6070:3:13"
																},
																"nativeSrc": "6070:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6070:32:13"
															},
															"nativeSrc": "6067:119:13",
															"nodeType": "YulIf",
															"src": "6067:119:13"
														},
														{
															"nativeSrc": "6196:117:13",
															"nodeType": "YulBlock",
															"src": "6196:117:13",
															"statements": [
																{
																	"nativeSrc": "6211:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6211:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6225:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6225:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6215:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6215:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6240:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6240:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6275:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6275:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6286:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6286:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6271:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6271:3:13"
																				},
																				"nativeSrc": "6271:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6271:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6295:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6295:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6250:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6250:20:13"
																		},
																		"nativeSrc": "6250:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6250:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6240:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6240:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6323:118:13",
															"nodeType": "YulBlock",
															"src": "6323:118:13",
															"statements": [
																{
																	"nativeSrc": "6338:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6338:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6352:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6352:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6342:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6342:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6368:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6368:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6403:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6403:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6414:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6414:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6399:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6399:3:13"
																				},
																				"nativeSrc": "6399:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6399:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6423:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6423:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6378:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6378:20:13"
																		},
																		"nativeSrc": "6378:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6378:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6368:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6368:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6451:118:13",
															"nodeType": "YulBlock",
															"src": "6451:118:13",
															"statements": [
																{
																	"nativeSrc": "6466:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6466:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6480:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6480:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6470:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6470:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6496:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6496:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6531:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6531:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6542:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6542:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6527:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6527:3:13"
																				},
																				"nativeSrc": "6527:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6527:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6551:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6551:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6506:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6506:20:13"
																		},
																		"nativeSrc": "6506:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6506:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6496:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6496:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5957:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6011:9:13",
														"nodeType": "YulTypedName",
														"src": "6011:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6022:7:13",
														"nodeType": "YulTypedName",
														"src": "6022:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6034:6:13",
														"nodeType": "YulTypedName",
														"src": "6034:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6042:6:13",
														"nodeType": "YulTypedName",
														"src": "6042:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6050:6:13",
														"nodeType": "YulTypedName",
														"src": "6050:6:13",
														"type": ""
													}
												],
												"src": "5957:619:13"
											},
											{
												"body": {
													"nativeSrc": "6671:28:13",
													"nodeType": "YulBlock",
													"src": "6671:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6688:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6688:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6691:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6691:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6681:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6681:6:13"
																},
																"nativeSrc": "6681:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6681:12:13"
															},
															"nativeSrc": "6681:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "6681:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6582:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6582:117:13"
											},
											{
												"body": {
													"nativeSrc": "6794:28:13",
													"nodeType": "YulBlock",
													"src": "6794:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6811:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6811:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6814:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6814:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6804:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6804:6:13"
																},
																"nativeSrc": "6804:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6804:12:13"
															},
															"nativeSrc": "6804:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "6804:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6705:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6705:117:13"
											},
											{
												"body": {
													"nativeSrc": "6856:152:13",
													"nodeType": "YulBlock",
													"src": "6856:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6873:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6873:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6876:77:13",
																		"nodeType": "YulLiteral",
																		"src": "6876:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6866:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6866:6:13"
																},
																"nativeSrc": "6866:88:13",
																"nodeType": "YulFunctionCall",
																"src": "6866:88:13"
															},
															"nativeSrc": "6866:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "6866:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6970:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6970:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6973:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6973:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6963:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6963:6:13"
																},
																"nativeSrc": "6963:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6963:15:13"
															},
															"nativeSrc": "6963:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "6963:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6994:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6994:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6997:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6997:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6987:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6987:6:13"
																},
																"nativeSrc": "6987:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6987:15:13"
															},
															"nativeSrc": "6987:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "6987:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6828:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6828:180:13"
											},
											{
												"body": {
													"nativeSrc": "7057:238:13",
													"nodeType": "YulBlock",
													"src": "7057:238:13",
													"statements": [
														{
															"nativeSrc": "7067:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7067:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7089:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7089:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7119:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7119:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7097:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "7097:21:13"
																		},
																		"nativeSrc": "7097:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7097:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7085:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7085:3:13"
																},
																"nativeSrc": "7085:40:13",
																"nodeType": "YulFunctionCall",
																"src": "7085:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7071:10:13",
																	"nodeType": "YulTypedName",
																	"src": "7071:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7236:22:13",
																"nodeType": "YulBlock",
																"src": "7236:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7238:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7238:16:13"
																			},
																			"nativeSrc": "7238:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7238:18:13"
																		},
																		"nativeSrc": "7238:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7238:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7179:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "7179:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7191:18:13",
																				"nodeType": "YulLiteral",
																				"src": "7191:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7176:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7176:2:13"
																		},
																		"nativeSrc": "7176:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7176:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7215:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "7215:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7227:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7227:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7212:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7212:2:13"
																		},
																		"nativeSrc": "7212:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7212:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7173:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7173:2:13"
																},
																"nativeSrc": "7173:62:13",
																"nodeType": "YulFunctionCall",
																"src": "7173:62:13"
															},
															"nativeSrc": "7170:88:13",
															"nodeType": "YulIf",
															"src": "7170:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7274:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7274:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7278:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "7278:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7267:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7267:6:13"
																},
																"nativeSrc": "7267:22:13",
																"nodeType": "YulFunctionCall",
																"src": "7267:22:13"
															},
															"nativeSrc": "7267:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "7267:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7014:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7043:6:13",
														"nodeType": "YulTypedName",
														"src": "7043:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7051:4:13",
														"nodeType": "YulTypedName",
														"src": "7051:4:13",
														"type": ""
													}
												],
												"src": "7014:281:13"
											},
											{
												"body": {
													"nativeSrc": "7342:88:13",
													"nodeType": "YulBlock",
													"src": "7342:88:13",
													"statements": [
														{
															"nativeSrc": "7352:30:13",
															"nodeType": "YulAssignment",
															"src": "7352:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7362:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "7362:18:13"
																},
																"nativeSrc": "7362:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7362:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7352:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7352:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7411:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7411:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7419:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7419:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7391:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "7391:19:13"
																},
																"nativeSrc": "7391:33:13",
																"nodeType": "YulFunctionCall",
																"src": "7391:33:13"
															},
															"nativeSrc": "7391:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "7391:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7301:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7326:4:13",
														"nodeType": "YulTypedName",
														"src": "7326:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7335:6:13",
														"nodeType": "YulTypedName",
														"src": "7335:6:13",
														"type": ""
													}
												],
												"src": "7301:129:13"
											},
											{
												"body": {
													"nativeSrc": "7503:241:13",
													"nodeType": "YulBlock",
													"src": "7503:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7608:22:13",
																"nodeType": "YulBlock",
																"src": "7608:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7610:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7610:16:13"
																			},
																			"nativeSrc": "7610:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7610:18:13"
																		},
																		"nativeSrc": "7610:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7610:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7580:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7580:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7588:18:13",
																		"nodeType": "YulLiteral",
																		"src": "7588:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7577:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7577:2:13"
																},
																"nativeSrc": "7577:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7577:30:13"
															},
															"nativeSrc": "7574:56:13",
															"nodeType": "YulIf",
															"src": "7574:56:13"
														},
														{
															"nativeSrc": "7640:37:13",
															"nodeType": "YulAssignment",
															"src": "7640:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7670:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7670:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7648:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "7648:21:13"
																},
																"nativeSrc": "7648:29:13",
																"nodeType": "YulFunctionCall",
																"src": "7648:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7640:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7640:4:13"
																}
															]
														},
														{
															"nativeSrc": "7714:23:13",
															"nodeType": "YulAssignment",
															"src": "7714:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7726:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7726:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7732:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7732:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7722:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7722:3:13"
																},
																"nativeSrc": "7722:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7722:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7714:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7714:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "7436:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7487:6:13",
														"nodeType": "YulTypedName",
														"src": "7487:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7498:4:13",
														"nodeType": "YulTypedName",
														"src": "7498:4:13",
														"type": ""
													}
												],
												"src": "7436:308:13"
											},
											{
												"body": {
													"nativeSrc": "7814:84:13",
													"nodeType": "YulBlock",
													"src": "7814:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7838:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7838:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7843:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7843:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7848:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7848:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7825:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7825:12:13"
																},
																"nativeSrc": "7825:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7825:30:13"
															},
															"nativeSrc": "7825:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "7825:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7875:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7875:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7880:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7880:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7871:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7871:3:13"
																		},
																		"nativeSrc": "7871:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7871:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7889:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7864:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7864:6:13"
																},
																"nativeSrc": "7864:27:13",
																"nodeType": "YulFunctionCall",
																"src": "7864:27:13"
															},
															"nativeSrc": "7864:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "7864:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7750:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7796:3:13",
														"nodeType": "YulTypedName",
														"src": "7796:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7801:3:13",
														"nodeType": "YulTypedName",
														"src": "7801:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7806:6:13",
														"nodeType": "YulTypedName",
														"src": "7806:6:13",
														"type": ""
													}
												],
												"src": "7750:148:13"
											},
											{
												"body": {
													"nativeSrc": "7988:341:13",
													"nodeType": "YulBlock",
													"src": "7988:341:13",
													"statements": [
														{
															"nativeSrc": "7998:75:13",
															"nodeType": "YulAssignment",
															"src": "7998:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8065:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8065:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "8023:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "8023:41:13"
																		},
																		"nativeSrc": "8023:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8023:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8007:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "8007:15:13"
																},
																"nativeSrc": "8007:66:13",
																"nodeType": "YulFunctionCall",
																"src": "8007:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7998:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7998:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8089:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8089:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8096:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8096:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8082:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8082:6:13"
																},
																"nativeSrc": "8082:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8082:21:13"
															},
															"nativeSrc": "8082:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "8082:21:13"
														},
														{
															"nativeSrc": "8112:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8112:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8127:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8127:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8134:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8134:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8123:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8123:3:13"
																},
																"nativeSrc": "8123:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8123:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8116:3:13",
																	"nodeType": "YulTypedName",
																	"src": "8116:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8177:83:13",
																"nodeType": "YulBlock",
																"src": "8177:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8179:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8179:77:13"
																			},
																			"nativeSrc": "8179:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8179:79:13"
																		},
																		"nativeSrc": "8179:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8179:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8158:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8158:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8163:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8163:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8154:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8154:3:13"
																		},
																		"nativeSrc": "8154:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8154:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8172:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8172:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8151:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8151:2:13"
																},
																"nativeSrc": "8151:25:13",
																"nodeType": "YulFunctionCall",
																"src": "8151:25:13"
															},
															"nativeSrc": "8148:112:13",
															"nodeType": "YulIf",
															"src": "8148:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8306:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8306:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8311:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8311:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8316:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8316:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8269:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "8269:36:13"
																},
																"nativeSrc": "8269:54:13",
																"nodeType": "YulFunctionCall",
																"src": "8269:54:13"
															},
															"nativeSrc": "8269:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "8269:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "7904:425:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7961:3:13",
														"nodeType": "YulTypedName",
														"src": "7961:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7966:6:13",
														"nodeType": "YulTypedName",
														"src": "7966:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7974:3:13",
														"nodeType": "YulTypedName",
														"src": "7974:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7982:5:13",
														"nodeType": "YulTypedName",
														"src": "7982:5:13",
														"type": ""
													}
												],
												"src": "7904:425:13"
											},
											{
												"body": {
													"nativeSrc": "8411:278:13",
													"nodeType": "YulBlock",
													"src": "8411:278:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8460:83:13",
																"nodeType": "YulBlock",
																"src": "8460:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8462:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8462:77:13"
																			},
																			"nativeSrc": "8462:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8462:79:13"
																		},
																		"nativeSrc": "8462:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8462:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8439:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8439:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8447:4:13",
																						"nodeType": "YulLiteral",
																						"src": "8447:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8435:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8435:3:13"
																				},
																				"nativeSrc": "8435:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8435:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8454:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8454:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8431:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8431:3:13"
																		},
																		"nativeSrc": "8431:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8431:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8424:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8424:6:13"
																},
																"nativeSrc": "8424:35:13",
																"nodeType": "YulFunctionCall",
																"src": "8424:35:13"
															},
															"nativeSrc": "8421:122:13",
															"nodeType": "YulIf",
															"src": "8421:122:13"
														},
														{
															"nativeSrc": "8552:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8552:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8579:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8579:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8566:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8566:12:13"
																},
																"nativeSrc": "8566:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8566:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8556:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8556:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8595:88:13",
															"nodeType": "YulAssignment",
															"src": "8595:88:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8656:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8656:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8664:4:13",
																				"nodeType": "YulLiteral",
																				"src": "8664:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8652:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8652:3:13"
																		},
																		"nativeSrc": "8652:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8652:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8671:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8671:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8679:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8679:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "8604:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "8604:47:13"
																},
																"nativeSrc": "8604:79:13",
																"nodeType": "YulFunctionCall",
																"src": "8604:79:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8595:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8595:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "8349:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8389:6:13",
														"nodeType": "YulTypedName",
														"src": "8389:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8397:3:13",
														"nodeType": "YulTypedName",
														"src": "8397:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8405:5:13",
														"nodeType": "YulTypedName",
														"src": "8405:5:13",
														"type": ""
													}
												],
												"src": "8349:340:13"
											},
											{
												"body": {
													"nativeSrc": "8805:689:13",
													"nodeType": "YulBlock",
													"src": "8805:689:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8851:83:13",
																"nodeType": "YulBlock",
																"src": "8851:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8853:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8853:77:13"
																			},
																			"nativeSrc": "8853:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8853:79:13"
																		},
																		"nativeSrc": "8853:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8853:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8826:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8826:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8835:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8835:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8822:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8822:3:13"
																		},
																		"nativeSrc": "8822:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8822:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8847:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8847:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8818:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8818:3:13"
																},
																"nativeSrc": "8818:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8818:32:13"
															},
															"nativeSrc": "8815:119:13",
															"nodeType": "YulIf",
															"src": "8815:119:13"
														},
														{
															"nativeSrc": "8944:117:13",
															"nodeType": "YulBlock",
															"src": "8944:117:13",
															"statements": [
																{
																	"nativeSrc": "8959:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8959:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8973:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8973:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8963:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8963:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8988:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8988:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9023:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9023:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9034:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9034:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9019:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9019:3:13"
																				},
																				"nativeSrc": "9019:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9019:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9043:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9043:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8998:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8998:20:13"
																		},
																		"nativeSrc": "8998:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8998:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8988:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8988:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9071:118:13",
															"nodeType": "YulBlock",
															"src": "9071:118:13",
															"statements": [
																{
																	"nativeSrc": "9086:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9086:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9100:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9100:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9090:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9090:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9116:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9116:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9151:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9151:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9162:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9147:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9147:3:13"
																				},
																				"nativeSrc": "9147:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9171:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9126:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9126:20:13"
																		},
																		"nativeSrc": "9126:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9116:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9116:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9199:288:13",
															"nodeType": "YulBlock",
															"src": "9199:288:13",
															"statements": [
																{
																	"nativeSrc": "9214:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9214:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9245:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9245:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9256:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9256:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9241:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9241:3:13"
																				},
																				"nativeSrc": "9241:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9241:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9228:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "9228:12:13"
																		},
																		"nativeSrc": "9228:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9228:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9218:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9218:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9307:83:13",
																		"nodeType": "YulBlock",
																		"src": "9307:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9309:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "9309:77:13"
																					},
																					"nativeSrc": "9309:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9309:79:13"
																				},
																				"nativeSrc": "9309:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "9309:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9279:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9279:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9287:18:13",
																				"nodeType": "YulLiteral",
																				"src": "9287:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9276:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9276:2:13"
																		},
																		"nativeSrc": "9276:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9276:30:13"
																	},
																	"nativeSrc": "9273:117:13",
																	"nodeType": "YulIf",
																	"src": "9273:117:13"
																},
																{
																	"nativeSrc": "9404:73:13",
																	"nodeType": "YulAssignment",
																	"src": "9404:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9449:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9449:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9460:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9460:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9445:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9445:3:13"
																				},
																				"nativeSrc": "9445:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9445:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9469:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9469:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "9414:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "9414:30:13"
																		},
																		"nativeSrc": "9414:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9414:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9404:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9404:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr",
												"nativeSrc": "8695:799:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8759:9:13",
														"nodeType": "YulTypedName",
														"src": "8759:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8770:7:13",
														"nodeType": "YulTypedName",
														"src": "8770:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8782:6:13",
														"nodeType": "YulTypedName",
														"src": "8782:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8790:6:13",
														"nodeType": "YulTypedName",
														"src": "8790:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8798:6:13",
														"nodeType": "YulTypedName",
														"src": "8798:6:13",
														"type": ""
													}
												],
												"src": "8695:799:13"
											},
											{
												"body": {
													"nativeSrc": "9606:69:13",
													"nodeType": "YulBlock",
													"src": "9606:69:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9628:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9628:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9636:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9636:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9624:3:13"
																		},
																		"nativeSrc": "9624:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9624:14:13"
																	},
																	{
																		"hexValue": "4e6f742077697468696e20726f756e64206475726174696f6e",
																		"kind": "string",
																		"nativeSrc": "9640:27:13",
																		"nodeType": "YulLiteral",
																		"src": "9640:27:13",
																		"type": "",
																		"value": "Not within round duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9617:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9617:6:13"
																},
																"nativeSrc": "9617:51:13",
																"nodeType": "YulFunctionCall",
																"src": "9617:51:13"
															},
															"nativeSrc": "9617:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "9617:51:13"
														}
													]
												},
												"name": "store_literal_in_memory_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363",
												"nativeSrc": "9500:175:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9598:6:13",
														"nodeType": "YulTypedName",
														"src": "9598:6:13",
														"type": ""
													}
												],
												"src": "9500:175:13"
											},
											{
												"body": {
													"nativeSrc": "9827:220:13",
													"nodeType": "YulBlock",
													"src": "9827:220:13",
													"statements": [
														{
															"nativeSrc": "9837:74:13",
															"nodeType": "YulAssignment",
															"src": "9837:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9903:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9903:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9908:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9908:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9844:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "9844:58:13"
																},
																"nativeSrc": "9844:67:13",
																"nodeType": "YulFunctionCall",
																"src": "9844:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9837:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9837:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10009:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10009:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363",
																	"nativeSrc": "9920:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "9920:88:13"
																},
																"nativeSrc": "9920:93:13",
																"nodeType": "YulFunctionCall",
																"src": "9920:93:13"
															},
															"nativeSrc": "9920:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "9920:93:13"
														},
														{
															"nativeSrc": "10022:19:13",
															"nodeType": "YulAssignment",
															"src": "10022:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10033:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10033:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10038:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10038:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10029:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10029:3:13"
																},
																"nativeSrc": "10029:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10029:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10022:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10022:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9681:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9815:3:13",
														"nodeType": "YulTypedName",
														"src": "9815:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9823:3:13",
														"nodeType": "YulTypedName",
														"src": "9823:3:13",
														"type": ""
													}
												],
												"src": "9681:366:13"
											},
											{
												"body": {
													"nativeSrc": "10224:248:13",
													"nodeType": "YulBlock",
													"src": "10224:248:13",
													"statements": [
														{
															"nativeSrc": "10234:26:13",
															"nodeType": "YulAssignment",
															"src": "10234:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10246:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10246:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10257:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10257:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10242:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10242:3:13"
																},
																"nativeSrc": "10242:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10242:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10234:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10234:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10281:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10281:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10292:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10292:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10277:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10277:3:13"
																		},
																		"nativeSrc": "10277:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10277:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10300:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10300:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10306:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10306:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10296:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10296:3:13"
																		},
																		"nativeSrc": "10296:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10296:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10270:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:13"
																},
																"nativeSrc": "10270:47:13",
																"nodeType": "YulFunctionCall",
																"src": "10270:47:13"
															},
															"nativeSrc": "10270:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "10270:47:13"
														},
														{
															"nativeSrc": "10326:139:13",
															"nodeType": "YulAssignment",
															"src": "10326:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10460:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10460:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10334:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "10334:124:13"
																},
																"nativeSrc": "10334:131:13",
																"nodeType": "YulFunctionCall",
																"src": "10334:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10326:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10326:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10053:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10204:9:13",
														"nodeType": "YulTypedName",
														"src": "10204:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10219:4:13",
														"nodeType": "YulTypedName",
														"src": "10219:4:13",
														"type": ""
													}
												],
												"src": "10053:419:13"
											},
											{
												"body": {
													"nativeSrc": "10584:63:13",
													"nodeType": "YulBlock",
													"src": "10584:63:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10606:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10606:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10614:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10614:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10602:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10602:3:13"
																		},
																		"nativeSrc": "10602:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10602:14:13"
																	},
																	{
																		"hexValue": "4e6f20636c61696d61626c6520616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "10618:21:13",
																		"nodeType": "YulLiteral",
																		"src": "10618:21:13",
																		"type": "",
																		"value": "No claimable amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10595:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10595:6:13"
																},
																"nativeSrc": "10595:45:13",
																"nodeType": "YulFunctionCall",
																"src": "10595:45:13"
															},
															"nativeSrc": "10595:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "10595:45:13"
														}
													]
												},
												"name": "store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
												"nativeSrc": "10478:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10576:6:13",
														"nodeType": "YulTypedName",
														"src": "10576:6:13",
														"type": ""
													}
												],
												"src": "10478:169:13"
											},
											{
												"body": {
													"nativeSrc": "10799:220:13",
													"nodeType": "YulBlock",
													"src": "10799:220:13",
													"statements": [
														{
															"nativeSrc": "10809:74:13",
															"nodeType": "YulAssignment",
															"src": "10809:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10875:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10875:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10880:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10880:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10816:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "10816:58:13"
																},
																"nativeSrc": "10816:67:13",
																"nodeType": "YulFunctionCall",
																"src": "10816:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10809:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10809:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10981:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10981:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																	"nativeSrc": "10892:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "10892:88:13"
																},
																"nativeSrc": "10892:93:13",
																"nodeType": "YulFunctionCall",
																"src": "10892:93:13"
															},
															"nativeSrc": "10892:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "10892:93:13"
														},
														{
															"nativeSrc": "10994:19:13",
															"nodeType": "YulAssignment",
															"src": "10994:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11005:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11005:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11010:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11010:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11001:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11001:3:13"
																},
																"nativeSrc": "11001:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11001:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10994:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10994:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10653:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10787:3:13",
														"nodeType": "YulTypedName",
														"src": "10787:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10795:3:13",
														"nodeType": "YulTypedName",
														"src": "10795:3:13",
														"type": ""
													}
												],
												"src": "10653:366:13"
											},
											{
												"body": {
													"nativeSrc": "11196:248:13",
													"nodeType": "YulBlock",
													"src": "11196:248:13",
													"statements": [
														{
															"nativeSrc": "11206:26:13",
															"nodeType": "YulAssignment",
															"src": "11206:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11218:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11218:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11229:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11229:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11214:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11214:3:13"
																},
																"nativeSrc": "11214:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11214:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11206:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11206:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11253:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11253:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11264:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11264:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11249:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11249:3:13"
																		},
																		"nativeSrc": "11249:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11249:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11272:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11272:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11278:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11278:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11268:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11268:3:13"
																		},
																		"nativeSrc": "11268:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11268:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11242:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11242:6:13"
																},
																"nativeSrc": "11242:47:13",
																"nodeType": "YulFunctionCall",
																"src": "11242:47:13"
															},
															"nativeSrc": "11242:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "11242:47:13"
														},
														{
															"nativeSrc": "11298:139:13",
															"nodeType": "YulAssignment",
															"src": "11298:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11432:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11432:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11306:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "11306:124:13"
																},
																"nativeSrc": "11306:131:13",
																"nodeType": "YulFunctionCall",
																"src": "11306:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11298:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11298:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11025:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11176:9:13",
														"nodeType": "YulTypedName",
														"src": "11176:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11191:4:13",
														"nodeType": "YulTypedName",
														"src": "11191:4:13",
														"type": ""
													}
												],
												"src": "11025:419:13"
											},
											{
												"body": {
													"nativeSrc": "11556:69:13",
													"nodeType": "YulBlock",
													"src": "11556:69:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11578:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11578:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11586:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11586:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11574:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11574:3:13"
																		},
																		"nativeSrc": "11574:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11574:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
																		"kind": "string",
																		"nativeSrc": "11590:27:13",
																		"nodeType": "YulLiteral",
																		"src": "11590:27:13",
																		"type": "",
																		"value": "Insufficient funds in jar"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11567:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11567:6:13"
																},
																"nativeSrc": "11567:51:13",
																"nodeType": "YulFunctionCall",
																"src": "11567:51:13"
															},
															"nativeSrc": "11567:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "11567:51:13"
														}
													]
												},
												"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
												"nativeSrc": "11450:175:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11548:6:13",
														"nodeType": "YulTypedName",
														"src": "11548:6:13",
														"type": ""
													}
												],
												"src": "11450:175:13"
											},
											{
												"body": {
													"nativeSrc": "11777:220:13",
													"nodeType": "YulBlock",
													"src": "11777:220:13",
													"statements": [
														{
															"nativeSrc": "11787:74:13",
															"nodeType": "YulAssignment",
															"src": "11787:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11853:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11853:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11858:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11858:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11794:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "11794:58:13"
																},
																"nativeSrc": "11794:67:13",
																"nodeType": "YulFunctionCall",
																"src": "11794:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11787:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11787:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11959:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11959:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																	"nativeSrc": "11870:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11870:88:13"
																},
																"nativeSrc": "11870:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11870:93:13"
															},
															"nativeSrc": "11870:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11870:93:13"
														},
														{
															"nativeSrc": "11972:19:13",
															"nodeType": "YulAssignment",
															"src": "11972:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11983:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11983:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11988:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11988:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11979:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11979:3:13"
																},
																"nativeSrc": "11979:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11979:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11972:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11972:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11631:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11765:3:13",
														"nodeType": "YulTypedName",
														"src": "11765:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11773:3:13",
														"nodeType": "YulTypedName",
														"src": "11773:3:13",
														"type": ""
													}
												],
												"src": "11631:366:13"
											},
											{
												"body": {
													"nativeSrc": "12174:248:13",
													"nodeType": "YulBlock",
													"src": "12174:248:13",
													"statements": [
														{
															"nativeSrc": "12184:26:13",
															"nodeType": "YulAssignment",
															"src": "12184:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12196:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12196:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12207:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12207:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12192:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12192:3:13"
																},
																"nativeSrc": "12192:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12192:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12184:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12184:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12231:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12231:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12242:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12242:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12227:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12227:3:13"
																		},
																		"nativeSrc": "12227:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12227:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12250:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "12250:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12256:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12256:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12246:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12246:3:13"
																		},
																		"nativeSrc": "12246:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12246:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12220:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12220:6:13"
																},
																"nativeSrc": "12220:47:13",
																"nodeType": "YulFunctionCall",
																"src": "12220:47:13"
															},
															"nativeSrc": "12220:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "12220:47:13"
														},
														{
															"nativeSrc": "12276:139:13",
															"nodeType": "YulAssignment",
															"src": "12276:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12410:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12410:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12284:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "12284:124:13"
																},
																"nativeSrc": "12284:131:13",
																"nodeType": "YulFunctionCall",
																"src": "12284:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12276:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12276:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12003:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12154:9:13",
														"nodeType": "YulTypedName",
														"src": "12154:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12169:4:13",
														"nodeType": "YulTypedName",
														"src": "12169:4:13",
														"type": ""
													}
												],
												"src": "12003:419:13"
											},
											{
												"body": {
													"nativeSrc": "12534:49:13",
													"nodeType": "YulBlock",
													"src": "12534:49:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12556:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12556:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12564:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12564:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12552:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12552:3:13"
																		},
																		"nativeSrc": "12552:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12552:14:13"
																	},
																	{
																		"hexValue": "5472757374",
																		"kind": "string",
																		"nativeSrc": "12568:7:13",
																		"nodeType": "YulLiteral",
																		"src": "12568:7:13",
																		"type": "",
																		"value": "Trust"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12545:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12545:6:13"
																},
																"nativeSrc": "12545:31:13",
																"nodeType": "YulFunctionCall",
																"src": "12545:31:13"
															},
															"nativeSrc": "12545:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "12545:31:13"
														}
													]
												},
												"name": "store_literal_in_memory_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b",
												"nativeSrc": "12428:155:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12526:6:13",
														"nodeType": "YulTypedName",
														"src": "12526:6:13",
														"type": ""
													}
												],
												"src": "12428:155:13"
											},
											{
												"body": {
													"nativeSrc": "12735:219:13",
													"nodeType": "YulBlock",
													"src": "12735:219:13",
													"statements": [
														{
															"nativeSrc": "12745:73:13",
															"nodeType": "YulAssignment",
															"src": "12745:73:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12811:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12811:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12816:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12816:1:13",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12752:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "12752:58:13"
																},
																"nativeSrc": "12752:66:13",
																"nodeType": "YulFunctionCall",
																"src": "12752:66:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12745:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12745:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12916:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12916:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b",
																	"nativeSrc": "12827:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "12827:88:13"
																},
																"nativeSrc": "12827:93:13",
																"nodeType": "YulFunctionCall",
																"src": "12827:93:13"
															},
															"nativeSrc": "12827:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "12827:93:13"
														},
														{
															"nativeSrc": "12929:19:13",
															"nodeType": "YulAssignment",
															"src": "12929:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12940:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12940:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12945:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12945:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12936:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12936:3:13"
																},
																"nativeSrc": "12936:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12936:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12929:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12929:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12589:365:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12723:3:13",
														"nodeType": "YulTypedName",
														"src": "12723:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12731:3:13",
														"nodeType": "YulTypedName",
														"src": "12731:3:13",
														"type": ""
													}
												],
												"src": "12589:365:13"
											},
											{
												"body": {
													"nativeSrc": "13159:330:13",
													"nodeType": "YulBlock",
													"src": "13159:330:13",
													"statements": [
														{
															"nativeSrc": "13169:26:13",
															"nodeType": "YulAssignment",
															"src": "13169:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13181:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13181:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13192:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13192:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13177:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13177:3:13"
																},
																"nativeSrc": "13177:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13177:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13169:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13169:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13249:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13249:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13262:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13262:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13273:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13273:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13258:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13258:3:13"
																		},
																		"nativeSrc": "13258:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13258:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13205:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13205:43:13"
																},
																"nativeSrc": "13205:71:13",
																"nodeType": "YulFunctionCall",
																"src": "13205:71:13"
															},
															"nativeSrc": "13205:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "13205:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13297:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13297:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13308:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13308:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13293:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13293:3:13"
																		},
																		"nativeSrc": "13293:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13293:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13317:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13317:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13323:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13323:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13313:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13313:3:13"
																		},
																		"nativeSrc": "13313:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13313:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13286:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13286:6:13"
																},
																"nativeSrc": "13286:48:13",
																"nodeType": "YulFunctionCall",
																"src": "13286:48:13"
															},
															"nativeSrc": "13286:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "13286:48:13"
														},
														{
															"nativeSrc": "13343:139:13",
															"nodeType": "YulAssignment",
															"src": "13343:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13477:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13477:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13351:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "13351:124:13"
																},
																"nativeSrc": "13351:131:13",
																"nodeType": "YulFunctionCall",
																"src": "13351:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13343:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13343:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b__to_t_address_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12960:529:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13131:9:13",
														"nodeType": "YulTypedName",
														"src": "13131:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13143:6:13",
														"nodeType": "YulTypedName",
														"src": "13143:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13154:4:13",
														"nodeType": "YulTypedName",
														"src": "13154:4:13",
														"type": ""
													}
												],
												"src": "12960:529:13"
											},
											{
												"body": {
													"nativeSrc": "13558:80:13",
													"nodeType": "YulBlock",
													"src": "13558:80:13",
													"statements": [
														{
															"nativeSrc": "13568:22:13",
															"nodeType": "YulAssignment",
															"src": "13568:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13583:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13583:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13577:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13577:5:13"
																},
																"nativeSrc": "13577:13:13",
																"nodeType": "YulFunctionCall",
																"src": "13577:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13568:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13568:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13626:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13626:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13599:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "13599:26:13"
																},
																"nativeSrc": "13599:33:13",
																"nodeType": "YulFunctionCall",
																"src": "13599:33:13"
															},
															"nativeSrc": "13599:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "13599:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "13495:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13536:6:13",
														"nodeType": "YulTypedName",
														"src": "13536:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13544:3:13",
														"nodeType": "YulTypedName",
														"src": "13544:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13552:5:13",
														"nodeType": "YulTypedName",
														"src": "13552:5:13",
														"type": ""
													}
												],
												"src": "13495:143:13"
											},
											{
												"body": {
													"nativeSrc": "13721:274:13",
													"nodeType": "YulBlock",
													"src": "13721:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "13767:83:13",
																"nodeType": "YulBlock",
																"src": "13767:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13769:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "13769:77:13"
																			},
																			"nativeSrc": "13769:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13769:79:13"
																		},
																		"nativeSrc": "13769:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13769:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13742:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13742:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13751:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13751:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13738:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13738:3:13"
																		},
																		"nativeSrc": "13738:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13738:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13763:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13763:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13734:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13734:3:13"
																},
																"nativeSrc": "13734:32:13",
																"nodeType": "YulFunctionCall",
																"src": "13734:32:13"
															},
															"nativeSrc": "13731:119:13",
															"nodeType": "YulIf",
															"src": "13731:119:13"
														},
														{
															"nativeSrc": "13860:128:13",
															"nodeType": "YulBlock",
															"src": "13860:128:13",
															"statements": [
																{
																	"nativeSrc": "13875:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13875:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13889:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13889:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13879:6:13",
																			"nodeType": "YulTypedName",
																			"src": "13879:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13904:74:13",
																	"nodeType": "YulAssignment",
																	"src": "13904:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13950:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13950:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13961:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13961:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13946:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13946:3:13"
																				},
																				"nativeSrc": "13946:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13946:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13970:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13970:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13914:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "13914:31:13"
																		},
																		"nativeSrc": "13914:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13914:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13904:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "13904:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "13644:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13691:9:13",
														"nodeType": "YulTypedName",
														"src": "13691:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13702:7:13",
														"nodeType": "YulTypedName",
														"src": "13702:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13714:6:13",
														"nodeType": "YulTypedName",
														"src": "13714:6:13",
														"type": ""
													}
												],
												"src": "13644:351:13"
											},
											{
												"body": {
													"nativeSrc": "14107:68:13",
													"nodeType": "YulBlock",
													"src": "14107:68:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14129:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14129:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14137:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14137:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14125:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14125:3:13"
																		},
																		"nativeSrc": "14125:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14125:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742054727573742073636f7265",
																		"kind": "string",
																		"nativeSrc": "14141:26:13",
																		"nodeType": "YulLiteral",
																		"src": "14141:26:13",
																		"type": "",
																		"value": "Insufficient Trust score"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14118:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14118:6:13"
																},
																"nativeSrc": "14118:50:13",
																"nodeType": "YulFunctionCall",
																"src": "14118:50:13"
															},
															"nativeSrc": "14118:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "14118:50:13"
														}
													]
												},
												"name": "store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5",
												"nativeSrc": "14001:174:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14099:6:13",
														"nodeType": "YulTypedName",
														"src": "14099:6:13",
														"type": ""
													}
												],
												"src": "14001:174:13"
											},
											{
												"body": {
													"nativeSrc": "14327:220:13",
													"nodeType": "YulBlock",
													"src": "14327:220:13",
													"statements": [
														{
															"nativeSrc": "14337:74:13",
															"nodeType": "YulAssignment",
															"src": "14337:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14403:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14403:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14408:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14408:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14344:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "14344:58:13"
																},
																"nativeSrc": "14344:67:13",
																"nodeType": "YulFunctionCall",
																"src": "14344:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14337:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14337:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14509:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14509:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5",
																	"nativeSrc": "14420:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "14420:88:13"
																},
																"nativeSrc": "14420:93:13",
																"nodeType": "YulFunctionCall",
																"src": "14420:93:13"
															},
															"nativeSrc": "14420:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "14420:93:13"
														},
														{
															"nativeSrc": "14522:19:13",
															"nodeType": "YulAssignment",
															"src": "14522:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14533:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14533:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14538:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14538:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14529:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14529:3:13"
																},
																"nativeSrc": "14529:12:13",
																"nodeType": "YulFunctionCall",
																"src": "14529:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14522:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14522:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14181:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14315:3:13",
														"nodeType": "YulTypedName",
														"src": "14315:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14323:3:13",
														"nodeType": "YulTypedName",
														"src": "14323:3:13",
														"type": ""
													}
												],
												"src": "14181:366:13"
											},
											{
												"body": {
													"nativeSrc": "14724:248:13",
													"nodeType": "YulBlock",
													"src": "14724:248:13",
													"statements": [
														{
															"nativeSrc": "14734:26:13",
															"nodeType": "YulAssignment",
															"src": "14734:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14746:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14746:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14757:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14757:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14742:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14742:3:13"
																},
																"nativeSrc": "14742:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14742:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14734:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14734:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14781:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14781:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14792:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14792:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14777:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14777:3:13"
																		},
																		"nativeSrc": "14777:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14777:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14800:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14800:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14806:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14806:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14796:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14796:3:13"
																		},
																		"nativeSrc": "14796:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14796:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14770:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14770:6:13"
																},
																"nativeSrc": "14770:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14770:47:13"
															},
															"nativeSrc": "14770:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14770:47:13"
														},
														{
															"nativeSrc": "14826:139:13",
															"nodeType": "YulAssignment",
															"src": "14826:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14960:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14960:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14834:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "14834:124:13"
																},
																"nativeSrc": "14834:131:13",
																"nodeType": "YulFunctionCall",
																"src": "14834:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14826:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14826:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14553:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14704:9:13",
														"nodeType": "YulTypedName",
														"src": "14704:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14719:4:13",
														"nodeType": "YulTypedName",
														"src": "14719:4:13",
														"type": ""
													}
												],
												"src": "14553:419:13"
											},
											{
												"body": {
													"nativeSrc": "15023:149:13",
													"nodeType": "YulBlock",
													"src": "15023:149:13",
													"statements": [
														{
															"nativeSrc": "15033:25:13",
															"nodeType": "YulAssignment",
															"src": "15033:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15056:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15056:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15038:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "15038:17:13"
																},
																"nativeSrc": "15038:20:13",
																"nodeType": "YulFunctionCall",
																"src": "15038:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15033:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "15033:1:13"
																}
															]
														},
														{
															"nativeSrc": "15067:25:13",
															"nodeType": "YulAssignment",
															"src": "15067:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15090:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15090:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15072:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "15072:17:13"
																},
																"nativeSrc": "15072:20:13",
																"nodeType": "YulFunctionCall",
																"src": "15072:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15067:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "15067:1:13"
																}
															]
														},
														{
															"nativeSrc": "15101:17:13",
															"nodeType": "YulAssignment",
															"src": "15101:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15113:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15113:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15116:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15116:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15109:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15109:3:13"
																},
																"nativeSrc": "15109:9:13",
																"nodeType": "YulFunctionCall",
																"src": "15109:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "15101:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15101:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15143:22:13",
																"nodeType": "YulBlock",
																"src": "15143:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15145:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "15145:16:13"
																			},
																			"nativeSrc": "15145:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15145:18:13"
																		},
																		"nativeSrc": "15145:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15145:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "15134:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15134:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "15140:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15140:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15131:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15131:2:13"
																},
																"nativeSrc": "15131:11:13",
																"nodeType": "YulFunctionCall",
																"src": "15131:11:13"
															},
															"nativeSrc": "15128:37:13",
															"nodeType": "YulIf",
															"src": "15128:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14978:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15009:1:13",
														"nodeType": "YulTypedName",
														"src": "15009:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15012:1:13",
														"nodeType": "YulTypedName",
														"src": "15012:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "15018:4:13",
														"nodeType": "YulTypedName",
														"src": "15018:4:13",
														"type": ""
													}
												],
												"src": "14978:194:13"
											},
											{
												"body": {
													"nativeSrc": "15291:34:13",
													"nodeType": "YulBlock",
													"src": "15291:34:13",
													"statements": [
														{
															"nativeSrc": "15301:18:13",
															"nodeType": "YulAssignment",
															"src": "15301:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "15316:3:13",
																"nodeType": "YulIdentifier",
																"src": "15316:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15301:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "15301:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15178:147:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15263:3:13",
														"nodeType": "YulTypedName",
														"src": "15263:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15268:6:13",
														"nodeType": "YulTypedName",
														"src": "15268:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15279:11:13",
														"nodeType": "YulTypedName",
														"src": "15279:11:13",
														"type": ""
													}
												],
												"src": "15178:147:13"
											},
											{
												"body": {
													"nativeSrc": "15437:8:13",
													"nodeType": "YulBlock",
													"src": "15437:8:13",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "15331:114:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15429:6:13",
														"nodeType": "YulTypedName",
														"src": "15429:6:13",
														"type": ""
													}
												],
												"src": "15331:114:13"
											},
											{
												"body": {
													"nativeSrc": "15614:235:13",
													"nodeType": "YulBlock",
													"src": "15614:235:13",
													"statements": [
														{
															"nativeSrc": "15624:90:13",
															"nodeType": "YulAssignment",
															"src": "15624:90:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15707:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15707:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15712:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15712:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15631:75:13",
																	"nodeType": "YulIdentifier",
																	"src": "15631:75:13"
																},
																"nativeSrc": "15631:83:13",
																"nodeType": "YulFunctionCall",
																"src": "15631:83:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15624:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15624:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15812:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15812:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "15723:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15723:88:13"
																},
																"nativeSrc": "15723:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15723:93:13"
															},
															"nativeSrc": "15723:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15723:93:13"
														},
														{
															"nativeSrc": "15825:18:13",
															"nodeType": "YulAssignment",
															"src": "15825:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15836:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15836:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15841:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15841:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15832:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15832:3:13"
																},
																"nativeSrc": "15832:11:13",
																"nodeType": "YulFunctionCall",
																"src": "15832:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15825:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15825:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15451:398:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15602:3:13",
														"nodeType": "YulTypedName",
														"src": "15602:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15610:3:13",
														"nodeType": "YulTypedName",
														"src": "15610:3:13",
														"type": ""
													}
												],
												"src": "15451:398:13"
											},
											{
												"body": {
													"nativeSrc": "16043:191:13",
													"nodeType": "YulBlock",
													"src": "16043:191:13",
													"statements": [
														{
															"nativeSrc": "16054:154:13",
															"nodeType": "YulAssignment",
															"src": "16054:154:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16204:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16204:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16061:141:13",
																	"nodeType": "YulIdentifier",
																	"src": "16061:141:13"
																},
																"nativeSrc": "16061:147:13",
																"nodeType": "YulFunctionCall",
																"src": "16061:147:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16054:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16054:3:13"
																}
															]
														},
														{
															"nativeSrc": "16218:10:13",
															"nodeType": "YulAssignment",
															"src": "16218:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "16225:3:13",
																"nodeType": "YulIdentifier",
																"src": "16225:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16218:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16218:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15855:379:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16030:3:13",
														"nodeType": "YulTypedName",
														"src": "16030:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16039:3:13",
														"nodeType": "YulTypedName",
														"src": "16039:3:13",
														"type": ""
													}
												],
												"src": "15855:379:13"
											},
											{
												"body": {
													"nativeSrc": "16346:65:13",
													"nodeType": "YulBlock",
													"src": "16346:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16368:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16368:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16376:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16376:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16364:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16364:3:13"
																		},
																		"nativeSrc": "16364:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16364:14:13"
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "16380:23:13",
																		"nodeType": "YulLiteral",
																		"src": "16380:23:13",
																		"type": "",
																		"value": "Ether transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16357:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16357:6:13"
																},
																"nativeSrc": "16357:47:13",
																"nodeType": "YulFunctionCall",
																"src": "16357:47:13"
															},
															"nativeSrc": "16357:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "16357:47:13"
														}
													]
												},
												"name": "store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
												"nativeSrc": "16240:171:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16338:6:13",
														"nodeType": "YulTypedName",
														"src": "16338:6:13",
														"type": ""
													}
												],
												"src": "16240:171:13"
											},
											{
												"body": {
													"nativeSrc": "16563:220:13",
													"nodeType": "YulBlock",
													"src": "16563:220:13",
													"statements": [
														{
															"nativeSrc": "16573:74:13",
															"nodeType": "YulAssignment",
															"src": "16573:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16639:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16639:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16644:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16644:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16580:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "16580:58:13"
																},
																"nativeSrc": "16580:67:13",
																"nodeType": "YulFunctionCall",
																"src": "16580:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16573:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16573:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16745:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16745:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																	"nativeSrc": "16656:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "16656:88:13"
																},
																"nativeSrc": "16656:93:13",
																"nodeType": "YulFunctionCall",
																"src": "16656:93:13"
															},
															"nativeSrc": "16656:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "16656:93:13"
														},
														{
															"nativeSrc": "16758:19:13",
															"nodeType": "YulAssignment",
															"src": "16758:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16769:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16769:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16774:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16774:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16765:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16765:3:13"
																},
																"nativeSrc": "16765:12:13",
																"nodeType": "YulFunctionCall",
																"src": "16765:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16758:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16758:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16417:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16551:3:13",
														"nodeType": "YulTypedName",
														"src": "16551:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16559:3:13",
														"nodeType": "YulTypedName",
														"src": "16559:3:13",
														"type": ""
													}
												],
												"src": "16417:366:13"
											},
											{
												"body": {
													"nativeSrc": "16960:248:13",
													"nodeType": "YulBlock",
													"src": "16960:248:13",
													"statements": [
														{
															"nativeSrc": "16970:26:13",
															"nodeType": "YulAssignment",
															"src": "16970:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16982:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16982:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16993:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16993:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16978:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16978:3:13"
																},
																"nativeSrc": "16978:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16978:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16970:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16970:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17017:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17017:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17028:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17028:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17013:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17013:3:13"
																		},
																		"nativeSrc": "17013:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17013:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17036:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "17036:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17042:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17042:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17032:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17032:3:13"
																		},
																		"nativeSrc": "17032:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17032:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17006:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17006:6:13"
																},
																"nativeSrc": "17006:47:13",
																"nodeType": "YulFunctionCall",
																"src": "17006:47:13"
															},
															"nativeSrc": "17006:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "17006:47:13"
														},
														{
															"nativeSrc": "17062:139:13",
															"nodeType": "YulAssignment",
															"src": "17062:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17196:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17196:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17070:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "17070:124:13"
																},
																"nativeSrc": "17070:131:13",
																"nodeType": "YulFunctionCall",
																"src": "17070:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17062:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17062:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16789:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16940:9:13",
														"nodeType": "YulTypedName",
														"src": "16940:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16955:4:13",
														"nodeType": "YulTypedName",
														"src": "16955:4:13",
														"type": ""
													}
												],
												"src": "16789:419:13"
											},
											{
												"body": {
													"nativeSrc": "17320:66:13",
													"nodeType": "YulBlock",
													"src": "17320:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17342:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17342:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17350:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17350:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17338:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17338:3:13"
																		},
																		"nativeSrc": "17338:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17338:14:13"
																	},
																	{
																		"hexValue": "496e636f727265637420457468657220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "17354:24:13",
																		"nodeType": "YulLiteral",
																		"src": "17354:24:13",
																		"type": "",
																		"value": "Incorrect Ether amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17331:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17331:6:13"
																},
																"nativeSrc": "17331:48:13",
																"nodeType": "YulFunctionCall",
																"src": "17331:48:13"
															},
															"nativeSrc": "17331:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "17331:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
												"nativeSrc": "17214:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17312:6:13",
														"nodeType": "YulTypedName",
														"src": "17312:6:13",
														"type": ""
													}
												],
												"src": "17214:172:13"
											},
											{
												"body": {
													"nativeSrc": "17538:220:13",
													"nodeType": "YulBlock",
													"src": "17538:220:13",
													"statements": [
														{
															"nativeSrc": "17548:74:13",
															"nodeType": "YulAssignment",
															"src": "17548:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17614:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17614:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17619:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17619:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17555:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "17555:58:13"
																},
																"nativeSrc": "17555:67:13",
																"nodeType": "YulFunctionCall",
																"src": "17555:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17548:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17548:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17720:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17720:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																	"nativeSrc": "17631:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "17631:88:13"
																},
																"nativeSrc": "17631:93:13",
																"nodeType": "YulFunctionCall",
																"src": "17631:93:13"
															},
															"nativeSrc": "17631:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "17631:93:13"
														},
														{
															"nativeSrc": "17733:19:13",
															"nodeType": "YulAssignment",
															"src": "17733:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17744:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17744:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17749:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17749:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17740:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17740:3:13"
																},
																"nativeSrc": "17740:12:13",
																"nodeType": "YulFunctionCall",
																"src": "17740:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17733:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17733:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17392:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17526:3:13",
														"nodeType": "YulTypedName",
														"src": "17526:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17534:3:13",
														"nodeType": "YulTypedName",
														"src": "17534:3:13",
														"type": ""
													}
												],
												"src": "17392:366:13"
											},
											{
												"body": {
													"nativeSrc": "17935:248:13",
													"nodeType": "YulBlock",
													"src": "17935:248:13",
													"statements": [
														{
															"nativeSrc": "17945:26:13",
															"nodeType": "YulAssignment",
															"src": "17945:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17957:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17957:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17968:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17968:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17953:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17953:3:13"
																},
																"nativeSrc": "17953:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17953:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17945:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17945:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17992:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17992:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18003:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18003:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17988:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17988:3:13"
																		},
																		"nativeSrc": "17988:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17988:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18011:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "18011:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18017:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18017:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18007:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18007:3:13"
																		},
																		"nativeSrc": "18007:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18007:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17981:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17981:6:13"
																},
																"nativeSrc": "17981:47:13",
																"nodeType": "YulFunctionCall",
																"src": "17981:47:13"
															},
															"nativeSrc": "17981:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "17981:47:13"
														},
														{
															"nativeSrc": "18037:139:13",
															"nodeType": "YulAssignment",
															"src": "18037:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18171:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18171:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18045:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "18045:124:13"
																},
																"nativeSrc": "18045:131:13",
																"nodeType": "YulFunctionCall",
																"src": "18045:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18037:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18037:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17764:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17915:9:13",
														"nodeType": "YulTypedName",
														"src": "17915:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17930:4:13",
														"nodeType": "YulTypedName",
														"src": "17930:4:13",
														"type": ""
													}
												],
												"src": "17764:419:13"
											},
											{
												"body": {
													"nativeSrc": "18295:121:13",
													"nodeType": "YulBlock",
													"src": "18295:121:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18317:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18317:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18325:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18325:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18313:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18313:3:13"
																		},
																		"nativeSrc": "18313:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18313:14:13"
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "18329:34:13",
																		"nodeType": "YulLiteral",
																		"src": "18329:34:13",
																		"type": "",
																		"value": "Deposit amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18306:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18306:6:13"
																},
																"nativeSrc": "18306:58:13",
																"nodeType": "YulFunctionCall",
																"src": "18306:58:13"
															},
															"nativeSrc": "18306:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "18306:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18385:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18385:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18393:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18393:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18381:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18381:3:13"
																		},
																		"nativeSrc": "18381:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18381:15:13"
																	},
																	{
																		"hexValue": "68616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "18398:10:13",
																		"nodeType": "YulLiteral",
																		"src": "18398:10:13",
																		"type": "",
																		"value": "han zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18374:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18374:6:13"
																},
																"nativeSrc": "18374:35:13",
																"nodeType": "YulFunctionCall",
																"src": "18374:35:13"
															},
															"nativeSrc": "18374:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "18374:35:13"
														}
													]
												},
												"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
												"nativeSrc": "18189:227:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18287:6:13",
														"nodeType": "YulTypedName",
														"src": "18287:6:13",
														"type": ""
													}
												],
												"src": "18189:227:13"
											},
											{
												"body": {
													"nativeSrc": "18568:220:13",
													"nodeType": "YulBlock",
													"src": "18568:220:13",
													"statements": [
														{
															"nativeSrc": "18578:74:13",
															"nodeType": "YulAssignment",
															"src": "18578:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18644:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18644:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18649:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18649:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18585:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "18585:58:13"
																},
																"nativeSrc": "18585:67:13",
																"nodeType": "YulFunctionCall",
																"src": "18585:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18578:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18578:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18750:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18750:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																	"nativeSrc": "18661:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "18661:88:13"
																},
																"nativeSrc": "18661:93:13",
																"nodeType": "YulFunctionCall",
																"src": "18661:93:13"
															},
															"nativeSrc": "18661:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "18661:93:13"
														},
														{
															"nativeSrc": "18763:19:13",
															"nodeType": "YulAssignment",
															"src": "18763:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18774:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18774:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18779:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18779:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18770:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18770:3:13"
																},
																"nativeSrc": "18770:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18770:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18763:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18763:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18422:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18556:3:13",
														"nodeType": "YulTypedName",
														"src": "18556:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18564:3:13",
														"nodeType": "YulTypedName",
														"src": "18564:3:13",
														"type": ""
													}
												],
												"src": "18422:366:13"
											},
											{
												"body": {
													"nativeSrc": "18965:248:13",
													"nodeType": "YulBlock",
													"src": "18965:248:13",
													"statements": [
														{
															"nativeSrc": "18975:26:13",
															"nodeType": "YulAssignment",
															"src": "18975:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18987:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18987:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18998:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18998:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18983:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18983:3:13"
																},
																"nativeSrc": "18983:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18983:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18975:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18975:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19022:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19022:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19033:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19033:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19018:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19018:3:13"
																		},
																		"nativeSrc": "19018:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19018:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19041:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "19041:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19047:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19047:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19037:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19037:3:13"
																		},
																		"nativeSrc": "19037:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19037:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19011:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19011:6:13"
																},
																"nativeSrc": "19011:47:13",
																"nodeType": "YulFunctionCall",
																"src": "19011:47:13"
															},
															"nativeSrc": "19011:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "19011:47:13"
														},
														{
															"nativeSrc": "19067:139:13",
															"nodeType": "YulAssignment",
															"src": "19067:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19201:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19201:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19075:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "19075:124:13"
																},
																"nativeSrc": "19075:131:13",
																"nodeType": "YulFunctionCall",
																"src": "19075:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19067:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19067:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18794:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18945:9:13",
														"nodeType": "YulTypedName",
														"src": "18945:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18960:4:13",
														"nodeType": "YulTypedName",
														"src": "18960:4:13",
														"type": ""
													}
												],
												"src": "18794:419:13"
											},
											{
												"body": {
													"nativeSrc": "19272:32:13",
													"nodeType": "YulBlock",
													"src": "19272:32:13",
													"statements": [
														{
															"nativeSrc": "19282:16:13",
															"nodeType": "YulAssignment",
															"src": "19282:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "19293:5:13",
																"nodeType": "YulIdentifier",
																"src": "19293:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "19282:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "19282:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "19219:85:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19254:5:13",
														"nodeType": "YulTypedName",
														"src": "19254:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "19264:7:13",
														"nodeType": "YulTypedName",
														"src": "19264:7:13",
														"type": ""
													}
												],
												"src": "19219:85:13"
											},
											{
												"body": {
													"nativeSrc": "19354:57:13",
													"nodeType": "YulBlock",
													"src": "19354:57:13",
													"statements": [
														{
															"nativeSrc": "19364:41:13",
															"nodeType": "YulAssignment",
															"src": "19364:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19379:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19379:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19386:18:13",
																		"nodeType": "YulLiteral",
																		"src": "19386:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19375:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19375:3:13"
																},
																"nativeSrc": "19375:30:13",
																"nodeType": "YulFunctionCall",
																"src": "19375:30:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "19364:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "19364:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "19310:101:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19336:5:13",
														"nodeType": "YulTypedName",
														"src": "19336:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "19346:7:13",
														"nodeType": "YulTypedName",
														"src": "19346:7:13",
														"type": ""
													}
												],
												"src": "19310:101:13"
											},
											{
												"body": {
													"nativeSrc": "19484:89:13",
													"nodeType": "YulBlock",
													"src": "19484:89:13",
													"statements": [
														{
															"nativeSrc": "19494:73:13",
															"nodeType": "YulAssignment",
															"src": "19494:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19559:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "19559:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "19533:25:13",
																					"nodeType": "YulIdentifier",
																					"src": "19533:25:13"
																				},
																				"nativeSrc": "19533:32:13",
																				"nodeType": "YulFunctionCall",
																				"src": "19533:32:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "19524:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "19524:8:13"
																		},
																		"nativeSrc": "19524:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19524:42:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "19507:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "19507:16:13"
																},
																"nativeSrc": "19507:60:13",
																"nodeType": "YulFunctionCall",
																"src": "19507:60:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "19494:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "19494:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "19417:156:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19464:5:13",
														"nodeType": "YulTypedName",
														"src": "19464:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "19474:9:13",
														"nodeType": "YulTypedName",
														"src": "19474:9:13",
														"type": ""
													}
												],
												"src": "19417:156:13"
											},
											{
												"body": {
													"nativeSrc": "19651:73:13",
													"nodeType": "YulBlock",
													"src": "19651:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19668:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19668:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19711:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "19711:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "19673:37:13",
																			"nodeType": "YulIdentifier",
																			"src": "19673:37:13"
																		},
																		"nativeSrc": "19673:44:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19673:44:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19661:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19661:6:13"
																},
																"nativeSrc": "19661:57:13",
																"nodeType": "YulFunctionCall",
																"src": "19661:57:13"
															},
															"nativeSrc": "19661:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "19661:57:13"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "19579:145:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19639:5:13",
														"nodeType": "YulTypedName",
														"src": "19639:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19646:3:13",
														"nodeType": "YulTypedName",
														"src": "19646:3:13",
														"type": ""
													}
												],
												"src": "19579:145:13"
											},
											{
												"body": {
													"nativeSrc": "19835:131:13",
													"nodeType": "YulBlock",
													"src": "19835:131:13",
													"statements": [
														{
															"nativeSrc": "19845:26:13",
															"nodeType": "YulAssignment",
															"src": "19845:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19857:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19857:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19868:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19868:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19853:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19853:3:13"
																},
																"nativeSrc": "19853:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19853:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19845:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19845:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19932:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19932:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19945:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19945:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19956:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19956:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19941:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19941:3:13"
																		},
																		"nativeSrc": "19941:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19941:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "19881:50:13",
																	"nodeType": "YulIdentifier",
																	"src": "19881:50:13"
																},
																"nativeSrc": "19881:78:13",
																"nodeType": "YulFunctionCall",
																"src": "19881:78:13"
															},
															"nativeSrc": "19881:78:13",
															"nodeType": "YulExpressionStatement",
															"src": "19881:78:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "19730:236:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19807:9:13",
														"nodeType": "YulTypedName",
														"src": "19807:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19819:6:13",
														"nodeType": "YulTypedName",
														"src": "19819:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19830:4:13",
														"nodeType": "YulTypedName",
														"src": "19830:4:13",
														"type": ""
													}
												],
												"src": "19730:236:13"
											},
											{
												"body": {
													"nativeSrc": "20000:152:13",
													"nodeType": "YulBlock",
													"src": "20000:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20017:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20017:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20020:77:13",
																		"nodeType": "YulLiteral",
																		"src": "20020:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20010:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20010:6:13"
																},
																"nativeSrc": "20010:88:13",
																"nodeType": "YulFunctionCall",
																"src": "20010:88:13"
															},
															"nativeSrc": "20010:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "20010:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20114:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20114:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20117:4:13",
																		"nodeType": "YulLiteral",
																		"src": "20117:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20107:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20107:6:13"
																},
																"nativeSrc": "20107:15:13",
																"nodeType": "YulFunctionCall",
																"src": "20107:15:13"
															},
															"nativeSrc": "20107:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "20107:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20138:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20138:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20141:4:13",
																		"nodeType": "YulLiteral",
																		"src": "20141:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20131:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20131:6:13"
																},
																"nativeSrc": "20131:15:13",
																"nodeType": "YulFunctionCall",
																"src": "20131:15:13"
															},
															"nativeSrc": "20131:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "20131:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "19972:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "19972:180:13"
											},
											{
												"body": {
													"nativeSrc": "20209:269:13",
													"nodeType": "YulBlock",
													"src": "20209:269:13",
													"statements": [
														{
															"nativeSrc": "20219:22:13",
															"nodeType": "YulAssignment",
															"src": "20219:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "20233:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "20233:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20239:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20239:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "20229:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20229:3:13"
																},
																"nativeSrc": "20229:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20229:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20219:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20219:6:13"
																}
															]
														},
														{
															"nativeSrc": "20250:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "20250:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "20280:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "20280:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20286:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20286:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20276:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20276:3:13"
																},
																"nativeSrc": "20276:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20276:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "20254:18:13",
																	"nodeType": "YulTypedName",
																	"src": "20254:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20327:51:13",
																"nodeType": "YulBlock",
																"src": "20327:51:13",
																"statements": [
																	{
																		"nativeSrc": "20341:27:13",
																		"nodeType": "YulAssignment",
																		"src": "20341:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "20355:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "20355:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20363:4:13",
																					"nodeType": "YulLiteral",
																					"src": "20363:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "20351:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "20351:3:13"
																			},
																			"nativeSrc": "20351:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20351:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "20341:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20341:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "20307:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "20307:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20300:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20300:6:13"
																},
																"nativeSrc": "20300:26:13",
																"nodeType": "YulFunctionCall",
																"src": "20300:26:13"
															},
															"nativeSrc": "20297:81:13",
															"nodeType": "YulIf",
															"src": "20297:81:13"
														},
														{
															"body": {
																"nativeSrc": "20430:42:13",
																"nodeType": "YulBlock",
																"src": "20430:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "20444:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "20444:16:13"
																			},
																			"nativeSrc": "20444:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20444:18:13"
																		},
																		"nativeSrc": "20444:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20444:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "20394:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "20394:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "20417:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20417:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20425:2:13",
																				"nodeType": "YulLiteral",
																				"src": "20425:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "20414:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "20414:2:13"
																		},
																		"nativeSrc": "20414:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20414:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "20391:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "20391:2:13"
																},
																"nativeSrc": "20391:38:13",
																"nodeType": "YulFunctionCall",
																"src": "20391:38:13"
															},
															"nativeSrc": "20388:84:13",
															"nodeType": "YulIf",
															"src": "20388:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "20158:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "20193:4:13",
														"nodeType": "YulTypedName",
														"src": "20193:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "20202:6:13",
														"nodeType": "YulTypedName",
														"src": "20202:6:13",
														"type": ""
													}
												],
												"src": "20158:320:13"
											},
											{
												"body": {
													"nativeSrc": "20526:48:13",
													"nodeType": "YulBlock",
													"src": "20526:48:13",
													"statements": [
														{
															"nativeSrc": "20536:32:13",
															"nodeType": "YulAssignment",
															"src": "20536:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20561:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "20561:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "20554:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "20554:6:13"
																		},
																		"nativeSrc": "20554:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20554:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20547:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20547:6:13"
																},
																"nativeSrc": "20547:21:13",
																"nodeType": "YulFunctionCall",
																"src": "20547:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "20536:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "20536:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "20484:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20508:5:13",
														"nodeType": "YulTypedName",
														"src": "20508:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "20518:7:13",
														"nodeType": "YulTypedName",
														"src": "20518:7:13",
														"type": ""
													}
												],
												"src": "20484:90:13"
											},
											{
												"body": {
													"nativeSrc": "20620:76:13",
													"nodeType": "YulBlock",
													"src": "20620:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "20674:16:13",
																"nodeType": "YulBlock",
																"src": "20674:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20683:1:13",
																					"nodeType": "YulLiteral",
																					"src": "20683:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20686:1:13",
																					"nodeType": "YulLiteral",
																					"src": "20686:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20676:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20676:6:13"
																			},
																			"nativeSrc": "20676:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20676:12:13"
																		},
																		"nativeSrc": "20676:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20676:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20643:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "20643:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20665:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "20665:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "20650:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "20650:14:13"
																				},
																				"nativeSrc": "20650:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "20650:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20640:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "20640:2:13"
																		},
																		"nativeSrc": "20640:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20640:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20633:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20633:6:13"
																},
																"nativeSrc": "20633:40:13",
																"nodeType": "YulFunctionCall",
																"src": "20633:40:13"
															},
															"nativeSrc": "20630:60:13",
															"nodeType": "YulIf",
															"src": "20630:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "20580:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20613:5:13",
														"nodeType": "YulTypedName",
														"src": "20613:5:13",
														"type": ""
													}
												],
												"src": "20580:116:13"
											},
											{
												"body": {
													"nativeSrc": "20762:77:13",
													"nodeType": "YulBlock",
													"src": "20762:77:13",
													"statements": [
														{
															"nativeSrc": "20772:22:13",
															"nodeType": "YulAssignment",
															"src": "20772:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20787:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20787:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20781:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20781:5:13"
																},
																"nativeSrc": "20781:13:13",
																"nodeType": "YulFunctionCall",
																"src": "20781:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20772:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20772:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "20803:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "20803:23:13"
																},
																"nativeSrc": "20803:30:13",
																"nodeType": "YulFunctionCall",
																"src": "20803:30:13"
															},
															"nativeSrc": "20803:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "20803:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "20702:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20740:6:13",
														"nodeType": "YulTypedName",
														"src": "20740:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20748:3:13",
														"nodeType": "YulTypedName",
														"src": "20748:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20756:5:13",
														"nodeType": "YulTypedName",
														"src": "20756:5:13",
														"type": ""
													}
												],
												"src": "20702:137:13"
											},
											{
												"body": {
													"nativeSrc": "20919:271:13",
													"nodeType": "YulBlock",
													"src": "20919:271:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "20965:83:13",
																"nodeType": "YulBlock",
																"src": "20965:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20967:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "20967:77:13"
																			},
																			"nativeSrc": "20967:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20967:79:13"
																		},
																		"nativeSrc": "20967:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20967:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20940:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "20940:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20949:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20949:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20936:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20936:3:13"
																		},
																		"nativeSrc": "20936:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20936:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20961:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20961:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20932:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20932:3:13"
																},
																"nativeSrc": "20932:32:13",
																"nodeType": "YulFunctionCall",
																"src": "20932:32:13"
															},
															"nativeSrc": "20929:119:13",
															"nodeType": "YulIf",
															"src": "20929:119:13"
														},
														{
															"nativeSrc": "21058:125:13",
															"nodeType": "YulBlock",
															"src": "21058:125:13",
															"statements": [
																{
																	"nativeSrc": "21073:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21073:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21087:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21087:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21077:6:13",
																			"nodeType": "YulTypedName",
																			"src": "21077:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21102:71:13",
																	"nodeType": "YulAssignment",
																	"src": "21102:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21145:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "21145:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21156:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "21156:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21141:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "21141:3:13"
																				},
																				"nativeSrc": "21141:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "21141:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21165:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "21165:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "21112:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "21112:28:13"
																		},
																		"nativeSrc": "21112:61:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21112:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21102:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "21102:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "20845:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20889:9:13",
														"nodeType": "YulTypedName",
														"src": "20889:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20900:7:13",
														"nodeType": "YulTypedName",
														"src": "20900:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20912:6:13",
														"nodeType": "YulTypedName",
														"src": "20912:6:13",
														"type": ""
													}
												],
												"src": "20845:345:13"
											},
											{
												"body": {
													"nativeSrc": "21302:66:13",
													"nodeType": "YulBlock",
													"src": "21302:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21324:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "21324:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21332:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21332:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21320:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21320:3:13"
																		},
																		"nativeSrc": "21320:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21320:14:13"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
																		"kind": "string",
																		"nativeSrc": "21336:24:13",
																		"nodeType": "YulLiteral",
																		"src": "21336:24:13",
																		"type": "",
																		"value": "Caller is not an admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21313:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21313:6:13"
																},
																"nativeSrc": "21313:48:13",
																"nodeType": "YulFunctionCall",
																"src": "21313:48:13"
															},
															"nativeSrc": "21313:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "21313:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
												"nativeSrc": "21196:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21294:6:13",
														"nodeType": "YulTypedName",
														"src": "21294:6:13",
														"type": ""
													}
												],
												"src": "21196:172:13"
											},
											{
												"body": {
													"nativeSrc": "21520:220:13",
													"nodeType": "YulBlock",
													"src": "21520:220:13",
													"statements": [
														{
															"nativeSrc": "21530:74:13",
															"nodeType": "YulAssignment",
															"src": "21530:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21596:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21596:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21601:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21601:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21537:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "21537:58:13"
																},
																"nativeSrc": "21537:67:13",
																"nodeType": "YulFunctionCall",
																"src": "21537:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21530:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21530:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21702:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21702:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																	"nativeSrc": "21613:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "21613:88:13"
																},
																"nativeSrc": "21613:93:13",
																"nodeType": "YulFunctionCall",
																"src": "21613:93:13"
															},
															"nativeSrc": "21613:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "21613:93:13"
														},
														{
															"nativeSrc": "21715:19:13",
															"nodeType": "YulAssignment",
															"src": "21715:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21726:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21726:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21731:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21731:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21722:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21722:3:13"
																},
																"nativeSrc": "21722:12:13",
																"nodeType": "YulFunctionCall",
																"src": "21722:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21715:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21715:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21374:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21508:3:13",
														"nodeType": "YulTypedName",
														"src": "21508:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21516:3:13",
														"nodeType": "YulTypedName",
														"src": "21516:3:13",
														"type": ""
													}
												],
												"src": "21374:366:13"
											},
											{
												"body": {
													"nativeSrc": "21917:248:13",
													"nodeType": "YulBlock",
													"src": "21917:248:13",
													"statements": [
														{
															"nativeSrc": "21927:26:13",
															"nodeType": "YulAssignment",
															"src": "21927:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21939:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21939:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21950:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21950:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21935:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21935:3:13"
																},
																"nativeSrc": "21935:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21935:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21927:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21927:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21974:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21974:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21985:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21985:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21970:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21970:3:13"
																		},
																		"nativeSrc": "21970:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21970:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21993:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "21993:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21999:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21999:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21989:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21989:3:13"
																		},
																		"nativeSrc": "21989:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21989:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21963:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21963:6:13"
																},
																"nativeSrc": "21963:47:13",
																"nodeType": "YulFunctionCall",
																"src": "21963:47:13"
															},
															"nativeSrc": "21963:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "21963:47:13"
														},
														{
															"nativeSrc": "22019:139:13",
															"nodeType": "YulAssignment",
															"src": "22019:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22153:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "22153:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22027:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "22027:124:13"
																},
																"nativeSrc": "22027:131:13",
																"nodeType": "YulFunctionCall",
																"src": "22027:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22019:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22019:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21746:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21897:9:13",
														"nodeType": "YulTypedName",
														"src": "21897:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21912:4:13",
														"nodeType": "YulTypedName",
														"src": "21912:4:13",
														"type": ""
													}
												],
												"src": "21746:419:13"
											},
											{
												"body": {
													"nativeSrc": "22277:115:13",
													"nodeType": "YulBlock",
													"src": "22277:115:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22299:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "22299:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22307:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22307:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22295:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22295:3:13"
																		},
																		"nativeSrc": "22295:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22295:14:13"
																	},
																	{
																		"hexValue": "53746172742074696d65206d757374206265206265666f726520656e64207469",
																		"kind": "string",
																		"nativeSrc": "22311:34:13",
																		"nodeType": "YulLiteral",
																		"src": "22311:34:13",
																		"type": "",
																		"value": "Start time must be before end ti"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22288:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22288:6:13"
																},
																"nativeSrc": "22288:58:13",
																"nodeType": "YulFunctionCall",
																"src": "22288:58:13"
															},
															"nativeSrc": "22288:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "22288:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22367:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "22367:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22375:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22375:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22363:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22363:3:13"
																		},
																		"nativeSrc": "22363:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22363:15:13"
																	},
																	{
																		"hexValue": "6d65",
																		"kind": "string",
																		"nativeSrc": "22380:4:13",
																		"nodeType": "YulLiteral",
																		"src": "22380:4:13",
																		"type": "",
																		"value": "me"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22356:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22356:6:13"
																},
																"nativeSrc": "22356:29:13",
																"nodeType": "YulFunctionCall",
																"src": "22356:29:13"
															},
															"nativeSrc": "22356:29:13",
															"nodeType": "YulExpressionStatement",
															"src": "22356:29:13"
														}
													]
												},
												"name": "store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
												"nativeSrc": "22171:221:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22269:6:13",
														"nodeType": "YulTypedName",
														"src": "22269:6:13",
														"type": ""
													}
												],
												"src": "22171:221:13"
											},
											{
												"body": {
													"nativeSrc": "22544:220:13",
													"nodeType": "YulBlock",
													"src": "22544:220:13",
													"statements": [
														{
															"nativeSrc": "22554:74:13",
															"nodeType": "YulAssignment",
															"src": "22554:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22620:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22620:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22625:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22625:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22561:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "22561:58:13"
																},
																"nativeSrc": "22561:67:13",
																"nodeType": "YulFunctionCall",
																"src": "22561:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22554:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22554:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22726:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22726:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																	"nativeSrc": "22637:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "22637:88:13"
																},
																"nativeSrc": "22637:93:13",
																"nodeType": "YulFunctionCall",
																"src": "22637:93:13"
															},
															"nativeSrc": "22637:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "22637:93:13"
														},
														{
															"nativeSrc": "22739:19:13",
															"nodeType": "YulAssignment",
															"src": "22739:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22750:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22750:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22755:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22755:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22746:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22746:3:13"
																},
																"nativeSrc": "22746:12:13",
																"nodeType": "YulFunctionCall",
																"src": "22746:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22739:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22739:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22398:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22532:3:13",
														"nodeType": "YulTypedName",
														"src": "22532:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22540:3:13",
														"nodeType": "YulTypedName",
														"src": "22540:3:13",
														"type": ""
													}
												],
												"src": "22398:366:13"
											},
											{
												"body": {
													"nativeSrc": "22941:248:13",
													"nodeType": "YulBlock",
													"src": "22941:248:13",
													"statements": [
														{
															"nativeSrc": "22951:26:13",
															"nodeType": "YulAssignment",
															"src": "22951:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22963:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22963:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22974:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22974:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22959:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22959:3:13"
																},
																"nativeSrc": "22959:18:13",
																"nodeType": "YulFunctionCall",
																"src": "22959:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22951:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22951:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22998:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22998:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23009:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23009:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22994:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22994:3:13"
																		},
																		"nativeSrc": "22994:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22994:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23017:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "23017:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23023:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23023:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23013:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23013:3:13"
																		},
																		"nativeSrc": "23013:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23013:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22987:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22987:6:13"
																},
																"nativeSrc": "22987:47:13",
																"nodeType": "YulFunctionCall",
																"src": "22987:47:13"
															},
															"nativeSrc": "22987:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "22987:47:13"
														},
														{
															"nativeSrc": "23043:139:13",
															"nodeType": "YulAssignment",
															"src": "23043:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23177:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23177:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23051:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "23051:124:13"
																},
																"nativeSrc": "23051:131:13",
																"nodeType": "YulFunctionCall",
																"src": "23051:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23043:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23043:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22770:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22921:9:13",
														"nodeType": "YulTypedName",
														"src": "22921:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22936:4:13",
														"nodeType": "YulTypedName",
														"src": "22936:4:13",
														"type": ""
													}
												],
												"src": "22770:419:13"
											},
											{
												"body": {
													"nativeSrc": "23249:87:13",
													"nodeType": "YulBlock",
													"src": "23249:87:13",
													"statements": [
														{
															"nativeSrc": "23259:11:13",
															"nodeType": "YulAssignment",
															"src": "23259:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "23267:3:13",
																"nodeType": "YulIdentifier",
																"src": "23267:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "23259:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23259:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23287:1:13",
																		"nodeType": "YulLiteral",
																		"src": "23287:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "23290:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23290:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23280:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23280:6:13"
																},
																"nativeSrc": "23280:14:13",
																"nodeType": "YulFunctionCall",
																"src": "23280:14:13"
															},
															"nativeSrc": "23280:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "23280:14:13"
														},
														{
															"nativeSrc": "23303:26:13",
															"nodeType": "YulAssignment",
															"src": "23303:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23321:1:13",
																		"nodeType": "YulLiteral",
																		"src": "23321:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23324:4:13",
																		"nodeType": "YulLiteral",
																		"src": "23324:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "23311:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "23311:9:13"
																},
																"nativeSrc": "23311:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23311:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "23303:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23303:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "23195:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "23236:3:13",
														"nodeType": "YulTypedName",
														"src": "23236:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "23244:4:13",
														"nodeType": "YulTypedName",
														"src": "23244:4:13",
														"type": ""
													}
												],
												"src": "23195:141:13"
											},
											{
												"body": {
													"nativeSrc": "23386:49:13",
													"nodeType": "YulBlock",
													"src": "23386:49:13",
													"statements": [
														{
															"nativeSrc": "23396:33:13",
															"nodeType": "YulAssignment",
															"src": "23396:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23414:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "23414:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23421:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23421:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23410:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23410:3:13"
																		},
																		"nativeSrc": "23410:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23410:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23426:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23426:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "23406:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23406:3:13"
																},
																"nativeSrc": "23406:23:13",
																"nodeType": "YulFunctionCall",
																"src": "23406:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23396:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23396:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "23342:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23369:5:13",
														"nodeType": "YulTypedName",
														"src": "23369:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "23379:6:13",
														"nodeType": "YulTypedName",
														"src": "23379:6:13",
														"type": ""
													}
												],
												"src": "23342:93:13"
											},
											{
												"body": {
													"nativeSrc": "23494:54:13",
													"nodeType": "YulBlock",
													"src": "23494:54:13",
													"statements": [
														{
															"nativeSrc": "23504:37:13",
															"nodeType": "YulAssignment",
															"src": "23504:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "23529:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23529:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "23535:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "23535:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "23525:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23525:3:13"
																},
																"nativeSrc": "23525:16:13",
																"nodeType": "YulFunctionCall",
																"src": "23525:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "23504:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "23504:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "23441:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "23469:4:13",
														"nodeType": "YulTypedName",
														"src": "23469:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "23475:5:13",
														"nodeType": "YulTypedName",
														"src": "23475:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "23485:8:13",
														"nodeType": "YulTypedName",
														"src": "23485:8:13",
														"type": ""
													}
												],
												"src": "23441:107:13"
											},
											{
												"body": {
													"nativeSrc": "23630:317:13",
													"nodeType": "YulBlock",
													"src": "23630:317:13",
													"statements": [
														{
															"nativeSrc": "23640:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "23640:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "23661:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "23661:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23673:1:13",
																		"nodeType": "YulLiteral",
																		"src": "23673:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "23657:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23657:3:13"
																},
																"nativeSrc": "23657:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23657:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "23644:9:13",
																	"nodeType": "YulTypedName",
																	"src": "23644:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23684:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "23684:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "23715:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23715:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23726:66:13",
																		"nodeType": "YulLiteral",
																		"src": "23726:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "23696:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "23696:18:13"
																},
																"nativeSrc": "23696:97:13",
																"nodeType": "YulFunctionCall",
																"src": "23696:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "23688:4:13",
																	"nodeType": "YulTypedName",
																	"src": "23688:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23802:51:13",
															"nodeType": "YulAssignment",
															"src": "23802:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "23833:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23833:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "23844:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "23844:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "23814:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "23814:18:13"
																},
																"nativeSrc": "23814:39:13",
																"nodeType": "YulFunctionCall",
																"src": "23814:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "23802:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "23802:8:13"
																}
															]
														},
														{
															"nativeSrc": "23862:30:13",
															"nodeType": "YulAssignment",
															"src": "23862:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23875:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "23875:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "23886:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "23886:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "23882:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23882:3:13"
																		},
																		"nativeSrc": "23882:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23882:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23871:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23871:3:13"
																},
																"nativeSrc": "23871:21:13",
																"nodeType": "YulFunctionCall",
																"src": "23871:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23862:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "23862:5:13"
																}
															]
														},
														{
															"nativeSrc": "23901:40:13",
															"nodeType": "YulAssignment",
															"src": "23901:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23914:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "23914:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "23925:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "23925:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "23935:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "23935:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "23921:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23921:3:13"
																		},
																		"nativeSrc": "23921:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23921:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "23911:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "23911:2:13"
																},
																"nativeSrc": "23911:30:13",
																"nodeType": "YulFunctionCall",
																"src": "23911:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23901:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23901:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "23554:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23591:5:13",
														"nodeType": "YulTypedName",
														"src": "23591:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "23598:10:13",
														"nodeType": "YulTypedName",
														"src": "23598:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "23610:8:13",
														"nodeType": "YulTypedName",
														"src": "23610:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "23623:6:13",
														"nodeType": "YulTypedName",
														"src": "23623:6:13",
														"type": ""
													}
												],
												"src": "23554:393:13"
											},
											{
												"body": {
													"nativeSrc": "24013:82:13",
													"nodeType": "YulBlock",
													"src": "24013:82:13",
													"statements": [
														{
															"nativeSrc": "24023:66:13",
															"nodeType": "YulAssignment",
															"src": "24023:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "24081:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "24081:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "24063:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "24063:17:13"
																				},
																				"nativeSrc": "24063:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "24063:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "24054:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "24054:8:13"
																		},
																		"nativeSrc": "24054:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24054:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24036:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "24036:17:13"
																},
																"nativeSrc": "24036:53:13",
																"nodeType": "YulFunctionCall",
																"src": "24036:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "24023:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "24023:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "23953:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23993:5:13",
														"nodeType": "YulTypedName",
														"src": "23993:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "24003:9:13",
														"nodeType": "YulTypedName",
														"src": "24003:9:13",
														"type": ""
													}
												],
												"src": "23953:142:13"
											},
											{
												"body": {
													"nativeSrc": "24148:28:13",
													"nodeType": "YulBlock",
													"src": "24148:28:13",
													"statements": [
														{
															"nativeSrc": "24158:12:13",
															"nodeType": "YulAssignment",
															"src": "24158:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "24165:5:13",
																"nodeType": "YulIdentifier",
																"src": "24165:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "24158:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24158:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "24101:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24134:5:13",
														"nodeType": "YulTypedName",
														"src": "24134:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "24144:3:13",
														"nodeType": "YulTypedName",
														"src": "24144:3:13",
														"type": ""
													}
												],
												"src": "24101:75:13"
											},
											{
												"body": {
													"nativeSrc": "24258:193:13",
													"nodeType": "YulBlock",
													"src": "24258:193:13",
													"statements": [
														{
															"nativeSrc": "24268:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "24268:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "24323:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "24323:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "24292:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "24292:30:13"
																},
																"nativeSrc": "24292:39:13",
																"nodeType": "YulFunctionCall",
																"src": "24292:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "24272:16:13",
																	"nodeType": "YulTypedName",
																	"src": "24272:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24347:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "24347:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "24387:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "24387:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "24381:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "24381:5:13"
																				},
																				"nativeSrc": "24381:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "24381:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "24394:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "24394:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "24426:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "24426:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "24402:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "24402:23:13"
																				},
																				"nativeSrc": "24402:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "24402:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "24353:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "24353:27:13"
																		},
																		"nativeSrc": "24353:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24353:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "24340:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "24340:6:13"
																},
																"nativeSrc": "24340:105:13",
																"nodeType": "YulFunctionCall",
																"src": "24340:105:13"
															},
															"nativeSrc": "24340:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "24340:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "24182:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24235:4:13",
														"nodeType": "YulTypedName",
														"src": "24235:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "24241:6:13",
														"nodeType": "YulTypedName",
														"src": "24241:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "24249:7:13",
														"nodeType": "YulTypedName",
														"src": "24249:7:13",
														"type": ""
													}
												],
												"src": "24182:269:13"
											},
											{
												"body": {
													"nativeSrc": "24506:24:13",
													"nodeType": "YulBlock",
													"src": "24506:24:13",
													"statements": [
														{
															"nativeSrc": "24516:8:13",
															"nodeType": "YulAssignment",
															"src": "24516:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "24523:1:13",
																"nodeType": "YulLiteral",
																"src": "24523:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "24516:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24516:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "24457:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "24502:3:13",
														"nodeType": "YulTypedName",
														"src": "24502:3:13",
														"type": ""
													}
												],
												"src": "24457:73:13"
											},
											{
												"body": {
													"nativeSrc": "24589:136:13",
													"nodeType": "YulBlock",
													"src": "24589:136:13",
													"statements": [
														{
															"nativeSrc": "24599:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "24599:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "24613:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "24613:30:13"
																},
																"nativeSrc": "24613:32:13",
																"nodeType": "YulFunctionCall",
																"src": "24613:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "24603:6:13",
																	"nodeType": "YulTypedName",
																	"src": "24603:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24698:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "24698:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "24704:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24704:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "24712:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24712:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "24654:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24654:43:13"
																},
																"nativeSrc": "24654:65:13",
																"nodeType": "YulFunctionCall",
																"src": "24654:65:13"
															},
															"nativeSrc": "24654:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "24654:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "24536:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24575:4:13",
														"nodeType": "YulTypedName",
														"src": "24575:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "24581:6:13",
														"nodeType": "YulTypedName",
														"src": "24581:6:13",
														"type": ""
													}
												],
												"src": "24536:189:13"
											},
											{
												"body": {
													"nativeSrc": "24781:136:13",
													"nodeType": "YulBlock",
													"src": "24781:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "24848:63:13",
																"nodeType": "YulBlock",
																"src": "24848:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24892:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "24892:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24899:1:13",
																					"nodeType": "YulLiteral",
																					"src": "24899:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "24862:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "24862:29:13"
																			},
																			"nativeSrc": "24862:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24862:39:13"
																		},
																		"nativeSrc": "24862:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "24862:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "24801:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "24801:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "24808:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "24808:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "24798:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "24798:2:13"
																},
																"nativeSrc": "24798:14:13",
																"nodeType": "YulFunctionCall",
																"src": "24798:14:13"
															},
															"nativeSrc": "24791:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "24813:26:13",
																"nodeType": "YulBlock",
																"src": "24813:26:13",
																"statements": [
																	{
																		"nativeSrc": "24815:22:13",
																		"nodeType": "YulAssignment",
																		"src": "24815:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24828:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "24828:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24835:1:13",
																					"nodeType": "YulLiteral",
																					"src": "24835:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24824:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "24824:3:13"
																			},
																			"nativeSrc": "24824:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24824:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "24815:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "24815:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "24795:2:13",
																"nodeType": "YulBlock",
																"src": "24795:2:13",
																"statements": []
															},
															"src": "24791:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "24731:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "24769:5:13",
														"nodeType": "YulTypedName",
														"src": "24769:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24776:3:13",
														"nodeType": "YulTypedName",
														"src": "24776:3:13",
														"type": ""
													}
												],
												"src": "24731:186:13"
											},
											{
												"body": {
													"nativeSrc": "25002:464:13",
													"nodeType": "YulBlock",
													"src": "25002:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "25028:431:13",
																"nodeType": "YulBlock",
																"src": "25028:431:13",
																"statements": [
																	{
																		"nativeSrc": "25042:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "25042:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "25090:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "25090:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "25058:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "25058:31:13"
																			},
																			"nativeSrc": "25058:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "25058:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "25046:8:13",
																				"nodeType": "YulTypedName",
																				"src": "25046:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "25109:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "25109:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "25132:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "25132:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "25160:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "25160:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "25142:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "25142:17:13"
																					},
																					"nativeSrc": "25142:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "25142:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "25128:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "25128:3:13"
																			},
																			"nativeSrc": "25128:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "25128:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "25113:11:13",
																				"nodeType": "YulTypedName",
																				"src": "25113:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "25329:27:13",
																			"nodeType": "YulBlock",
																			"src": "25329:27:13",
																			"statements": [
																				{
																					"nativeSrc": "25331:23:13",
																					"nodeType": "YulAssignment",
																					"src": "25331:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "25346:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "25346:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "25331:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "25331:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "25313:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "25313:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "25325:2:13",
																					"nodeType": "YulLiteral",
																					"src": "25325:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "25310:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "25310:2:13"
																			},
																			"nativeSrc": "25310:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "25310:18:13"
																		},
																		"nativeSrc": "25307:49:13",
																		"nodeType": "YulIf",
																		"src": "25307:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "25398:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "25398:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "25415:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "25415:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "25443:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "25443:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "25425:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "25425:17:13"
																							},
																							"nativeSrc": "25425:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "25425:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "25411:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "25411:3:13"
																					},
																					"nativeSrc": "25411:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "25411:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "25369:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "25369:28:13"
																			},
																			"nativeSrc": "25369:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "25369:80:13"
																		},
																		"nativeSrc": "25369:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "25369:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "25019:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "25019:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25024:2:13",
																		"nodeType": "YulLiteral",
																		"src": "25024:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25016:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "25016:2:13"
																},
																"nativeSrc": "25016:11:13",
																"nodeType": "YulFunctionCall",
																"src": "25016:11:13"
															},
															"nativeSrc": "25013:446:13",
															"nodeType": "YulIf",
															"src": "25013:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "24923:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "24978:5:13",
														"nodeType": "YulTypedName",
														"src": "24978:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24985:3:13",
														"nodeType": "YulTypedName",
														"src": "24985:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "24990:10:13",
														"nodeType": "YulTypedName",
														"src": "24990:10:13",
														"type": ""
													}
												],
												"src": "24923:543:13"
											},
											{
												"body": {
													"nativeSrc": "25535:54:13",
													"nodeType": "YulBlock",
													"src": "25535:54:13",
													"statements": [
														{
															"nativeSrc": "25545:37:13",
															"nodeType": "YulAssignment",
															"src": "25545:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "25570:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "25570:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "25576:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "25576:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "25566:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25566:3:13"
																},
																"nativeSrc": "25566:16:13",
																"nodeType": "YulFunctionCall",
																"src": "25566:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "25545:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "25545:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "25472:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "25510:4:13",
														"nodeType": "YulTypedName",
														"src": "25510:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "25516:5:13",
														"nodeType": "YulTypedName",
														"src": "25516:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "25526:8:13",
														"nodeType": "YulTypedName",
														"src": "25526:8:13",
														"type": ""
													}
												],
												"src": "25472:117:13"
											},
											{
												"body": {
													"nativeSrc": "25646:118:13",
													"nodeType": "YulBlock",
													"src": "25646:118:13",
													"statements": [
														{
															"nativeSrc": "25656:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "25656:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25705:1:13",
																						"nodeType": "YulLiteral",
																						"src": "25705:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "25708:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "25708:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "25701:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "25701:3:13"
																				},
																				"nativeSrc": "25701:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "25701:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25720:1:13",
																						"nodeType": "YulLiteral",
																						"src": "25720:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "25716:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "25716:3:13"
																				},
																				"nativeSrc": "25716:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "25716:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "25672:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "25672:28:13"
																		},
																		"nativeSrc": "25672:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25672:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "25668:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25668:3:13"
																},
																"nativeSrc": "25668:56:13",
																"nodeType": "YulFunctionCall",
																"src": "25668:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "25660:4:13",
																	"nodeType": "YulTypedName",
																	"src": "25660:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25733:25:13",
															"nodeType": "YulAssignment",
															"src": "25733:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25747:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "25747:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "25753:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "25753:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "25743:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25743:3:13"
																},
																"nativeSrc": "25743:15:13",
																"nodeType": "YulFunctionCall",
																"src": "25743:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "25733:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "25733:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "25595:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "25623:4:13",
														"nodeType": "YulTypedName",
														"src": "25623:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "25629:5:13",
														"nodeType": "YulTypedName",
														"src": "25629:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "25639:6:13",
														"nodeType": "YulTypedName",
														"src": "25639:6:13",
														"type": ""
													}
												],
												"src": "25595:169:13"
											},
											{
												"body": {
													"nativeSrc": "25850:214:13",
													"nodeType": "YulBlock",
													"src": "25850:214:13",
													"statements": [
														{
															"nativeSrc": "25983:37:13",
															"nodeType": "YulAssignment",
															"src": "25983:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "26010:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "26010:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "26016:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "26016:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "25991:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "25991:18:13"
																},
																"nativeSrc": "25991:29:13",
																"nodeType": "YulFunctionCall",
																"src": "25991:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "25983:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "25983:4:13"
																}
															]
														},
														{
															"nativeSrc": "26029:29:13",
															"nodeType": "YulAssignment",
															"src": "26029:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "26040:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "26040:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "26050:1:13",
																				"nodeType": "YulLiteral",
																				"src": "26050:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "26053:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "26053:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "26046:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "26046:3:13"
																		},
																		"nativeSrc": "26046:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "26046:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "26037:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "26037:2:13"
																},
																"nativeSrc": "26037:21:13",
																"nodeType": "YulFunctionCall",
																"src": "26037:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "26029:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "26029:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "25769:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "25831:4:13",
														"nodeType": "YulTypedName",
														"src": "25831:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "25837:3:13",
														"nodeType": "YulTypedName",
														"src": "25837:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "25845:4:13",
														"nodeType": "YulTypedName",
														"src": "25845:4:13",
														"type": ""
													}
												],
												"src": "25769:295:13"
											},
											{
												"body": {
													"nativeSrc": "26161:1303:13",
													"nodeType": "YulBlock",
													"src": "26161:1303:13",
													"statements": [
														{
															"nativeSrc": "26172:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "26172:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "26219:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "26219:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "26186:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "26186:32:13"
																},
																"nativeSrc": "26186:37:13",
																"nodeType": "YulFunctionCall",
																"src": "26186:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "26176:6:13",
																	"nodeType": "YulTypedName",
																	"src": "26176:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "26308:22:13",
																"nodeType": "YulBlock",
																"src": "26308:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "26310:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "26310:16:13"
																			},
																			"nativeSrc": "26310:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "26310:18:13"
																		},
																		"nativeSrc": "26310:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "26310:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "26280:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "26280:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26288:18:13",
																		"nodeType": "YulLiteral",
																		"src": "26288:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26277:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "26277:2:13"
																},
																"nativeSrc": "26277:30:13",
																"nodeType": "YulFunctionCall",
																"src": "26277:30:13"
															},
															"nativeSrc": "26274:56:13",
															"nodeType": "YulIf",
															"src": "26274:56:13"
														},
														{
															"nativeSrc": "26340:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "26340:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "26386:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "26386:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "26380:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "26380:5:13"
																		},
																		"nativeSrc": "26380:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "26380:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "26354:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "26354:25:13"
																},
																"nativeSrc": "26354:38:13",
																"nodeType": "YulFunctionCall",
																"src": "26354:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "26344:6:13",
																	"nodeType": "YulTypedName",
																	"src": "26344:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "26485:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "26485:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "26491:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "26491:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "26499:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "26499:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "26439:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "26439:45:13"
																},
																"nativeSrc": "26439:67:13",
																"nodeType": "YulFunctionCall",
																"src": "26439:67:13"
															},
															"nativeSrc": "26439:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "26439:67:13"
														},
														{
															"nativeSrc": "26516:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "26516:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "26533:1:13",
																"nodeType": "YulLiteral",
																"src": "26533:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "26520:9:13",
																	"nodeType": "YulTypedName",
																	"src": "26520:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26544:17:13",
															"nodeType": "YulAssignment",
															"src": "26544:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "26557:4:13",
																"nodeType": "YulLiteral",
																"src": "26557:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "26544:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "26544:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "26608:611:13",
																		"nodeType": "YulBlock",
																		"src": "26608:611:13",
																		"statements": [
																			{
																				"nativeSrc": "26622:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26622:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "26641:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "26641:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "26653:4:13",
																									"nodeType": "YulLiteral",
																									"src": "26653:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "26649:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "26649:3:13"
																							},
																							"nativeSrc": "26649:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "26649:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "26637:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "26637:3:13"
																					},
																					"nativeSrc": "26637:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "26637:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "26626:7:13",
																						"nodeType": "YulTypedName",
																						"src": "26626:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "26673:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26673:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26719:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "26719:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "26687:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "26687:31:13"
																					},
																					"nativeSrc": "26687:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "26687:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "26677:6:13",
																						"nodeType": "YulTypedName",
																						"src": "26677:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "26737:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26737:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "26746:1:13",
																					"nodeType": "YulLiteral",
																					"src": "26746:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "26741:1:13",
																						"nodeType": "YulTypedName",
																						"src": "26741:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "26805:163:13",
																					"nodeType": "YulBlock",
																					"src": "26805:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26830:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "26830:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "26848:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "26848:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "26853:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "26853:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "26844:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "26844:3:13"
																												},
																												"nativeSrc": "26844:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "26844:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "26838:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "26838:5:13"
																										},
																										"nativeSrc": "26838:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "26838:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "26823:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "26823:6:13"
																								},
																								"nativeSrc": "26823:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "26823:42:13"
																							},
																							"nativeSrc": "26823:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "26823:42:13"
																						},
																						{
																							"nativeSrc": "26882:24:13",
																							"nodeType": "YulAssignment",
																							"src": "26882:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26896:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "26896:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26904:1:13",
																										"nodeType": "YulLiteral",
																										"src": "26904:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26892:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "26892:3:13"
																								},
																								"nativeSrc": "26892:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "26892:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "26882:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "26882:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "26923:31:13",
																							"nodeType": "YulAssignment",
																							"src": "26923:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "26940:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "26940:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26951:2:13",
																										"nodeType": "YulLiteral",
																										"src": "26951:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26936:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "26936:3:13"
																								},
																								"nativeSrc": "26936:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "26936:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "26923:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "26923:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "26771:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "26771:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "26774:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "26774:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "26768:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "26768:2:13"
																					},
																					"nativeSrc": "26768:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "26768:14:13"
																				},
																				"nativeSrc": "26760:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "26783:21:13",
																					"nodeType": "YulBlock",
																					"src": "26783:21:13",
																					"statements": [
																						{
																							"nativeSrc": "26785:17:13",
																							"nodeType": "YulAssignment",
																							"src": "26785:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "26794:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "26794:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26797:4:13",
																										"nodeType": "YulLiteral",
																										"src": "26797:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26790:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "26790:3:13"
																								},
																								"nativeSrc": "26790:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "26790:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "26785:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "26785:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "26764:3:13",
																					"nodeType": "YulBlock",
																					"src": "26764:3:13",
																					"statements": []
																				},
																				"src": "26760:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "27004:156:13",
																					"nodeType": "YulBlock",
																					"src": "27004:156:13",
																					"statements": [
																						{
																							"nativeSrc": "27022:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "27022:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "27049:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "27049:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "27054:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "27054:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "27045:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "27045:3:13"
																										},
																										"nativeSrc": "27045:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "27045:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "27039:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "27039:5:13"
																								},
																								"nativeSrc": "27039:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "27039:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "27026:9:13",
																									"nodeType": "YulTypedName",
																									"src": "27026:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "27089:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "27089:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "27116:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "27116:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "27131:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "27131:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "27139:4:13",
																														"nodeType": "YulLiteral",
																														"src": "27139:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "27127:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "27127:3:13"
																												},
																												"nativeSrc": "27127:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "27127:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "27097:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "27097:18:13"
																										},
																										"nativeSrc": "27097:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "27097:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "27082:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "27082:6:13"
																								},
																								"nativeSrc": "27082:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "27082:64:13"
																							},
																							"nativeSrc": "27082:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "27082:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "26987:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "26987:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "26996:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "26996:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "26984:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "26984:2:13"
																					},
																					"nativeSrc": "26984:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "26984:19:13"
																				},
																				"nativeSrc": "26981:179:13",
																				"nodeType": "YulIf",
																				"src": "26981:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "27180:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "27180:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "27194:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "27194:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "27202:1:13",
																											"nodeType": "YulLiteral",
																											"src": "27202:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "27190:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "27190:3:13"
																									},
																									"nativeSrc": "27190:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "27190:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "27206:1:13",
																									"nodeType": "YulLiteral",
																									"src": "27206:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "27186:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "27186:3:13"
																							},
																							"nativeSrc": "27186:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "27186:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "27173:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "27173:6:13"
																					},
																					"nativeSrc": "27173:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "27173:36:13"
																				},
																				"nativeSrc": "27173:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "27173:36:13"
																			}
																		]
																	},
																	"nativeSrc": "26601:618:13",
																	"nodeType": "YulCase",
																	"src": "26601:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "26606:1:13",
																		"nodeType": "YulLiteral",
																		"src": "26606:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "27236:222:13",
																		"nodeType": "YulBlock",
																		"src": "27236:222:13",
																		"statements": [
																			{
																				"nativeSrc": "27250:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27250:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "27263:1:13",
																					"nodeType": "YulLiteral",
																					"src": "27263:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "27254:5:13",
																						"nodeType": "YulTypedName",
																						"src": "27254:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "27287:67:13",
																					"nodeType": "YulBlock",
																					"src": "27287:67:13",
																					"statements": [
																						{
																							"nativeSrc": "27305:35:13",
																							"nodeType": "YulAssignment",
																							"src": "27305:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "27324:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "27324:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "27329:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "27329:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "27320:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "27320:3:13"
																										},
																										"nativeSrc": "27320:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "27320:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "27314:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "27314:5:13"
																								},
																								"nativeSrc": "27314:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "27314:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "27305:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "27305:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "27280:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "27280:6:13"
																				},
																				"nativeSrc": "27277:77:13",
																				"nodeType": "YulIf",
																				"src": "27277:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "27374:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "27374:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "27433:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "27433:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "27440:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "27440:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "27380:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "27380:52:13"
																							},
																							"nativeSrc": "27380:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "27380:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "27367:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "27367:6:13"
																					},
																					"nativeSrc": "27367:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "27367:81:13"
																				},
																				"nativeSrc": "27367:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "27367:81:13"
																			}
																		]
																	},
																	"nativeSrc": "27228:230:13",
																	"nodeType": "YulCase",
																	"src": "27228:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "26581:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "26581:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26589:2:13",
																		"nodeType": "YulLiteral",
																		"src": "26589:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26578:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "26578:2:13"
																},
																"nativeSrc": "26578:14:13",
																"nodeType": "YulFunctionCall",
																"src": "26578:14:13"
															},
															"nativeSrc": "26571:887:13",
															"nodeType": "YulSwitch",
															"src": "26571:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "26069:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "26150:4:13",
														"nodeType": "YulTypedName",
														"src": "26150:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "26156:3:13",
														"nodeType": "YulTypedName",
														"src": "26156:3:13",
														"type": ""
													}
												],
												"src": "26069:1395:13"
											},
											{
												"body": {
													"nativeSrc": "27576:124:13",
													"nodeType": "YulBlock",
													"src": "27576:124:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27598:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "27598:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27606:1:13",
																				"nodeType": "YulLiteral",
																				"src": "27606:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27594:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "27594:3:13"
																		},
																		"nativeSrc": "27594:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "27594:14:13"
																	},
																	{
																		"hexValue": "5769746864726177616c20616d6f756e74206d75737420626520677265617465",
																		"kind": "string",
																		"nativeSrc": "27610:34:13",
																		"nodeType": "YulLiteral",
																		"src": "27610:34:13",
																		"type": "",
																		"value": "Withdrawal amount must be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27587:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "27587:6:13"
																},
																"nativeSrc": "27587:58:13",
																"nodeType": "YulFunctionCall",
																"src": "27587:58:13"
															},
															"nativeSrc": "27587:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "27587:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27666:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "27666:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27674:2:13",
																				"nodeType": "YulLiteral",
																				"src": "27674:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27662:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "27662:3:13"
																		},
																		"nativeSrc": "27662:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "27662:15:13"
																	},
																	{
																		"hexValue": "72207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "27679:13:13",
																		"nodeType": "YulLiteral",
																		"src": "27679:13:13",
																		"type": "",
																		"value": "r than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27655:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "27655:6:13"
																},
																"nativeSrc": "27655:38:13",
																"nodeType": "YulFunctionCall",
																"src": "27655:38:13"
															},
															"nativeSrc": "27655:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "27655:38:13"
														}
													]
												},
												"name": "store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
												"nativeSrc": "27470:230:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27568:6:13",
														"nodeType": "YulTypedName",
														"src": "27568:6:13",
														"type": ""
													}
												],
												"src": "27470:230:13"
											},
											{
												"body": {
													"nativeSrc": "27852:220:13",
													"nodeType": "YulBlock",
													"src": "27852:220:13",
													"statements": [
														{
															"nativeSrc": "27862:74:13",
															"nodeType": "YulAssignment",
															"src": "27862:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27928:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "27928:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27933:2:13",
																		"nodeType": "YulLiteral",
																		"src": "27933:2:13",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27869:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "27869:58:13"
																},
																"nativeSrc": "27869:67:13",
																"nodeType": "YulFunctionCall",
																"src": "27869:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27862:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "27862:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28034:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "28034:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																	"nativeSrc": "27945:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "27945:88:13"
																},
																"nativeSrc": "27945:93:13",
																"nodeType": "YulFunctionCall",
																"src": "27945:93:13"
															},
															"nativeSrc": "27945:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "27945:93:13"
														},
														{
															"nativeSrc": "28047:19:13",
															"nodeType": "YulAssignment",
															"src": "28047:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28058:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "28058:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28063:2:13",
																		"nodeType": "YulLiteral",
																		"src": "28063:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28054:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "28054:3:13"
																},
																"nativeSrc": "28054:12:13",
																"nodeType": "YulFunctionCall",
																"src": "28054:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28047:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "28047:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27706:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27840:3:13",
														"nodeType": "YulTypedName",
														"src": "27840:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27848:3:13",
														"nodeType": "YulTypedName",
														"src": "27848:3:13",
														"type": ""
													}
												],
												"src": "27706:366:13"
											},
											{
												"body": {
													"nativeSrc": "28249:248:13",
													"nodeType": "YulBlock",
													"src": "28249:248:13",
													"statements": [
														{
															"nativeSrc": "28259:26:13",
															"nodeType": "YulAssignment",
															"src": "28259:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28271:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "28271:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28282:2:13",
																		"nodeType": "YulLiteral",
																		"src": "28282:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28267:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "28267:3:13"
																},
																"nativeSrc": "28267:18:13",
																"nodeType": "YulFunctionCall",
																"src": "28267:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28259:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "28259:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28306:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "28306:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28317:1:13",
																				"nodeType": "YulLiteral",
																				"src": "28317:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28302:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "28302:3:13"
																		},
																		"nativeSrc": "28302:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "28302:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28325:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "28325:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28331:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "28331:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28321:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "28321:3:13"
																		},
																		"nativeSrc": "28321:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "28321:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28295:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "28295:6:13"
																},
																"nativeSrc": "28295:47:13",
																"nodeType": "YulFunctionCall",
																"src": "28295:47:13"
															},
															"nativeSrc": "28295:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "28295:47:13"
														},
														{
															"nativeSrc": "28351:139:13",
															"nodeType": "YulAssignment",
															"src": "28351:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "28485:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "28485:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28359:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "28359:124:13"
																},
																"nativeSrc": "28359:131:13",
																"nodeType": "YulFunctionCall",
																"src": "28359:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28351:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "28351:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28078:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28229:9:13",
														"nodeType": "YulTypedName",
														"src": "28229:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28244:4:13",
														"nodeType": "YulTypedName",
														"src": "28244:4:13",
														"type": ""
													}
												],
												"src": "28078:419:13"
											},
											{
												"body": {
													"nativeSrc": "28609:62:13",
													"nodeType": "YulBlock",
													"src": "28609:62:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28631:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "28631:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28639:1:13",
																				"nodeType": "YulLiteral",
																				"src": "28639:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28627:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "28627:3:13"
																		},
																		"nativeSrc": "28627:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "28627:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "28643:20:13",
																		"nodeType": "YulLiteral",
																		"src": "28643:20:13",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28620:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "28620:6:13"
																},
																"nativeSrc": "28620:44:13",
																"nodeType": "YulFunctionCall",
																"src": "28620:44:13"
															},
															"nativeSrc": "28620:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "28620:44:13"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "28503:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28601:6:13",
														"nodeType": "YulTypedName",
														"src": "28601:6:13",
														"type": ""
													}
												],
												"src": "28503:168:13"
											},
											{
												"body": {
													"nativeSrc": "28823:220:13",
													"nodeType": "YulBlock",
													"src": "28823:220:13",
													"statements": [
														{
															"nativeSrc": "28833:74:13",
															"nodeType": "YulAssignment",
															"src": "28833:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28899:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "28899:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28904:2:13",
																		"nodeType": "YulLiteral",
																		"src": "28904:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28840:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "28840:58:13"
																},
																"nativeSrc": "28840:67:13",
																"nodeType": "YulFunctionCall",
																"src": "28840:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28833:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "28833:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29005:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "29005:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "28916:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "28916:88:13"
																},
																"nativeSrc": "28916:93:13",
																"nodeType": "YulFunctionCall",
																"src": "28916:93:13"
															},
															"nativeSrc": "28916:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "28916:93:13"
														},
														{
															"nativeSrc": "29018:19:13",
															"nodeType": "YulAssignment",
															"src": "29018:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29029:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "29029:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29034:2:13",
																		"nodeType": "YulLiteral",
																		"src": "29034:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29025:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "29025:3:13"
																},
																"nativeSrc": "29025:12:13",
																"nodeType": "YulFunctionCall",
																"src": "29025:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29018:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "29018:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28677:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28811:3:13",
														"nodeType": "YulTypedName",
														"src": "28811:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28819:3:13",
														"nodeType": "YulTypedName",
														"src": "28819:3:13",
														"type": ""
													}
												],
												"src": "28677:366:13"
											},
											{
												"body": {
													"nativeSrc": "29220:248:13",
													"nodeType": "YulBlock",
													"src": "29220:248:13",
													"statements": [
														{
															"nativeSrc": "29230:26:13",
															"nodeType": "YulAssignment",
															"src": "29230:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29242:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "29242:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29253:2:13",
																		"nodeType": "YulLiteral",
																		"src": "29253:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29238:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "29238:3:13"
																},
																"nativeSrc": "29238:18:13",
																"nodeType": "YulFunctionCall",
																"src": "29238:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29230:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "29230:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29277:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "29277:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29288:1:13",
																				"nodeType": "YulLiteral",
																				"src": "29288:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29273:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "29273:3:13"
																		},
																		"nativeSrc": "29273:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "29273:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29296:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "29296:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29302:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "29302:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29292:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "29292:3:13"
																		},
																		"nativeSrc": "29292:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "29292:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29266:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "29266:6:13"
																},
																"nativeSrc": "29266:47:13",
																"nodeType": "YulFunctionCall",
																"src": "29266:47:13"
															},
															"nativeSrc": "29266:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "29266:47:13"
														},
														{
															"nativeSrc": "29322:139:13",
															"nodeType": "YulAssignment",
															"src": "29322:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29456:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "29456:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29330:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "29330:124:13"
																},
																"nativeSrc": "29330:131:13",
																"nodeType": "YulFunctionCall",
																"src": "29330:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29322:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "29322:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29049:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29200:9:13",
														"nodeType": "YulTypedName",
														"src": "29200:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29215:4:13",
														"nodeType": "YulTypedName",
														"src": "29215:4:13",
														"type": ""
													}
												],
												"src": "29049:419:13"
											},
											{
												"body": {
													"nativeSrc": "29600:206:13",
													"nodeType": "YulBlock",
													"src": "29600:206:13",
													"statements": [
														{
															"nativeSrc": "29610:26:13",
															"nodeType": "YulAssignment",
															"src": "29610:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29622:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "29622:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29633:2:13",
																		"nodeType": "YulLiteral",
																		"src": "29633:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29618:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "29618:3:13"
																},
																"nativeSrc": "29618:18:13",
																"nodeType": "YulFunctionCall",
																"src": "29618:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29610:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "29610:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "29690:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "29690:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29703:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "29703:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29714:1:13",
																				"nodeType": "YulLiteral",
																				"src": "29714:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29699:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "29699:3:13"
																		},
																		"nativeSrc": "29699:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "29699:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "29646:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "29646:43:13"
																},
																"nativeSrc": "29646:71:13",
																"nodeType": "YulFunctionCall",
																"src": "29646:71:13"
															},
															"nativeSrc": "29646:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "29646:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "29771:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "29771:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29784:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "29784:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29795:2:13",
																				"nodeType": "YulLiteral",
																				"src": "29795:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29780:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "29780:3:13"
																		},
																		"nativeSrc": "29780:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "29780:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "29727:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "29727:43:13"
																},
																"nativeSrc": "29727:72:13",
																"nodeType": "YulFunctionCall",
																"src": "29727:72:13"
															},
															"nativeSrc": "29727:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "29727:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "29474:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29564:9:13",
														"nodeType": "YulTypedName",
														"src": "29564:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "29576:6:13",
														"nodeType": "YulTypedName",
														"src": "29576:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "29584:6:13",
														"nodeType": "YulTypedName",
														"src": "29584:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29595:4:13",
														"nodeType": "YulTypedName",
														"src": "29595:4:13",
														"type": ""
													}
												],
												"src": "29474:332:13"
											},
											{
												"body": {
													"nativeSrc": "29966:288:13",
													"nodeType": "YulBlock",
													"src": "29966:288:13",
													"statements": [
														{
															"nativeSrc": "29976:26:13",
															"nodeType": "YulAssignment",
															"src": "29976:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29988:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "29988:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29999:2:13",
																		"nodeType": "YulLiteral",
																		"src": "29999:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29984:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "29984:3:13"
																},
																"nativeSrc": "29984:18:13",
																"nodeType": "YulFunctionCall",
																"src": "29984:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29976:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "29976:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30056:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "30056:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30069:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "30069:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30080:1:13",
																				"nodeType": "YulLiteral",
																				"src": "30080:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30065:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "30065:3:13"
																		},
																		"nativeSrc": "30065:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "30065:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30012:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "30012:43:13"
																},
																"nativeSrc": "30012:71:13",
																"nodeType": "YulFunctionCall",
																"src": "30012:71:13"
															},
															"nativeSrc": "30012:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "30012:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30137:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "30137:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30150:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "30150:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30161:2:13",
																				"nodeType": "YulLiteral",
																				"src": "30161:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30146:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "30146:3:13"
																		},
																		"nativeSrc": "30146:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "30146:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30093:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "30093:43:13"
																},
																"nativeSrc": "30093:72:13",
																"nodeType": "YulFunctionCall",
																"src": "30093:72:13"
															},
															"nativeSrc": "30093:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "30093:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "30219:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "30219:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30232:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "30232:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30243:2:13",
																				"nodeType": "YulLiteral",
																				"src": "30243:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30228:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "30228:3:13"
																		},
																		"nativeSrc": "30228:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "30228:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30175:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "30175:43:13"
																},
																"nativeSrc": "30175:72:13",
																"nodeType": "YulFunctionCall",
																"src": "30175:72:13"
															},
															"nativeSrc": "30175:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "30175:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "29812:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29922:9:13",
														"nodeType": "YulTypedName",
														"src": "29922:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "29934:6:13",
														"nodeType": "YulTypedName",
														"src": "29934:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "29942:6:13",
														"nodeType": "YulTypedName",
														"src": "29942:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "29950:6:13",
														"nodeType": "YulTypedName",
														"src": "29950:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29961:4:13",
														"nodeType": "YulTypedName",
														"src": "29961:4:13",
														"type": ""
													}
												],
												"src": "29812:442:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IScorer_$1387_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IScorer_$1387_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IScorer_$1387_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IScorer_$1387__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IScorer_$1387_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not within round duration\")\n\n    }\n\n    function abi_encode_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf(memPtr) {\n\n        mstore(add(memPtr, 0), \"No claimable amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds in jar\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trust\")\n\n    }\n\n    function abi_encode_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Trust score\")\n\n    }\n\n    function abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ether transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect Ether amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit amount must be greater t\")\n\n        mstore(add(memPtr, 32), \"han zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not an admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start time must be before end ti\")\n\n        mstore(add(memPtr, 32), \"me\")\n\n    }\n\n    function abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal amount must be greate\")\n\n        mstore(add(memPtr, 32), \"r than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e0575f3560e01c80638da5cb5b1161007e578063b807a3c411610058578063b807a3c41461036f578063be9a768714610397578063f2fde38b146103bf578063f3fef3a3146103e7576101c7565b80638da5cb5b146102cd578063a9590e8a146102f7578063aee9c87214610333576101c7565b8063485cc955116100ba578063485cc95514610239578063715018a61461026157806385c758f7146102775780638a19c8bc146102a1576101c7565b80631e83409a146101cb57806342cb1fbc146101f357806347e7ef241461021d576101c7565b366101c7573460045f73f194afdf50b03e69bd7d057c1aa9e10c9954e4c973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461014591906118b9565b9250508190555073f194afdf50b03e69bd7d057c1aa9e10c9954e4c973ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62346040516101bd91906118fb565b60405180910390a3005b5f80fd5b3480156101d6575f80fd5b506101f160048036038101906101ec919061197f565b61040f565b005b3480156101fe575f80fd5b506102076108d7565b60405161021491906119b9565b60405180910390f35b610237600480360381019061023291906119fc565b6108ef565b005b348015610244575f80fd5b5061025f600480360381019061025a9190611a3a565b610aa9565b005b34801561026c575f80fd5b50610275610c6a565b005b348015610282575f80fd5b5061028b610c7d565b6040516102989190611ad3565b60405180910390f35b3480156102ac575f80fd5b506102b5610ca0565b6040516102c493929190611b5c565b60405180910390f35b3480156102d8575f80fd5b506102e1610d3d565b6040516102ee91906119b9565b60405180910390f35b348015610302575f80fd5b5061031d60048036038101906103189190611a3a565b610d72565b60405161032a91906118fb565b60405180910390f35b34801561033e575f80fd5b506103596004803603810190610354919061197f565b610d92565b60405161036691906118fb565b60405180910390f35b34801561037a575f80fd5b5061039560048036038101906103909190611b98565b610da7565b005b3480156103a2575f80fd5b506103bd60048036038101906103b89190611d14565b610f64565b005b3480156103ca575f80fd5b506103e560048036038101906103e0919061197f565b611104565b005b3480156103f2575f80fd5b5061040d600480360381019061040891906119fc565b611188565b005b60015f01544210158015610427575060018001544211155b610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d90611dca565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b90611e32565b60405180910390fd5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b90611e9a565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663db4f1024336040518263ffffffff1660e01b81526004016105fe9190611f02565b602060405180830381865afa158015610619573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063d9190611f42565b1161067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490611fb7565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107469190611fd5565b9250508190555073f194afdf50b03e69bd7d057c1aa9e10c9954e4c973ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610842575f3373ffffffffffffffffffffffffffffffffffffffff16826040516107b990612035565b5f6040518083038185875af1925050503d805f81146107f3576040519150601f19603f3d011682016040523d82523d5f602084013e6107f8565b606091505b505090508061083c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083390612093565b60405180910390fd5b5061086e565b61086d33828473ffffffffffffffffffffffffffffffffffffffff166114449092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683836040516108cb91906118fb565b60405180910390a35050565b73f194afdf50b03e69bd7d057c1aa9e10c9954e4c981565b73f194afdf50b03e69bd7d057c1aa9e10c9954e4c973ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361097d57803414610978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096f906120fb565b60405180910390fd5b6109ed565b5f81116109bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b690612189565b60405180910390fd5b6109ec3330838573ffffffffffffffffffffffffffffffffffffffff166114c3909392919063ffffffff16565b5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a3991906118b9565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6283604051610a9d91906118fb565b60405180910390a35050565b5f610ab2611545565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610afa5750825b90505f60018367ffffffffffffffff16148015610b2d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b3b575080155b15610b72576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610bbf576001855f0160086101000a81548160ff0219169083151502179055505b610bc88661156c565b865f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610c61575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c5891906121f3565b60405180910390a15b50505050505050565b610c72611580565b610c7b5f611607565b565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001805f015490806001015490806002018054610cbc90612239565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce890612239565b8015610d335780601f10610d0a57610100808354040283529160200191610d33565b820191905f5260205f20905b815481529060010190602001808311610d1657829003601f168201915b5050505050905083565b5f80610d476116d8565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6005602052815f5260405f20602052805f5260405f205f91509150505481565b6004602052805f5260405f205f915090505481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b8152600401610dff91906119b9565b602060405180830381865afa158015610e1a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e3e919061229e565b610e7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7490612313565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc283604051610f5791906118fb565b60405180910390a3505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b8152600401610fbc91906119b9565b602060405180830381865afa158015610fd7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ffb919061229e565b61103a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103190612313565b60405180910390fd5b81831061107c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611073906123a1565b60405180910390fd5b60405180606001604052808481526020018381526020018281525060015f820151815f01556020820151816001015560408201518160020190816110c09190612553565b509050507f09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e138383836040516110f793929190611b5c565b60405180910390a1505050565b61110c611580565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361117c575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161117391906119b9565b60405180910390fd5b61118581611607565b50565b611190611580565b5f81116111d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c990612692565b60405180910390fd5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015611252576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611249906126fa565b60405180910390fd5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461129e9190611fd5565b9250508190555073f194afdf50b03e69bd7d057c1aa9e10c9954e4c973ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113a1575f6112f5610d3d565b73ffffffffffffffffffffffffffffffffffffffff168260405161131890612035565b5f6040518083038185875af1925050503d805f8114611352576040519150601f19603f3d011682016040523d82523d5f602084013e611357565b606091505b505090508061139b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139290612093565b60405180910390fd5b506113d4565b6113d36113ac610d3d565b828473ffffffffffffffffffffffffffffffffffffffff166114449092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff166113f3610d3d565b73ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb8360405161143891906118fb565b60405180910390a35050565b6114be838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611477929190612718565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506116ff565b505050565b61153f848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016114f89392919061273f565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506116ff565b50505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61157461179a565b61157d816117da565b50565b61158861185e565b73ffffffffffffffffffffffffffffffffffffffff166115a6610d3d565b73ffffffffffffffffffffffffffffffffffffffff1614611605576115c961185e565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115fc91906119b9565b60405180910390fd5b565b5f6116106116d8565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f8060205f8451602086015f885af18061171e576040513d5f823e3d81fd5b3d92505f519150505f8214611737576001811415611752565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561179457836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161178b91906119b9565b60405180910390fd5b50505050565b6117a2611865565b6117d8576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6117e261179a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611852575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161184991906119b9565b60405180910390fd5b61185b81611607565b50565b5f33905090565b5f61186e611545565b5f0160089054906101000a900460ff16905090565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118c382611883565b91506118ce83611883565b92508282019050808211156118e6576118e561188c565b5b92915050565b6118f581611883565b82525050565b5f60208201905061190e5f8301846118ec565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61194e82611925565b9050919050565b61195e81611944565b8114611968575f80fd5b50565b5f8135905061197981611955565b92915050565b5f602082840312156119945761199361191d565b5b5f6119a18482850161196b565b91505092915050565b6119b381611944565b82525050565b5f6020820190506119cc5f8301846119aa565b92915050565b6119db81611883565b81146119e5575f80fd5b50565b5f813590506119f6816119d2565b92915050565b5f8060408385031215611a1257611a1161191d565b5b5f611a1f8582860161196b565b9250506020611a30858286016119e8565b9150509250929050565b5f8060408385031215611a5057611a4f61191d565b5b5f611a5d8582860161196b565b9250506020611a6e8582860161196b565b9150509250929050565b5f819050919050565b5f611a9b611a96611a9184611925565b611a78565b611925565b9050919050565b5f611aac82611a81565b9050919050565b5f611abd82611aa2565b9050919050565b611acd81611ab3565b82525050565b5f602082019050611ae65f830184611ac4565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611b2e82611aec565b611b388185611af6565b9350611b48818560208601611b06565b611b5181611b14565b840191505092915050565b5f606082019050611b6f5f8301866118ec565b611b7c60208301856118ec565b8181036040830152611b8e8184611b24565b9050949350505050565b5f805f60608486031215611baf57611bae61191d565b5b5f611bbc8682870161196b565b9350506020611bcd8682870161196b565b9250506040611bde868287016119e8565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611c2682611b14565b810181811067ffffffffffffffff82111715611c4557611c44611bf0565b5b80604052505050565b5f611c57611914565b9050611c638282611c1d565b919050565b5f67ffffffffffffffff821115611c8257611c81611bf0565b5b611c8b82611b14565b9050602081019050919050565b828183375f83830152505050565b5f611cb8611cb384611c68565b611c4e565b905082815260208101848484011115611cd457611cd3611bec565b5b611cdf848285611c98565b509392505050565b5f82601f830112611cfb57611cfa611be8565b5b8135611d0b848260208601611ca6565b91505092915050565b5f805f60608486031215611d2b57611d2a61191d565b5b5f611d38868287016119e8565b9350506020611d49868287016119e8565b925050604084013567ffffffffffffffff811115611d6a57611d69611921565b5b611d7686828701611ce7565b9150509250925092565b7f4e6f742077697468696e20726f756e64206475726174696f6e000000000000005f82015250565b5f611db4601983611af6565b9150611dbf82611d80565b602082019050919050565b5f6020820190508181035f830152611de181611da8565b9050919050565b7f4e6f20636c61696d61626c6520616d6f756e74000000000000000000000000005f82015250565b5f611e1c601383611af6565b9150611e2782611de8565b602082019050919050565b5f6020820190508181035f830152611e4981611e10565b9050919050565b7f496e73756666696369656e742066756e647320696e206a6172000000000000005f82015250565b5f611e84601983611af6565b9150611e8f82611e50565b602082019050919050565b5f6020820190508181035f830152611eb181611e78565b9050919050565b7f54727573740000000000000000000000000000000000000000000000000000005f82015250565b5f611eec600583611af6565b9150611ef782611eb8565b602082019050919050565b5f604082019050611f155f8301846119aa565b8181036020830152611f2681611ee0565b905092915050565b5f81519050611f3c816119d2565b92915050565b5f60208284031215611f5757611f5661191d565b5b5f611f6484828501611f2e565b91505092915050565b7f496e73756666696369656e742054727573742073636f726500000000000000005f82015250565b5f611fa1601883611af6565b9150611fac82611f6d565b602082019050919050565b5f6020820190508181035f830152611fce81611f95565b9050919050565b5f611fdf82611883565b9150611fea83611883565b92508282039050818111156120025761200161188c565b5b92915050565b5f81905092915050565b50565b5f6120205f83612008565b915061202b82612012565b5f82019050919050565b5f61203f82612015565b9150819050919050565b7f4574686572207472616e73666572206661696c656400000000000000000000005f82015250565b5f61207d601583611af6565b915061208882612049565b602082019050919050565b5f6020820190508181035f8301526120aa81612071565b9050919050565b7f496e636f727265637420457468657220616d6f756e74000000000000000000005f82015250565b5f6120e5601683611af6565b91506120f0826120b1565b602082019050919050565b5f6020820190508181035f830152612112816120d9565b9050919050565b7f4465706f73697420616d6f756e74206d757374206265206772656174657220745f8201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b5f612173602883611af6565b915061217e82612119565b604082019050919050565b5f6020820190508181035f8301526121a081612167565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f6121dd6121d86121d3846121a7565b611a78565b6121b0565b9050919050565b6121ed816121c3565b82525050565b5f6020820190506122065f8301846121e4565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061225057607f821691505b6020821081036122635761226261220c565b5b50919050565b5f8115159050919050565b61227d81612269565b8114612287575f80fd5b50565b5f8151905061229881612274565b92915050565b5f602082840312156122b3576122b261191d565b5b5f6122c08482850161228a565b91505092915050565b7f43616c6c6572206973206e6f7420616e2061646d696e000000000000000000005f82015250565b5f6122fd601683611af6565b9150612308826122c9565b602082019050919050565b5f6020820190508181035f83015261232a816122f1565b9050919050565b7f53746172742074696d65206d757374206265206265666f726520656e642074695f8201527f6d65000000000000000000000000000000000000000000000000000000000000602082015250565b5f61238b602283611af6565b915061239682612331565b604082019050919050565b5f6020820190508181035f8301526123b88161237f565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261241b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826123e0565b61242586836123e0565b95508019841693508086168417925050509392505050565b5f61245761245261244d84611883565b611a78565b611883565b9050919050565b5f819050919050565b6124708361243d565b61248461247c8261245e565b8484546123ec565b825550505050565b5f90565b61249861248c565b6124a3818484612467565b505050565b5b818110156124c6576124bb5f82612490565b6001810190506124a9565b5050565b601f82111561250b576124dc816123bf565b6124e5846123d1565b810160208510156124f4578190505b612508612500856123d1565b8301826124a8565b50505b505050565b5f82821c905092915050565b5f61252b5f1984600802612510565b1980831691505092915050565b5f612543838361251c565b9150826002028217905092915050565b61255c82611aec565b67ffffffffffffffff81111561257557612574611bf0565b5b61257f8254612239565b61258a8282856124ca565b5f60209050601f8311600181146125bb575f84156125a9578287015190505b6125b38582612538565b86555061261a565b601f1984166125c9866123bf565b5f5b828110156125f0578489015182556001820191506020850194506020810190506125cb565b8683101561260d5784890151612609601f89168261251c565b8355505b6001600288020188555050505b505050505050565b7f5769746864726177616c20616d6f756e74206d757374206265206772656174655f8201527f72207468616e207a65726f000000000000000000000000000000000000000000602082015250565b5f61267c602b83611af6565b915061268782612622565b604082019050919050565b5f6020820190508181035f8301526126a981612670565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f6126e4601283611af6565b91506126ef826126b0565b602082019050919050565b5f6020820190508181035f830152612711816126d8565b9050919050565b5f60408201905061272b5f8301856119aa565b61273860208301846118ec565b9392505050565b5f6060820190506127525f8301866119aa565b61275f60208301856119aa565b61276c60408301846118ec565b94935050505056fea264697066735822122043e1481c8167809fa7db7c783cf02c683613220197cc4a5a2e91ae0454e3473d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xB807A3C4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB807A3C4 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xBE9A7687 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x3E7 JUMPI PUSH2 0x1C7 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xA9590E8A EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xAEE9C872 EQ PUSH2 0x333 JUMPI PUSH2 0x1C7 JUMP JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0x2A1 JUMPI PUSH2 0x1C7 JUMP JUMPDEST DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x42CB1FBC EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x21D JUMPI PUSH2 0x1C7 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1C7 JUMPI CALLVALUE PUSH1 0x4 PUSH0 PUSH20 0xF194AFDF50B03E69BD7D057C1AA9E10C9954E4C9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH20 0xF194AFDF50B03E69BD7D057C1AA9E10C9954E4C9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0xAA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0xC6A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH2 0xDA7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0xF64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x1104 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x1188 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 ADD SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x427 JUMPI POP PUSH1 0x1 DUP1 ADD SLOAD TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45D SWAP1 PUSH2 0x1DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51B SWAP1 PUSH2 0x1E32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59B SWAP1 PUSH2 0x1E9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB4F1024 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x619 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x1F42 JUMP JUMPDEST GT PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x674 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH20 0xF194AFDF50B03E69BD7D057C1AA9E10C9954E4C9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x842 JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP1 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x86E JUMP JUMPDEST PUSH2 0x86D CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1444 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xF194AFDF50B03E69BD7D057C1AA9E10C9954E4C9 DUP2 JUMP JUMPDEST PUSH20 0xF194AFDF50B03E69BD7D057C1AA9E10C9954E4C9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x97D JUMPI DUP1 CALLVALUE EQ PUSH2 0x978 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96F SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9ED JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x9BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B6 SWAP1 PUSH2 0x2189 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EC CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14C3 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA39 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAB2 PUSH2 0x1545 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB2D JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB3B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBBF JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBC8 DUP7 PUSH2 0x156C JUMP JUMPDEST DUP7 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC61 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC72 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xC7B PUSH0 PUSH2 0x1607 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xCBC SWAP1 PUSH2 0x2239 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCE8 SWAP1 PUSH2 0x2239 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD33 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD33 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD16 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD47 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFF SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE1A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE3E SWAP2 SWAP1 PUSH2 0x229E JUMP JUMPDEST PUSH2 0xE7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE74 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF57 SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFD7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFFB SWAP2 SWAP1 PUSH2 0x229E JUMP JUMPDEST PUSH2 0x103A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1031 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 LT PUSH2 0x107C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1073 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x110C PUSH2 0x1580 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1185 DUP2 PUSH2 0x1607 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1190 PUSH2 0x1580 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x11D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C9 SWAP1 PUSH2 0x2692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1249 SWAP1 PUSH2 0x26FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH20 0xF194AFDF50B03E69BD7D057C1AA9E10C9954E4C9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13A1 JUMPI PUSH0 PUSH2 0x12F5 PUSH2 0xD3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1318 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1357 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x139B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1392 SWAP1 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x13D3 PUSH2 0x13AC PUSH2 0xD3D JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1444 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13F3 PUSH2 0xD3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x1438 SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x14BE DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1477 SWAP3 SWAP2 SWAP1 PUSH2 0x2718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x16FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x153F DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x14F8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x16FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1574 PUSH2 0x179A JUMP JUMPDEST PUSH2 0x157D DUP2 PUSH2 0x17DA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1588 PUSH2 0x185E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A6 PUSH2 0xD3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1605 JUMPI PUSH2 0x15C9 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1610 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x171E JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1737 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1752 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1794 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178B SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x17A2 PUSH2 0x1865 JUMP JUMPDEST PUSH2 0x17D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x17E2 PUSH2 0x179A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1852 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1849 SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x185B DUP2 PUSH2 0x1607 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x186E PUSH2 0x1545 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18C3 DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 POP PUSH2 0x18CE DUP4 PUSH2 0x1883 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18E6 JUMPI PUSH2 0x18E5 PUSH2 0x188C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18F5 DUP2 PUSH2 0x1883 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x190E PUSH0 DUP4 ADD DUP5 PUSH2 0x18EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x194E DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x195E DUP2 PUSH2 0x1944 JUMP JUMPDEST DUP2 EQ PUSH2 0x1968 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1979 DUP2 PUSH2 0x1955 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1994 JUMPI PUSH2 0x1993 PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19A1 DUP5 DUP3 DUP6 ADD PUSH2 0x196B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19B3 DUP2 PUSH2 0x1944 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19CC PUSH0 DUP4 ADD DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19DB DUP2 PUSH2 0x1883 JUMP JUMPDEST DUP2 EQ PUSH2 0x19E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F6 DUP2 PUSH2 0x19D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A12 JUMPI PUSH2 0x1A11 PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1F DUP6 DUP3 DUP7 ADD PUSH2 0x196B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A30 DUP6 DUP3 DUP7 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A50 JUMPI PUSH2 0x1A4F PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A5D DUP6 DUP3 DUP7 ADD PUSH2 0x196B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A6E DUP6 DUP3 DUP7 ADD PUSH2 0x196B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A9B PUSH2 0x1A96 PUSH2 0x1A91 DUP5 PUSH2 0x1925 JUMP JUMPDEST PUSH2 0x1A78 JUMP JUMPDEST PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AAC DUP3 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABD DUP3 PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACD DUP2 PUSH2 0x1AB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B2E DUP3 PUSH2 0x1AEC JUMP JUMPDEST PUSH2 0x1B38 DUP2 DUP6 PUSH2 0x1AF6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B48 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x1B51 DUP2 PUSH2 0x1B14 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B6F PUSH0 DUP4 ADD DUP7 PUSH2 0x18EC JUMP JUMPDEST PUSH2 0x1B7C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18EC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B8E DUP2 DUP5 PUSH2 0x1B24 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BAF JUMPI PUSH2 0x1BAE PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBC DUP7 DUP3 DUP8 ADD PUSH2 0x196B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BCD DUP7 DUP3 DUP8 ADD PUSH2 0x196B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BDE DUP7 DUP3 DUP8 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1C26 DUP3 PUSH2 0x1B14 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C45 JUMPI PUSH2 0x1C44 PUSH2 0x1BF0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C57 PUSH2 0x1914 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C63 DUP3 DUP3 PUSH2 0x1C1D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C82 JUMPI PUSH2 0x1C81 PUSH2 0x1BF0 JUMP JUMPDEST JUMPDEST PUSH2 0x1C8B DUP3 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB8 PUSH2 0x1CB3 DUP5 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x1C4E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CD4 JUMPI PUSH2 0x1CD3 PUSH2 0x1BEC JUMP JUMPDEST JUMPDEST PUSH2 0x1CDF DUP5 DUP3 DUP6 PUSH2 0x1C98 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x1BE8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D0B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D2B JUMPI PUSH2 0x1D2A PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D38 DUP7 DUP3 DUP8 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D49 DUP7 DUP3 DUP8 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D6A JUMPI PUSH2 0x1D69 PUSH2 0x1921 JUMP JUMPDEST JUMPDEST PUSH2 0x1D76 DUP7 DUP3 DUP8 ADD PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E6F742077697468696E20726F756E64206475726174696F6E00000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB4 PUSH1 0x19 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBF DUP3 PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DE1 DUP2 PUSH2 0x1DA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1C PUSH1 0x13 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E27 DUP3 PUSH2 0x1DE8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E49 DUP2 PUSH2 0x1E10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E84 PUSH1 0x19 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E8F DUP3 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EB1 DUP2 PUSH2 0x1E78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472757374000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEC PUSH1 0x5 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF7 DUP3 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F15 PUSH0 DUP4 ADD DUP5 PUSH2 0x19AA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1F26 DUP2 PUSH2 0x1EE0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F3C DUP2 PUSH2 0x19D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F57 JUMPI PUSH2 0x1F56 PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F64 DUP5 DUP3 DUP6 ADD PUSH2 0x1F2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742054727573742073636F72650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA1 PUSH1 0x18 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAC DUP3 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FCE DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDF DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEA DUP4 PUSH2 0x1883 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2002 JUMPI PUSH2 0x2001 PUSH2 0x188C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2020 PUSH0 DUP4 PUSH2 0x2008 JUMP JUMPDEST SWAP2 POP PUSH2 0x202B DUP3 PUSH2 0x2012 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x203F DUP3 PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x207D PUSH1 0x15 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2088 DUP3 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20AA DUP2 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420457468657220616D6F756E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20E5 PUSH1 0x16 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F0 DUP3 PUSH2 0x20B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2112 DUP2 PUSH2 0x20D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2173 PUSH1 0x28 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x217E DUP3 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21A0 DUP2 PUSH2 0x2167 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21DD PUSH2 0x21D8 PUSH2 0x21D3 DUP5 PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0x1A78 JUMP JUMPDEST PUSH2 0x21B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21ED DUP2 PUSH2 0x21C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2206 PUSH0 DUP4 ADD DUP5 PUSH2 0x21E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2250 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2263 JUMPI PUSH2 0x2262 PUSH2 0x220C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x227D DUP2 PUSH2 0x2269 JUMP JUMPDEST DUP2 EQ PUSH2 0x2287 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2298 DUP2 PUSH2 0x2274 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B3 JUMPI PUSH2 0x22B2 PUSH2 0x191D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C0 DUP5 DUP3 DUP6 ADD PUSH2 0x228A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22FD PUSH1 0x16 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2308 DUP3 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x232A DUP2 PUSH2 0x22F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x238B PUSH1 0x22 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2396 DUP3 PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23B8 DUP2 PUSH2 0x237F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x241B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x23E0 JUMP JUMPDEST PUSH2 0x2425 DUP7 DUP4 PUSH2 0x23E0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2457 PUSH2 0x2452 PUSH2 0x244D DUP5 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x1A78 JUMP JUMPDEST PUSH2 0x1883 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2470 DUP4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x2484 PUSH2 0x247C DUP3 PUSH2 0x245E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x23EC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2498 PUSH2 0x248C JUMP JUMPDEST PUSH2 0x24A3 DUP2 DUP5 DUP5 PUSH2 0x2467 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24C6 JUMPI PUSH2 0x24BB PUSH0 DUP3 PUSH2 0x2490 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24A9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x250B JUMPI PUSH2 0x24DC DUP2 PUSH2 0x23BF JUMP JUMPDEST PUSH2 0x24E5 DUP5 PUSH2 0x23D1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x24F4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2508 PUSH2 0x2500 DUP6 PUSH2 0x23D1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x24A8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x252B PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2510 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2543 DUP4 DUP4 PUSH2 0x251C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x255C DUP3 PUSH2 0x1AEC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2575 JUMPI PUSH2 0x2574 PUSH2 0x1BF0 JUMP JUMPDEST JUMPDEST PUSH2 0x257F DUP3 SLOAD PUSH2 0x2239 JUMP JUMPDEST PUSH2 0x258A DUP3 DUP3 DUP6 PUSH2 0x24CA JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x25BB JUMPI PUSH0 DUP5 ISZERO PUSH2 0x25A9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x25B3 DUP6 DUP3 PUSH2 0x2538 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x261A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x25C9 DUP7 PUSH2 0x23BF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x25F0 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25CB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x260D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2609 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x251C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x267C PUSH1 0x2B DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2687 DUP3 PUSH2 0x2622 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26A9 DUP2 PUSH2 0x2670 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26E4 PUSH1 0x12 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x26EF DUP3 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2711 DUP2 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x272B PUSH0 DUP4 ADD DUP6 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x2738 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18EC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2752 PUSH0 DUP4 ADD DUP7 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x275F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x276C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18EC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xE1 BASEFEE SHR DUP2 PUSH8 0x809FA7DB7C783CF0 0x2C PUSH9 0x3613220197CC4A5A2E SWAP2 0xAE DIV SLOAD 0xE3 SELFBALANCE RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "367:5330:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5624:9;5600:13;:20;574:42;5600:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;574:42;5649:37;;5657:10;5649:37;;;5676:9;5649:37;;;;;;:::i;:::-;;;;;;;;367:5330;;;;;2841:919;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;542:74;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2303:453;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1903:182;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;623:21:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;886:25;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1100:69:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1002:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3992:202;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4443:278;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4926:557:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2841:919;2918:12;:18;;;2899:15;:37;;:76;;;;;2959:12;:16;;;2940:15;:35;;2899:76;2891:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;3018:25;3046:14;:26;3061:10;3046:26;;;;;;;;;;;;;;;:33;3073:5;3046:33;;;;;;;;;;;;;;;;3018:61;;3118:1;3098:17;:21;3090:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3186:17;3162:13;:20;3176:5;3162:20;;;;;;;;;;;;;;;;:41;;3154:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3288:1;3252:6;;;;;;;;;;;:12;;;3265:10;3252:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;3244:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;3367:1;3331:14;:26;3346:10;3331:26;;;;;;;;;;;;;;;:33;3358:5;3331:33;;;;;;;;;;;;;;;:37;;;;3403:17;3379:13;:20;3393:5;3379:20;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;574:42;3437:14;;:5;:14;;;3433:257;;3469:12;3487:10;:15;;3510:17;3487:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3468:64;;;3555:7;3547:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3453:147;3433:257;;;3621:57;3648:10;3660:17;3628:5;3621:26;;;;:57;;;;;:::i;:::-;3433:257;3727:5;3707:45;;3715:10;3707:45;;;3734:17;3707:45;;;;;;:::i;:::-;;;;;;;;2880:880;2841:919;:::o;542:74::-;574:42;542:74;:::o;2303:453::-;574:42;2383:14;;:5;:14;;;2379:277;;2435:6;2422:9;:19;2414:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2379:277;;;2518:1;2509:6;:10;2501:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2579:65;2610:10;2630:4;2637:6;2586:5;2579:30;;;;:65;;;;;;:::i;:::-;2379:277;2692:6;2668:13;:20;2682:5;2668:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;2734:5;2714:34;;2722:10;2714:34;;;2741:6;2714:34;;;;;;:::i;:::-;;;;;;;;2303:453;;:::o;1903:182::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1987:21:12::1;2002:5;1987:14;:21::i;:::-;2069:7;2052:6;::::0;:25:::1;;;;;;;;;;;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1903:182:12;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;623:21:12:-;;;;;;;;;;;;:::o;886:25::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;1100:69:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1002:48::-;;;;;;;;;;;;;;;;;:::o;3992:202::-;1651:6;;;;;;;;;;:14;;;1666:10;1651:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1643:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4123:6:::1;4093:14;:20;4108:4;4093:20;;;;;;;;;;;;;;;:27;4114:5;4093:27;;;;;;;;;;;;;;;:36;;;;4172:5;4145:41;;4166:4;4145:41;;;4179:6;4145:41;;;;;;:::i;:::-;;;;;;;;3992:202:::0;;;:::o;4443:278::-;1651:6;;;;;;;;;;:14;;;1666:10;1651:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1643:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4562:3:::1;4554:5;:11;4546:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4630:30;;;;;;;;4636:5;4630:30;;;;4643:3;4630:30;;;;4648:11;4630:30;;::::0;4615:12:::1;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4676:37;4689:5;4696:3;4701:11;4676:37;;;;;;;;:::i;:::-;;;;;;;;4443:278:::0;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;4926:557:12:-;2334:13:0;:11;:13::i;:::-;5022:1:12::1;5013:6;:10;5005:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5114:6;5090:13;:20;5104:5;5090:20;;;;;;;;;;;;;;;;:30;;5082:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5180:6;5156:13;:20;5170:5;5156:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;574:42;5203:14;;:5;:14;;::::0;5199:229:::1;;5235:12;5253:7;:5;:7::i;:::-;:12;;5273:6;5253:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5234:50;;;5307:7;5299:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;5219:133;5199:229;;;5373:43;5400:7;:5;:7::i;:::-;5409:6;5380:5;5373:26;;;;:43;;;;;:::i;:::-;5199:229;5461:5;5443:32;;5452:7;:5;:7::i;:::-;5443:32;;;5468:6;5443:32;;;;;;:::i;:::-;;;;;;;;4926:557:::0;;:::o;1271:160:7:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;1670:188::-;1770:81;1790:5;1812;:18;;;1833:4;1839:2;1843:5;1797:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;2658:162::-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;7738:720:7:-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;887:96:2:-;940:7;966:10;959:17;;887:96;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;7:77:13:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;473:118::-;560:24;578:5;560:24;:::i;:::-;555:3;548:37;473:118;;:::o;597:222::-;690:4;728:2;717:9;713:18;705:26;;741:71;809:1;798:9;794:17;785:6;741:71;:::i;:::-;597:222;;;;:::o;825:75::-;858:6;891:2;885:9;875:19;;825:75;:::o;906:117::-;1015:1;1012;1005:12;1029:117;1138:1;1135;1128:12;1152:126;1189:7;1229:42;1222:5;1218:54;1207:65;;1152:126;;;:::o;1284:96::-;1321:7;1350:24;1368:5;1350:24;:::i;:::-;1339:35;;1284:96;;;:::o;1386:122::-;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;1514:139::-;1560:5;1598:6;1585:20;1576:29;;1614:33;1641:5;1614:33;:::i;:::-;1514:139;;;;:::o;1659:329::-;1718:6;1767:2;1755:9;1746:7;1742:23;1738:32;1735:119;;;1773:79;;:::i;:::-;1735:119;1893:1;1918:53;1963:7;1954:6;1943:9;1939:22;1918:53;:::i;:::-;1908:63;;1864:117;1659:329;;;;:::o;1994:118::-;2081:24;2099:5;2081:24;:::i;:::-;2076:3;2069:37;1994:118;;:::o;2118:222::-;2211:4;2249:2;2238:9;2234:18;2226:26;;2262:71;2330:1;2319:9;2315:17;2306:6;2262:71;:::i;:::-;2118:222;;;;:::o;2346:122::-;2419:24;2437:5;2419:24;:::i;:::-;2412:5;2409:35;2399:63;;2458:1;2455;2448:12;2399:63;2346:122;:::o;2474:139::-;2520:5;2558:6;2545:20;2536:29;;2574:33;2601:5;2574:33;:::i;:::-;2474:139;;;;:::o;2619:474::-;2687:6;2695;2744:2;2732:9;2723:7;2719:23;2715:32;2712:119;;;2750:79;;:::i;:::-;2712:119;2870:1;2895:53;2940:7;2931:6;2920:9;2916:22;2895:53;:::i;:::-;2885:63;;2841:117;2997:2;3023:53;3068:7;3059:6;3048:9;3044:22;3023:53;:::i;:::-;3013:63;;2968:118;2619:474;;;;;:::o;3099:::-;3167:6;3175;3224:2;3212:9;3203:7;3199:23;3195:32;3192:119;;;3230:79;;:::i;:::-;3192:119;3350:1;3375:53;3420:7;3411:6;3400:9;3396:22;3375:53;:::i;:::-;3365:63;;3321:117;3477:2;3503:53;3548:7;3539:6;3528:9;3524:22;3503:53;:::i;:::-;3493:63;;3448:118;3099:474;;;;;:::o;3579:60::-;3607:3;3628:5;3621:12;;3579:60;;;:::o;3645:142::-;3695:9;3728:53;3746:34;3755:24;3773:5;3755:24;:::i;:::-;3746:34;:::i;:::-;3728:53;:::i;:::-;3715:66;;3645:142;;;:::o;3793:126::-;3843:9;3876:37;3907:5;3876:37;:::i;:::-;3863:50;;3793:126;;;:::o;3925:142::-;3991:9;4024:37;4055:5;4024:37;:::i;:::-;4011:50;;3925:142;;;:::o;4073:163::-;4176:53;4223:5;4176:53;:::i;:::-;4171:3;4164:66;4073:163;;:::o;4242:254::-;4351:4;4389:2;4378:9;4374:18;4366:26;;4402:87;4486:1;4475:9;4471:17;4462:6;4402:87;:::i;:::-;4242:254;;;;:::o;4502:99::-;4554:6;4588:5;4582:12;4572:22;;4502:99;;;:::o;4607:169::-;4691:11;4725:6;4720:3;4713:19;4765:4;4760:3;4756:14;4741:29;;4607:169;;;;:::o;4782:139::-;4871:6;4866:3;4861;4855:23;4912:1;4903:6;4898:3;4894:16;4887:27;4782:139;;;:::o;4927:102::-;4968:6;5019:2;5015:7;5010:2;5003:5;4999:14;4995:28;4985:38;;4927:102;;;:::o;5035:377::-;5123:3;5151:39;5184:5;5151:39;:::i;:::-;5206:71;5270:6;5265:3;5206:71;:::i;:::-;5199:78;;5286:65;5344:6;5339:3;5332:4;5325:5;5321:16;5286:65;:::i;:::-;5376:29;5398:6;5376:29;:::i;:::-;5371:3;5367:39;5360:46;;5127:285;5035:377;;;;:::o;5418:533::-;5587:4;5625:2;5614:9;5610:18;5602:26;;5638:71;5706:1;5695:9;5691:17;5682:6;5638:71;:::i;:::-;5719:72;5787:2;5776:9;5772:18;5763:6;5719:72;:::i;:::-;5838:9;5832:4;5828:20;5823:2;5812:9;5808:18;5801:48;5866:78;5939:4;5930:6;5866:78;:::i;:::-;5858:86;;5418:533;;;;;;:::o;5957:619::-;6034:6;6042;6050;6099:2;6087:9;6078:7;6074:23;6070:32;6067:119;;;6105:79;;:::i;:::-;6067:119;6225:1;6250:53;6295:7;6286:6;6275:9;6271:22;6250:53;:::i;:::-;6240:63;;6196:117;6352:2;6378:53;6423:7;6414:6;6403:9;6399:22;6378:53;:::i;:::-;6368:63;;6323:118;6480:2;6506:53;6551:7;6542:6;6531:9;6527:22;6506:53;:::i;:::-;6496:63;;6451:118;5957:619;;;;;:::o;6582:117::-;6691:1;6688;6681:12;6705:117;6814:1;6811;6804:12;6828:180;6876:77;6873:1;6866:88;6973:4;6970:1;6963:15;6997:4;6994:1;6987:15;7014:281;7097:27;7119:4;7097:27;:::i;:::-;7089:6;7085:40;7227:6;7215:10;7212:22;7191:18;7179:10;7176:34;7173:62;7170:88;;;7238:18;;:::i;:::-;7170:88;7278:10;7274:2;7267:22;7057:238;7014:281;;:::o;7301:129::-;7335:6;7362:20;;:::i;:::-;7352:30;;7391:33;7419:4;7411:6;7391:33;:::i;:::-;7301:129;;;:::o;7436:308::-;7498:4;7588:18;7580:6;7577:30;7574:56;;;7610:18;;:::i;:::-;7574:56;7648:29;7670:6;7648:29;:::i;:::-;7640:37;;7732:4;7726;7722:15;7714:23;;7436:308;;;:::o;7750:148::-;7848:6;7843:3;7838;7825:30;7889:1;7880:6;7875:3;7871:16;7864:27;7750:148;;;:::o;7904:425::-;7982:5;8007:66;8023:49;8065:6;8023:49;:::i;:::-;8007:66;:::i;:::-;7998:75;;8096:6;8089:5;8082:21;8134:4;8127:5;8123:16;8172:3;8163:6;8158:3;8154:16;8151:25;8148:112;;;8179:79;;:::i;:::-;8148:112;8269:54;8316:6;8311:3;8306;8269:54;:::i;:::-;7988:341;7904:425;;;;;:::o;8349:340::-;8405:5;8454:3;8447:4;8439:6;8435:17;8431:27;8421:122;;8462:79;;:::i;:::-;8421:122;8579:6;8566:20;8604:79;8679:3;8671:6;8664:4;8656:6;8652:17;8604:79;:::i;:::-;8595:88;;8411:278;8349:340;;;;:::o;8695:799::-;8782:6;8790;8798;8847:2;8835:9;8826:7;8822:23;8818:32;8815:119;;;8853:79;;:::i;:::-;8815:119;8973:1;8998:53;9043:7;9034:6;9023:9;9019:22;8998:53;:::i;:::-;8988:63;;8944:117;9100:2;9126:53;9171:7;9162:6;9151:9;9147:22;9126:53;:::i;:::-;9116:63;;9071:118;9256:2;9245:9;9241:18;9228:32;9287:18;9279:6;9276:30;9273:117;;;9309:79;;:::i;:::-;9273:117;9414:63;9469:7;9460:6;9449:9;9445:22;9414:63;:::i;:::-;9404:73;;9199:288;8695:799;;;;;:::o;9500:175::-;9640:27;9636:1;9628:6;9624:14;9617:51;9500:175;:::o;9681:366::-;9823:3;9844:67;9908:2;9903:3;9844:67;:::i;:::-;9837:74;;9920:93;10009:3;9920:93;:::i;:::-;10038:2;10033:3;10029:12;10022:19;;9681:366;;;:::o;10053:419::-;10219:4;10257:2;10246:9;10242:18;10234:26;;10306:9;10300:4;10296:20;10292:1;10281:9;10277:17;10270:47;10334:131;10460:4;10334:131;:::i;:::-;10326:139;;10053:419;;;:::o;10478:169::-;10618:21;10614:1;10606:6;10602:14;10595:45;10478:169;:::o;10653:366::-;10795:3;10816:67;10880:2;10875:3;10816:67;:::i;:::-;10809:74;;10892:93;10981:3;10892:93;:::i;:::-;11010:2;11005:3;11001:12;10994:19;;10653:366;;;:::o;11025:419::-;11191:4;11229:2;11218:9;11214:18;11206:26;;11278:9;11272:4;11268:20;11264:1;11253:9;11249:17;11242:47;11306:131;11432:4;11306:131;:::i;:::-;11298:139;;11025:419;;;:::o;11450:175::-;11590:27;11586:1;11578:6;11574:14;11567:51;11450:175;:::o;11631:366::-;11773:3;11794:67;11858:2;11853:3;11794:67;:::i;:::-;11787:74;;11870:93;11959:3;11870:93;:::i;:::-;11988:2;11983:3;11979:12;11972:19;;11631:366;;;:::o;12003:419::-;12169:4;12207:2;12196:9;12192:18;12184:26;;12256:9;12250:4;12246:20;12242:1;12231:9;12227:17;12220:47;12284:131;12410:4;12284:131;:::i;:::-;12276:139;;12003:419;;;:::o;12428:155::-;12568:7;12564:1;12556:6;12552:14;12545:31;12428:155;:::o;12589:365::-;12731:3;12752:66;12816:1;12811:3;12752:66;:::i;:::-;12745:73;;12827:93;12916:3;12827:93;:::i;:::-;12945:2;12940:3;12936:12;12929:19;;12589:365;;;:::o;12960:529::-;13154:4;13192:2;13181:9;13177:18;13169:26;;13205:71;13273:1;13262:9;13258:17;13249:6;13205:71;:::i;:::-;13323:9;13317:4;13313:20;13308:2;13297:9;13293:18;13286:48;13351:131;13477:4;13351:131;:::i;:::-;13343:139;;12960:529;;;;:::o;13495:143::-;13552:5;13583:6;13577:13;13568:22;;13599:33;13626:5;13599:33;:::i;:::-;13495:143;;;;:::o;13644:351::-;13714:6;13763:2;13751:9;13742:7;13738:23;13734:32;13731:119;;;13769:79;;:::i;:::-;13731:119;13889:1;13914:64;13970:7;13961:6;13950:9;13946:22;13914:64;:::i;:::-;13904:74;;13860:128;13644:351;;;;:::o;14001:174::-;14141:26;14137:1;14129:6;14125:14;14118:50;14001:174;:::o;14181:366::-;14323:3;14344:67;14408:2;14403:3;14344:67;:::i;:::-;14337:74;;14420:93;14509:3;14420:93;:::i;:::-;14538:2;14533:3;14529:12;14522:19;;14181:366;;;:::o;14553:419::-;14719:4;14757:2;14746:9;14742:18;14734:26;;14806:9;14800:4;14796:20;14792:1;14781:9;14777:17;14770:47;14834:131;14960:4;14834:131;:::i;:::-;14826:139;;14553:419;;;:::o;14978:194::-;15018:4;15038:20;15056:1;15038:20;:::i;:::-;15033:25;;15072:20;15090:1;15072:20;:::i;:::-;15067:25;;15116:1;15113;15109:9;15101:17;;15140:1;15134:4;15131:11;15128:37;;;15145:18;;:::i;:::-;15128:37;14978:194;;;;:::o;15178:147::-;15279:11;15316:3;15301:18;;15178:147;;;;:::o;15331:114::-;;:::o;15451:398::-;15610:3;15631:83;15712:1;15707:3;15631:83;:::i;:::-;15624:90;;15723:93;15812:3;15723:93;:::i;:::-;15841:1;15836:3;15832:11;15825:18;;15451:398;;;:::o;15855:379::-;16039:3;16061:147;16204:3;16061:147;:::i;:::-;16054:154;;16225:3;16218:10;;15855:379;;;:::o;16240:171::-;16380:23;16376:1;16368:6;16364:14;16357:47;16240:171;:::o;16417:366::-;16559:3;16580:67;16644:2;16639:3;16580:67;:::i;:::-;16573:74;;16656:93;16745:3;16656:93;:::i;:::-;16774:2;16769:3;16765:12;16758:19;;16417:366;;;:::o;16789:419::-;16955:4;16993:2;16982:9;16978:18;16970:26;;17042:9;17036:4;17032:20;17028:1;17017:9;17013:17;17006:47;17070:131;17196:4;17070:131;:::i;:::-;17062:139;;16789:419;;;:::o;17214:172::-;17354:24;17350:1;17342:6;17338:14;17331:48;17214:172;:::o;17392:366::-;17534:3;17555:67;17619:2;17614:3;17555:67;:::i;:::-;17548:74;;17631:93;17720:3;17631:93;:::i;:::-;17749:2;17744:3;17740:12;17733:19;;17392:366;;;:::o;17764:419::-;17930:4;17968:2;17957:9;17953:18;17945:26;;18017:9;18011:4;18007:20;18003:1;17992:9;17988:17;17981:47;18045:131;18171:4;18045:131;:::i;:::-;18037:139;;17764:419;;;:::o;18189:227::-;18329:34;18325:1;18317:6;18313:14;18306:58;18398:10;18393:2;18385:6;18381:15;18374:35;18189:227;:::o;18422:366::-;18564:3;18585:67;18649:2;18644:3;18585:67;:::i;:::-;18578:74;;18661:93;18750:3;18661:93;:::i;:::-;18779:2;18774:3;18770:12;18763:19;;18422:366;;;:::o;18794:419::-;18960:4;18998:2;18987:9;18983:18;18975:26;;19047:9;19041:4;19037:20;19033:1;19022:9;19018:17;19011:47;19075:131;19201:4;19075:131;:::i;:::-;19067:139;;18794:419;;;:::o;19219:85::-;19264:7;19293:5;19282:16;;19219:85;;;:::o;19310:101::-;19346:7;19386:18;19379:5;19375:30;19364:41;;19310:101;;;:::o;19417:156::-;19474:9;19507:60;19524:42;19533:32;19559:5;19533:32;:::i;:::-;19524:42;:::i;:::-;19507:60;:::i;:::-;19494:73;;19417:156;;;:::o;19579:145::-;19673:44;19711:5;19673:44;:::i;:::-;19668:3;19661:57;19579:145;;:::o;19730:236::-;19830:4;19868:2;19857:9;19853:18;19845:26;;19881:78;19956:1;19945:9;19941:17;19932:6;19881:78;:::i;:::-;19730:236;;;;:::o;19972:180::-;20020:77;20017:1;20010:88;20117:4;20114:1;20107:15;20141:4;20138:1;20131:15;20158:320;20202:6;20239:1;20233:4;20229:12;20219:22;;20286:1;20280:4;20276:12;20307:18;20297:81;;20363:4;20355:6;20351:17;20341:27;;20297:81;20425:2;20417:6;20414:14;20394:18;20391:38;20388:84;;20444:18;;:::i;:::-;20388:84;20209:269;20158:320;;;:::o;20484:90::-;20518:7;20561:5;20554:13;20547:21;20536:32;;20484:90;;;:::o;20580:116::-;20650:21;20665:5;20650:21;:::i;:::-;20643:5;20640:32;20630:60;;20686:1;20683;20676:12;20630:60;20580:116;:::o;20702:137::-;20756:5;20787:6;20781:13;20772:22;;20803:30;20827:5;20803:30;:::i;:::-;20702:137;;;;:::o;20845:345::-;20912:6;20961:2;20949:9;20940:7;20936:23;20932:32;20929:119;;;20967:79;;:::i;:::-;20929:119;21087:1;21112:61;21165:7;21156:6;21145:9;21141:22;21112:61;:::i;:::-;21102:71;;21058:125;20845:345;;;;:::o;21196:172::-;21336:24;21332:1;21324:6;21320:14;21313:48;21196:172;:::o;21374:366::-;21516:3;21537:67;21601:2;21596:3;21537:67;:::i;:::-;21530:74;;21613:93;21702:3;21613:93;:::i;:::-;21731:2;21726:3;21722:12;21715:19;;21374:366;;;:::o;21746:419::-;21912:4;21950:2;21939:9;21935:18;21927:26;;21999:9;21993:4;21989:20;21985:1;21974:9;21970:17;21963:47;22027:131;22153:4;22027:131;:::i;:::-;22019:139;;21746:419;;;:::o;22171:221::-;22311:34;22307:1;22299:6;22295:14;22288:58;22380:4;22375:2;22367:6;22363:15;22356:29;22171:221;:::o;22398:366::-;22540:3;22561:67;22625:2;22620:3;22561:67;:::i;:::-;22554:74;;22637:93;22726:3;22637:93;:::i;:::-;22755:2;22750:3;22746:12;22739:19;;22398:366;;;:::o;22770:419::-;22936:4;22974:2;22963:9;22959:18;22951:26;;23023:9;23017:4;23013:20;23009:1;22998:9;22994:17;22987:47;23051:131;23177:4;23051:131;:::i;:::-;23043:139;;22770:419;;;:::o;23195:141::-;23244:4;23267:3;23259:11;;23290:3;23287:1;23280:14;23324:4;23321:1;23311:18;23303:26;;23195:141;;;:::o;23342:93::-;23379:6;23426:2;23421;23414:5;23410:14;23406:23;23396:33;;23342:93;;;:::o;23441:107::-;23485:8;23535:5;23529:4;23525:16;23504:37;;23441:107;;;;:::o;23554:393::-;23623:6;23673:1;23661:10;23657:18;23696:97;23726:66;23715:9;23696:97;:::i;:::-;23814:39;23844:8;23833:9;23814:39;:::i;:::-;23802:51;;23886:4;23882:9;23875:5;23871:21;23862:30;;23935:4;23925:8;23921:19;23914:5;23911:30;23901:40;;23630:317;;23554:393;;;;;:::o;23953:142::-;24003:9;24036:53;24054:34;24063:24;24081:5;24063:24;:::i;:::-;24054:34;:::i;:::-;24036:53;:::i;:::-;24023:66;;23953:142;;;:::o;24101:75::-;24144:3;24165:5;24158:12;;24101:75;;;:::o;24182:269::-;24292:39;24323:7;24292:39;:::i;:::-;24353:91;24402:41;24426:16;24402:41;:::i;:::-;24394:6;24387:4;24381:11;24353:91;:::i;:::-;24347:4;24340:105;24258:193;24182:269;;;:::o;24457:73::-;24502:3;24457:73;:::o;24536:189::-;24613:32;;:::i;:::-;24654:65;24712:6;24704;24698:4;24654:65;:::i;:::-;24589:136;24536:189;;:::o;24731:186::-;24791:120;24808:3;24801:5;24798:14;24791:120;;;24862:39;24899:1;24892:5;24862:39;:::i;:::-;24835:1;24828:5;24824:13;24815:22;;24791:120;;;24731:186;;:::o;24923:543::-;25024:2;25019:3;25016:11;25013:446;;;25058:38;25090:5;25058:38;:::i;:::-;25142:29;25160:10;25142:29;:::i;:::-;25132:8;25128:44;25325:2;25313:10;25310:18;25307:49;;;25346:8;25331:23;;25307:49;25369:80;25425:22;25443:3;25425:22;:::i;:::-;25415:8;25411:37;25398:11;25369:80;:::i;:::-;25028:431;;25013:446;24923:543;;;:::o;25472:117::-;25526:8;25576:5;25570:4;25566:16;25545:37;;25472:117;;;;:::o;25595:169::-;25639:6;25672:51;25720:1;25716:6;25708:5;25705:1;25701:13;25672:51;:::i;:::-;25668:56;25753:4;25747;25743:15;25733:25;;25646:118;25595:169;;;;:::o;25769:295::-;25845:4;25991:29;26016:3;26010:4;25991:29;:::i;:::-;25983:37;;26053:3;26050:1;26046:11;26040:4;26037:21;26029:29;;25769:295;;;;:::o;26069:1395::-;26186:37;26219:3;26186:37;:::i;:::-;26288:18;26280:6;26277:30;26274:56;;;26310:18;;:::i;:::-;26274:56;26354:38;26386:4;26380:11;26354:38;:::i;:::-;26439:67;26499:6;26491;26485:4;26439:67;:::i;:::-;26533:1;26557:4;26544:17;;26589:2;26581:6;26578:14;26606:1;26601:618;;;;27263:1;27280:6;27277:77;;;27329:9;27324:3;27320:19;27314:26;27305:35;;27277:77;27380:67;27440:6;27433:5;27380:67;:::i;:::-;27374:4;27367:81;27236:222;26571:887;;26601:618;26653:4;26649:9;26641:6;26637:22;26687:37;26719:4;26687:37;:::i;:::-;26746:1;26760:208;26774:7;26771:1;26768:14;26760:208;;;26853:9;26848:3;26844:19;26838:26;26830:6;26823:42;26904:1;26896:6;26892:14;26882:24;;26951:2;26940:9;26936:18;26923:31;;26797:4;26794:1;26790:12;26785:17;;26760:208;;;26996:6;26987:7;26984:19;26981:179;;;27054:9;27049:3;27045:19;27039:26;27097:48;27139:4;27131:6;27127:17;27116:9;27097:48;:::i;:::-;27089:6;27082:64;27004:156;26981:179;27206:1;27202;27194:6;27190:14;27186:22;27180:4;27173:36;26608:611;;;26571:887;;26161:1303;;;26069:1395;;:::o;27470:230::-;27610:34;27606:1;27598:6;27594:14;27587:58;27679:13;27674:2;27666:6;27662:15;27655:38;27470:230;:::o;27706:366::-;27848:3;27869:67;27933:2;27928:3;27869:67;:::i;:::-;27862:74;;27945:93;28034:3;27945:93;:::i;:::-;28063:2;28058:3;28054:12;28047:19;;27706:366;;;:::o;28078:419::-;28244:4;28282:2;28271:9;28267:18;28259:26;;28331:9;28325:4;28321:20;28317:1;28306:9;28302:17;28295:47;28359:131;28485:4;28359:131;:::i;:::-;28351:139;;28078:419;;;:::o;28503:168::-;28643:20;28639:1;28631:6;28627:14;28620:44;28503:168;:::o;28677:366::-;28819:3;28840:67;28904:2;28899:3;28840:67;:::i;:::-;28833:74;;28916:93;29005:3;28916:93;:::i;:::-;29034:2;29029:3;29025:12;29018:19;;28677:366;;;:::o;29049:419::-;29215:4;29253:2;29242:9;29238:18;29230:26;;29302:9;29296:4;29292:20;29288:1;29277:9;29273:17;29266:47;29330:131;29456:4;29330:131;:::i;:::-;29322:139;;29049:419;;;:::o;29474:332::-;29595:4;29633:2;29622:9;29618:18;29610:26;;29646:71;29714:1;29703:9;29699:17;29690:6;29646:71;:::i;:::-;29727:72;29795:2;29784:9;29780:18;29771:6;29727:72;:::i;:::-;29474:332;;;;;:::o;29812:442::-;29961:4;29999:2;29988:9;29984:18;29976:26;;30012:71;30080:1;30069:9;30065:17;30056:6;30012:71;:::i;:::-;30093:72;30161:2;30150:9;30146:18;30137:6;30093:72;:::i;:::-;30175;30243:2;30232:9;30228:18;30219:6;30175:72;:::i;:::-;29812:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2030800",
								"executionCost": "2154",
								"totalCost": "2032954"
							},
							"external": {
								"ETHER()": "419",
								"allowedAmounts(address,address)": "infinite",
								"claim(address)": "infinite",
								"currentRound()": "infinite",
								"deposit(address,uint256)": "infinite",
								"initialize(address,address)": "infinite",
								"owner()": "2590",
								"renounceOwnership()": "infinite",
								"scorer()": "infinite",
								"setAllowedAmount(address,address,uint256)": "infinite",
								"setRound(uint256,uint256,string)": "infinite",
								"totalBalances(address)": "2869",
								"transferOwnership(address)": "infinite",
								"withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 367,
									"end": 5697,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 5697,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122043e1481c8167809fa7db7c783cf02c683613220197cc4a5a2e91ae0454e3473d64736f6c634300081a0033",
									".code": [
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "B807A3C4"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "B807A3C4"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "BE9A7687"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "F3FEF3A3"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "A9590E8A"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "AEE9C872"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "485CC955"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "485CC955"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "85C758F7"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "8A19C8BC"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "1E83409A"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "42CB1FBC"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "47E7EF24"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5624,
											"end": 5633,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5613,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "F194AFDF50B03E69BD7D057C1AA9E10C9954E4C9"
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 5600,
											"end": 5633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 574,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "F194AFDF50B03E69BD7D057C1AA9E10C9954E4C9"
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5667,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "PUSH",
											"source": 12,
											"value": "5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
										},
										{
											"begin": 5676,
											"end": 5685,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 5649,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5686,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 367,
											"end": 5697,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 2841,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 2841,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 542,
											"end": 616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 542,
											"end": 616,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 616,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 542,
											"end": 616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 542,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 542,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 542,
											"end": 616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 616,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 542,
											"end": 616,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 542,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 542,
											"end": 616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 616,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 2303,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 2303,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1903,
											"end": 2085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1903,
											"end": 2085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 623,
											"end": 644,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 623,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 623,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 886,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 886,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1100,
											"end": 1169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1100,
											"end": 1169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1100,
											"end": 1169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1002,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1002,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1002,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 3992,
											"end": 4194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 3992,
											"end": 4194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4443,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 4443,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 4926,
											"end": 5483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 4926,
											"end": 5483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2918,
											"end": 2936,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2918,
											"end": 2936,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2914,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2936,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2936,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2975,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2975,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 2899,
											"end": 2975,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2959,
											"end": 2971,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2959,
											"end": 2975,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2959,
											"end": 2975,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2959,
											"end": 2975,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2955,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2975,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 2899,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2891,
											"end": 3005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 2891,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3018,
											"end": 3043,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3071,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3078,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3018,
											"end": 3079,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3018,
											"end": 3079,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3118,
											"end": 3119,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3098,
											"end": 3119,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 3090,
											"end": 3143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3203,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3175,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3181,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3203,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3203,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3154,
											"end": 3233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3154,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3288,
											"end": 3289,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3264,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3252,
											"end": 3264,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3264,
											"name": "PUSH",
											"source": 12,
											"value": "DB4F1024"
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 3252,
											"end": 3285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 3252,
											"end": 3285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 3252,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3289,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 3244,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 3244,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3345,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3357,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3363,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3364,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3368,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3368,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3368,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3403,
											"end": 3420,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3392,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3398,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3399,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 3379,
											"end": 3420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 574,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "F194AFDF50B03E69BD7D057C1AA9E10C9954E4C9"
										},
										{
											"begin": 3437,
											"end": 3451,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3437,
											"end": 3451,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3437,
											"end": 3442,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3437,
											"end": 3451,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3437,
											"end": 3451,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3437,
											"end": 3451,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3433,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 3433,
											"end": 3690,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3469,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3497,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3502,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3502,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3527,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 3487,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3468,
											"end": 3532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3468,
											"end": 3532,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3468,
											"end": 3532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3555,
											"end": 3562,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 3547,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 3547,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3433,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 3433,
											"end": 3690,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3433,
											"end": 3690,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 3433,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 3648,
											"end": 3658,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3633,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3647,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3647,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 3621,
											"end": 3647,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3678,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3678,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3678,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3678,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3678,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3678,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 3621,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3433,
											"end": 3690,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 3433,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3727,
											"end": 3732,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3715,
											"end": 3725,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "PUSH",
											"source": 12,
											"value": "F7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683"
										},
										{
											"begin": 3734,
											"end": 3751,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 3707,
											"end": 3752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3752,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 2880,
											"end": 3760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 3760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 542,
											"end": 616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 574,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "F194AFDF50B03E69BD7D057C1AA9E10C9954E4C9"
										},
										{
											"begin": 542,
											"end": 616,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 542,
											"end": 616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 574,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "F194AFDF50B03E69BD7D057C1AA9E10C9954E4C9"
										},
										{
											"begin": 2383,
											"end": 2397,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2383,
											"end": 2397,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2383,
											"end": 2388,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2383,
											"end": 2397,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2383,
											"end": 2397,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2383,
											"end": 2397,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2379,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 2379,
											"end": 2656,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2435,
											"end": 2441,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2422,
											"end": 2431,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2422,
											"end": 2441,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 2414,
											"end": 2468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 2414,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2379,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 2379,
											"end": 2656,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2379,
											"end": 2656,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 2379,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2519,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2509,
											"end": 2519,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 2501,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 2501,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2630,
											"end": 2634,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2637,
											"end": 2643,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2609,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2579,
											"end": 2609,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 2579,
											"end": 2609,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2379,
											"end": 2656,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 2379,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2692,
											"end": 2698,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2681,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2687,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 2668,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2734,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2722,
											"end": 2732,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "PUSH",
											"source": 12,
											"value": "5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2714,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 2002,
											"end": 2007,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1987,
											"end": 2001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1987,
											"end": 2008,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2069,
											"end": 2076,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2058,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 623,
											"end": 644,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 623,
											"end": 644,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 623,
											"end": 644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 886,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 886,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 886,
											"end": 911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1665,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1651,
											"end": 1665,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1665,
											"name": "PUSH",
											"source": 12,
											"value": "24D7806C"
										},
										{
											"begin": 1666,
											"end": 1676,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1651,
											"end": 1677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 1651,
											"end": 1677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 1643,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4123,
											"end": 4129,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4112,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4113,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4119,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4120,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4129,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4129,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4129,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4129,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4172,
											"end": 4177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4170,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2"
										},
										{
											"begin": 4179,
											"end": 4185,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 4145,
											"end": 4186,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4186,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1665,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1651,
											"end": 1665,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1665,
											"name": "PUSH",
											"source": 12,
											"value": "24D7806C"
										},
										{
											"begin": 1666,
											"end": 1676,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1651,
											"end": 1677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 1651,
											"end": 1677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 1643,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 1643,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4562,
											"end": 4565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4554,
											"end": 4559,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4554,
											"end": 4565,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 4546,
											"end": 4604,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 4546,
											"end": 4604,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4636,
											"end": 4641,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4643,
											"end": 4646,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4648,
											"end": 4659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4660,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 4615,
											"end": 4660,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4660,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13"
										},
										{
											"begin": 4689,
											"end": 4694,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4696,
											"end": 4699,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4701,
											"end": 4712,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 4676,
											"end": 4713,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4713,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5022,
											"end": 5023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5019,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5023,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 5005,
											"end": 5071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 5005,
											"end": 5071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5114,
											"end": 5120,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5109,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5120,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5120,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 5082,
											"end": 5143,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 5082,
											"end": 5143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5180,
											"end": 5186,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5170,
											"end": 5175,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 5156,
											"end": 5186,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 574,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "F194AFDF50B03E69BD7D057C1AA9E10C9954E4C9"
										},
										{
											"begin": 5203,
											"end": 5217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5203,
											"end": 5217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5203,
											"end": 5208,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5203,
											"end": 5217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5203,
											"end": 5217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5203,
											"end": 5217,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 5199,
											"end": 5428,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5253,
											"end": 5260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 5253,
											"end": 5258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5253,
											"end": 5260,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 5253,
											"end": 5260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5253,
											"end": 5265,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5273,
											"end": 5279,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 5253,
											"end": 5284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5234,
											"end": 5284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5234,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5234,
											"end": 5284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5307,
											"end": 5314,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 5299,
											"end": 5340,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 5299,
											"end": 5340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5219,
											"end": 5352,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 5199,
											"end": 5428,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5428,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 5199,
											"end": 5428,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 5400,
											"end": 5407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 5400,
											"end": 5405,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5400,
											"end": 5407,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5400,
											"end": 5407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 5400,
											"end": 5407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5409,
											"end": 5415,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5380,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5373,
											"end": 5399,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 5373,
											"end": 5399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5416,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5416,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5416,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5373,
											"end": 5416,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5416,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 5373,
											"end": 5416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5428,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 5199,
											"end": 5428,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5461,
											"end": 5466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5459,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 5452,
											"end": 5457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5452,
											"end": 5459,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5459,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 5452,
											"end": 5459,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB"
										},
										{
											"begin": 5468,
											"end": 5474,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 5443,
											"end": 5475,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5475,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 5483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 1797,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 276,
											"end": 467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 316,
											"end": 319,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 369,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 369,
											"end": 389,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 369,
											"end": 389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 364,
											"end": 389,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 364,
											"end": 389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 405,
											"end": 414,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 398,
											"end": 414,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 398,
											"end": 414,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 433,
											"end": 436,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 427,
											"end": 437,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 424,
											"end": 460,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 440,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 440,
											"end": 458,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 473,
											"end": 591,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 473,
											"end": 591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 560,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 560,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 560,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 548,
											"end": 585,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 473,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 597,
											"end": 819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 690,
											"end": 694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 713,
											"end": 731,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 705,
											"end": 731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 705,
											"end": 731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 809,
											"end": 810,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 807,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 794,
											"end": 811,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 741,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 741,
											"end": 812,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 741,
											"end": 812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 825,
											"end": 900,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 825,
											"end": 900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 858,
											"end": 864,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 893,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 894,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 875,
											"end": 894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 875,
											"end": 894,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 825,
											"end": 900,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 825,
											"end": 900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 906,
											"end": 1023,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 906,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1017,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1029,
											"end": 1146,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 1029,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1138,
											"end": 1139,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1136,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1140,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1189,
											"end": 1196,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1271,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1218,
											"end": 1272,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1207,
											"end": 1272,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1207,
											"end": 1272,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1321,
											"end": 1328,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 1350,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1508,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 1386,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 1477,
											"end": 1482,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 1459,
											"end": 1483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1449,
											"end": 1484,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1496,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1560,
											"end": 1565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1604,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1576,
											"end": 1605,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1576,
											"end": 1605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 1641,
											"end": 1646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 1614,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1769,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1755,
											"end": 1764,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1765,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1738,
											"end": 1770,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 1773,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 1963,
											"end": 1970,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 1952,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1939,
											"end": 1961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 1918,
											"end": 1971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1908,
											"end": 1971,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1908,
											"end": 1971,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1864,
											"end": 1981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 2099,
											"end": 2104,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 2081,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2069,
											"end": 2106,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2211,
											"end": 2215,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 2330,
											"end": 2331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2328,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 2262,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2468,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 2346,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2419,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2419,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 2419,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2419,
											"end": 2443,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 2419,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2459,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2448,
											"end": 2460,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2613,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 2474,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2520,
											"end": 2525,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2564,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2545,
											"end": 2565,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 2565,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 2565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 2601,
											"end": 2606,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 2574,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2607,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 2574,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2613,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2613,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2744,
											"end": 2746,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2741,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2723,
											"end": 2730,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2719,
											"end": 2742,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2715,
											"end": 2747,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2831,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 2712,
											"end": 2831,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2750,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 2750,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 2750,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2750,
											"end": 2829,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 2750,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2831,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 2712,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2870,
											"end": 2871,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 2940,
											"end": 2947,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2920,
											"end": 2929,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2916,
											"end": 2938,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2895,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 2895,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2895,
											"end": 2948,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 2895,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2948,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2948,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2841,
											"end": 2958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 2999,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3059,
											"end": 3065,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3057,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3044,
											"end": 3066,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 3023,
											"end": 3076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3076,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 3023,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3013,
											"end": 3076,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3013,
											"end": 3076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2968,
											"end": 3086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3173,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3181,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3224,
											"end": 3226,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3203,
											"end": 3210,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3199,
											"end": 3222,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3227,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3311,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 3192,
											"end": 3311,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 3230,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 3230,
											"end": 3309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3309,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 3230,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3311,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 3192,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3350,
											"end": 3351,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 3420,
											"end": 3427,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3418,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 3375,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3428,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 3375,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3365,
											"end": 3428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3365,
											"end": 3428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3321,
											"end": 3438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3477,
											"end": 3479,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 3548,
											"end": 3555,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3545,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 3503,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3556,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3639,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 3579,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3607,
											"end": 3610,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3633,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3621,
											"end": 3633,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3621,
											"end": 3633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3639,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3639,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 3787,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 3645,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3695,
											"end": 3704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3746,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 3755,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 3773,
											"end": 3778,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3755,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 3755,
											"end": 3779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3755,
											"end": 3779,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 3755,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 3746,
											"end": 3780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3780,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 3746,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3728,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 3728,
											"end": 3781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3728,
											"end": 3781,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3728,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3781,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3781,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 3787,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 3787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 3787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 3787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3919,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 3793,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3907,
											"end": 3912,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 3876,
											"end": 3913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3913,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3876,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3913,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3913,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3919,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3919,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 4067,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 3925,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 4024,
											"end": 4061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4061,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4061,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 4067,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 4067,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 4067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 4067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4236,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 4073,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4223,
											"end": 4228,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 4176,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4171,
											"end": 4174,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4164,
											"end": 4230,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4496,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 4242,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4351,
											"end": 4355,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4391,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4387,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4402,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4486,
											"end": 4487,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4488,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4462,
											"end": 4468,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4402,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 4402,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4402,
											"end": 4489,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4402,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4496,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4496,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4496,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4496,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4554,
											"end": 4560,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4593,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4582,
											"end": 4594,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4572,
											"end": 4594,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4572,
											"end": 4594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4502,
											"end": 4601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4776,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 4607,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4691,
											"end": 4702,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4731,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4713,
											"end": 4732,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4760,
											"end": 4763,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4770,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4770,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4776,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4776,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4776,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4776,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4921,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 4782,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4871,
											"end": 4877,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4861,
											"end": 4864,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 4912,
											"end": 4913,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 4909,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4898,
											"end": 4901,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4894,
											"end": 4910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4887,
											"end": 4914,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 5029,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 4927,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 4974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5010,
											"end": 5012,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5003,
											"end": 5008,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4999,
											"end": 5013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4995,
											"end": 5023,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4985,
											"end": 5023,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4985,
											"end": 5023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 5029,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 5029,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 5029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 5029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5035,
											"end": 5412,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5035,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5123,
											"end": 5126,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 5184,
											"end": 5189,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5151,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 5151,
											"end": 5190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5151,
											"end": 5190,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 5151,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 5270,
											"end": 5276,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5206,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5277,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5339,
											"end": 5342,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5336,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5330,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5321,
											"end": 5337,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5286,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5351,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 5286,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5376,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 5398,
											"end": 5404,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5376,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 5376,
											"end": 5405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5376,
											"end": 5405,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 5376,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5371,
											"end": 5374,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5367,
											"end": 5406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5406,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5406,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5127,
											"end": 5412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5035,
											"end": 5412,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5035,
											"end": 5412,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5035,
											"end": 5412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5035,
											"end": 5412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5035,
											"end": 5412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5587,
											"end": 5591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5627,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5614,
											"end": 5623,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5602,
											"end": 5628,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5602,
											"end": 5628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5638,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 5706,
											"end": 5707,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5704,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5691,
											"end": 5708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5682,
											"end": 5688,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5638,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 5638,
											"end": 5709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5638,
											"end": 5709,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 5638,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5787,
											"end": 5789,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5772,
											"end": 5790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5763,
											"end": 5769,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 5719,
											"end": 5791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5791,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5719,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5838,
											"end": 5847,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5828,
											"end": 5848,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5825,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5812,
											"end": 5821,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5801,
											"end": 5849,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 5939,
											"end": 5943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5866,
											"end": 5944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5944,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 5866,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5858,
											"end": 5944,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5858,
											"end": 5944,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6034,
											"end": 6040,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6042,
											"end": 6048,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6050,
											"end": 6056,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6099,
											"end": 6101,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6087,
											"end": 6096,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6085,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6074,
											"end": 6097,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6070,
											"end": 6102,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6186,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 6067,
											"end": 6186,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6105,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 6105,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 6105,
											"end": 6184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6105,
											"end": 6184,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 6105,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6186,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 6067,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 6295,
											"end": 6302,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6286,
											"end": 6292,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6284,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6293,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6250,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 6250,
											"end": 6303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6250,
											"end": 6303,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 6250,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6240,
											"end": 6303,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6240,
											"end": 6303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6378,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6414,
											"end": 6420,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6403,
											"end": 6412,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6399,
											"end": 6421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6378,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 6378,
											"end": 6431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6378,
											"end": 6431,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 6378,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6368,
											"end": 6431,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6368,
											"end": 6431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6323,
											"end": 6441,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6482,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6506,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 6551,
											"end": 6558,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6548,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6540,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6527,
											"end": 6549,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6506,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 6506,
											"end": 6559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6506,
											"end": 6559,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 6506,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6496,
											"end": 6559,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6496,
											"end": 6559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6569,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6699,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 6582,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6691,
											"end": 6692,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6681,
											"end": 6693,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6705,
											"end": 6822,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 6705,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6815,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6812,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6804,
											"end": 6816,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 7008,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 6828,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6876,
											"end": 6953,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6954,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6973,
											"end": 6977,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6963,
											"end": 6978,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6994,
											"end": 6995,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6987,
											"end": 7002,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7295,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 7014,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 7119,
											"end": 7123,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 7097,
											"end": 7124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7089,
											"end": 7095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7085,
											"end": 7125,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7227,
											"end": 7233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7215,
											"end": 7225,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7179,
											"end": 7189,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7210,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7173,
											"end": 7235,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7258,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 7170,
											"end": 7258,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 7238,
											"end": 7256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7258,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 7170,
											"end": 7258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7278,
											"end": 7288,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7274,
											"end": 7276,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7267,
											"end": 7289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7057,
											"end": 7295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7430,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 7301,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7335,
											"end": 7341,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 7362,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 7362,
											"end": 7382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7362,
											"end": 7382,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 7362,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7382,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7391,
											"end": 7424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 7419,
											"end": 7423,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7411,
											"end": 7417,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7391,
											"end": 7424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 7391,
											"end": 7424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7391,
											"end": 7424,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 7391,
											"end": 7424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7430,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7744,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 7436,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7498,
											"end": 7502,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7580,
											"end": 7586,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7607,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7574,
											"end": 7630,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7574,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 7574,
											"end": 7630,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 7610,
											"end": 7628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7574,
											"end": 7630,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 7574,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7648,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 7670,
											"end": 7676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7648,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 7648,
											"end": 7677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7648,
											"end": 7677,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 7648,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7640,
											"end": 7677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7640,
											"end": 7677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7736,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7726,
											"end": 7730,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7722,
											"end": 7737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7737,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7744,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7744,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7744,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7750,
											"end": 7898,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 7750,
											"end": 7898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7843,
											"end": 7846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7838,
											"end": 7841,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7855,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 7889,
											"end": 7890,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7875,
											"end": 7878,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7871,
											"end": 7887,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7864,
											"end": 7891,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7750,
											"end": 7898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7750,
											"end": 7898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7750,
											"end": 7898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7750,
											"end": 7898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7982,
											"end": 7987,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 8023,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 8065,
											"end": 8071,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8023,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 8023,
											"end": 8072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8023,
											"end": 8072,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 8023,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8007,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 8007,
											"end": 8073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8007,
											"end": 8073,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 8007,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7998,
											"end": 8073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7998,
											"end": 8073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8096,
											"end": 8102,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8089,
											"end": 8094,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8082,
											"end": 8103,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8127,
											"end": 8132,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8123,
											"end": 8139,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8172,
											"end": 8175,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8163,
											"end": 8169,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8158,
											"end": 8161,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8154,
											"end": 8170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8176,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8148,
											"end": 8260,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8148,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 8148,
											"end": 8260,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8179,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 8179,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 8179,
											"end": 8258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8179,
											"end": 8258,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 8179,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8148,
											"end": 8260,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 8148,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8269,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 8316,
											"end": 8322,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8311,
											"end": 8314,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8306,
											"end": 8309,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8269,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 8269,
											"end": 8323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8269,
											"end": 8323,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 8269,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7988,
											"end": 8329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8689,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 8349,
											"end": 8689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8405,
											"end": 8410,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8454,
											"end": 8457,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8447,
											"end": 8451,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8439,
											"end": 8445,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8435,
											"end": 8452,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8421,
											"end": 8543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 8421,
											"end": 8543,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 8462,
											"end": 8541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8421,
											"end": 8543,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 8421,
											"end": 8543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8579,
											"end": 8585,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8566,
											"end": 8586,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 8679,
											"end": 8682,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8671,
											"end": 8677,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8664,
											"end": 8668,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8656,
											"end": 8662,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8652,
											"end": 8669,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 8604,
											"end": 8683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8595,
											"end": 8683,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8595,
											"end": 8683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8411,
											"end": 8689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8689,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8782,
											"end": 8788,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8790,
											"end": 8796,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8798,
											"end": 8804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8849,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8835,
											"end": 8844,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8845,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8818,
											"end": 8850,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8815,
											"end": 8934,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8815,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 8815,
											"end": 8934,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 8853,
											"end": 8932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8815,
											"end": 8934,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 8815,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8973,
											"end": 8974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8998,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 9043,
											"end": 9050,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9034,
											"end": 9040,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9023,
											"end": 9032,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9019,
											"end": 9041,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8998,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 8998,
											"end": 9051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8998,
											"end": 9051,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 8998,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8988,
											"end": 9051,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8988,
											"end": 9051,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8944,
											"end": 9061,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9100,
											"end": 9102,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9126,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 9171,
											"end": 9178,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9162,
											"end": 9168,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9151,
											"end": 9160,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9147,
											"end": 9169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9126,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 9126,
											"end": 9179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9126,
											"end": 9179,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 9126,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9116,
											"end": 9179,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9116,
											"end": 9179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9071,
											"end": 9189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9256,
											"end": 9258,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9245,
											"end": 9254,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9228,
											"end": 9260,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9287,
											"end": 9305,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9279,
											"end": 9285,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9306,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9273,
											"end": 9390,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9273,
											"end": 9390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 9273,
											"end": 9390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 9309,
											"end": 9388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9273,
											"end": 9390,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 9273,
											"end": 9390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9414,
											"end": 9477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 9469,
											"end": 9476,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9460,
											"end": 9466,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9449,
											"end": 9458,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9445,
											"end": 9467,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9414,
											"end": 9477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 9414,
											"end": 9477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9414,
											"end": 9477,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 9414,
											"end": 9477,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9404,
											"end": 9477,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9404,
											"end": 9477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9199,
											"end": 9487,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9500,
											"end": 9675,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 9500,
											"end": 9675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9667,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F742077697468696E20726F756E64206475726174696F6E00000000000000"
										},
										{
											"begin": 9636,
											"end": 9637,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9628,
											"end": 9634,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9500,
											"end": 9675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9500,
											"end": 9675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9823,
											"end": 9826,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 9908,
											"end": 9910,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 9903,
											"end": 9906,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9844,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 9844,
											"end": 9911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9844,
											"end": 9911,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 9844,
											"end": 9911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9837,
											"end": 9911,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9837,
											"end": 9911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9920,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 10009,
											"end": 10012,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9920,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 9920,
											"end": 10013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9920,
											"end": 10013,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 9920,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10038,
											"end": 10040,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10033,
											"end": 10036,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10029,
											"end": 10041,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10022,
											"end": 10041,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10022,
											"end": 10041,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9681,
											"end": 10047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10219,
											"end": 10223,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10257,
											"end": 10259,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10246,
											"end": 10255,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10242,
											"end": 10260,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10234,
											"end": 10260,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10234,
											"end": 10260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10306,
											"end": 10315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10300,
											"end": 10304,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10296,
											"end": 10316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10292,
											"end": 10293,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10281,
											"end": 10290,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10294,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10270,
											"end": 10317,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10334,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 10460,
											"end": 10464,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10334,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 10334,
											"end": 10465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10334,
											"end": 10465,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 10334,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 10465,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 10465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10478,
											"end": 10647,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 10478,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10618,
											"end": 10639,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000"
										},
										{
											"begin": 10614,
											"end": 10615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10606,
											"end": 10612,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10602,
											"end": 10616,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10595,
											"end": 10640,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10478,
											"end": 10647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10478,
											"end": 10647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 11019,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 10653,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10795,
											"end": 10798,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10816,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 10880,
											"end": 10882,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 10875,
											"end": 10878,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10816,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 10816,
											"end": 10883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10816,
											"end": 10883,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 10816,
											"end": 10883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10809,
											"end": 10883,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10809,
											"end": 10883,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10892,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 10981,
											"end": 10984,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10892,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 10892,
											"end": 10985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10892,
											"end": 10985,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 10892,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11010,
											"end": 11012,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11005,
											"end": 11008,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11001,
											"end": 11013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10994,
											"end": 11013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10994,
											"end": 11013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 11019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 11019,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 11019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 11019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11191,
											"end": 11195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11229,
											"end": 11231,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11218,
											"end": 11227,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11214,
											"end": 11232,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11206,
											"end": 11232,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11206,
											"end": 11232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11272,
											"end": 11276,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11268,
											"end": 11288,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11264,
											"end": 11265,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11253,
											"end": 11262,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11249,
											"end": 11266,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11242,
											"end": 11289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11306,
											"end": 11437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 11432,
											"end": 11436,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11306,
											"end": 11437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 11306,
											"end": 11437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11306,
											"end": 11437,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 11306,
											"end": 11437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11298,
											"end": 11437,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11298,
											"end": 11437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11625,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 11450,
											"end": 11625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11590,
											"end": 11617,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742066756E647320696E206A617200000000000000"
										},
										{
											"begin": 11586,
											"end": 11587,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11578,
											"end": 11584,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11574,
											"end": 11588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11567,
											"end": 11618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11625,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11997,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 11631,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11773,
											"end": 11776,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11794,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 11858,
											"end": 11860,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 11853,
											"end": 11856,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11794,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 11794,
											"end": 11861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11794,
											"end": 11861,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 11794,
											"end": 11861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11787,
											"end": 11861,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11787,
											"end": 11861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11870,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11870,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 11870,
											"end": 11963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11870,
											"end": 11963,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 11870,
											"end": 11963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11988,
											"end": 11990,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11983,
											"end": 11986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11979,
											"end": 11991,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11972,
											"end": 11991,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11972,
											"end": 11991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11997,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11997,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12003,
											"end": 12422,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 12003,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12169,
											"end": 12173,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12207,
											"end": 12209,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12196,
											"end": 12205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12192,
											"end": 12210,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12184,
											"end": 12210,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12184,
											"end": 12210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12256,
											"end": 12265,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12250,
											"end": 12254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12246,
											"end": 12266,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12242,
											"end": 12243,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12231,
											"end": 12240,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12227,
											"end": 12244,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12220,
											"end": 12267,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12284,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 12410,
											"end": 12414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12284,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 12284,
											"end": 12415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12284,
											"end": 12415,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 12284,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12276,
											"end": 12415,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12276,
											"end": 12415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12003,
											"end": 12422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12003,
											"end": 12422,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12003,
											"end": 12422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12003,
											"end": 12422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12428,
											"end": 12583,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 12428,
											"end": 12583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "PUSH",
											"source": 13,
											"value": "5472757374000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12564,
											"end": 12565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12556,
											"end": 12562,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12552,
											"end": 12566,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12545,
											"end": 12576,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12428,
											"end": 12583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12428,
											"end": 12583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12589,
											"end": 12954,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 12589,
											"end": 12954,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12731,
											"end": 12734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12752,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 12816,
											"end": 12817,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 12811,
											"end": 12814,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12752,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 12752,
											"end": 12818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12752,
											"end": 12818,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 12752,
											"end": 12818,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12745,
											"end": 12818,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12745,
											"end": 12818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12827,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 12916,
											"end": 12919,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12827,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 12827,
											"end": 12920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12827,
											"end": 12920,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 12827,
											"end": 12920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12945,
											"end": 12947,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12940,
											"end": 12943,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12936,
											"end": 12948,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12929,
											"end": 12948,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12929,
											"end": 12948,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12589,
											"end": 12954,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12589,
											"end": 12954,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12589,
											"end": 12954,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12589,
											"end": 12954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12960,
											"end": 13489,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 12960,
											"end": 13489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13158,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13192,
											"end": 13194,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13181,
											"end": 13190,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13169,
											"end": 13195,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13169,
											"end": 13195,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13205,
											"end": 13276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 13273,
											"end": 13274,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13262,
											"end": 13271,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13258,
											"end": 13275,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13249,
											"end": 13255,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13205,
											"end": 13276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 13205,
											"end": 13276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13205,
											"end": 13276,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 13205,
											"end": 13276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13323,
											"end": 13332,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13317,
											"end": 13321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13333,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13308,
											"end": 13310,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13297,
											"end": 13306,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13293,
											"end": 13311,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13286,
											"end": 13334,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13351,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 13477,
											"end": 13481,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13351,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 13351,
											"end": 13482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13351,
											"end": 13482,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 13351,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13343,
											"end": 13482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13343,
											"end": 13482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12960,
											"end": 13489,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12960,
											"end": 13489,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12960,
											"end": 13489,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12960,
											"end": 13489,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12960,
											"end": 13489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13495,
											"end": 13638,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 13495,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13552,
											"end": 13557,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13583,
											"end": 13589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13577,
											"end": 13590,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13568,
											"end": 13590,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13568,
											"end": 13590,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13599,
											"end": 13632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 13626,
											"end": 13631,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13599,
											"end": 13632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 13599,
											"end": 13632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13599,
											"end": 13632,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 13599,
											"end": 13632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13495,
											"end": 13638,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13495,
											"end": 13638,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13495,
											"end": 13638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13495,
											"end": 13638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13495,
											"end": 13638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13644,
											"end": 13995,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 13644,
											"end": 13995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13714,
											"end": 13720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13763,
											"end": 13765,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13751,
											"end": 13760,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13742,
											"end": 13749,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13738,
											"end": 13761,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13734,
											"end": 13766,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 13731,
											"end": 13850,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13731,
											"end": 13850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 13731,
											"end": 13850,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13769,
											"end": 13848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 13769,
											"end": 13848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 13769,
											"end": 13848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13769,
											"end": 13848,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 13769,
											"end": 13848,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13731,
											"end": 13850,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 13731,
											"end": 13850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13889,
											"end": 13890,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13914,
											"end": 13978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 13970,
											"end": 13977,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13961,
											"end": 13967,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13950,
											"end": 13959,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13946,
											"end": 13968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13914,
											"end": 13978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 13914,
											"end": 13978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13914,
											"end": 13978,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 13914,
											"end": 13978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13904,
											"end": 13978,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13904,
											"end": 13978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13860,
											"end": 13988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13644,
											"end": 13995,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13644,
											"end": 13995,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13644,
											"end": 13995,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13644,
											"end": 13995,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13644,
											"end": 13995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14001,
											"end": 14175,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 14001,
											"end": 14175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14141,
											"end": 14167,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742054727573742073636F72650000000000000000"
										},
										{
											"begin": 14137,
											"end": 14138,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14135,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14125,
											"end": 14139,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14118,
											"end": 14168,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14001,
											"end": 14175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14001,
											"end": 14175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14323,
											"end": 14326,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14344,
											"end": 14411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 14408,
											"end": 14410,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 14403,
											"end": 14406,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14344,
											"end": 14411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 14344,
											"end": 14411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14344,
											"end": 14411,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 14344,
											"end": 14411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14337,
											"end": 14411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14337,
											"end": 14411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14420,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 14509,
											"end": 14512,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14420,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 14420,
											"end": 14513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14420,
											"end": 14513,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 14420,
											"end": 14513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14538,
											"end": 14540,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14533,
											"end": 14536,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14529,
											"end": 14541,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14522,
											"end": 14541,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14522,
											"end": 14541,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14181,
											"end": 14547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14719,
											"end": 14723,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14757,
											"end": 14759,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14746,
											"end": 14755,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14742,
											"end": 14760,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14734,
											"end": 14760,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14734,
											"end": 14760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14806,
											"end": 14815,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14800,
											"end": 14804,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14796,
											"end": 14816,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14792,
											"end": 14793,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14781,
											"end": 14790,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14777,
											"end": 14794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14770,
											"end": 14817,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14834,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 14960,
											"end": 14964,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14834,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 14834,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14834,
											"end": 14965,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 14834,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14826,
											"end": 14965,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14826,
											"end": 14965,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14553,
											"end": 14972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14978,
											"end": 15172,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 14978,
											"end": 15172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15018,
											"end": 15022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15038,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 15056,
											"end": 15057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15038,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 15038,
											"end": 15058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15038,
											"end": 15058,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 15038,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15033,
											"end": 15058,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15033,
											"end": 15058,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15072,
											"end": 15092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 15090,
											"end": 15091,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15072,
											"end": 15092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 15072,
											"end": 15092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15072,
											"end": 15092,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 15072,
											"end": 15092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15067,
											"end": 15092,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15067,
											"end": 15092,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15116,
											"end": 15117,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15113,
											"end": 15114,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15109,
											"end": 15118,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15101,
											"end": 15118,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15101,
											"end": 15118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15140,
											"end": 15141,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15134,
											"end": 15138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15131,
											"end": 15142,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15128,
											"end": 15165,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15128,
											"end": 15165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 15128,
											"end": 15165,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15145,
											"end": 15163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 15145,
											"end": 15163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 15145,
											"end": 15163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15145,
											"end": 15163,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 15145,
											"end": 15163,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15128,
											"end": 15165,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 15128,
											"end": 15165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14978,
											"end": 15172,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14978,
											"end": 15172,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14978,
											"end": 15172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14978,
											"end": 15172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14978,
											"end": 15172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15325,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 15178,
											"end": 15325,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15279,
											"end": 15290,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15316,
											"end": 15319,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15301,
											"end": 15319,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15301,
											"end": 15319,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15325,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15325,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15325,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15325,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15331,
											"end": 15445,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 15331,
											"end": 15445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15331,
											"end": 15445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15331,
											"end": 15445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15451,
											"end": 15849,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 15451,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15631,
											"end": 15714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 15712,
											"end": 15713,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15707,
											"end": 15710,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15631,
											"end": 15714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 15631,
											"end": 15714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15631,
											"end": 15714,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 15631,
											"end": 15714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15624,
											"end": 15714,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15624,
											"end": 15714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15723,
											"end": 15816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 15812,
											"end": 15815,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15723,
											"end": 15816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 15723,
											"end": 15816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15723,
											"end": 15816,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 15723,
											"end": 15816,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15841,
											"end": 15842,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15836,
											"end": 15839,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15832,
											"end": 15843,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15825,
											"end": 15843,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15825,
											"end": 15843,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15451,
											"end": 15849,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15451,
											"end": 15849,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15451,
											"end": 15849,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15451,
											"end": 15849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15855,
											"end": 16234,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 15855,
											"end": 16234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16039,
											"end": 16042,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16061,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 16204,
											"end": 16207,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16061,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 16061,
											"end": 16208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16061,
											"end": 16208,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 16061,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16054,
											"end": 16208,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16054,
											"end": 16208,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16225,
											"end": 16228,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16218,
											"end": 16228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16218,
											"end": 16228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15855,
											"end": 16234,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15855,
											"end": 16234,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15855,
											"end": 16234,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15855,
											"end": 16234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16240,
											"end": 16411,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 16240,
											"end": 16411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16380,
											"end": 16403,
											"name": "PUSH",
											"source": 13,
											"value": "4574686572207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 16376,
											"end": 16377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16368,
											"end": 16374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16364,
											"end": 16378,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16357,
											"end": 16404,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16240,
											"end": 16411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16240,
											"end": 16411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16417,
											"end": 16783,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 16417,
											"end": 16783,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16559,
											"end": 16562,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16580,
											"end": 16647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 16644,
											"end": 16646,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 16639,
											"end": 16642,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16580,
											"end": 16647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 16580,
											"end": 16647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16580,
											"end": 16647,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 16580,
											"end": 16647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16573,
											"end": 16647,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16573,
											"end": 16647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16656,
											"end": 16749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 16745,
											"end": 16748,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16656,
											"end": 16749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 16656,
											"end": 16749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16656,
											"end": 16749,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 16656,
											"end": 16749,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16774,
											"end": 16776,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16769,
											"end": 16772,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16765,
											"end": 16777,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16758,
											"end": 16777,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16758,
											"end": 16777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16417,
											"end": 16783,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16417,
											"end": 16783,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16417,
											"end": 16783,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16417,
											"end": 16783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16789,
											"end": 17208,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 16789,
											"end": 17208,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16955,
											"end": 16959,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16993,
											"end": 16995,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16982,
											"end": 16991,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16978,
											"end": 16996,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16970,
											"end": 16996,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16970,
											"end": 16996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17042,
											"end": 17051,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17036,
											"end": 17040,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17032,
											"end": 17052,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17028,
											"end": 17029,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17017,
											"end": 17026,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17013,
											"end": 17030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17006,
											"end": 17053,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17070,
											"end": 17201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 17196,
											"end": 17200,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17070,
											"end": 17201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 17070,
											"end": 17201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17070,
											"end": 17201,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 17070,
											"end": 17201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17062,
											"end": 17201,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17062,
											"end": 17201,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16789,
											"end": 17208,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16789,
											"end": 17208,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16789,
											"end": 17208,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16789,
											"end": 17208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17214,
											"end": 17386,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 17214,
											"end": 17386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17354,
											"end": 17378,
											"name": "PUSH",
											"source": 13,
											"value": "496E636F727265637420457468657220616D6F756E7400000000000000000000"
										},
										{
											"begin": 17350,
											"end": 17351,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17342,
											"end": 17348,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17338,
											"end": 17352,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17331,
											"end": 17379,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17214,
											"end": 17386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17214,
											"end": 17386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17392,
											"end": 17758,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 17392,
											"end": 17758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17534,
											"end": 17537,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17555,
											"end": 17622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 17619,
											"end": 17621,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 17614,
											"end": 17617,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17555,
											"end": 17622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 17555,
											"end": 17622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17555,
											"end": 17622,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 17555,
											"end": 17622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17548,
											"end": 17622,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17548,
											"end": 17622,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17631,
											"end": 17724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 17720,
											"end": 17723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17631,
											"end": 17724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 17631,
											"end": 17724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17631,
											"end": 17724,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 17631,
											"end": 17724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17749,
											"end": 17751,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17744,
											"end": 17747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17740,
											"end": 17752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17733,
											"end": 17752,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17733,
											"end": 17752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17392,
											"end": 17758,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17392,
											"end": 17758,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17392,
											"end": 17758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17392,
											"end": 17758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17764,
											"end": 18183,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 17764,
											"end": 18183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17930,
											"end": 17934,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17968,
											"end": 17970,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17957,
											"end": 17966,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17953,
											"end": 17971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17945,
											"end": 17971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17945,
											"end": 17971,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18017,
											"end": 18026,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18011,
											"end": 18015,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18007,
											"end": 18027,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18003,
											"end": 18004,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17992,
											"end": 18001,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17988,
											"end": 18005,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17981,
											"end": 18028,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18045,
											"end": 18176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 18171,
											"end": 18175,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18045,
											"end": 18176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 18045,
											"end": 18176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18045,
											"end": 18176,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 18045,
											"end": 18176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18037,
											"end": 18176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18037,
											"end": 18176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17764,
											"end": 18183,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17764,
											"end": 18183,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17764,
											"end": 18183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17764,
											"end": 18183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18189,
											"end": 18416,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 18189,
											"end": 18416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18329,
											"end": 18363,
											"name": "PUSH",
											"source": 13,
											"value": "4465706F73697420616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 18325,
											"end": 18326,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18317,
											"end": 18323,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18313,
											"end": 18327,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18306,
											"end": 18364,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18398,
											"end": 18408,
											"name": "PUSH",
											"source": 13,
											"value": "68616E207A65726F000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18393,
											"end": 18395,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18385,
											"end": 18391,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18381,
											"end": 18396,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18374,
											"end": 18409,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18189,
											"end": 18416,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18189,
											"end": 18416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18422,
											"end": 18788,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 18422,
											"end": 18788,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18564,
											"end": 18567,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18585,
											"end": 18652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 18649,
											"end": 18651,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 18644,
											"end": 18647,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18585,
											"end": 18652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 18585,
											"end": 18652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18585,
											"end": 18652,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 18585,
											"end": 18652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18578,
											"end": 18652,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18578,
											"end": 18652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18661,
											"end": 18754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 18750,
											"end": 18753,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18661,
											"end": 18754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 18661,
											"end": 18754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18661,
											"end": 18754,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 18661,
											"end": 18754,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18779,
											"end": 18781,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18774,
											"end": 18777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18770,
											"end": 18782,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18763,
											"end": 18782,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18763,
											"end": 18782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18422,
											"end": 18788,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18422,
											"end": 18788,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18422,
											"end": 18788,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18422,
											"end": 18788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18794,
											"end": 19213,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 18794,
											"end": 19213,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18960,
											"end": 18964,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18998,
											"end": 19000,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18987,
											"end": 18996,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18983,
											"end": 19001,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18975,
											"end": 19001,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18975,
											"end": 19001,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19047,
											"end": 19056,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19041,
											"end": 19045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19037,
											"end": 19057,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19033,
											"end": 19034,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19022,
											"end": 19031,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19018,
											"end": 19035,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19011,
											"end": 19058,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19075,
											"end": 19206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 19201,
											"end": 19205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19075,
											"end": 19206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 19075,
											"end": 19206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19075,
											"end": 19206,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 19075,
											"end": 19206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19067,
											"end": 19206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19067,
											"end": 19206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18794,
											"end": 19213,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18794,
											"end": 19213,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18794,
											"end": 19213,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18794,
											"end": 19213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19219,
											"end": 19304,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 19219,
											"end": 19304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19264,
											"end": 19271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19293,
											"end": 19298,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19282,
											"end": 19298,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19282,
											"end": 19298,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19219,
											"end": 19304,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19219,
											"end": 19304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19219,
											"end": 19304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19219,
											"end": 19304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19310,
											"end": 19411,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 19310,
											"end": 19411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19346,
											"end": 19353,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19386,
											"end": 19404,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19379,
											"end": 19384,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19375,
											"end": 19405,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19364,
											"end": 19405,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19364,
											"end": 19405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19310,
											"end": 19411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19310,
											"end": 19411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19310,
											"end": 19411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19310,
											"end": 19411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19417,
											"end": 19573,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 19417,
											"end": 19573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19474,
											"end": 19483,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19507,
											"end": 19567,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 19524,
											"end": 19566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 19533,
											"end": 19565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 19559,
											"end": 19564,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19533,
											"end": 19565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 19533,
											"end": 19565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19533,
											"end": 19565,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 19533,
											"end": 19565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19524,
											"end": 19566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 19524,
											"end": 19566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19524,
											"end": 19566,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 19524,
											"end": 19566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19507,
											"end": 19567,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 19507,
											"end": 19567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19507,
											"end": 19567,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 19507,
											"end": 19567,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19494,
											"end": 19567,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19494,
											"end": 19567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19417,
											"end": 19573,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19417,
											"end": 19573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19417,
											"end": 19573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19417,
											"end": 19573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19579,
											"end": 19724,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 19579,
											"end": 19724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19673,
											"end": 19717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 19711,
											"end": 19716,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19673,
											"end": 19717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 19673,
											"end": 19717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19673,
											"end": 19717,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 19673,
											"end": 19717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19668,
											"end": 19671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19661,
											"end": 19718,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19579,
											"end": 19724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19579,
											"end": 19724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19579,
											"end": 19724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19730,
											"end": 19966,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 19730,
											"end": 19966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19830,
											"end": 19834,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19868,
											"end": 19870,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19857,
											"end": 19866,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19853,
											"end": 19871,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19845,
											"end": 19871,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19845,
											"end": 19871,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19881,
											"end": 19959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 19956,
											"end": 19957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19945,
											"end": 19954,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19941,
											"end": 19958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19932,
											"end": 19938,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19881,
											"end": 19959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 19881,
											"end": 19959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19881,
											"end": 19959,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 19881,
											"end": 19959,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19730,
											"end": 19966,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19730,
											"end": 19966,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19730,
											"end": 19966,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19730,
											"end": 19966,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19730,
											"end": 19966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19972,
											"end": 20152,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 19972,
											"end": 20152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20020,
											"end": 20097,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20017,
											"end": 20018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20010,
											"end": 20098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20117,
											"end": 20121,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 20114,
											"end": 20115,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 20107,
											"end": 20122,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20141,
											"end": 20145,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 20138,
											"end": 20139,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20131,
											"end": 20146,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 20158,
											"end": 20478,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 20158,
											"end": 20478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20202,
											"end": 20208,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20239,
											"end": 20240,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 20233,
											"end": 20237,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20229,
											"end": 20241,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 20219,
											"end": 20241,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20219,
											"end": 20241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20286,
											"end": 20287,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 20280,
											"end": 20284,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20276,
											"end": 20288,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20307,
											"end": 20325,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 20297,
											"end": 20378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 20297,
											"end": 20378,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20363,
											"end": 20367,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 20355,
											"end": 20361,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20351,
											"end": 20368,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20341,
											"end": 20368,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20341,
											"end": 20368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20297,
											"end": 20378,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 20297,
											"end": 20378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20425,
											"end": 20427,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20417,
											"end": 20423,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20414,
											"end": 20428,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 20394,
											"end": 20412,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20391,
											"end": 20429,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20388,
											"end": 20472,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 20388,
											"end": 20472,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20444,
											"end": 20462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 20444,
											"end": 20462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 20444,
											"end": 20462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20444,
											"end": 20462,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 20444,
											"end": 20462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20388,
											"end": 20472,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 20388,
											"end": 20472,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20209,
											"end": 20478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20158,
											"end": 20478,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20158,
											"end": 20478,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20158,
											"end": 20478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20158,
											"end": 20478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20484,
											"end": 20574,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 20484,
											"end": 20574,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20518,
											"end": 20525,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20561,
											"end": 20566,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20554,
											"end": 20567,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20547,
											"end": 20568,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20536,
											"end": 20568,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20536,
											"end": 20568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20484,
											"end": 20574,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20484,
											"end": 20574,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20484,
											"end": 20574,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20484,
											"end": 20574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20580,
											"end": 20696,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 20580,
											"end": 20696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20650,
											"end": 20671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 20665,
											"end": 20670,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20650,
											"end": 20671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 20650,
											"end": 20671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20650,
											"end": 20671,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 20650,
											"end": 20671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20643,
											"end": 20648,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20640,
											"end": 20672,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 20630,
											"end": 20690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 20630,
											"end": 20690,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20686,
											"end": 20687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20683,
											"end": 20684,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 20676,
											"end": 20688,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 20630,
											"end": 20690,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 20630,
											"end": 20690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20580,
											"end": 20696,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20580,
											"end": 20696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20702,
											"end": 20839,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 20702,
											"end": 20839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20756,
											"end": 20761,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20787,
											"end": 20793,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20781,
											"end": 20794,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20772,
											"end": 20794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20772,
											"end": 20794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20803,
											"end": 20833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 20827,
											"end": 20832,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20803,
											"end": 20833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 20803,
											"end": 20833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20803,
											"end": 20833,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 20803,
											"end": 20833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20702,
											"end": 20839,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20702,
											"end": 20839,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20702,
											"end": 20839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20702,
											"end": 20839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20702,
											"end": 20839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20845,
											"end": 21190,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 20845,
											"end": 21190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20912,
											"end": 20918,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20961,
											"end": 20963,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20949,
											"end": 20958,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20940,
											"end": 20947,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20936,
											"end": 20959,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20932,
											"end": 20964,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 20929,
											"end": 21048,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20929,
											"end": 21048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 20929,
											"end": 21048,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20967,
											"end": 21046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 20967,
											"end": 21046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 20967,
											"end": 21046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20967,
											"end": 21046,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 20967,
											"end": 21046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20929,
											"end": 21048,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 20929,
											"end": 21048,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21087,
											"end": 21088,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21112,
											"end": 21173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 21165,
											"end": 21172,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21156,
											"end": 21162,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21145,
											"end": 21154,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21141,
											"end": 21163,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21112,
											"end": 21173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 21112,
											"end": 21173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21112,
											"end": 21173,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 21112,
											"end": 21173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21102,
											"end": 21173,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21102,
											"end": 21173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21058,
											"end": 21183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20845,
											"end": 21190,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20845,
											"end": 21190,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20845,
											"end": 21190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20845,
											"end": 21190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20845,
											"end": 21190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21196,
											"end": 21368,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 21196,
											"end": 21368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21336,
											"end": 21360,
											"name": "PUSH",
											"source": 13,
											"value": "43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000"
										},
										{
											"begin": 21332,
											"end": 21333,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21324,
											"end": 21330,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21320,
											"end": 21334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21313,
											"end": 21361,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21196,
											"end": 21368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21196,
											"end": 21368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21374,
											"end": 21740,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 21374,
											"end": 21740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21516,
											"end": 21519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21537,
											"end": 21604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 21601,
											"end": 21603,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 21596,
											"end": 21599,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21537,
											"end": 21604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 21537,
											"end": 21604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21537,
											"end": 21604,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 21537,
											"end": 21604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21530,
											"end": 21604,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21530,
											"end": 21604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21613,
											"end": 21706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 21702,
											"end": 21705,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21613,
											"end": 21706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 21613,
											"end": 21706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21613,
											"end": 21706,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 21613,
											"end": 21706,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21731,
											"end": 21733,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21726,
											"end": 21729,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21722,
											"end": 21734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21715,
											"end": 21734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21715,
											"end": 21734,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21374,
											"end": 21740,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21374,
											"end": 21740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21374,
											"end": 21740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21374,
											"end": 21740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21746,
											"end": 22165,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 21746,
											"end": 22165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21912,
											"end": 21916,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21950,
											"end": 21952,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21939,
											"end": 21948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21935,
											"end": 21953,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21927,
											"end": 21953,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21927,
											"end": 21953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21999,
											"end": 22008,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21993,
											"end": 21997,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21989,
											"end": 22009,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21985,
											"end": 21986,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21974,
											"end": 21983,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21970,
											"end": 21987,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21963,
											"end": 22010,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22027,
											"end": 22158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 22153,
											"end": 22157,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22027,
											"end": 22158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 22027,
											"end": 22158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22027,
											"end": 22158,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 22027,
											"end": 22158,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22019,
											"end": 22158,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22019,
											"end": 22158,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21746,
											"end": 22165,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21746,
											"end": 22165,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21746,
											"end": 22165,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21746,
											"end": 22165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22171,
											"end": 22392,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 22171,
											"end": 22392,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22311,
											"end": 22345,
											"name": "PUSH",
											"source": 13,
											"value": "53746172742074696D65206D757374206265206265666F726520656E64207469"
										},
										{
											"begin": 22307,
											"end": 22308,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22299,
											"end": 22305,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22295,
											"end": 22309,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22288,
											"end": 22346,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22380,
											"end": 22384,
											"name": "PUSH",
											"source": 13,
											"value": "6D65000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22375,
											"end": 22377,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22367,
											"end": 22373,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22363,
											"end": 22378,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22356,
											"end": 22385,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22171,
											"end": 22392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22171,
											"end": 22392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22398,
											"end": 22764,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 22398,
											"end": 22764,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22540,
											"end": 22543,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22561,
											"end": 22628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 22625,
											"end": 22627,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 22620,
											"end": 22623,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22561,
											"end": 22628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 22561,
											"end": 22628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22561,
											"end": 22628,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 22561,
											"end": 22628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22554,
											"end": 22628,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22554,
											"end": 22628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22637,
											"end": 22730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 22726,
											"end": 22729,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22637,
											"end": 22730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 22637,
											"end": 22730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22637,
											"end": 22730,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 22637,
											"end": 22730,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22755,
											"end": 22757,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22750,
											"end": 22753,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22746,
											"end": 22758,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22739,
											"end": 22758,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22739,
											"end": 22758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22398,
											"end": 22764,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22398,
											"end": 22764,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22398,
											"end": 22764,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22398,
											"end": 22764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22770,
											"end": 23189,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 22770,
											"end": 23189,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22936,
											"end": 22940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22974,
											"end": 22976,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22963,
											"end": 22972,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22959,
											"end": 22977,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22951,
											"end": 22977,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22951,
											"end": 22977,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23023,
											"end": 23032,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23017,
											"end": 23021,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23013,
											"end": 23033,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23009,
											"end": 23010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22998,
											"end": 23007,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22994,
											"end": 23011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22987,
											"end": 23034,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23051,
											"end": 23182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 23177,
											"end": 23181,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23051,
											"end": 23182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 23051,
											"end": 23182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23051,
											"end": 23182,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 23051,
											"end": 23182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23043,
											"end": 23182,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23043,
											"end": 23182,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22770,
											"end": 23189,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22770,
											"end": 23189,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22770,
											"end": 23189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22770,
											"end": 23189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23195,
											"end": 23336,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 23195,
											"end": 23336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23244,
											"end": 23248,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23267,
											"end": 23270,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23259,
											"end": 23270,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23259,
											"end": 23270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23290,
											"end": 23293,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23287,
											"end": 23288,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23280,
											"end": 23294,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23324,
											"end": 23328,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23321,
											"end": 23322,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23311,
											"end": 23329,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 23303,
											"end": 23329,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23303,
											"end": 23329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23195,
											"end": 23336,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23195,
											"end": 23336,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23195,
											"end": 23336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23195,
											"end": 23336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23342,
											"end": 23435,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 23342,
											"end": 23435,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23379,
											"end": 23385,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23426,
											"end": 23428,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23421,
											"end": 23423,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 23414,
											"end": 23419,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23410,
											"end": 23424,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23406,
											"end": 23429,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 23396,
											"end": 23429,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23396,
											"end": 23429,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23342,
											"end": 23435,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23342,
											"end": 23435,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23342,
											"end": 23435,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23342,
											"end": 23435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23441,
											"end": 23548,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 23441,
											"end": 23548,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23485,
											"end": 23493,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23535,
											"end": 23540,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23529,
											"end": 23533,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23525,
											"end": 23541,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 23504,
											"end": 23541,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23504,
											"end": 23541,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23441,
											"end": 23548,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23441,
											"end": 23548,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23441,
											"end": 23548,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23441,
											"end": 23548,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23441,
											"end": 23548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23554,
											"end": 23947,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 23554,
											"end": 23947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23623,
											"end": 23629,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23673,
											"end": 23674,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 23661,
											"end": 23671,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23657,
											"end": 23675,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 23696,
											"end": 23793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 23726,
											"end": 23792,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23715,
											"end": 23724,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23696,
											"end": 23793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 23696,
											"end": 23793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23696,
											"end": 23793,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 23696,
											"end": 23793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23814,
											"end": 23853,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 23844,
											"end": 23852,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23833,
											"end": 23842,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23814,
											"end": 23853,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 23814,
											"end": 23853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23814,
											"end": 23853,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 23814,
											"end": 23853,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23802,
											"end": 23853,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 23802,
											"end": 23853,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23886,
											"end": 23890,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 23882,
											"end": 23891,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 23875,
											"end": 23880,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23871,
											"end": 23892,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 23862,
											"end": 23892,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23862,
											"end": 23892,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23935,
											"end": 23939,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 23925,
											"end": 23933,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23921,
											"end": 23940,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 23914,
											"end": 23919,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23911,
											"end": 23941,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 23901,
											"end": 23941,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23901,
											"end": 23941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23630,
											"end": 23947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23630,
											"end": 23947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23554,
											"end": 23947,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23554,
											"end": 23947,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23554,
											"end": 23947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23554,
											"end": 23947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23554,
											"end": 23947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23554,
											"end": 23947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23953,
											"end": 24095,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 23953,
											"end": 24095,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24003,
											"end": 24012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24036,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 24054,
											"end": 24088,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 24063,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 24081,
											"end": 24086,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24063,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 24063,
											"end": 24087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24063,
											"end": 24087,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 24063,
											"end": 24087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24054,
											"end": 24088,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 24054,
											"end": 24088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24054,
											"end": 24088,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 24054,
											"end": 24088,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24036,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 24036,
											"end": 24089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24036,
											"end": 24089,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 24036,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24023,
											"end": 24089,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24023,
											"end": 24089,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23953,
											"end": 24095,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23953,
											"end": 24095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23953,
											"end": 24095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23953,
											"end": 24095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24101,
											"end": 24176,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 24101,
											"end": 24176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24144,
											"end": 24147,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24165,
											"end": 24170,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24158,
											"end": 24170,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24158,
											"end": 24170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24101,
											"end": 24176,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24101,
											"end": 24176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24101,
											"end": 24176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24101,
											"end": 24176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24182,
											"end": 24451,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 24182,
											"end": 24451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24292,
											"end": 24331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 24323,
											"end": 24330,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24292,
											"end": 24331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 24292,
											"end": 24331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24292,
											"end": 24331,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 24292,
											"end": 24331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24353,
											"end": 24444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 24402,
											"end": 24443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 24426,
											"end": 24442,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24402,
											"end": 24443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 24402,
											"end": 24443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24402,
											"end": 24443,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 24402,
											"end": 24443,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24394,
											"end": 24400,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24387,
											"end": 24391,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24381,
											"end": 24392,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 24353,
											"end": 24444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 24353,
											"end": 24444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24353,
											"end": 24444,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 24353,
											"end": 24444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24347,
											"end": 24351,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24340,
											"end": 24445,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 24258,
											"end": 24451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24182,
											"end": 24451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24182,
											"end": 24451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24182,
											"end": 24451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24182,
											"end": 24451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24457,
											"end": 24530,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 24457,
											"end": 24530,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24502,
											"end": 24505,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24457,
											"end": 24530,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24457,
											"end": 24530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24536,
											"end": 24725,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 24536,
											"end": 24725,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24613,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 24613,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 24613,
											"end": 24645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24613,
											"end": 24645,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 24613,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24654,
											"end": 24719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 24712,
											"end": 24718,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24704,
											"end": 24710,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24698,
											"end": 24702,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24654,
											"end": 24719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 24654,
											"end": 24719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24654,
											"end": 24719,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 24654,
											"end": 24719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24589,
											"end": 24725,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24536,
											"end": 24725,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24536,
											"end": 24725,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24536,
											"end": 24725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24731,
											"end": 24917,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 24731,
											"end": 24917,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24791,
											"end": 24911,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 24791,
											"end": 24911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24808,
											"end": 24811,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24801,
											"end": 24806,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24798,
											"end": 24812,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 24791,
											"end": 24911,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24791,
											"end": 24911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 24791,
											"end": 24911,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24862,
											"end": 24901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 24899,
											"end": 24900,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24892,
											"end": 24897,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24862,
											"end": 24901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 24862,
											"end": 24901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24862,
											"end": 24901,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 24862,
											"end": 24901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24835,
											"end": 24836,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 24828,
											"end": 24833,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24824,
											"end": 24837,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24815,
											"end": 24837,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24815,
											"end": 24837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24791,
											"end": 24911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 24791,
											"end": 24911,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24791,
											"end": 24911,
											"name": "tag",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 24791,
											"end": 24911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24731,
											"end": 24917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24731,
											"end": 24917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24731,
											"end": 24917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24923,
											"end": 25466,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 24923,
											"end": 25466,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25024,
											"end": 25026,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 25019,
											"end": 25022,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25016,
											"end": 25027,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 25013,
											"end": 25459,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 25013,
											"end": 25459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 25013,
											"end": 25459,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 25058,
											"end": 25096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 25090,
											"end": 25095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25058,
											"end": 25096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 25058,
											"end": 25096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25058,
											"end": 25096,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 25058,
											"end": 25096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25142,
											"end": 25171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 25160,
											"end": 25170,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25142,
											"end": 25171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 25142,
											"end": 25171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25142,
											"end": 25171,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 25142,
											"end": 25171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25132,
											"end": 25140,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25128,
											"end": 25172,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25325,
											"end": 25327,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25313,
											"end": 25323,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25310,
											"end": 25328,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 25307,
											"end": 25356,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 25307,
											"end": 25356,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 25307,
											"end": 25356,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 25346,
											"end": 25354,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25331,
											"end": 25354,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25331,
											"end": 25354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25307,
											"end": 25356,
											"name": "tag",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 25307,
											"end": 25356,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25369,
											"end": 25449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 25425,
											"end": 25447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 25443,
											"end": 25446,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25425,
											"end": 25447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 25425,
											"end": 25447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25425,
											"end": 25447,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 25425,
											"end": 25447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25415,
											"end": 25423,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25411,
											"end": 25448,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25398,
											"end": 25409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25369,
											"end": 25449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 25369,
											"end": 25449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25369,
											"end": 25449,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 25369,
											"end": 25449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25028,
											"end": 25459,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25028,
											"end": 25459,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25013,
											"end": 25459,
											"name": "tag",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 25013,
											"end": 25459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24923,
											"end": 25466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24923,
											"end": 25466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24923,
											"end": 25466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24923,
											"end": 25466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25472,
											"end": 25589,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 25472,
											"end": 25589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25526,
											"end": 25534,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25576,
											"end": 25581,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25570,
											"end": 25574,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25566,
											"end": 25582,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 25545,
											"end": 25582,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25545,
											"end": 25582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25472,
											"end": 25589,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25472,
											"end": 25589,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25472,
											"end": 25589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25472,
											"end": 25589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25472,
											"end": 25589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25595,
											"end": 25764,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 25595,
											"end": 25764,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25639,
											"end": 25645,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25672,
											"end": 25723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 25720,
											"end": 25721,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25716,
											"end": 25722,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 25708,
											"end": 25713,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25705,
											"end": 25706,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 25701,
											"end": 25714,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 25672,
											"end": 25723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 25672,
											"end": 25723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25672,
											"end": 25723,
											"name": "tag",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 25672,
											"end": 25723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25668,
											"end": 25724,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 25753,
											"end": 25757,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 25747,
											"end": 25751,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25743,
											"end": 25758,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 25733,
											"end": 25758,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25733,
											"end": 25758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25646,
											"end": 25764,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25595,
											"end": 25764,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25595,
											"end": 25764,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25595,
											"end": 25764,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25595,
											"end": 25764,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25595,
											"end": 25764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25769,
											"end": 26064,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 25769,
											"end": 26064,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25845,
											"end": 25849,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25991,
											"end": 26020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 26016,
											"end": 26019,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26010,
											"end": 26014,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25991,
											"end": 26020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 25991,
											"end": 26020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25991,
											"end": 26020,
											"name": "tag",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 25991,
											"end": 26020,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25983,
											"end": 26020,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25983,
											"end": 26020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26053,
											"end": 26056,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26050,
											"end": 26051,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 26046,
											"end": 26057,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 26040,
											"end": 26044,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26037,
											"end": 26058,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 26029,
											"end": 26058,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26029,
											"end": 26058,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25769,
											"end": 26064,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25769,
											"end": 26064,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25769,
											"end": 26064,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25769,
											"end": 26064,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25769,
											"end": 26064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26069,
											"end": 27464,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 26069,
											"end": 27464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26186,
											"end": 26223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 26219,
											"end": 26222,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26186,
											"end": 26223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 26186,
											"end": 26223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26186,
											"end": 26223,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 26186,
											"end": 26223,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26288,
											"end": 26306,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26280,
											"end": 26286,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26277,
											"end": 26307,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 26274,
											"end": 26330,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 26274,
											"end": 26330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 26274,
											"end": 26330,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26310,
											"end": 26328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 26310,
											"end": 26328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 26310,
											"end": 26328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26310,
											"end": 26328,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 26310,
											"end": 26328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26274,
											"end": 26330,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 26274,
											"end": 26330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26354,
											"end": 26392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 26386,
											"end": 26390,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26380,
											"end": 26391,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 26354,
											"end": 26392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 26354,
											"end": 26392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26354,
											"end": 26392,
											"name": "tag",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 26354,
											"end": 26392,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26439,
											"end": 26506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 26499,
											"end": 26505,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26491,
											"end": 26497,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26485,
											"end": 26489,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 26439,
											"end": 26506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 26439,
											"end": 26506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26439,
											"end": 26506,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 26439,
											"end": 26506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26533,
											"end": 26534,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26557,
											"end": 26561,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26544,
											"end": 26561,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26544,
											"end": 26561,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26589,
											"end": 26591,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 26581,
											"end": 26587,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26578,
											"end": 26592,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 26606,
											"end": 26607,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 26601,
											"end": 27219,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26601,
											"end": 27219,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 26601,
											"end": 27219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 26601,
											"end": 27219,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 27263,
											"end": 27264,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27280,
											"end": 27286,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 27277,
											"end": 27354,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 27277,
											"end": 27354,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 27277,
											"end": 27354,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 27329,
											"end": 27338,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27324,
											"end": 27327,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 27320,
											"end": 27339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27314,
											"end": 27340,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 27305,
											"end": 27340,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27305,
											"end": 27340,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27277,
											"end": 27354,
											"name": "tag",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 27277,
											"end": 27354,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27380,
											"end": 27447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 27440,
											"end": 27446,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 27433,
											"end": 27438,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27380,
											"end": 27447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 27380,
											"end": 27447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27380,
											"end": 27447,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 27380,
											"end": 27447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27374,
											"end": 27378,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 27367,
											"end": 27448,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 27236,
											"end": 27458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26571,
											"end": 27458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 26571,
											"end": 27458,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26601,
											"end": 27219,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 26601,
											"end": 27219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26653,
											"end": 26657,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 26649,
											"end": 26658,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 26641,
											"end": 26647,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 26637,
											"end": 26659,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 26687,
											"end": 26724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 26719,
											"end": 26723,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 26687,
											"end": 26724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 26687,
											"end": 26724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26687,
											"end": 26724,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 26687,
											"end": 26724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26746,
											"end": 26747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26760,
											"end": 26968,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 26760,
											"end": 26968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26774,
											"end": 26781,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26771,
											"end": 26772,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26768,
											"end": 26782,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 26760,
											"end": 26968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 26760,
											"end": 26968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 26760,
											"end": 26968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26853,
											"end": 26862,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 26848,
											"end": 26851,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 26844,
											"end": 26863,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26838,
											"end": 26864,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 26830,
											"end": 26836,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26823,
											"end": 26865,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 26904,
											"end": 26905,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 26896,
											"end": 26902,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26892,
											"end": 26906,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26882,
											"end": 26906,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26882,
											"end": 26906,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26951,
											"end": 26953,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26940,
											"end": 26949,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 26936,
											"end": 26954,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26923,
											"end": 26954,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 26923,
											"end": 26954,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26797,
											"end": 26801,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26794,
											"end": 26795,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26790,
											"end": 26802,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26785,
											"end": 26802,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26785,
											"end": 26802,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26760,
											"end": 26968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 26760,
											"end": 26968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26760,
											"end": 26968,
											"name": "tag",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 26760,
											"end": 26968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26996,
											"end": 27002,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 26987,
											"end": 26994,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26984,
											"end": 27003,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 26981,
											"end": 27160,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 26981,
											"end": 27160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 26981,
											"end": 27160,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 27054,
											"end": 27063,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 27049,
											"end": 27052,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 27045,
											"end": 27064,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27039,
											"end": 27065,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 27097,
											"end": 27145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 27139,
											"end": 27143,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 27131,
											"end": 27137,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 27127,
											"end": 27144,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 27116,
											"end": 27125,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27097,
											"end": 27145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 27097,
											"end": 27145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27097,
											"end": 27145,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 27097,
											"end": 27145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27089,
											"end": 27095,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27082,
											"end": 27146,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 27004,
											"end": 27160,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26981,
											"end": 27160,
											"name": "tag",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 26981,
											"end": 27160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27206,
											"end": 27207,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 27202,
											"end": 27203,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 27194,
											"end": 27200,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 27190,
											"end": 27204,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 27186,
											"end": 27208,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27180,
											"end": 27184,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 27173,
											"end": 27209,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 26608,
											"end": 27219,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26608,
											"end": 27219,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26608,
											"end": 27219,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26571,
											"end": 27458,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 26571,
											"end": 27458,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26571,
											"end": 27458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26161,
											"end": 27464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26161,
											"end": 27464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26161,
											"end": 27464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26069,
											"end": 27464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26069,
											"end": 27464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26069,
											"end": 27464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27470,
											"end": 27700,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 27470,
											"end": 27700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27610,
											"end": 27644,
											"name": "PUSH",
											"source": 13,
											"value": "5769746864726177616C20616D6F756E74206D75737420626520677265617465"
										},
										{
											"begin": 27606,
											"end": 27607,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27598,
											"end": 27604,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27594,
											"end": 27608,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27587,
											"end": 27645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27679,
											"end": 27692,
											"name": "PUSH",
											"source": 13,
											"value": "72207468616E207A65726F000000000000000000000000000000000000000000"
										},
										{
											"begin": 27674,
											"end": 27676,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27666,
											"end": 27672,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27662,
											"end": 27677,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27655,
											"end": 27693,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27470,
											"end": 27700,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27470,
											"end": 27700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27706,
											"end": 28072,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 27706,
											"end": 28072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27848,
											"end": 27851,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27869,
											"end": 27936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 27933,
											"end": 27935,
											"name": "PUSH",
											"source": 13,
											"value": "2B"
										},
										{
											"begin": 27928,
											"end": 27931,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27869,
											"end": 27936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 27869,
											"end": 27936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27869,
											"end": 27936,
											"name": "tag",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 27869,
											"end": 27936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27862,
											"end": 27936,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27862,
											"end": 27936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27945,
											"end": 28038,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 28034,
											"end": 28037,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27945,
											"end": 28038,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 27945,
											"end": 28038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27945,
											"end": 28038,
											"name": "tag",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 27945,
											"end": 28038,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28063,
											"end": 28065,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 28058,
											"end": 28061,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28054,
											"end": 28066,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28047,
											"end": 28066,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28047,
											"end": 28066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27706,
											"end": 28072,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27706,
											"end": 28072,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27706,
											"end": 28072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27706,
											"end": 28072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28078,
											"end": 28497,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 28078,
											"end": 28497,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28244,
											"end": 28248,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28282,
											"end": 28284,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 28271,
											"end": 28280,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28267,
											"end": 28285,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28259,
											"end": 28285,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28259,
											"end": 28285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28331,
											"end": 28340,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28325,
											"end": 28329,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28321,
											"end": 28341,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 28317,
											"end": 28318,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28306,
											"end": 28315,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28302,
											"end": 28319,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28295,
											"end": 28342,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28359,
											"end": 28490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 28485,
											"end": 28489,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28359,
											"end": 28490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 28359,
											"end": 28490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28359,
											"end": 28490,
											"name": "tag",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 28359,
											"end": 28490,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28351,
											"end": 28490,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28351,
											"end": 28490,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28078,
											"end": 28497,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28078,
											"end": 28497,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28078,
											"end": 28497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28078,
											"end": 28497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28503,
											"end": 28671,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 28503,
											"end": 28671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28643,
											"end": 28663,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 28639,
											"end": 28640,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28631,
											"end": 28637,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28627,
											"end": 28641,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28620,
											"end": 28664,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28503,
											"end": 28671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28503,
											"end": 28671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28677,
											"end": 29043,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 28677,
											"end": 29043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28819,
											"end": 28822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28840,
											"end": 28907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 28904,
											"end": 28906,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 28899,
											"end": 28902,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28840,
											"end": 28907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 28840,
											"end": 28907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28840,
											"end": 28907,
											"name": "tag",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 28840,
											"end": 28907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28833,
											"end": 28907,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28833,
											"end": 28907,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28916,
											"end": 29009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 29005,
											"end": 29008,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28916,
											"end": 29009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 28916,
											"end": 29009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28916,
											"end": 29009,
											"name": "tag",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 28916,
											"end": 29009,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29034,
											"end": 29036,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 29029,
											"end": 29032,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29025,
											"end": 29037,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29018,
											"end": 29037,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29018,
											"end": 29037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28677,
											"end": 29043,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28677,
											"end": 29043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28677,
											"end": 29043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28677,
											"end": 29043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29049,
											"end": 29468,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 29049,
											"end": 29468,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29215,
											"end": 29219,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29253,
											"end": 29255,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 29242,
											"end": 29251,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29238,
											"end": 29256,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29230,
											"end": 29256,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29230,
											"end": 29256,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29302,
											"end": 29311,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29296,
											"end": 29300,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29292,
											"end": 29312,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 29288,
											"end": 29289,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29277,
											"end": 29286,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29273,
											"end": 29290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29266,
											"end": 29313,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 29330,
											"end": 29461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 29456,
											"end": 29460,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29330,
											"end": 29461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 29330,
											"end": 29461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29330,
											"end": 29461,
											"name": "tag",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 29330,
											"end": 29461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29322,
											"end": 29461,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29322,
											"end": 29461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29049,
											"end": 29468,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 29049,
											"end": 29468,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29049,
											"end": 29468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29049,
											"end": 29468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29474,
											"end": 29806,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 29474,
											"end": 29806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29595,
											"end": 29599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29633,
											"end": 29635,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 29622,
											"end": 29631,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29618,
											"end": 29636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29610,
											"end": 29636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29610,
											"end": 29636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29646,
											"end": 29717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 29714,
											"end": 29715,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29703,
											"end": 29712,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29699,
											"end": 29716,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29690,
											"end": 29696,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 29646,
											"end": 29717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 29646,
											"end": 29717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29646,
											"end": 29717,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 29646,
											"end": 29717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29727,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 29795,
											"end": 29797,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 29784,
											"end": 29793,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29780,
											"end": 29798,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29771,
											"end": 29777,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 29727,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 29727,
											"end": 29799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29727,
											"end": 29799,
											"name": "tag",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 29727,
											"end": 29799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29474,
											"end": 29806,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 29474,
											"end": 29806,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 29474,
											"end": 29806,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29474,
											"end": 29806,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29474,
											"end": 29806,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29474,
											"end": 29806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29812,
											"end": 30254,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 29812,
											"end": 30254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29961,
											"end": 29965,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29999,
											"end": 30001,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 29988,
											"end": 29997,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29984,
											"end": 30002,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29976,
											"end": 30002,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29976,
											"end": 30002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30012,
											"end": 30083,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 30080,
											"end": 30081,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30069,
											"end": 30078,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 30065,
											"end": 30082,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30056,
											"end": 30062,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 30012,
											"end": 30083,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 30012,
											"end": 30083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30012,
											"end": 30083,
											"name": "tag",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 30012,
											"end": 30083,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30093,
											"end": 30165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 30161,
											"end": 30163,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 30150,
											"end": 30159,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 30146,
											"end": 30164,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30137,
											"end": 30143,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 30093,
											"end": 30165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 30093,
											"end": 30165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30093,
											"end": 30165,
											"name": "tag",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 30093,
											"end": 30165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30175,
											"end": 30247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 30243,
											"end": 30245,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 30232,
											"end": 30241,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 30228,
											"end": 30246,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30219,
											"end": 30225,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 30175,
											"end": 30247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 30175,
											"end": 30247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30175,
											"end": 30247,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 30175,
											"end": 30247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29812,
											"end": 30254,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 29812,
											"end": 30254,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 29812,
											"end": 30254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29812,
											"end": 30254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29812,
											"end": 30254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29812,
											"end": 30254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29812,
											"end": 30254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ETHER()": "42cb1fbc",
							"allowedAmounts(address,address)": "a9590e8a",
							"claim(address)": "1e83409a",
							"currentRound()": "8a19c8bc",
							"deposit(address,uint256)": "47e7ef24",
							"initialize(address,address)": "485cc955",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"scorer()": "85c758f7",
							"setAllowedAmount(address,address,uint256)": "b807a3c4",
							"setRound(uint256,uint256,string)": "be9a7687",
							"totalBalances(address)": "aee9c872",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"AllowedAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"RoundUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ETHER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_scorer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scorer\",\"outputs\":[{\"internalType\":\"contract IScorer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"setRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"params\":{\"amount\":\"The value to add (in wei for Ether).\",\"token\":\"The token address (address(0) for Ether).\"}},\"initialize(address,address)\":{\"params\":{\"_scorer\":\"The scoring contract address.\",\"owner\":\"The owner address.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAllowedAmount(address,address,uint256)\":{\"params\":{\"amount\":\"The allowed amount for the user.\",\"token\":\"The token address.\",\"user\":\"The address of the user.\"}},\"setRound(uint256,uint256,string)\":{\"params\":{\"end\":\"The end timestamp of the round.\",\"metadataURI\":\"The IPFS URI for the round metadata.\",\"start\":\"The start timestamp of the round.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"The amount to withdraw.\",\"token\":\"The token address (address(0) for Ether).\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address)\":{\"notice\":\"Claims the full allowed amount for a user during the round.\"},\"deposit(address,uint256)\":{\"notice\":\"Deposits funds into this jar for a specific token or Ether.\"},\"initialize(address,address)\":{\"notice\":\"Initializes this contract with its initial state.\"},\"setAllowedAmount(address,address,uint256)\":{\"notice\":\"Sets the allowed amount for a specific user and token.\"},\"setRound(uint256,uint256,string)\":{\"notice\":\"Sets the round duration and metadata URI.\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws funds from the jar for a specific token or Ether.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sweetspot.sol\":\"nCookieJar\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0x5bf83793e4290e7e68813647ee12b8abc4c538289be58958e32b7333b5b04e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f2ae1e6cfcef833b0424c313a99b39e98c418ba4fc037c081644ef42e598776\",\"dweb:/ipfs/QmSyyx1J5C2o3KCaWxDf3Gd9szsZGdzJCbe4u4SvdNXPjV\"]},\"contracts/sweetspot.sol\":{\"keccak256\":\"0xc4da019c23897b36e06929c72483982397a419acae77b30caa293c18fb8a68a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd1cb84967ebe3d35a5bd32687a80b8e11206208aea91f4c54eecfcc6dd56836\",\"dweb:/ipfs/QmQEHoSigW8HFJ1s7SF7M3ea8QTgQRPp5rXVEqozi7zvXK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1407,
								"contract": "contracts/sweetspot.sol:nCookieJar",
								"label": "scorer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IScorer)1387"
							},
							{
								"astId": 1417,
								"contract": "contracts/sweetspot.sol:nCookieJar",
								"label": "currentRound",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Round)1414_storage"
							},
							{
								"astId": 1421,
								"contract": "contracts/sweetspot.sol:nCookieJar",
								"label": "totalBalances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1427,
								"contract": "contracts/sweetspot.sol:nCookieJar",
								"label": "allowedAmounts",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IScorer)1387": {
								"encoding": "inplace",
								"label": "contract IScorer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Round)1414_storage": {
								"encoding": "inplace",
								"label": "struct nCookieJar.Round",
								"members": [
									{
										"astId": 1409,
										"contract": "contracts/sweetspot.sol:nCookieJar",
										"label": "start",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1411,
										"contract": "contracts/sweetspot.sol:nCookieJar",
										"label": "end",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1413,
										"contract": "contracts/sweetspot.sol:nCookieJar",
										"label": "metadataURI",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claim(address)": {
								"notice": "Claims the full allowed amount for a user during the round."
							},
							"deposit(address,uint256)": {
								"notice": "Deposits funds into this jar for a specific token or Ether."
							},
							"initialize(address,address)": {
								"notice": "Initializes this contract with its initial state."
							},
							"setAllowedAmount(address,address,uint256)": {
								"notice": "Sets the allowed amount for a specific user and token."
							},
							"setRound(uint256,uint256,string)": {
								"notice": "Sets the round duration and metadata URI."
							},
							"withdraw(address,uint256)": {
								"notice": "Withdraws funds from the jar for a specific token or Ether."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 495,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								494,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 449,
							"src": "126:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"728:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:2"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "800:7:2",
										"statements": []
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 457,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:2"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:2"
									},
									"scope": 494,
									"src": "748:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "875:7:2",
										"statements": []
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:2"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:2"
									},
									"scope": 494,
									"src": "813:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "949:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "959:17:2"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "940:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:2"
									},
									"scope": 494,
									"src": "887:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "1056:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 481,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 480,
												"id": 483,
												"nodeType": "Return",
												"src": "1066:15:2"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1040:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:2"
									},
									"scope": 494,
									"src": "989:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "1166:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 489,
												"id": 491,
												"nodeType": "Return",
												"src": "1176:8:2"
											}
										]
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:2"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1157:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:2"
									},
									"scope": 494,
									"src": "1094:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 495,
							"src": "688:505:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							576
						],
						"IERC165": [
							1366
						],
						"IERC20": [
							662
						]
					},
					"id": 577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 585,
							"src": "133:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 497,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "141:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 581,
							"src": "170:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 499,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1366,
										"src": "178:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 502,
										"name": "IERC20",
										"nameLocations": [
											"590:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "590:6:3"
									},
									"id": 503,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:3"
								},
								{
									"baseName": {
										"id": 504,
										"name": "IERC165",
										"nameLocations": [
											"598:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1366,
										"src": "598:7:3"
									},
									"id": 505,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:3"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 501,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:3",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 576,
							"linearizedBaseContracts": [
								576,
								1366,
								662
							],
							"name": "IERC1363",
							"nameLocation": "578:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "1548:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "1560:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:3"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "1593:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:3"
									},
									"scope": 576,
									"src": "1523:76:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2088:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2100:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2115:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2154:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:3"
									},
									"scope": 576,
									"src": "2063:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2653:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2667:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2679:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:3"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2712:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:3"
									},
									"scope": 576,
									"src": "2624:94:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3294:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3308:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3320:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3335:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:3"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3374:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:3"
									},
									"scope": 576,
									"src": "3265:115:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3805:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3822:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3855:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:3"
									},
									"scope": 576,
									"src": "3781:80:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4391:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4406:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4445:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:3"
									},
									"scope": 576,
									"src": "4350:101:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 577,
							"src": "568:3885:3",
							"usedErrors": [],
							"usedEvents": [
								596,
								605
							]
						}
					],
					"src": "107:4347:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1366
						]
					},
					"id": 581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 578,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 580,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 581,
							"sourceUnit": 1367,
							"src": "132:59:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 579,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1366,
										"src": "140:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							662
						]
					},
					"id": 585,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 585,
							"sourceUnit": 663,
							"src": "131:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 583,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							662
						]
					},
					"id": 663,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 586,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 587,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 596,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 605,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 662,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 662,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 662,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 662,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 646,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 662,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 658,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 662,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 663,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								596,
								605
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1332
						],
						"IERC1363": [
							576
						],
						"IERC20": [
							662
						],
						"SafeERC20": [
							1073
						]
					},
					"id": 1074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 663,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 665,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 577,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 667,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 576,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 1333,
							"src": "238:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 669,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1332,
										"src": "246:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 671,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1073,
							"linearizedBaseContracts": [
								1073
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 676,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "875:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:7"
									},
									"src": "844:46:7"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 685,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1011:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1028:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1054:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:7"
									},
									"src": "972:109:7"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "1343:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "1373:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 700,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 689,
																		"src": "1395:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 629,
																	"src": "1395:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 702,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 691,
																			"src": "1412:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 703,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "1416:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 704,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 698,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 696,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1353:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:7"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1293:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 688,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 687,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "1293:6:7"
													},
													"referencedDeclaration": 662,
													"src": "1293:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1307:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1319:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:7"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:7"
									},
									"scope": 1073,
									"src": "1271:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "1760:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 723,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "1790:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 726,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "1812:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 661,
																	"src": "1812:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 728,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "1833:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 729,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "1839:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "1843:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 731,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 724,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 722,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1770:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:7"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1696:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 711,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "1696:6:7"
													},
													"referencedDeclaration": 662,
													"src": "1696:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1710:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1724:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1736:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:7"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:7"
									},
									"scope": 1073,
									"src": "1670:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "2600:139:7",
										"statements": [
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "2610:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 757,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 753,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1073",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1073",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 751,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "2664:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 749,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "2633:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 639,
														"src": "2633:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 759,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "2695:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 760,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "2702:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 761,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "2711:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 762,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "2726:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 758,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2682:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:7"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2545:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 739,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 738,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "2545:6:7"
													},
													"referencedDeclaration": 662,
													"src": "2545:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2559:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2576:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:7"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:7"
									},
									"scope": 1073,
									"src": "2514:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "3505:370:7",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:7",
												"statements": [
													{
														"assignments": [
															779
														],
														"declarations": [
															{
																"constant": false,
																"id": 779,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 808,
																"src": "3539:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 778,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 788,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 784,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1073",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1073",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 782,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 786,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "3597:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 780,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "3566:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 639,
																"src": "3566:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 789,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "3623:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 790,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "3642:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 799,
														"nodeType": "IfStatement",
														"src": "3619:160:7",
														"trueBody": {
															"id": 798,
															"nodeType": "Block",
															"src": "3661:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 793,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "3719:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 794,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 779,
																				"src": "3728:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 795,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 775,
																				"src": "3746:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 792,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 685,
																			"src": "3686:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 797,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 801,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "3805:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 802,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "3812:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 803,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "3821:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 804,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "3840:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 800,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "3792:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 807,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3438:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 770,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 769,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "3438:6:7"
													},
													"referencedDeclaration": 662,
													"src": "3438:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3452:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3469:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:7"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:7"
									},
									"scope": 1073,
									"src": "3407:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "4529:303:7",
										"statements": [
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 856,
														"src": "4539:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 821,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 825,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "4582:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$662",
																	"typeString": "contract IERC20"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 649,
															"src": "4582:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 827,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "4598:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 828,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "4607:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 829,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 823,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:7"
											},
											{
												"condition": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 833,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "4654:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$662",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 834,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "4661:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$662",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 832,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "4630:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 855,
												"nodeType": "IfStatement",
												"src": "4625:201:7",
												"trueBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "4676:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 838,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "4710:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 841,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 814,
																					"src": "4732:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$662",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 649,
																				"src": "4732:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 843,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 816,
																						"src": "4748:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 844,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 845,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 839,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 837,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "4690:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 848,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 850,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "4795:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 851,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 822,
																		"src": "4802:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 849,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "4775:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 853,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4474:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 812,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "4474:6:7"
													},
													"referencedDeclaration": 662,
													"src": "4474:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4488:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:7"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:7"
									},
									"scope": 1073,
									"src": "4452:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "5279:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 870,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "5293:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 884,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "5402:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 885,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "5406:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 886,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "5413:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 882,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "5380:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$576",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 527,
																"src": "5380:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 897,
													"nodeType": "IfStatement",
													"src": "5375:117:7",
													"trueBody": {
														"id": 896,
														"nodeType": "Block",
														"src": "5420:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 892,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 861,
																					"src": "5474:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 890,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 889,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "5441:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 895,
																"nodeType": "RevertStatement",
																"src": "5434:47:7"
															}
														]
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "5289:203:7",
												"trueBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "5314:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 876,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "5341:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 877,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "5348:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 878,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "5352:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 875,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "5328:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 880,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5208:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$576",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 860,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 859,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 576,
														"src": "5208:8:7"
													},
													"referencedDeclaration": 576,
													"src": "5208:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$576",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5224:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5236:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5251:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 866,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:7"
									},
									"scope": 1073,
									"src": "5176:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "6017:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 915,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "6031:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 930,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "6154:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 931,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "6160:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 932,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "6164:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 933,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "6171:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 928,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "6128:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$576",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 553,
																"src": "6128:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 944,
													"nodeType": "IfStatement",
													"src": "6123:127:7",
													"trueBody": {
														"id": 943,
														"nodeType": "Block",
														"src": "6178:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 939,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 904,
																					"src": "6232:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 937,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 936,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "6199:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 942,
																"nodeType": "RevertStatement",
																"src": "6192:47:7"
															}
														]
													}
												},
												"id": 945,
												"nodeType": "IfStatement",
												"src": "6027:223:7",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "6052:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 921,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "6083:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 922,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 906,
																		"src": "6090:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 923,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "6096:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 924,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "6100:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 920,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "6066:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 926,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5895:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$576",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 903,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 902,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 576,
														"src": "5895:8:7"
													},
													"referencedDeclaration": 576,
													"src": "5895:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$576",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5919:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5941:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5961:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5984:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:7"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:7"
									},
									"scope": 1073,
									"src": "5850:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "7023:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 960,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "7037:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 974,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "7145:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "7149:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 976,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "7156:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 972,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "7124:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$576",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 575,
																"src": "7124:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 987,
													"nodeType": "IfStatement",
													"src": "7119:116:7",
													"trueBody": {
														"id": 986,
														"nodeType": "Block",
														"src": "7163:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 982,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "7217:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 980,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 979,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "7184:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 985,
																"nodeType": "RevertStatement",
																"src": "7177:47:7"
															}
														]
													}
												},
												"id": 988,
												"nodeType": "IfStatement",
												"src": "7033:202:7",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "7058:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 966,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "7085:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 967,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "7092:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 968,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "7096:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 965,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "7072:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 970,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6952:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$576",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 950,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 949,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 576,
														"src": "6952:8:7"
													},
													"referencedDeclaration": 576,
													"src": "6952:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$576",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6968:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6980:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6995:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 956,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:7"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:7"
									},
									"scope": 1073,
									"src": "6921:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "7808:650:7",
										"statements": [
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "7818:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 999,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1001,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:7"
											},
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "7846:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1002,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1004,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:7"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:7",
													"nodeType": "YulBlock",
													"src": "7900:396:7",
													"statements": [
														{
															"nativeSrc": "7914:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:7"
																		},
																		"nativeSrc": "7934:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:7"
																		},
																		"nativeSrc": "7951:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:7"
																		},
																		"nativeSrc": "7968:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:7"
																},
																"nativeSrc": "7929:60:7",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:7",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:7",
																"nodeType": "YulBlock",
																"src": "8050:157:7",
																"statements": [
																	{
																		"nativeSrc": "8068:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:7"
																			},
																			"nativeSrc": "8079:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:7"
																					},
																					"nativeSrc": "8130:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:7"
																			},
																			"nativeSrc": "8107:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:7"
																		},
																		"nativeSrc": "8107:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:7"
																					},
																					"nativeSrc": "8176:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:7"
																			},
																			"nativeSrc": "8164:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:7"
																		},
																		"nativeSrc": "8164:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:7"
																},
																"nativeSrc": "8034:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:7"
															},
															"nativeSrc": "8031:176:7",
															"nodeType": "YulIf",
															"src": "8031:176:7"
														},
														{
															"nativeSrc": "8220:30:7",
															"nodeType": "YulAssignment",
															"src": "8220:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:7"
																},
																"nativeSrc": "8234:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:7"
																}
															]
														},
														{
															"nativeSrc": "8263:23:7",
															"nodeType": "YulAssignment",
															"src": "8263:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:7"
																},
																"nativeSrc": "8278:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 996,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:7",
														"valueSize": 1
													},
													{
														"declaration": 996,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1000,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:7",
														"valueSize": 1
													},
													{
														"declaration": 1003,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:7",
														"valueSize": 1
													},
													{
														"declaration": 994,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1005,
												"nodeType": "InlineAssembly",
												"src": "7875:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1006,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "8310:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1017,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "8362:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1011,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 994,
																			"src": "8336:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$662",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$662",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1009,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1029,
												"nodeType": "IfStatement",
												"src": "8306:146:7",
												"trueBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "8380:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1024,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 994,
																				"src": "8434:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$662",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$662",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1022,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1021,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "8401:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1027,
															"nodeType": "RevertStatement",
															"src": "8394:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "7767:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 993,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 992,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "7767:6:7"
													},
													"referencedDeclaration": 662,
													"src": "7767:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "7781:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 995,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:7"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:7"
									},
									"scope": 1073,
									"src": "7738:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "9049:391:7",
										"statements": [
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "9059:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1042,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1044,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:7"
											},
											{
												"assignments": [
													1046
												],
												"declarations": [
													{
														"constant": false,
														"id": 1046,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "9081:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1045,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1047,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:7"
											},
											{
												"assignments": [
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "9109:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1048,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1050,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:7",
													"nodeType": "YulBlock",
													"src": "9163:174:7",
													"statements": [
														{
															"nativeSrc": "9177:71:7",
															"nodeType": "YulAssignment",
															"src": "9177:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:7"
																		},
																		"nativeSrc": "9193:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:7"
																		},
																		"nativeSrc": "9210:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:7"
																		},
																		"nativeSrc": "9227:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:7"
																},
																"nativeSrc": "9188:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:7"
																}
															]
														},
														{
															"nativeSrc": "9261:30:7",
															"nodeType": "YulAssignment",
															"src": "9261:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:7"
																},
																"nativeSrc": "9275:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:7"
																}
															]
														},
														{
															"nativeSrc": "9304:23:7",
															"nodeType": "YulAssignment",
															"src": "9304:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:7"
																},
																"nativeSrc": "9319:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1037,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1037,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1046,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:7",
														"valueSize": 1
													},
													{
														"declaration": 1049,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:7",
														"valueSize": 1
													},
													{
														"declaration": 1043,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:7",
														"valueSize": 1
													},
													{
														"declaration": 1035,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1051,
												"nodeType": "InlineAssembly",
												"src": "9138:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1052,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "9353:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1053,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1046,
																		"src": "9365:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1064,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "9416:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1058,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1035,
																						"src": "9391:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$662",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$662",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1057,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1056,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1068,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1070,
												"nodeType": "Return",
												"src": "9346:87:7"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "8993:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1034,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1033,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "8993:6:7"
													},
													"referencedDeclaration": 662,
													"src": "8993:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "9007:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1036,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:7"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "9043:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:7"
									},
									"scope": 1073,
									"src": "8960:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1074,
							"src": "750:8692:7",
							"usedErrors": [
								676,
								685
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1332
						],
						"Errors": [
							1354
						]
					},
					"id": 1333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1075,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1077,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1333,
							"sourceUnit": 1355,
							"src": "127:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1076,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1354,
										"src": "135:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1078,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1332,
							"linearizedBaseContracts": [
								1332
							],
							"name": "Address",
							"nameLocation": "241:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1083,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "358:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:8"
									},
									"src": "335:39:8"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "1361:278:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1093,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1332",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1332",
																		"typeString": "library Address"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1096,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "1399:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "1371:125:8",
												"trueBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "1407:89:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1103,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1332",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1332",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1101,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1106,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "1478:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1098,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "1428:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1354_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1342,
																	"src": "1428:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1108,
															"nodeType": "RevertStatement",
															"src": "1421:64:8"
														}
													]
												}
											},
											{
												"assignments": [
													1112,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "1507:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1111,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1119,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1113,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "1525:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1115,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "1547:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:8"
											},
											{
												"condition": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:8",
													"subExpression": {
														"id": 1120,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "1573:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "1568:65:8",
												"trueBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "1582:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1122,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "1603:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1354_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1345,
																	"src": "1603:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1126,
															"nodeType": "RevertStatement",
															"src": "1596:26:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "1309:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "1336:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:8"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:8"
									},
									"scope": 1332,
									"src": "1290:349:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "2573:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1141,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "2612:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "2620:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1140,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "2590:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1139,
												"id": 1145,
												"nodeType": "Return",
												"src": "2583:45:8"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2506:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2522:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:8"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2559:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:8"
									},
									"scope": 1332,
									"src": "2484:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "3072:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1161,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1332",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1332",
																		"typeString": "library Address"
																	}
																],
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1159,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1164,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "3110:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1178,
												"nodeType": "IfStatement",
												"src": "3082:123:8",
												"trueBody": {
													"id": 1177,
													"nodeType": "Block",
													"src": "3117:88:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1332",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1332",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1169,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1174,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "3188:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1166,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "3138:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1354_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1342,
																	"src": "3138:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1176,
															"nodeType": "RevertStatement",
															"src": "3131:63:8"
														}
													]
												}
											},
											{
												"assignments": [
													1180,
													1182
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1196,
														"src": "3215:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1179,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1182,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1196,
														"src": "3229:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1181,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1189,
												"initialValue": {
													"arguments": [
														{
															"id": 1187,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "3282:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1183,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "3256:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1185,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "3275:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1191,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "3331:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1192,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "3339:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1193,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "3348:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1190,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "3304:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1158,
												"id": 1195,
												"nodeType": "Return",
												"src": "3297:62:8"
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2990:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3006:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1151,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3025:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:8"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3058:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:8"
									},
									"scope": 1332,
									"src": "2959:407:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "3605:154:8",
										"statements": [
											{
												"assignments": [
													1208,
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "3616:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1207,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "3630:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1209,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1215,
												"initialValue": {
													"arguments": [
														{
															"id": 1213,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "3675:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1211,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "3657:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1217,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "3724:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1218,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "3732:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1219,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "3741:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1216,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "3697:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1221,
												"nodeType": "Return",
												"src": "3690:62:8"
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "3533:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "3549:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:8"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "3591:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:8"
									},
									"scope": 1332,
									"src": "3505:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "3997:156:8",
										"statements": [
											{
												"assignments": [
													1234,
													1236
												],
												"declarations": [
													{
														"constant": false,
														"id": 1234,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "4008:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1233,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1236,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "4022:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1235,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1241,
												"initialValue": {
													"arguments": [
														{
															"id": 1239,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "4069:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1237,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "4049:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1243,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "4118:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1244,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "4126:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1245,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "4135:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1242,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "4091:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1232,
												"id": 1247,
												"nodeType": "Return",
												"src": "4084:62:8"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "3930:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "3946:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:8"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "3983:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:8"
									},
									"scope": 1332,
									"src": "3900:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "4579:424:8",
										"statements": [
											{
												"condition": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:8",
													"subExpression": {
														"id": 1261,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "4594:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1286,
													"nodeType": "Block",
													"src": "4653:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1268,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "4841:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1272,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1252,
																				"src": "4867:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1283,
															"nodeType": "IfStatement",
															"src": "4837:119:8",
															"trueBody": {
																"id": 1282,
																"nodeType": "Block",
																"src": "4892:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1279,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1252,
																					"src": "4934:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1278,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1083,
																				"src": "4917:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1281,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1284,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "4976:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1260,
															"id": 1285,
															"nodeType": "Return",
															"src": "4969:17:8"
														}
													]
												},
												"id": 1287,
												"nodeType": "IfStatement",
												"src": "4589:408:8",
												"trueBody": {
													"id": 1267,
													"nodeType": "Block",
													"src": "4603:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1264,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "4625:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1263,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "4617:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1266,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4466:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4490:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4512:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:8"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4565:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:8"
									},
									"scope": 1332,
									"src": "4421:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "5307:122:8",
										"statements": [
											{
												"condition": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:8",
													"subExpression": {
														"id": 1299,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5322:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1308,
													"nodeType": "Block",
													"src": "5381:42:8",
													"statements": [
														{
															"expression": {
																"id": 1306,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "5402:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1298,
															"id": 1307,
															"nodeType": "Return",
															"src": "5395:17:8"
														}
													]
												},
												"id": 1309,
												"nodeType": "IfStatement",
												"src": "5317:106:8",
												"trueBody": {
													"id": 1305,
													"nodeType": "Block",
													"src": "5331:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1302,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "5353:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1301,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "5345:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1304,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5231:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5245:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:8"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5293:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:8"
									},
									"scope": 1332,
									"src": "5205:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "5598:432:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1317,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "5674:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1328,
													"nodeType": "Block",
													"src": "5973:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1323,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "5994:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1354_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1345,
																	"src": "5994:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1327,
															"nodeType": "RevertStatement",
															"src": "5987:26:8"
														}
													]
												},
												"id": 1329,
												"nodeType": "IfStatement",
												"src": "5670:354:8",
												"trueBody": {
													"id": 1322,
													"nodeType": "Block",
													"src": "5697:270:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:8",
																"nodeType": "YulBlock",
																"src": "5824:133:8",
																"statements": [
																	{
																		"nativeSrc": "5842:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:8"
																			},
																			"nativeSrc": "5865:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:8",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:8",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:8"
																					},
																					"nativeSrc": "5906:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:8"
																			},
																			"nativeSrc": "5899:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:8"
																		},
																		"nativeSrc": "5899:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:8"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1314,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1314,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:8",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1321,
															"nodeType": "InlineAssembly",
															"src": "5799:158:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "5560:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:8"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:8"
									},
									"scope": 1332,
									"src": "5543:487:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1333,
							"src": "233:5799:8",
							"usedErrors": [
								1083
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1354
						]
					},
					"id": 1355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1334,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1335,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1354,
							"linearizedBaseContracts": [
								1354
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1342,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1345,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1348,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1353,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1355,
							"src": "411:484:9",
							"usedErrors": [
								1342,
								1345,
								1348,
								1353
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1366
						]
					},
					"id": 1367,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1356,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1357,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1366,
							"linearizedBaseContracts": [
								1366
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1359,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1366,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1367,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"contracts/interface/IScorer.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IScorer.sol",
					"exportedSymbols": {
						"IScorer": [
							1387
						]
					},
					"id": 1388,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1368,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IScorer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1387,
							"linearizedBaseContracts": [
								1387
							],
							"name": "IScorer",
							"nameLocation": "71:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "86:741:11",
										"text": " @dev Returns the score of a specific user for a given score type.\n      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).\n      The score is typically used to determine the user's eligibility for certain actions or claims.\n      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\n @param user The address of the user whose score is being queried.\n @param scoreType The type of score to query, represented as a `bytes32` hash.\n @return The score of the user as a uint256 value.\n @notice This function should be implemented in the contract that inherits the `IScorer` interface."
									},
									"functionSelector": "db4f1024",
									"id": 1378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "score",
									"nameLocation": "842:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "856:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "848:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "scoreType",
												"nameLocation": "876:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "862:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1372,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "862:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:39:11"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "910:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:9:11"
									},
									"scope": 1387,
									"src": "833:86:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "927:302:11",
										"text": " @dev Checks if the provided address is an admin.\n @param admin The address to check for admin status.\n @return True if the address is an admin, false otherwise.\n @notice This function should be implemented in the contract that inherits the `IScorer` interface."
									},
									"functionSelector": "24d7806c",
									"id": 1386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "1244:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1260:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1252:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:15:11"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1290:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1289:6:11"
									},
									"scope": 1387,
									"src": "1235:61:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1388,
							"src": "61:1238:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1268:11"
				},
				"id": 11
			},
			"contracts/sweetspot.sol": {
				"ast": {
					"absolutePath": "contracts/sweetspot.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"IERC20": [
							662
						],
						"IScorer": [
							1387
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"SafeERC20": [
							1073
						],
						"nCookieJar": [
							1820
						]
					},
					"id": 1821,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1389,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1390,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1821,
							"sourceUnit": 195,
							"src": "61:75:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1821,
							"sourceUnit": 663,
							"src": "138:72:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1391,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "147:6:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1394,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1821,
							"sourceUnit": 1074,
							"src": "212:84:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1393,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1073,
										"src": "221:9:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IScorer.sol",
							"file": "./interface/IScorer.sol",
							"id": 1395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1821,
							"sourceUnit": 1388,
							"src": "298:33:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1396,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"390:18:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "390:18:12"
									},
									"id": 1397,
									"nodeType": "InheritanceSpecifier",
									"src": "390:18:12"
								}
							],
							"canonicalName": "nCookieJar",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1820,
							"linearizedBaseContracts": [
								1820,
								194,
								494,
								448
							],
							"name": "nCookieJar",
							"nameLocation": "376:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1401,
									"libraryName": {
										"id": 1398,
										"name": "SafeERC20",
										"nameLocations": [
											"422:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1073,
										"src": "422:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "416:27:12",
									"typeName": {
										"id": 1400,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1399,
											"name": "IERC20",
											"nameLocations": [
												"436:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 662,
											"src": "436:6:12"
										},
										"referencedDeclaration": 662,
										"src": "436:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$662",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "42cb1fbc",
									"id": 1404,
									"mutability": "constant",
									"name": "ETHER",
									"nameLocation": "566:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 1820,
									"src": "542:74:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1402,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "542:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307846313934616644663530423033653639426437443035376331416139653130633939353445344339",
										"id": 1403,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "574:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85c758f7",
									"id": 1407,
									"mutability": "mutable",
									"name": "scorer",
									"nameLocation": "638:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 1820,
									"src": "623:21:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IScorer_$1387",
										"typeString": "contract IScorer"
									},
									"typeName": {
										"id": 1406,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1405,
											"name": "IScorer",
											"nameLocations": [
												"623:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1387,
											"src": "623:7:12"
										},
										"referencedDeclaration": 1387,
										"src": "623:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IScorer_$1387",
											"typeString": "contract IScorer"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "nCookieJar.Round",
									"id": 1414,
									"members": [
										{
											"constant": false,
											"id": 1409,
											"mutability": "mutable",
											"name": "start",
											"nameLocation": "721:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1414,
											"src": "713:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1408,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "713:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1411,
											"mutability": "mutable",
											"name": "end",
											"nameLocation": "777:3:12",
											"nodeType": "VariableDeclaration",
											"scope": 1414,
											"src": "769:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1410,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "769:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1413,
											"mutability": "mutable",
											"name": "metadataURI",
											"nameLocation": "828:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 1414,
											"src": "821:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1412,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "821:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Round",
									"nameLocation": "696:5:12",
									"nodeType": "StructDefinition",
									"scope": 1820,
									"src": "689:189:12",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a19c8bc",
									"id": 1417,
									"mutability": "mutable",
									"name": "currentRound",
									"nameLocation": "899:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1820,
									"src": "886:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Round_$1414_storage",
										"typeString": "struct nCookieJar.Round"
									},
									"typeName": {
										"id": 1416,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1415,
											"name": "Round",
											"nameLocations": [
												"886:5:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1414,
											"src": "886:5:12"
										},
										"referencedDeclaration": 1414,
										"src": "886:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Round_$1414_storage_ptr",
											"typeString": "struct nCookieJar.Round"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aee9c872",
									"id": 1421,
									"mutability": "mutable",
									"name": "totalBalances",
									"nameLocation": "1037:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 1820,
									"src": "1002:48:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1420,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1010:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1002:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1419,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1021:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9590e8a",
									"id": 1427,
									"mutability": "mutable",
									"name": "allowedAmounts",
									"nameLocation": "1155:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1820,
									"src": "1100:69:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1426,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1422,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1108:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1100:47:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1425,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1423,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1127:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1119:27:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1424,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1138:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62",
									"id": 1435,
									"name": "Deposit",
									"nameLocation": "1184:7:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"indexed": true,
												"mutability": "mutable",
												"name": "depositor",
												"nameLocation": "1208:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "1192:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1235:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "1219:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1250:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "1242:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1191:66:12"
									},
									"src": "1178:80:12"
								},
								{
									"anonymous": false,
									"eventSelector": "9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb",
									"id": 1443,
									"name": "Withdraw",
									"nameLocation": "1270:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"indexed": true,
												"mutability": "mutable",
												"name": "withdrawer",
												"nameLocation": "1295:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "1279:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1323:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "1307:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1338:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "1330:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1330:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1278:67:12"
									},
									"src": "1264:82:12"
								},
								{
									"anonymous": false,
									"eventSelector": "f7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683",
									"id": 1451,
									"name": "Claimed",
									"nameLocation": "1358:7:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimant",
												"nameLocation": "1382:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1366:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1408:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1392:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1423:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1415:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:65:12"
									},
									"src": "1352:79:12"
								},
								{
									"anonymous": false,
									"eventSelector": "3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2",
									"id": 1459,
									"name": "AllowedAmountUpdated",
									"nameLocation": "1443:20:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1480:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1464:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1502:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1486:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "1517:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1509:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1463:64:12"
									},
									"src": "1437:91:12"
								},
								{
									"anonymous": false,
									"eventSelector": "09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13",
									"id": 1467,
									"name": "RoundUpdated",
									"nameLocation": "1540:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"indexed": false,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1561:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "1553:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1553:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"indexed": false,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "1576:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "1568:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "1588:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "1581:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1581:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1552:48:12"
									},
									"src": "1534:67:12"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "1632:92:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1472,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1666:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1670:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1666:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1470,
																	"name": "scorer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "1651:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IScorer_$1387",
																		"typeString": "contract IScorer"
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1658:7:12",
																"memberName": "isAdmin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1386,
																"src": "1651:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1651:26:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1679:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															},
															"value": "Caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															}
														],
														"id": 1469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1643:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1643:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "1643:61:12"
											},
											{
												"id": 1478,
												"nodeType": "PlaceholderStatement",
												"src": "1715:1:12"
											}
										]
									},
									"id": 1480,
									"name": "onlyAdmin",
									"nameLocation": "1620:9:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1629:2:12"
									},
									"src": "1611:113:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "1976:109:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1491,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "2002:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1490,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1987:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "1987:21:12"
											},
											{
												"expression": {
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1494,
														"name": "scorer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "2052:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1387",
															"typeString": "contract IScorer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1496,
																"name": "_scorer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "2069:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1495,
															"name": "IScorer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "2061:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IScorer_$1387_$",
																"typeString": "type(contract IScorer)"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2061:16:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1387",
															"typeString": "contract IScorer"
														}
													},
													"src": "2052:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IScorer_$1387",
														"typeString": "contract IScorer"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "2052:25:12"
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "1732:165:12",
										"text": "@notice Initializes this contract with its initial state.\n @param _scorer The scoring contract address.\n @param owner The owner address."
									},
									"functionSelector": "485cc955",
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1488,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1487,
												"name": "initializer",
												"nameLocations": [
													"1964:11:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1964:11:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1964:11:12"
										}
									],
									"name": "initialize",
									"nameLocation": "1912:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "_scorer",
												"nameLocation": "1931:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1923:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1948:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1940:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:32:12"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1976:0:12"
									},
									"scope": 1820,
									"src": "1903:182:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "2368:388:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1509,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "2383:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1510,
														"name": "ETHER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "2392:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2383:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1541,
													"nodeType": "Block",
													"src": "2486:170:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1522,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1506,
																			"src": "2509:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2518:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2509:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2521:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																			"typeString": "literal_string \"Deposit amount must be greater than zero\""
																		},
																		"value": "Deposit amount must be greater than zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																			"typeString": "literal_string \"Deposit amount must be greater than zero\""
																		}
																	],
																	"id": 1521,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2501:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2501:63:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1527,
															"nodeType": "ExpressionStatement",
															"src": "2501:63:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1532,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2610:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2614:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2610:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1536,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2630:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_nCookieJar_$1820",
																					"typeString": "contract nCookieJar"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_nCookieJar_$1820",
																					"typeString": "contract nCookieJar"
																				}
																			],
																			"id": 1535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2622:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1534,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2622:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2622:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1538,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "2637:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1529,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1504,
																				"src": "2586:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1528,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "2579:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2579:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2593:16:12",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 736,
																	"src": "2579:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$662_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2579:65:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1540,
															"nodeType": "ExpressionStatement",
															"src": "2579:65:12"
														}
													]
												},
												"id": 1542,
												"nodeType": "IfStatement",
												"src": "2379:277:12",
												"trueBody": {
													"id": 1520,
													"nodeType": "Block",
													"src": "2399:81:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1513,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2422:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2426:5:12",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2422:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1515,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1506,
																			"src": "2435:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2422:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e636f727265637420457468657220616d6f756e74",
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2443:24:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																			"typeString": "literal_string \"Incorrect Ether amount\""
																		},
																		"value": "Incorrect Ether amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																			"typeString": "literal_string \"Incorrect Ether amount\""
																		}
																	],
																	"id": 1512,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2414:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2414:54:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1519,
															"nodeType": "ExpressionStatement",
															"src": "2414:54:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1543,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "2668:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1545,
														"indexExpression": {
															"id": 1544,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "2682:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2668:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1546,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "2692:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2668:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "2668:30:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1550,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2722:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2726:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2722:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1552,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "2734:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1553,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "2741:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1549,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "2714:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2714:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "EmitStatement",
												"src": "2709:39:12"
											}
										]
									},
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "2093:204:12",
										"text": "@notice Deposits funds into this jar for a specific token or Ether.\n @param token The token address (address(0) for Ether).\n @param amount The value to add (in wei for Ether)."
									},
									"functionSelector": "47e7ef24",
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "2312:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2328:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "2320:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2320:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2343:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "2335:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2319:31:12"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2368:0:12"
									},
									"scope": 1820,
									"src": "2303:453:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "2880:880:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1564,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2899:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2905:9:12",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2899:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 1566,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1417,
																		"src": "2918:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Round_$1414_storage",
																			"typeString": "struct nCookieJar.Round storage ref"
																		}
																	},
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2931:5:12",
																	"memberName": "start",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1409,
																	"src": "2918:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2899:37:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1569,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2940:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2946:9:12",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2940:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1571,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1417,
																		"src": "2959:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Round_$1414_storage",
																			"typeString": "struct nCookieJar.Round storage ref"
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2972:3:12",
																	"memberName": "end",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1411,
																	"src": "2959:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2940:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2899:76:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742077697468696e20726f756e64206475726174696f6e",
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2977:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363",
																"typeString": "literal_string \"Not within round duration\""
															},
															"value": "Not within round duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363",
																"typeString": "literal_string \"Not within round duration\""
															}
														],
														"id": 1563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2891:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2891:114:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "2891:114:12"
											},
											{
												"assignments": [
													1579
												],
												"declarations": [
													{
														"constant": false,
														"id": 1579,
														"mutability": "mutable",
														"name": "userAllowedAmount",
														"nameLocation": "3026:17:12",
														"nodeType": "VariableDeclaration",
														"scope": 1667,
														"src": "3018:25:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1578,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3018:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1586,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1580,
															"name": "allowedAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "3046:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1583,
														"indexExpression": {
															"expression": {
																"id": 1581,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3061:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3065:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3061:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3046:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1585,
													"indexExpression": {
														"id": 1584,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "3073:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3046:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3018:61:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1588,
																"name": "userAllowedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1579,
																"src": "3098:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3118:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3098:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20636c61696d61626c6520616d6f756e74",
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3121:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																"typeString": "literal_string \"No claimable amount\""
															},
															"value": "No claimable amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																"typeString": "literal_string \"No claimable amount\""
															}
														],
														"id": 1587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3090:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3090:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1593,
												"nodeType": "ExpressionStatement",
												"src": "3090:53:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1595,
																	"name": "totalBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "3162:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1597,
																"indexExpression": {
																	"id": 1596,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1560,
																	"src": "3176:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3162:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1598,
																"name": "userAllowedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1579,
																"src": "3186:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3162:41:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3205:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															},
															"value": "Insufficient funds in jar"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															}
														],
														"id": 1594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3154:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3154:79:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1602,
												"nodeType": "ExpressionStatement",
												"src": "3154:79:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1606,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3265:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3269:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3265:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "5472757374",
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3277:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b",
																			"typeString": "literal_string \"Trust\""
																		},
																		"value": "Trust"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b",
																			"typeString": "literal_string \"Trust\""
																		}
																	],
																	"expression": {
																		"id": 1604,
																		"name": "scorer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "3252:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IScorer_$1387",
																			"typeString": "contract IScorer"
																		}
																	},
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3259:5:12",
																	"memberName": "score",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1378,
																	"src": "3252:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (address,string memory) view external returns (uint256)"
																	}
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3252:33:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3288:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3252:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742054727573742073636f7265",
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3291:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5",
																"typeString": "literal_string \"Insufficient Trust score\""
															},
															"value": "Insufficient Trust score"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5",
																"typeString": "literal_string \"Insufficient Trust score\""
															}
														],
														"id": 1603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3244:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3244:74:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "3244:74:12"
											},
											{
												"expression": {
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1615,
																"name": "allowedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "3331:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1619,
															"indexExpression": {
																"expression": {
																	"id": 1616,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3346:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3350:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3346:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3331:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1620,
														"indexExpression": {
															"id": 1618,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "3358:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3331:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3367:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3331:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1623,
												"nodeType": "ExpressionStatement",
												"src": "3331:37:12"
											},
											{
												"expression": {
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1624,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "3379:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1626,
														"indexExpression": {
															"id": 1625,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "3393:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3379:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1627,
														"name": "userAllowedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1579,
														"src": "3403:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3379:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "3379:41:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1630,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "3437:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1631,
														"name": "ETHER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "3446:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3437:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1658,
													"nodeType": "Block",
													"src": "3606:84:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1653,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3648:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3652:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3648:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1655,
																		"name": "userAllowedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1579,
																		"src": "3660:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1650,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1560,
																				"src": "3628:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1649,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "3621:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3621:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3635:12:12",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 709,
																	"src": "3621:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$662_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3621:57:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1657,
															"nodeType": "ExpressionStatement",
															"src": "3621:57:12"
														}
													]
												},
												"id": 1659,
												"nodeType": "IfStatement",
												"src": "3433:257:12",
												"trueBody": {
													"id": 1648,
													"nodeType": "Block",
													"src": "3453:147:12",
													"statements": [
														{
															"assignments": [
																1634,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1634,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "3474:7:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1648,
																	"src": "3469:12:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1633,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3469:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1642,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3529:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1635,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3487:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3491:6:12",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3487:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3498:4:12",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "3487:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1638,
																			"name": "userAllowedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1579,
																			"src": "3510:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "3487:41:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3487:45:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3468:64:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1644,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1634,
																		"src": "3555:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3564:23:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		},
																		"value": "Ether transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		}
																	],
																	"id": 1643,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3547:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3547:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1647,
															"nodeType": "ExpressionStatement",
															"src": "3547:41:12"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1661,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3715:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3719:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3715:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1663,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "3727:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1664,
															"name": "userAllowedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "3734:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1660,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "3707:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:45:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "EmitStatement",
												"src": "3702:50:12"
											}
										]
									},
									"documentation": {
										"id": 1558,
										"nodeType": "StructuredDocumentation",
										"src": "2764:71:12",
										"text": "@notice Claims the full allowed amount for a user during the round."
									},
									"functionSelector": "1e83409a",
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "2850:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2864:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "2856:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2856:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2855:15:12"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2880:0:12"
									},
									"scope": 1820,
									"src": "2841:919:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "4082:112:12",
										"statements": [
											{
												"expression": {
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1680,
																"name": "allowedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "4093:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1683,
															"indexExpression": {
																"id": 1681,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "4108:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4093:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1684,
														"indexExpression": {
															"id": 1682,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "4114:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4093:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1685,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "4123:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4093:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "4093:36:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1689,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "4166:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1690,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "4172:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1691,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "4179:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1688,
														"name": "AllowedAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "4145:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4145:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1693,
												"nodeType": "EmitStatement",
												"src": "4140:46:12"
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "3768:218:12",
										"text": "@notice Sets the allowed amount for a specific user and token.\n @param user The address of the user.\n @param token The token address.\n @param amount The allowed amount for the user."
									},
									"functionSelector": "b807a3c4",
									"id": 1695,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1678,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1677,
												"name": "onlyAdmin",
												"nameLocations": [
													"4072:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1480,
												"src": "4072:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4072:9:12"
										}
									],
									"name": "setAllowedAmount",
									"nameLocation": "4001:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4026:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "4018:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4018:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4040:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "4032:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4055:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "4047:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4047:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4017:45:12"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4082:0:12"
									},
									"scope": 1820,
									"src": "3992:202:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "4535:186:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1708,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1698,
																"src": "4554:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1709,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1700,
																"src": "4562:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4554:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53746172742074696d65206d757374206265206265666f726520656e642074696d65",
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4567:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																"typeString": "literal_string \"Start time must be before end time\""
															},
															"value": "Start time must be before end time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																"typeString": "literal_string \"Start time must be before end time\""
															}
														],
														"id": 1707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4546:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4546:58:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "4546:58:12"
											},
											{
												"expression": {
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1714,
														"name": "currentRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "4615:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$1414_storage",
															"typeString": "struct nCookieJar.Round storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1716,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1698,
																"src": "4636:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1717,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1700,
																"src": "4643:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1718,
																"name": "metadataURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "4648:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 1715,
															"name": "Round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "4630:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Round_$1414_storage_ptr_$",
																"typeString": "type(struct nCookieJar.Round storage pointer)"
															}
														},
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:30:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$1414_memory_ptr",
															"typeString": "struct nCookieJar.Round memory"
														}
													},
													"src": "4615:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Round_$1414_storage",
														"typeString": "struct nCookieJar.Round storage ref"
													}
												},
												"id": 1721,
												"nodeType": "ExpressionStatement",
												"src": "4615:45:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1723,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "4689:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1724,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "4696:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1725,
															"name": "metadataURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "4701:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1722,
														"name": "RoundUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "4676:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,string memory)"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4676:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "EmitStatement",
												"src": "4671:42:12"
											}
										]
									},
									"documentation": {
										"id": 1696,
										"nodeType": "StructuredDocumentation",
										"src": "4202:235:12",
										"text": "@notice Sets the round duration and metadata URI.\n @param start The start timestamp of the round.\n @param end The end timestamp of the round.\n @param metadataURI The IPFS URI for the round metadata."
									},
									"functionSelector": "be9a7687",
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1705,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1704,
												"name": "onlyAdmin",
												"nameLocations": [
													"4525:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1480,
												"src": "4525:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4525:9:12"
										}
									],
									"name": "setRound",
									"nameLocation": "4452:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "4469:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "4461:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "4484:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "4476:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4476:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "4503:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "4489:25:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1701,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4489:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:55:12"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4535:0:12"
									},
									"scope": 1820,
									"src": "4443:278:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1798,
										"nodeType": "Block",
										"src": "4994:489:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1740,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "5013:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5013:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5025:45:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																"typeString": "literal_string \"Withdrawal amount must be greater than zero\""
															},
															"value": "Withdrawal amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																"typeString": "literal_string \"Withdrawal amount must be greater than zero\""
															}
														],
														"id": 1739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5005:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5005:66:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1745,
												"nodeType": "ExpressionStatement",
												"src": "5005:66:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1747,
																	"name": "totalBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "5090:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1749,
																"indexExpression": {
																	"id": 1748,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1732,
																	"src": "5104:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5090:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1750,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "5114:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5090:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5122:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 1746,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5082:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5082:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1754,
												"nodeType": "ExpressionStatement",
												"src": "5082:61:12"
											},
											{
												"expression": {
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1755,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "5156:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1757,
														"indexExpression": {
															"id": 1756,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "5170:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5156:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1758,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "5180:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5156:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1760,
												"nodeType": "ExpressionStatement",
												"src": "5156:30:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1761,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1732,
														"src": "5203:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1762,
														"name": "ETHER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "5212:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5203:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1789,
													"nodeType": "Block",
													"src": "5358:70:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1784,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "5400:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5400:7:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1786,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1734,
																		"src": "5409:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1781,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1732,
																				"src": "5380:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1780,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "5373:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5373:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5387:12:12",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 709,
																	"src": "5373:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$662_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5373:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1788,
															"nodeType": "ExpressionStatement",
															"src": "5373:43:12"
														}
													]
												},
												"id": 1790,
												"nodeType": "IfStatement",
												"src": "5199:229:12",
												"trueBody": {
													"id": 1779,
													"nodeType": "Block",
													"src": "5219:133:12",
													"statements": [
														{
															"assignments": [
																1765,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1765,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "5240:7:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1779,
																	"src": "5235:12:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1764,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "5235:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1773,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5281:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1766,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 105,
																				"src": "5253:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5253:7:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5261:4:12",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "5253:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1769,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "5273:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "5253:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5253:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5234:50:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1775,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1765,
																		"src": "5307:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"id": 1776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5316:23:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		},
																		"value": "Ether transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		}
																	],
																	"id": 1774,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5299:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5299:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1778,
															"nodeType": "ExpressionStatement",
															"src": "5299:41:12"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1792,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "5452:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5452:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1794,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "5461:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1795,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "5468:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1791,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "5443:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5443:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1797,
												"nodeType": "EmitStatement",
												"src": "5438:37:12"
											}
										]
									},
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "4729:191:12",
										"text": "@notice Withdraws funds from the jar for a specific token or Ether.\n @param token The token address (address(0) for Ether).\n @param amount The amount to withdraw."
									},
									"functionSelector": "f3fef3a3",
									"id": 1799,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1737,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1736,
												"name": "onlyOwner",
												"nameLocations": [
													"4984:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4984:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4984:9:12"
										}
									],
									"name": "withdraw",
									"nameLocation": "4935:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4952:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "4944:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4944:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4967:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "4959:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4959:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4943:31:12"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4994:0:12"
									},
									"scope": 1820,
									"src": "4926:557:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "5589:105:12",
										"statements": [
											{
												"expression": {
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1803,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "5600:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1805,
														"indexExpression": {
															"id": 1804,
															"name": "ETHER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "5614:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5600:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1806,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5624:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5628:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "5624:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5600:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "5600:33:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1811,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5657:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5661:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5657:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1813,
															"name": "ETHER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "5669:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1814,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5676:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5680:5:12",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5676:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1810,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "5649:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5649:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1817,
												"nodeType": "EmitStatement",
												"src": "5644:42:12"
											}
										]
									},
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "5491:65:12",
										"text": "@notice Allows Ether deposits directly via fallback function."
									},
									"id": 1819,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5569:2:12"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5589:0:12"
									},
									"scope": 1820,
									"src": "5562:132:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1821,
							"src": "367:5330:12",
							"usedErrors": [
								30,
								35,
								211,
								214,
								676
							],
							"usedEvents": [
								41,
								219,
								1435,
								1443,
								1451,
								1459,
								1467
							]
						}
					],
					"src": "33:5666:12"
				},
				"id": 12
			}
		}
	}
}